; ModuleID = 'enclave.so.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon.0 = type { i64, [6 x %struct.anon] }
%struct.anon = type { i8*, i8, i8 }
%struct.anon.1 = type { i64, [16 x [6 x i8]] }
%class.TLSConnectionHandler = type <{ %struct.mbedtls_entropy_context, %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ssl_config, %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt, %struct.mbedtls_pk_context, i32, [4 x i8] }>
%struct.mbedtls_entropy_context = type { %struct.mbedtls_sha512_context, i32, [20 x %struct.mbedtls_entropy_source_state] }
%struct.mbedtls_sha512_context = type { [2 x i64], [8 x i64], [128 x i8], i32 }
%struct.mbedtls_entropy_source_state = type { i32 (i8*, i8*, i64, i64*)*, i8*, i64, i64, i32 }
%struct.mbedtls_ctr_drbg_context = type { [16 x i8], i32, i32, i64, i32, %struct.mbedtls_aes_context, i32 (i8*, i8*, i64)*, i8* }
%struct.mbedtls_aes_context = type { i32, i32*, [68 x i32] }
%struct.mbedtls_ssl_config = type { [4 x i32*], void (i8*, i32, i8*, i32, i8*)*, i8*, i32 (i8*, i8*, i64)*, i8*, i32 (i8*, %struct.mbedtls_ssl_session*)*, i32 (i8*, %struct.mbedtls_ssl_session*)*, i8*, i32 (i8*, %struct.mbedtls_ssl_context*, i8*, i64)*, i8*, i32 (i8*, %struct.mbedtls_x509_crt*, i32, i32*)*, i8*, i32 (i8*, %struct.mbedtls_ssl_context*, i8*, i64)*, i8*, i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)*, i8*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i8*, i64*, i32*)*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i64)*, i8*, i32 (i8*, i8*, i8*, i64, i64, i64)*, i8*, %struct.mbedtls_x509_crt_profile*, %struct.mbedtls_ssl_key_cert*, %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crl*, i32*, i32*, %struct.mbedtls_mpi, %struct.mbedtls_mpi, i8*, i64, i8*, i64, i8**, i32, i32, i32, i32, [8 x i8], i32, i32, i8, i8, i8, i8, i24 }
%struct.mbedtls_ssl_session = type { i32, i32, i64, [32 x i8], [48 x i8], %struct.mbedtls_x509_crt*, i32, i8*, i64, i32, i8, i32, i32 }
%struct.mbedtls_ssl_context = type { %struct.mbedtls_ssl_config*, i32, i32, i32, i32, i32, i32, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64, i32)*, i8*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform*, i8*, void (i8*, i32, i32)*, i32 (i8*)*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i64, i64, i16, i64, i64, i64, i64, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i32, i64, i64, i8, i32, i8*, i8*, i8*, i64, i32, i64, [36 x i8], [36 x i8] }
%struct.mbedtls_ssl_handshake_params = type { %struct.mbedtls_pk_rsassa_pss_options, %struct.mbedtls_dhm_context, %struct.mbedtls_ecdh_context, %struct.mbedtls_ecp_curve_info**, i8*, i64, %struct.mbedtls_ssl_key_cert*, i32, %struct.mbedtls_ssl_key_cert*, %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crl*, i32, i32, i8*, i8, i8*, i32, i8, %struct.mbedtls_ssl_flight_item*, %struct.mbedtls_ssl_flight_item*, i32, %struct.mbedtls_ssl_transform*, [8 x i8], %struct.mbedtls_md5_context, %struct.mbedtls_sha1_context, %struct.mbedtls_sha256_context, %struct.mbedtls_sha512_context, void (%struct.mbedtls_ssl_context*, i8*, i64)*, void (%struct.mbedtls_ssl_context*, i8*)*, void (%struct.mbedtls_ssl_context*, i8*, i32)*, i32 (i8*, i64, i8*, i8*, i64, i8*, i64)*, i64, [64 x i8], [1060 x i8], i32, i32, i32, i32, i32, i32 }
%struct.mbedtls_pk_rsassa_pss_options = type { i32, i32 }
%struct.mbedtls_dhm_context = type { i64, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi }
%struct.mbedtls_ecdh_context = type { %struct.mbedtls_ecp_group, %struct.mbedtls_mpi, %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point, %struct.mbedtls_mpi, i32, %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point, %struct.mbedtls_mpi }
%struct.mbedtls_ecp_group = type { i32, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_ecp_point, %struct.mbedtls_mpi, i64, i64, i32, i32 (%struct.mbedtls_mpi*)*, i32 (%struct.mbedtls_ecp_point*, i8*)*, i32 (%struct.mbedtls_ecp_point*, i8*)*, i8*, %struct.mbedtls_ecp_point*, i64 }
%struct.mbedtls_ecp_point = type { %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi }
%struct.mbedtls_ecp_curve_info = type { i32, i16, i16, i8* }
%struct.mbedtls_ssl_flight_item = type { i8*, i64, i8, %struct.mbedtls_ssl_flight_item* }
%struct.mbedtls_md5_context = type { [2 x i32], [4 x i32], [64 x i8] }
%struct.mbedtls_sha1_context = type { [2 x i32], [5 x i32], [64 x i8] }
%struct.mbedtls_sha256_context = type { [2 x i32], [8 x i32], [64 x i8], i32 }
%struct.mbedtls_ssl_transform = type { %struct.mbedtls_ssl_ciphersuite_t*, i32, i64, i64, i64, i64, [16 x i8], [16 x i8], [20 x i8], [20 x i8], %struct.mbedtls_md_context_t, %struct.mbedtls_md_context_t, %struct.mbedtls_cipher_context_t, %struct.mbedtls_cipher_context_t }
%struct.mbedtls_ssl_ciphersuite_t = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.mbedtls_md_context_t = type { %struct.mbedtls_md_info_t*, i8*, i8* }
%struct.mbedtls_md_info_t = type { i32, i8*, i32, i32, void (i8*)*, void (i8*, i8*, i64)*, void (i8*, i8*)*, void (i8*, i64, i8*)*, i8* ()*, void (i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.mbedtls_cipher_context_t = type { %struct.mbedtls_cipher_info_t*, i32, i32, void (i8*, i64, i64)*, i32 (i8*, i64, i64*)*, [16 x i8], i64, [16 x i8], i64, i8* }
%struct.mbedtls_cipher_info_t = type { i32, i32, i32, i8*, i32, i32, i32, %struct.mbedtls_cipher_base_t* }
%struct.mbedtls_cipher_base_t = type { i32, i32 (i8*, i32, i8*, i8*)*, i32 (i8*, i32, i64, i8*, i8*, i8*)*, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)*, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)*, i32 (i8*, i64, i8*, i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i8* ()*, void (i8*)* }
%struct.mbedtls_x509_crt_profile = type { i32, i32, i32, i32 }
%struct.mbedtls_ssl_key_cert = type { %struct.mbedtls_x509_crt*, %struct.mbedtls_pk_context*, %struct.mbedtls_ssl_key_cert* }
%struct.mbedtls_x509_crl = type { %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, i32, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_named_data, %struct.mbedtls_x509_time, %struct.mbedtls_x509_time, %struct.mbedtls_x509_crl_entry, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, i32, i32, i8*, %struct.mbedtls_x509_crl* }
%struct.mbedtls_asn1_named_data = type { %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_named_data*, i8 }
%struct.mbedtls_x509_time = type { i32, i32, i32, i32, i32, i32 }
%struct.mbedtls_x509_crl_entry = type { %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_x509_time, %struct.mbedtls_asn1_buf, %struct.mbedtls_x509_crl_entry* }
%struct.mbedtls_asn1_buf = type { i32, i64, i8* }
%struct.mbedtls_mpi = type { i32, i64, i64* }
%struct.mbedtls_x509_crt = type { %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, i32, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_named_data, %struct.mbedtls_asn1_named_data, %struct.mbedtls_x509_time, %struct.mbedtls_x509_time, %struct.mbedtls_pk_context, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_sequence, i32, i32, i32, i32, %struct.mbedtls_asn1_sequence, i8, %struct.mbedtls_asn1_buf, i32, i32, i8*, %struct.mbedtls_x509_crt* }
%struct.mbedtls_asn1_sequence = type { %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_sequence* }
%struct.mbedtls_pk_context = type { %struct.mbedtls_pk_info_t*, i8* }
%struct.mbedtls_pk_info_t = type { i32, i8*, i64 (i8*)*, i32 (i32)*, i32 (i8*, i32, i8*, i64, i8*, i64)*, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*)*, i8* ()*, void (i8*)*, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* }
%struct.ms_sgx_thread_setwait_untrusted_events_ocall_t = type { i32, i8*, i8* }
%struct.mbedtls_net_context = type { i32 }
%struct.options.44 = type { i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [2 x i32], i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"class.std::__1::__libcpp_compressed_pair_imp" }
%"class.std::__1::__libcpp_compressed_pair_imp" = type { %"struct.std::__1::basic_string<char>::__rep" }
%"struct.std::__1::basic_string<char>::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char>::__long" }
%"struct.std::__1::basic_string<char>::__long" = type { i64, i64, i8* }
%struct._sgx_thread_mutex_t = type { i64, i32, i32, i64, %struct._sgx_thread_queue_t }
%struct._sgx_thread_queue_t = type { i64, i64 }
%struct.ms_ocall_print_string_t = type { i32, i8* }
%struct.mbedtls_cipher_definition_t = type { i32, %struct.mbedtls_cipher_info_t* }
%struct.oid_sig_alg_t = type { %struct.mbedtls_oid_descriptor_t, i32, i32 }
%struct.mbedtls_oid_descriptor_t = type { i8*, i64, i8*, i8* }
%struct.oid_x509_ext_t = type { %struct.mbedtls_oid_descriptor_t, i32 }
%struct.oid_x520_attr_t = type { %struct.mbedtls_oid_descriptor_t, i8* }
%struct.ms_ssl_conn_handle_t = type { i64, %struct.thread_info_t* }
%struct.thread_info_t = type { %struct.mbedtls_net_context, i32, %struct.mbedtls_ssl_config* }
%struct.ms_ocall_mbedtls_net_connect_t = type { i32, %struct.mbedtls_net_context*, i8*, i8*, i32 }
%struct.ms_ocall_mbedtls_net_accept_t = type { i32, %struct.mbedtls_net_context*, %struct.mbedtls_net_context*, i8*, i64, i64* }
%struct.ms_ocall_mbedtls_net_set_block_t = type { i32, %struct.mbedtls_net_context* }
%struct.ms_ocall_mbedtls_net_usleep_t = type { i64 }
%struct.ms_ocall_mbedtls_net_recv_t = type { i32, %struct.mbedtls_net_context*, i8*, i64 }
%struct.ms_ocall_mbedtls_net_recv_timeout_t = type { i32, %struct.mbedtls_net_context*, i8*, i64, i32 }
%struct.ms_ocall_mbedtls_net_free_t = type { %struct.mbedtls_net_context* }
%struct.ms_sgx_oc_cpuidex_t = type { i32*, i32, i32 }
%struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t = type { i32, i8**, i64 }
%struct.options = type { i8*, i8*, i8*, i32, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i8, i8, i8 }
%struct._psk_entry = type { i8*, i64, [32 x i8], %struct._psk_entry* }
%struct.mbedtls_ssl_context.61 = type { %struct.mbedtls_ssl_config.58*, i32, i32, i32, i32, i32, i32, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64, i32)*, i8*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform*, i8*, void (i8*, i32, i32)*, i32 (i8*)*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i64, i64, i16, i64, i64, i64, i64, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i32, i64, i64, i8, i32, i8*, i8*, i8*, i64, i32, i64, [36 x i8], [36 x i8] }
%struct.mbedtls_ssl_config.58 = type { [4 x i32*], void (i8*, i32, i8*, i32, i8*)*, i8*, i32 (i8*, i8*, i64)*, i8*, i32 (i8*, %struct.mbedtls_ssl_session*)*, i32 (i8*, %struct.mbedtls_ssl_session*)*, i8*, {}*, i8*, i32 (i8*, %struct.mbedtls_x509_crt*, i32, i32*)*, i8*, {}*, i8*, i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)*, i8*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i8*, i64*, i32*)*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i64)*, i8*, i32 (i8*, i8*, i8*, i64, i64, i64)*, i8*, %struct.mbedtls_x509_crt_profile*, %struct.mbedtls_ssl_key_cert*, %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crl*, i32*, i32*, %struct.mbedtls_mpi, %struct.mbedtls_mpi, i8*, i64, i8*, i64, i8**, i32, i32, i32, i32, [8 x i8], i32, i32, i8, i8, i8, i8, i24 }
%struct.mbedtls_ssl_cookie_ctx = type { %struct.mbedtls_md_context_t, i64, i64 }
%struct.mbedtls_ssl_ticket_context = type { [2 x %struct.mbedtls_ssl_ticket_key], i8, i32, i32 (i8*, i8*, i64)*, i8* }
%struct.mbedtls_ssl_ticket_key = type { [4 x i8], i32, %struct.mbedtls_cipher_context_t }
%"class.std::__1::allocator" = type { i8 }
%"class.std::runtime_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }
%"struct.std::__1::basic_string<char>::__short" = type { %"class.std::__1::allocator", [23 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.mbedtls_rsa_alt_context = type { i8*, i32 (i8*, i32, i64*, i8*, i8*, i64)*, i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)*, i64 (i8*)* }
%struct.mbedtls_rsa_context = type { i32, i64, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, %struct.mbedtls_mpi, i32, i32 }
%struct.mbedtls_ecp_keypair = type { %struct.mbedtls_ecp_group, %struct.mbedtls_mpi, %struct.mbedtls_ecp_point }
%struct.mbedtls_pem_context = type { i8*, i64, i8* }
%struct.mbedtls_asn1_bitstring = type { i64, i8, i8* }
%struct.mbedtls_gcm_context = type { %struct.mbedtls_cipher_context_t, [16 x i64], [16 x i64], i64, i64, [16 x i8], [16 x i8], [16 x i8], i32 }
%struct.mbedtls_ccm_context = type { %struct.mbedtls_cipher_context_t }
%struct.mbedtls_des3_context = type { [96 x i32] }
%struct.mbedtls_des_context = type { [32 x i32] }
%struct.mbedtls_camellia_context = type { i32, [68 x i32] }
%struct.mbedtls_blowfish_context = type { [18 x i32], [4 x [256 x i32]] }
%struct.mbedtls_arc4_context = type { i32, i32, [256 x i8] }

$_ZNSt3__111char_traitsIcE6lengthEPKc = comdat any

$__clang_call_terminate = comdat any

@g_ecall_table = hidden constant %struct.anon.0 { i64 6, [6 x %struct.anon] [%struct.anon { i8* bitcast (i32 (i8*)* @sgx_sgx_connect to i8*), i8 0, i8 0 }, %struct.anon { i8* bitcast (i32 (i8*)* @sgx_sgx_accept to i8*), i8 0, i8 0 }, %struct.anon { i8* bitcast (i32 (i8*)* @sgx_ssl_conn_init to i8*), i8 0, i8 0 }, %struct.anon { i8* bitcast (i32 (i8*)* @sgx_ssl_conn_teardown to i8*), i8 0, i8 0 }, %struct.anon { i8* bitcast (i32 (i8*)* @sgx_ssl_conn_handle to i8*), i8 0, i8 0 }, %struct.anon { i8* bitcast (i32 (i8*)* @sgx_dummy to i8*), i8 0, i8 0 }] }, align 8, !dbg !0
@g_dyn_entry_table = hidden constant %struct.anon.1 { i64 16, [16 x [6 x i8]] zeroinitializer }, align 8, !dbg !656
@.str = private unnamed_addr constant [15 x i8] c"www.google.com\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"443\00", align 1
@connectionHandler = hidden global %class.TLSConnectionHandler* null, align 8, !dbg !681
@.str.2 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"Client_identity\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.1.12 = private unnamed_addr constant [5 x i8] c"CRIT\00", align 1
@.str.2.13 = private unnamed_addr constant [5 x i8] c"WARN\00", align 1
@.str.3.14 = private unnamed_addr constant [5 x i8] c"NOTI\00", align 1
@.str.4.15 = private unnamed_addr constant [5 x i8] c" LOG\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"DEBG\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.1.20 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.2.21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3.17 = private unnamed_addr constant [11 x i8] c"0x%04X:   \00", align 1
@.str.4.18 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.5.19 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"ssl_client2\00", align 1
@.str.1.25 = private unnamed_addr constant [59 x i8] c"forced ciphersuite not allowed with this protocol version\0A\00", align 1
@.str.2.26 = private unnamed_addr constant [42 x i8] c"forced RC4 ciphersuite with RC4 disabled\0A\00", align 1
@.str.3.27 = private unnamed_addr constant [30 x i8] c"pre-shared key not valid hex\0A\00", align 1
@.str.4.28 = private unnamed_addr constant [52 x i8] c"[%s] %s:%d: Seeding the random number generator...\0A\00", align 1
@__FUNCTION__.ssl_client = private unnamed_addr constant [11 x i8] c"ssl_client\00", align 1
@.str.5.29 = private unnamed_addr constant [50 x i8] c"[%s] %s:%d:  mbedtls_ctr_drbg_seed returned -%#x\0A\00", align 1
@.str.6.30 = private unnamed_addr constant [45 x i8] c"[%s] %s:%d: Loading the CA root certificate\0A\00", align 1
@.str.7.31 = private unnamed_addr constant [267576 x i8] c"##\0D\0A## Bundle of CA Root Certificates\0D\0A##\0D\0A## Certificate data from Mozilla as of: Wed Nov  2 04:12:05 2016 GMT\0D\0A##\0D\0A## This is a bundle of X.509 certificates of public Certificate Authorities\0D\0A## (CA). These were automatically extracted from Mozilla's root certificates\0D\0A## file (certdata.txt).  This file can be found in the mozilla source tree:\0D\0A## https://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt\0D\0A##\0D\0A## It contains the certificates in PEM format and therefore\0D\0A## can be directly used with curl / libcurl / php_curl, or with\0D\0A## an Apache+mod_ssl webserver for SSL client authentication.\0D\0A## Just configure this file as the SSLCACertificateFile.\0D\0A##\0D\0A## Conversion done with mk-ca-bundle.pl version 1.27.\0D\0A## SHA256: 17e2a90c8a5cfd6a675b3475d3d467e1ab1fe0d5397e907b08206182389caa08\0D\0A##\0D\0A\0D\0A\0D\0AGlobalSign Root CA\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkGA1UEBhMCQkUx\0D\0AGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jvb3QgQ0ExGzAZBgNVBAMTEkds\0D\0Ab2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAwMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNV\0D\0ABAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYD\0D\0AVQQDExJHbG9iYWxTaWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDa\0D\0ADuaZjc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavpxy0Sy6sc\0D\0ATHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp1Wrjsok6Vjk4bwY8iGlb\0D\0AKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdGsnUOhugZitVtbNV4FpWi6cgKOOvyJBNP\0D\0Ac1STE4U6G7weNLWLBYy5d4ux2x8gkasJU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrX\0D\0AgzT/LCrBbBlDSgeF59N89iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV\0D\0AHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0BAQUF\0D\0AAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOzyj1hTdNGCbM+w6Dj\0D\0AY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE38NflNUVyRRBnMRddWQVDf9VMOyG\0D\0Aj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymPAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhH\0D\0Ahm4qxFYxldBniYUr+WymXUadDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveC\0D\0AX4XSQRjbgbMEHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGlobalSign Root CA - R2\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDujCCAqKgAwIBAgILBAAAAAABD4Ym5g0wDQYJKoZIhvcNAQEFBQAwTDEgMB4GA1UECxMXR2xv\0D\0AYmFsU2lnbiBSb290IENBIC0gUjIxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMTCkdsb2Jh\0D\0AbFNpZ24wHhcNMDYxMjE1MDgwMDAwWhcNMjExMjE1MDgwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxT\0D\0AaWduIFJvb3QgQ0EgLSBSMjETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2ln\0D\0AbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKbPJA6+Lm8omUVCxKs+IVSbC9N/hHD6\0D\0AErPLv4dfxn+G07IwXNb9rfF73OX4YJYJkhD10FPe+3t+c4isUoh7SqbKSaZeqKeMWhG8eoLrvozp\0D\0As6yWJQeXSpkqBy+0Hne/ig+1AnwblrjFuTosvNYSuetZfeLQBoZfXklqtTleiDTsvHgMCJiEbKjN\0D\0AS7SgfQx5TfC4LcshytVsW33hoCmEofnTlEnLJGKRILzdC9XZzPnqJworc5HGnRusyMvo4KD0L5CL\0D\0ATfuwNhv2GXqF4G3yYROIXJ/gkwpRl4pazq+r1feqCapgvdzZX99yqWATXgAByUr6P6TqBwMhAo6C\0D\0AygPCm48CAwEAAaOBnDCBmTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E\0D\0AFgQUm+IHV2ccHsBqBt5ZtJot39wZhi4wNgYDVR0fBC8wLTAroCmgJ4YlaHR0cDovL2NybC5nbG9i\0D\0AYWxzaWduLm5ldC9yb290LXIyLmNybDAfBgNVHSMEGDAWgBSb4gdXZxwewGoG3lm0mi3f3BmGLjAN\0D\0ABgkqhkiG9w0BAQUFAAOCAQEAmYFThxxol4aR7OBKuEQLq4GsJ0/WwbgcQ3izDJr86iw8bmEbTUsp\0D\0A9Z8FHSbBuOmDAGJFtqkIk7mpM0sYmsL4h4hO291xNBrBVNpGP+DTKqttVCL1OmLNIG+6KYnX3ZHu\0D\0A01yiPqFbQfXf5WRDLenVOavSot+3i9DAgBkcRcAtjOj4LaR0VknFBbVPFd5uRHg5h6h+u/N5GJG7\0D\0A9G+dwfCMNYxdAfvDbbnvRG15RjF+Cv6pgsH/76tuIMRQyV+dTZsXjAzlAcmgQWpzU/qlULRuJQ/7\0D\0ATBj0/VLZjmmx6BEP3ojY+x1J96relc8geMJgEtslQIxq/H5COEBkEveegeGTLg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AVerisign Class 3 Public Primary Certification Authority - G3\0D\0A============================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQswCQYDVQQGEwJV\0D\0AUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdv\0D\0AcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl\0D\0AIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNh\0D\0AdGlvbiBBdXRob3JpdHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQsw\0D\0ACQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy\0D\0AdXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhv\0D\0Acml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1hcnkg\0D\0AQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\0D\0AggEBAMu6nFL8eB8aHm8bN3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1\0D\0AEUGO+i2tKmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGukxUc\0D\0AcLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBmCC+Vk7+qRy+oRpfw\0D\0AEuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJXwzw3sJ2zq/3avL6QaaiMxTJ5Xpj\0D\0A055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWuimi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEA\0D\0AERSWwauSCPc/L8my/uRan2Te2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5f\0D\0Aj267Cz3qWhMeDGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC\0D\0A/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565pF4ErWjfJXir0\0D\0AxuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGtTxzhT5yvDwyd93gN2PQ1VoDa\0D\0At20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEntrust.net Premium 2048 Secure Server CA\0D\0A=========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5u\0D\0AZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxp\0D\0AbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV\0D\0ABAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQx\0D\0ANzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3\0D\0Ad3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl\0D\0AMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u\0D\0AZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\0D\0AMIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOL\0D\0AGp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSr\0D\0AhRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzW\0D\0AnLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUi\0D\0AVBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8E\0D\0ABAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJ\0D\0AKoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPy\0D\0AT/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf\0D\0AzX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKT\0D\0AJ1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e\0D\0AnNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ABaltimore CyberTrust Root\0D\0A=========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJRTESMBAGA1UE\0D\0AChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYDVQQDExlCYWx0aW1vcmUgQ3li\0D\0AZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoXDTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMC\0D\0ASUUxEjAQBgNVBAoTCUJhbHRpbW9yZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFs\0D\0AdGltb3JlIEN5YmVyVHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKME\0D\0AuyKrmD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjrIZ3AQSsB\0D\0AUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeKmpYcqWe4PwzV9/lSEy/C\0D\0AG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSuXmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9\0D\0AXbIGevOF6uvUA65ehD5f/xXtabz5OTZydc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjpr\0D\0Al3RjM71oGDHweI12v/yejl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoI\0D\0AVDaGezq1BE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEB\0D\0ABQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT929hkTI7gQCvlYpNRh\0D\0AcL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3WgxjkzSswF07r51XgdIGn9w/xZchMB5\0D\0AhbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsa\0D\0AY71k5h+3zvDyny67G7fyUIhzksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9H\0D\0ARCwBXbsdtTLSR9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAddTrust Low-Value Services Root\0D\0A================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEGDCCAwCgAwIBAgIBATANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJTRTEUMBIGA1UEChML\0D\0AQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYDVQQDExhBZGRU\0D\0AcnVzdCBDbGFzcyAxIENBIFJvb3QwHhcNMDAwNTMwMTAzODMxWhcNMjAwNTMwMTAzODMxWjBlMQsw\0D\0ACQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBO\0D\0AZXR3b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwggEiMA0GCSqGSIb3DQEB\0D\0AAQUAA4IBDwAwggEKAoIBAQCWltQhSWDia+hBBwzexODcEyPNwTXH+9ZOEQpnXvUGW2ulCDtbKRY6\0D\0A54eyNAbFvAWlA3yCyykQruGIgb3WntP+LVbBFc7jJp0VLhD7Bo8wBN6ntGO0/7Gcrjyvd7ZWxbWr\0D\0AoulpOj0OM3kyP3CCkplhbY0wCI9xP6ZIVxn4JdxLZlyldI+Yrsj5wAYi56xz36Uu+1LcsRVlIPo1\0D\0AZmne3yzxbrww2ywkEtvrNTVokMsAsJchPXQhI2U0K7t4WaPW4XY5mqRJjox0r26kmqPZm9I4XJui\0D\0AGMx1I4S+6+JNM3GOGvDC+Mcdoq0Dlyz4zyXG9rgkMbFjXZJ/Y/AlyVMuH79NAgMBAAGjgdIwgc8w\0D\0AHQYDVR0OBBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8EBTAD\0D\0AAQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBlMQswCQYDVQQGEwJT\0D\0ARTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEw\0D\0AHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBACxt\0D\0AZBsfzQ3duQH6lmM0MkhHma6X7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMXJ0Ph\0D\0AiVYrqW9yTkkz43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfjea4MY\0D\0AeDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJlpz/+0WatC7xr\0D\0AmYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOAWiFeIc9TVPC6b4nbqKqVz4vj\0D\0AccweGyBECMB6tkD9xOQ14R0WHNC8K47Wcdk=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAddTrust External Root\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEUMBIGA1UEChML\0D\0AQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYD\0D\0AVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEw\0D\0ANDgzOFowbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRU\0D\0AcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0Eg\0D\0AUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvtH7xsD821\0D\0A+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9uMq/NzgtHj6RQa1wVsfw\0D\0ATz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzXmk6vBbOmcZSccbNQYArHE504B4YCqOmo\0D\0AaSYYkKtMsE8jqzpPhNjfzp/haW+710LXa0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy\0D\0A2xSoRcRdKn23tNbE7qzNE0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv7\0D\0A7+ldU9U0WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYDVR0P\0D\0ABAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0Jvf6xCZU7wO94CTL\0D\0AVBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEmMCQGA1UECxMdQWRk\0D\0AVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsxIjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENB\0D\0AIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZl\0D\0Aj7DYd7usQWxHYINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw5\0D\0A6wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvCNr4TDea9Y355\0D\0Ae6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEXc4g/VhsxOBi0cQ+azcgOno4u\0D\0AG+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5amnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQ=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAddTrust Public Services Root\0D\0A=============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEUMBIGA1UEChML\0D\0AQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSAwHgYDVQQDExdBZGRU\0D\0AcnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAxMDQxNTBaFw0yMDA1MzAxMDQxNTBaMGQxCzAJ\0D\0ABgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5l\0D\0AdHdvcmsxIDAeBgNVBAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkqhkiG9w0BAQEF\0D\0AAAOCAQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9mVEBV6tsfSlbu\0D\0AnyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nXGCwwfQ56HmIexkvA/X1i\0D\0Ad9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnPdzRGULD4EfL+OHn3Bzn+UZKXC1sIXzSG\0D\0AAa2Il+tmzV7R/9x98oTaunet3IAIx6eH1lWfl2royBFkuucZKT8Rs3iQhCBSWxHveNCD9tVIkNAw\0D\0AHM+A+WD+eeSI8t0A65RF62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQABo4HRMIHOMB0G\0D\0AA1UdDgQWBBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\0D\0A/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDELMAkGA1UEBhMCU0Ux\0D\0AFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0d29yazEgMB4G\0D\0AA1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBAAP3FUr4\0D\0AJNojVhaTdt02KLmuG7jD8WS6IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7r7IgGRLlk/lL\0D\0A+YPoRNWyQSW/iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsye/Kf8Lb93/Ao\0D\0AGEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh4SINhwBk/ox9\0D\0AYjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQmXiLsks3/QppEIW1cxeMiHV9H\0D\0AEufOX1362KqxMy3ZdvJOOjMMK7MtkAY=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAddTrust Qualified Certificates Root\0D\0A====================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEHjCCAwagAwIBAgIBATANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJTRTEUMBIGA1UEChML\0D\0AQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSMwIQYDVQQDExpBZGRU\0D\0AcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdDAeFw0wMDA1MzAxMDQ0NTBaFw0yMDA1MzAxMDQ0NTBaMGcx\0D\0ACzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQ\0D\0AIE5ldHdvcmsxIzAhBgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MIIBIjANBgkqhkiG\0D\0A9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5B6a/twJWoekn0e+EV+vhDTbYjx5eLfpMLXsDBwqxBb/4Oxx\0D\0A64r1EW7tTw2R0hIYLUkVAcKkIhPHEWT/IhKauY5cLwjPcWqzZwFZ8V1G87B4pfYOQnrjfxvM0PC3\0D\0AKP0q6p6zsLkEqv32x7SxuCqg+1jxGaBvcCV+PmlKfw8i2O+tCBGaKZnhqkRFmhJePp1tUvznoD1o\0D\0AL/BLcHwTOK28FSXx1s6rosAx1i+f4P8UWfyEk9mHfExUE+uf0S0R+Bg6Ot4l2ffTQO2kBhLEO+GR\0D\0AwVY18BTcZTYJbqukB8c10cIDMzZbdSZtQvESa0NvS3GU+jQd7RNuyoB/mC9suWXY6QIDAQABo4HU\0D\0AMIHRMB0GA1UdDgQWBBQ5lYtii1zJ1IC6WA+XPxUIQ8yYpzALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/\0D\0ABAUwAwEB/zCBkQYDVR0jBIGJMIGGgBQ5lYtii1zJ1IC6WA+XPxUIQ8yYp6FrpGkwZzELMAkGA1UE\0D\0ABhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0d29y\0D\0AazEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlmaWVkIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQAD\0D\0AggEBABmrder4i2VhlRO6aQTvhsoToMeqT2QbPxj2qC0sVY8FtzDqQmodwCVRLae/DLPt7wh/bDxG\0D\0AGuoYQ992zPlmhpwsaPXpF/gxsxjE1kh9I0xowX67ARRvxdlu3rsEQmr49lx95dr6h+sNNVJn0J6X\0D\0AdgWTP5XHAeZpVTh/EGGZyeNfpso+gmNIquIISD6q8rKFYqa0p9m9N5xotS1WfbC3P6CxB9bpT9ze\0D\0ARXEwMn8bLgn5v1Kh7sKAPgZcLlVAwRv1cEWw3F369nJad9Jjzc9YiQBCYz95OdBEsIJuQRno3eDB\0D\0AiFrRHnGTHyQwdOUeqN48Jzd/g66ed8/wMLH/S5noxqE=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEntrust Root Certification Authority\0D\0A====================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMCVVMxFjAUBgNV\0D\0ABAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0Lm5ldC9DUFMgaXMgaW5jb3Jw\0D\0Ab3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMWKGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsG\0D\0AA1UEAxMkRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0\0D\0AMloXDTI2MTEyNzIwNTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMu\0D\0AMTkwNwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSByZWZlcmVu\0D\0AY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNVBAMTJEVudHJ1c3QgUm9v\0D\0AdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\0D\0AALaVtkNC+sZtKm9I35RMOVcF7sN5EUFoNu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYsz\0D\0AA9u3g3s+IIRe7bJWKKf44LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOww\0D\0ACj0Yzfv9KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGIrb68\0D\0Aj6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi94DkZfs0Nw4pgHBN\0D\0ArziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOBsDCBrTAOBgNVHQ8BAf8EBAMCAQYw\0D\0ADwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAigA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1\0D\0AMzQyWjAfBgNVHSMEGDAWgBRokORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DH\0D\0Ahmak8fdLQ/uEvW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA\0D\0AA4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9tO1KzKtvn1ISM\0D\0AY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6ZuaAGAT/3B+XxFNSRuzFVJ7yVTa\0D\0Av52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTS\0D\0AW3iDVuycNsMm4hH2Z0kdkquM++v/eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0\0D\0AtHuu2guQOHXvgR1m0vdXcDazv/wor3ElhVsT/h5/WrQ8\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ARSA Security 2048 v3\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDYTCCAkmgAwIBAgIQCgEBAQAAAnwAAAAKAAAAAjANBgkqhkiG9w0BAQUFADA6MRkwFwYDVQQK\0D\0AExBSU0EgU2VjdXJpdHkgSW5jMR0wGwYDVQQLExRSU0EgU2VjdXJpdHkgMjA0OCBWMzAeFw0wMTAy\0D\0AMjIyMDM5MjNaFw0yNjAyMjIyMDM5MjNaMDoxGTAXBgNVBAoTEFJTQSBTZWN1cml0eSBJbmMxHTAb\0D\0ABgNVBAsTFFJTQSBTZWN1cml0eSAyMDQ4IFYzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\0D\0AAQEAt49VcdKA3XtpeafwGFAyPGJn9gqVB93mG/Oe2dJBVGutn3y+Gc37RqtBaB4Y6lXIL5F4iSj7\0D\0AJylg/9+PjDvJSZu1pJTOAeo+tWN7fyb9Gd3AIb2E0S1PRsNO3Ng3OTsor8udGuorryGlwSMiuLgb\0D\0AWhOHV4PR8CDn6E8jQrAApX2J6elhc5SYcSa8LWrg903w8bYqODGBDSnhAMFRD0xS+ARaqn1y07iH\0D\0AKrtjEAMqs6FPDVpeRrc9DvV07Jmf+T0kgYim3WBU6JU2PcYJk5qjEoAAVZkZR73QpXzDuvsf9/UP\0D\0A+Ky5tfQ3mBMY3oVbtwyCO4dvlTlYMNpuAWgXIszACwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/\0D\0AMA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQHw1EwpKrpRa41JPr/JCwz0LGdjDAdBgNVHQ4E\0D\0AFgQUB8NRMKSq6UWuNST6/yQsM9CxnYwwDQYJKoZIhvcNAQEFBQADggEBAF8+hnZuuDU8TjYcHnmY\0D\0Av/3VEhF5Ug7uMYm83X/50cYVIeiKAVQNOvtUudZj1LGqlk2iQk3UUx+LEN5/Zb5gEydxiKRz44Rj\0D\0A0aRV4VCT5hsOedBnvEbIvz8XDZXmxpBp3ue0L96VfdASPz0+f00/FGj1EVDVwfSQpQgdMWD/YIwj\0D\0AVAqv/qFuxdF6Kmh4zx6CCiC0H63lhbJqaHVOrSU3lIW+vaHU6rcMSzyd6BIA8F+sDeGscGNz9395\0D\0AnzIlQnQFgCi/vcEkllgVsRch6YlL2weIZ/QVrXA+L02FO8K32/6YaCOJ4XQP3vTFhGMpG8zLB8kA\0D\0ApKnXwiJPZ9d37CAFYd4=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Global CA\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDVDCCAjygAwIBAgIDAjRWMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVTMRYwFAYDVQQK\0D\0AEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9iYWwgQ0EwHhcNMDIwNTIxMDQw\0D\0AMDAwWhcNMjIwNTIxMDQwMDAwWjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5j\0D\0ALjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\0D\0ACgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9mOSm9BXiLnTjo\0D\0ABbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIuT8rxh0PBFpVXLVDviS2Aelet\0D\0A8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6cJmTM386DGXHKTubU1XupGc1V3sjs0l44U+Vc\0D\0AT4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagU\0D\0AvTLrGAMoUgRx5aszPeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo1MwUTAPBgNVHRMBAf8EBTAD\0D\0AAQH/MB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1luMrMTjAfBgNVHSMEGDAWgBTAephojYn7qwVk\0D\0ADBF9qn1luMrMTjANBgkqhkiG9w0BAQUFAAOCAQEANeMpauUvXVSOKVCUn5kaFOSPeCpilKInZ57Q\0D\0AzxpeR+nBsqTP3UEaBU6bS+5Kb1VSsyShNwrrZHYqLizz/Tt1kL/6cdjHPTfStQWVYrmm3ok9Nns4\0D\0Ad0iXrKYgjy6myQzCsplFAMfOEVEiIuCl6rYVSAlk6l5PdPcFPseKUgzbFbS9bZvlxrFUaKnjaZC2\0D\0AmqUPuLk/IH2uSrW4nOQdtqvmlKXBx4Ot2/Unhw4EbNX/3aBd7YdStysVAq45pmp06drE57xNNB6p\0D\0AXE0zX5IJL4hmXXeXxx12E6nV5fEWCRE11azbJHFwLJhWC9kXtNHjUStedejV0NxPNO3CBWaAocvm\0D\0AMw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Global CA 2\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDZjCCAk6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBEMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN\0D\0AR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFsIENBIDIwHhcNMDQwMzA0MDUw\0D\0AMDAwWhcNMTkwMzA0MDUwMDAwWjBEMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5j\0D\0ALjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFsIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\0D\0AggEKAoIBAQDvPE1APRDfO1MA4Wf+lGAVPoWI8YkNkMgoI5kF6CsgncbzYEbYwbLVjDHZ3CB5JIG/\0D\0ANTL8Y2nbsSpr7iFY8gjpeMtvy/wWUsiRxP89c96xPqfCfWbB9X5SJBri1WeR0IIQ13hLTytCOb1k\0D\0ALUCgsBDTOEhGiKEMuzozKmKY+wCdE1l/bztyqu6mD4b5BWHqZ38MN5aL5mkWRxHCJ1kDs6ZgwiFA\0D\0AVvqgx306E+PsV8ez1q6diYD3Aecs9pYrEw15LNnA5IZ7S4wMcoKK+xfNAGw6EzywhIdLFnopsk/b\0D\0AHdQL82Y3vdj2V7teJHq4PIu5+pIaGoSe2HSPqht/XvT+RSIhAgMBAAGjYzBhMA8GA1UdEwEB/wQF\0D\0AMAMBAf8wHQYDVR0OBBYEFHE4NvICMVNHK266ZUapEBVYIAUJMB8GA1UdIwQYMBaAFHE4NvICMVNH\0D\0AK266ZUapEBVYIAUJMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAA/e1K6tdEPx7\0D\0AsrJerJsOflN4WT5CBP51o62sgU7XAotexC3IUnbHLB/8gTKY0UvGkpMzNTEv/NgdRN3ggX+d6Yvh\0D\0AZJFiCzkIjKx0nVnZellSlxG5FntvRdOW2TF9AjYPnDtuzywNA0ZF66D0f0hExghAzN4bcLUprbqL\0D\0AOzRldRtxIR0sFAqwlpW41uryZfspuk/qkZN0abby/+Ea0AzRdoXLiiW9l14sbxWZJue2Kf8i7MkC\0D\0Ax1YAzUm5s2x7UwQa4qjJqhIFI8LO57sEAszAR6LkxCkvW0VXiVHuPOtSCP8HNR6fNWpHSlaY0VqF\0D\0AH4z1Ir+rzoPz4iIprn2DQKi6bA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Universal CA\0D\0A=====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN\0D\0AR2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVyc2FsIENBMB4XDTA0MDMwNDA1\0D\0AMDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IElu\0D\0AYy4xHjAcBgNVBAMTFUdlb1RydXN0IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIP\0D\0AADCCAgoCggIBAKYVVaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckUHUWCq8YdgNY96xCcOq9t\0D\0AJPi8cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDgFgDgEB8rMQ7XlFTTQjOgNB0e\0D\0ARXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEYfyh3peFhF7em6fgemdtzbvQKoiFs\0D\0A7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2vc7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d\0D\0A8Lsrlh/eezJS/R27tQahsiFepdaVaH/wmZ7cRQg+59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7V\0D\0AqnJNk22CDtucvc+081xdVHppCZbW2xHBjXWotM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3Cga\0D\0ARr0BHdCXteGYO8A3ZNY9lO4L4fUorgtWv3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZf9hB\0D\0AZ3KiKN9gg6meyHv8U3NyWfWTehd2Ds735VzZC1U0oqpbtWpU5xPKV+yXbfReBi9Fi1jUIxaS5BZu\0D\0AKGNZMN9QAZxjiRqf2xeUgnA3wySemkfWWspOqGmJch+RbNt+nhutxx9z3SxPGWX9f5NAEC7S8O08\0D\0Ani4oPmkmM8V7AgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0\0D\0AXG0D08DYj3rWMB8GA1UdIwQYMBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIB\0D\0AhjANBgkqhkiG9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRc\0D\0AaanQmjg8+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fXIwjhmF7DWgh2\0D\0Aqaavdy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzynANXH/KttgCJwpQzgXQQpAvvL\0D\0AoJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0zuzYYm4UPFd3uLax2k7nZAY1IEKj79TiG8dsK\0D\0Axr2EoyNB3tZ3b4XUhRxQ4K5RirqNPnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzns0ccjkxF\0D\0AKyDuSN/n3QmOGKjaQI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3kt0tm7wNFYGm2\0D\0ADFKWkoRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkDMBmhLMi9ER/frslK\0D\0AxfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQtDF4JbAiXfKM9fJP/P6EU\0D\0Ap8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/SfuvmbJxPgWp6ZKy7PtXny3YuxadIwVyQD8vI\0D\0AP/rmMuGNG2+k5o7Y+SlIis5z/iw=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Universal CA 2\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN\0D\0AR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVyc2FsIENBIDIwHhcNMDQwMzA0\0D\0AMDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3Qg\0D\0ASW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVyc2FsIENBIDIwggIiMA0GCSqGSIb3DQEBAQUA\0D\0AA4ICDwAwggIKAoICAQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6GqdHtXr0om/Nj1XqduGdt0\0D\0ADE81WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSCegx2oG9NzkEtoBUGFF+3Qs17\0D\0Aj1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O64ceJHdqXbboW0W63MOhBW9Wjo8Q\0D\0AJqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxLse4YuU6W3Nx2/zu+z18DwPw76L5GG//a\0D\0AQMJS9/7jOvdqdzXQ2o3rXhhqMcceujwbKNZrVMaqW9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2\0D\0AWP0+GfPtDCapkzj4T8FdIgbQl+rhrcZV4IErKIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP\0D\0A20gaXT73y/Zl92zxlfgCOzJWgjl6W70viRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRthAAn\0D\0AZqzwcEAJQpKtT5MNYQlRJNiS1QuUYbKHsu3/mjX/hVTK7URDrBs8FmtISgocQIgfksILAAX/8sgC\0D\0ASqSqqcyZlpwvWOB94b67B9xfBHJcMTTD7F8t4D1kkCLm0ey4Lt1ZrtmhN79UNdxzMk+MBB4zsslG\0D\0A8dhcyFVQyWi9qLo2CQIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2\0D\0A+/CfXGJx7Tz0RzgQKzAfBgNVHSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8E\0D\0ABAMCAYYwDQYJKoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+z\0D\0AdXkzoS9tcBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQL1EuxBRa3ugZ\0D\0A4T7GzKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgrFg5fNuH8KrUwJM/gYwx7WBr+\0D\0AmbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSoag/HtPQTxORb7QrSpJdMKu0vbBKJPfEncKpq\0D\0AA1Ihn0CoZ1Dy81of398j9tx4TuaYT1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8pRPPphXpg\0D\0AY+RdM4kX2TGq2tbzGDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp8RW04eWe3fiP\0D\0Apm8m1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Basx7InQJJVOCiNUW7d\0D\0AFGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH6aLcr34YEoP9VhdBLtUp\0D\0Agn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwXQMAJKOSLakhT2+zNVVXxxvjpoixMptEm\0D\0AX36vWkzaH6byHCx+rgIW0lbQL1dTR+iS\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AVisa eCommerce Root\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDojCCAoqgAwIBAgIQE4Y1TR0/BvLB+WUF1ZAcYjANBgkqhkiG9w0BAQUFADBrMQswCQYDVQQG\0D\0AEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMmVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2Ug\0D\0AQXNzb2NpYXRpb24xHDAaBgNVBAMTE1Zpc2EgZUNvbW1lcmNlIFJvb3QwHhcNMDIwNjI2MDIxODM2\0D\0AWhcNMjIwNjI0MDAxNjEyWjBrMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMm\0D\0AVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xHDAaBgNVBAMTE1Zpc2EgZUNv\0D\0AbW1lcmNlIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvV95WHm6h2mCxlCfL\0D\0AF9sHP4CFT8icttD0b0/Pmdjh28JIXDqsOTPHH2qLJj0rNfVIsZHBAk4ElpF7sDPwsRROEW+1QK8b\0D\0ARaVK7362rPKgH1g/EkZgPI2h4H3PVz4zHvtH8aoVlwdVZqW1LS7YgFmypw23RuwhY/81q6UCzyr0\0D\0ATP579ZRdhE2o8mCP2w4lPJ9zcc+U30rq299yOIzzlr3xF7zSujtFWsan9sYXiwGd/BmoKoMWuDpI\0D\0A/k4+oKsGGelT84ATB+0tvz8KPFUgOSwsAGl0lUq8ILKpeeUYiZGo3BxN77t+Nwtd/jmliFKMAGzs\0D\0AGHxBvfaLdXe6YJ2E5/4tAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEG\0D\0AMB0GA1UdDgQWBBQVOIMPPyw/cDMezUb+B4wg4NfDtzANBgkqhkiG9w0BAQUFAAOCAQEAX/FBfXxc\0D\0ACLkr4NWSR/pnXKUTwwMhmytMiUbPWU3J/qVAtmPN3XEolWcRzCSs00Rsca4BIGsDoo8Ytyk6feUW\0D\0AYFN4PMCvFYP3j1IzJL1kk5fui/fbGKhtcbP3LBfQdCVp9/5rPJS+TUtBjE7ic9DjkCJzQ83z7+pz\0D\0AzkWKsKZJ/0x9nXGIxHYdkFsd7v3M9+79YKWxehZx0RbQfBI8bGmX265fOZpwLwU8GUYEmSA20GBu\0D\0AYQa7FkKMcPcw++DbZqMAAb3mLNqRX6BGi01qnD093QVG/na/oAo85ADmJ7f/hC3euiInlhBx6yLt\0D\0A398znM/jra6O1I7mT1GvFpLgXPYHDw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertum Root CA\0D\0A==============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDDDCCAfSgAwIBAgIDAQAgMA0GCSqGSIb3DQEBBQUAMD4xCzAJBgNVBAYTAlBMMRswGQYDVQQK\0D\0AExJVbml6ZXRvIFNwLiB6IG8uby4xEjAQBgNVBAMTCUNlcnR1bSBDQTAeFw0wMjA2MTExMDQ2Mzla\0D\0AFw0yNzA2MTExMDQ2MzlaMD4xCzAJBgNVBAYTAlBMMRswGQYDVQQKExJVbml6ZXRvIFNwLiB6IG8u\0D\0Aby4xEjAQBgNVBAMTCUNlcnR1bSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6x\0D\0AwS7TT3zNJc4YPk/EjG+AanPIW1H4m9LcuwBcsaD8dQPugfCI7iNS6eYVM42sLQnFdvkrOYCJ5JdL\0D\0AkKWoePhzQ3ukYbDYWMzhbGZ+nPMJXlVjhNWo7/OxLjBos8Q82KxujZlakE403Daaj4GIULdtlkIJ\0D\0A89eVgw1BS7Bqa/j8D35in2fE7SZfECYPCE/wpFcozo+47UX2bu4lXapuOb7kky/ZR6By6/qmW6/K\0D\0AUz/iDsaWVhFu9+lmqSbYf5VT7QqFiLpPKaVCjF62/IUgAKpoC6EahQGcxEZjgoi2IrHu/qpGWX7P\0D\0ANSzVttpd90gzFFS269lvzs2I1qsb2pY7HVkCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkq\0D\0AhkiG9w0BAQUFAAOCAQEAuI3O7+cUus/usESSbLQ5PqKEbq24IXfS1HeCh+YgQYHu4vgRt2PRFze+\0D\0AGXYkHAQaTOs9qmdvLdTN/mUxcMUbpgIKumB7bVjCmkn+YzILa+M6wKyrO7Do0wlRjBCDxjTgxSvg\0D\0AGrZgFCdsMneMvLJymM/NzD+5yCRCFNZX/OYmQ6kd5YCQzgNUKD73P9P4Te1qCjqTE5s7FCMTY5w/\0D\0A0YcneeVMUeMBrYVdGjux1XMQpNPyvG5k9VpWkKjHDkx0Dy5xO/fIR/RpbxXyEV6DHpx8Uq79AtoS\0D\0AqFlnGNu8cN2bsWntgM6JQEhqDjXKKWYVIZQs6GAqm4VKQPNriiTsBhYscw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AComodo AAA Services root\0D\0A========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS\0D\0AR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg\0D\0ATGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAw\0D\0AMFoXDTI4MTIzMTIzNTk1OVowezELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hl\0D\0Ac3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNV\0D\0ABAMMGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\0D\0AggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQuaBtDFcCLNSS1UY8y2bmhG\0D\0AC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe3M/vg4aijJRPn2jymJBGhCfHdr/jzDUs\0D\0Ai14HZGWCwEiwqJH5YZ92IFCokcdmtet4YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszW\0D\0AY19zjNoFmag4qMsXeDZRrOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjH\0D\0AYpy+g8cmez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQUoBEK\0D\0AIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wewYDVR0f\0D\0ABHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20vQUFBQ2VydGlmaWNhdGVTZXJ2aWNl\0D\0Acy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29tb2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2Vz\0D\0ALmNybDANBgkqhkiG9w0BAQUFAAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm\0D\0A7l3sAg9g1o1QGE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz\0D\0ARt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2G9w84FoVxp7Z\0D\0A8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsil2D4kF501KKaU73yqWjgom7C\0D\0A12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AComodo Secure Services root\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEPzCCAyegAwIBAgIBATANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS\0D\0AR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg\0D\0ATGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAw\0D\0AMDAwMFoXDTI4MTIzMTIzNTk1OVowfjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFu\0D\0AY2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJDAi\0D\0ABgNVBAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP\0D\0AADCCAQoCggEBAMBxM4KK0HDrc4eCQNUd5MvJDkKQ+d40uaG6EfQlhfPMcm3ye5drswfxdySRXyWP\0D\0A9nQ95IDC+DwN879A6vfIUtFyb+/Iq0G4bi4XKpVpDM3SHpR7LZQdqnXXs5jLrLxkU0C8j6ysNstc\0D\0Arbvd4JQX7NFc0L/vpZXJkMWwrPsbQ996CF23uPJAGysnnlDOXmWCiIxe004MeuoIkbY2qitC++rC\0D\0Aoznl2yY4rYsK7hljxxwk3wN42ubqwUcaCwtGCd0C/N7Lh1/XMGNooa7cMqG6vv5Eq2i2pRcV/b3V\0D\0Ap6ea5EQz6YiO/O1R65NxTq0B50SOqy3LqP4BSUjwwN3HaNiS/j0CAwEAAaOBxzCBxDAdBgNVHQ4E\0D\0AFgQUPNiTiMLAggnMAZkGkyDpnnAJY08wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\0D\0AgYEGA1UdHwR6MHgwO6A5oDeGNWh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL1NlY3VyZUNlcnRpZmlj\0D\0AYXRlU2VydmljZXMuY3JsMDmgN6A1hjNodHRwOi8vY3JsLmNvbW9kby5uZXQvU2VjdXJlQ2VydGlm\0D\0AaWNhdGVTZXJ2aWNlcy5jcmwwDQYJKoZIhvcNAQEFBQADggEBAIcBbSMdflsXfcFhMs+P5/OKlFlm\0D\0A4J4oqF7Tt/Q05qo5spcWxYJvMqTpjOev/e/C6LlLqqP05tqNZSH7uoDrJiiFGv45jN5bBAS0VPmj\0D\0AZ55B+glSzAVIqMk/IQQezkhr/IXownuvf7fM+F86/TXGDe+X3EyrEeFryzHRbPtIgKvcnDe4IRRL\0D\0ADXE97IMzbtFuMhbsmMcWi1mmNKsFVy2T96oTy9IT4rcuO81rUBcJaD61JlfutuC23bkpgHl9j6Pw\0D\0ApCikFcSF9CfUa7/lXORlAnZUtOM3ZiTTGWHIUhDlizeauan5Hb/qmZJhlv8BzaFfDbxxvA6sCx1H\0D\0ARR3B7Hzs/Sk=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AComodo Trusted Services root\0D\0A============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEQzCCAyugAwIBAgIBATANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS\0D\0AR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg\0D\0ATGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEw\0D\0AMDAwMDBaFw0yODEyMzEyMzU5NTlaMH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1h\0D\0AbmNoZXN0ZXIxEDAOBgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUw\0D\0AIwYDVQQDDBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0BAQEFAAOC\0D\0AAQ8AMIIBCgKCAQEA33FvNlhTWvI2VFeAxHQIIO0Yfyod5jWaHiWsnOWWfnJSoBVC21ndZHoa0Lh7\0D\0A3TkVvFVIxO06AOoxEbrycXQaZ7jPM8yoMa+j49d/vzMtTGo87IvDktJTdyR0nAducPy9C1t2ul/y\0D\0A/9c3S0pgePfw+spwtOpZqqPOSC+pw7ILfhdyFgymBwwbOM/JYrc/oJOlh0Hyt3BAd9i+FHzjqMB6\0D\0AjuljatEPmsbS9Is6FARW1O24zG71++IsWL1/T2sr92AkWCTOJu80kTrV44HQsvAEAtdbtz6SrGsS\0D\0AivnkBbA7kUlcsutT6vifR4buv5XAwAaf0lteERv0xwQ1KdJVXOTt6wIDAQABo4HJMIHGMB0GA1Ud\0D\0ADgQWBBTFe1i97doladL3WRaoszLAeydb9DAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\0D\0A/zCBgwYDVR0fBHwwejA8oDqgOIY2aHR0cDovL2NybC5jb21vZG9jYS5jb20vVHJ1c3RlZENlcnRp\0D\0AZmljYXRlU2VydmljZXMuY3JsMDqgOKA2hjRodHRwOi8vY3JsLmNvbW9kby5uZXQvVHJ1c3RlZENl\0D\0AcnRpZmljYXRlU2VydmljZXMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQDIk4E7ibSvuIQSTI3S8Ntw\0D\0AuleGFTQQuS9/HrCoiWChisJ3DFBKmwCL2Iv0QeLQg4pKHBQGsKNoBXAxMKdTmw7pSqBYaWcOrp32\0D\0ApSxBvzwGa+RZzG0Q8ZZvH9/0BAKkn0U+yNj6NkZEUD+Cl5EfKNsYEYwq5GWDVxISjBc/lDb+XbDA\0D\0ABHcTuPQV1T84zJQ6VdCsmPW6AF/ghhmBeC8owH7TzEIK9a5QoNE+xqFx7D+gIIxmOom0jtTYsU0l\0D\0AR+4viMi14QVFwL4Ucd56/Y57fU0IlqUSc/AtyjcndBInTMu2l+nZrghtWjlA3QVHdWpaIbOjGM9O\0D\0A9y5Xt5hwXsjEeLBi\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AQuoVadis Root CA\0D\0A================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF0DCCBLigAwIBAgIEOrZQizANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJCTTEZMBcGA1UE\0D\0AChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UECxMcUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\0D\0AeTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMTAz\0D\0AMTkxODMzMzNaFw0yMTAzMTcxODMzMzNaMH8xCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRp\0D\0AcyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQD\0D\0AEyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF\0D\0AAAOCAQ8AMIIBCgKCAQEAv2G1lVO6V/z68mcLOhrfEYBklbTRvM16z/Ypli4kVEAkOPcahdxYTMuk\0D\0AJ0KX0J+DisPkBgNbAKVRHnAEdOLB1Dqr1607BxgFjv2DrOpm2RgbaIr1VxqYuvXtdj182d6UajtL\0D\0AF8HVj71lODqV0D1VNk7feVcxKh7YWWVJWCCYfqtffp/p1k3sg3Spx2zY7ilKhSoGFPlU5tPaZQeL\0D\0AYzcS19Dsw3sgQUSj7cugF+FxZc4dZjH3dgEZyH0DWLaVSR2mEiboxgx24ONmy+pdpibu5cxfvWen\0D\0AAScOospUxbF6lR1xHkopigPcakXBpBlebzbNw6Kwt/5cOOJSvPhEQ+aQuwIDAQABo4ICUjCCAk4w\0D\0APQYIKwYBBQUHAQEEMTAvMC0GCCsGAQUFBzABhiFodHRwczovL29jc3AucXVvdmFkaXNvZmZzaG9y\0D\0AZS5jb20wDwYDVR0TAQH/BAUwAwEB/zCCARoGA1UdIASCAREwggENMIIBCQYJKwYBBAG+WAABMIH7\0D\0AMIHUBggrBgEFBQcCAjCBxxqBxFJlbGlhbmNlIG9uIHRoZSBRdW9WYWRpcyBSb290IENlcnRpZmlj\0D\0AYXRlIGJ5IGFueSBwYXJ0eSBhc3N1bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJs\0D\0AZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGNlcnRpZmljYXRpb24gcHJh\0D\0AY3RpY2VzLCBhbmQgdGhlIFF1b1ZhZGlzIENlcnRpZmljYXRlIFBvbGljeS4wIgYIKwYBBQUHAgEW\0D\0AFmh0dHA6Ly93d3cucXVvdmFkaXMuYm0wHQYDVR0OBBYEFItLbe3TKbkGGew5Oanwl4Rqy+/fMIGu\0D\0ABgNVHSMEgaYwgaOAFItLbe3TKbkGGew5Oanwl4Rqy+/foYGEpIGBMH8xCzAJBgNVBAYTAkJNMRkw\0D\0AFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENlcnRpZmljYXRpb24gQXV0\0D\0AaG9yaXR5MS4wLAYDVQQDEyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggQ6\0D\0AtlCLMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAitQUtf70mpKnGdSkfnIYj9lo\0D\0AfFIk3WdvOXrEql494liwTXCYhGHoG+NpGA7O+0dQoE7/8CQfvbLO9Sf87C9TqnN7Az10buYWnuul\0D\0ALsS/VidQK2K6vkscPFVcQR0kvoIgR13VRH56FmjffU1RcHhXHTMe/QKZnAzNCgVPx7uOpHX6Sm2x\0D\0AgI4JVrmcGmD+XcHXetwReNDWXcG31a0ymQM6isxUJTkxgXsTIlG6Rmyhu576BGxJJnSP0nPrzDCi\0D\0A5upZIof4l/UO/erMkqQWxFIY6iHOsfHmhIHluqmGKPJDWl0Snawe2ajlCmqnf6CHKc/yiU3U7MXi\0D\0A5nrQNiOKSnQ2+Q==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AQuoVadis Root CA 2\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFtzCCA5+gAwIBAgICBQkwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0xGTAXBgNVBAoT\0D\0AEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJvb3QgQ0EgMjAeFw0wNjExMjQx\0D\0AODI3MDBaFw0zMTExMjQxODIzMzNaMEUxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBM\0D\0AaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBSb290IENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4IC\0D\0ADwAwggIKAoICAQCaGMpLlA0ALa8DKYrwD4HIrkwZhR0In6spRIXzL4GtMh6QRr+jhiYaHv5+HBg6\0D\0AXJxgFyo6dIMzMH1hVBHL7avg5tKifvVrbxi3Cgst/ek+7wrGsxDp3MJGF/hd/aTa/55JWpzmM+Yk\0D\0Alvc/ulsrHHo1wtZn/qtmUIttKGAr79dgw8eTvI02kfN/+NsRE8Scd3bBrrcCaoF6qUWD4gXmuVbB\0D\0AlDePSHFjIuwXZQeVikvfj8ZaCuWw419eaxGrDPmF60Tp+ARz8un+XJiM9XOva7R+zdRcAitMOeGy\0D\0AlZUtQofX1bOQQ7dsE/He3fbE+Ik/0XX1ksOR1YqI0JDs3G3eicJlcZaLDQP9nL9bFqyS2+r+eXyt\0D\0A66/3FsvbzSUr5R/7mp/iUcw6UwxI5g69ybR2BlLmEROFcmMDBOAENisgGQLodKcftslWZvB1Jdxn\0D\0AwQ5hYIizPtGo/KPaHbDRsSNU30R2be1B2MGyIrZTHN81Hdyhdyox5C315eXbyOD/5YDXC2Og/zOh\0D\0AD7osFRXql7PSorW+8oyWHhqPHWykYTe5hnMz15eWniN9gqRMgeKh0bpnX5UHoycR7hYQe7xFSkyy\0D\0ABNKr79X9DFHOUGoIMfmR2gyPZFwDwzqLID9ujWc9Otb+fVuIyV77zGHcizN300QyNQliBJIWENie\0D\0AJ0f7OyHj+OsdWwIDAQABo4GwMIGtMA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1Ud\0D\0ADgQWBBQahGK8SEwzJQTU7tD2A8QZRtGUazBuBgNVHSMEZzBlgBQahGK8SEwzJQTU7tD2A8QZRtGU\0D\0Aa6FJpEcwRTELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMT\0D\0AElF1b1ZhZGlzIFJvb3QgQ0EgMoICBQkwDQYJKoZIhvcNAQEFBQADggIBAD4KFk2fBluornFdLwUv\0D\0AZ+YTRYPENvbzwCYMDbVHZF34tHLJRqUDGCdViXh9duqWNIAXINzng/iN/Ae42l9NLmeyhP3ZRPx3\0D\0AUIHmfLTJDQtyU/h2BwdBR5YM++CCJpNVjP4iH2BlfF/nJrP3MpCYUNQ3cVX2kiF495V5+vgtJodm\0D\0AVjB3pjd4M1IQWK4/YY7yarHvGH5KWWPKjaJW1acvvFYfzznB4vsKqBUsfU16Y8Zsl0Q80m/DShcK\0D\0A+JDSV6IZUaUtl0HaB0+pUNqQjZRG4T7wlP0QADj1O+hA4bRuVhogzG9Yje0uRY/W6ZM/57Es3zrW\0D\0AIozchLsib9D45MY56QSIPMO661V6bYCZJPVsAfv4l7CUW+v90m/xd2gNNWQjrLhVoQPRTUIZ3Ph1\0D\0AWVaj+ahJefivDrkRoHy3au000LYmYjgahwz46P0u05B/B5EqHdZ+XIWDmbA4CD/pXvk1B+TJYm5X\0D\0Af6dQlfe6yJvmjqIBxdZmv3lh8zwc4bmCXF2gw+nYSL0ZohEUGW6yhhtoPkg3Goi3XZZenMfvJ2II\0D\0A4pEZXNLxId26F0KCl3GBUzGpn/Z9Yr9y4aOTHcyKJloJONDO1w2AFrR4pTqHTI2KpdVGl/IsELm8\0D\0AVCLAAVBpQ570su9t+Oza8eOx79+Rj1QqCyXBJhnEUhAFZdWCEOrCMc0u\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AQuoVadis Root CA 3\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIGnTCCBIWgAwIBAgICBcYwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0xGTAXBgNVBAoT\0D\0AEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJvb3QgQ0EgMzAeFw0wNjExMjQx\0D\0AOTExMjNaFw0zMTExMjQxOTA2NDRaMEUxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBM\0D\0AaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBSb290IENBIDMwggIiMA0GCSqGSIb3DQEBAQUAA4IC\0D\0ADwAwggIKAoICAQDMV0IWVJzmmNPTTe7+7cefQzlKZbPoFog02w1ZkXTPkrgEQK0CSzGrvI2RaNgg\0D\0ADhoB4hp7Thdd4oq3P5kazethq8Jlph+3t723j/z9cI8LoGe+AaJZz3HmDyl2/7FWeUUrH556VOij\0D\0AKTVopAFPD6QuN+8bv+OPEKhyq1hX51SGyMnzW9os2l2ObjyjPtr7guXd8lyyBTNvijbO0BNO/79K\0D\0ADDRMpsMhvVAEVeuxu537RR5kFd5VAYwCdrXLoT9CabwvvWhDFlaJKjdhkf2mrk7AyxRllDdLkgbv\0D\0ABNDInIjbC3uBr7E9KsRlOni27tyAsdLTmZw67mtaa7ONt9XOnMK+pUsvFrGeaDsGb659n/je7Mwp\0D\0Ap5ijJUMv7/FfJuGITfhebtfZFG4ZM2mnO4SJk8RTVROhUXhA+LjJou57ulJCg54U7QVSWllWp5f8\0D\0AnT8KKdjcT5EOE7zelaTfi5m+rJsziO+1ga8bxiJTyPbH7pcUsMV8eFLI8M5ud2CEpukqdiDtWAEX\0D\0AMJPpGovgc2PZapKUSU60rUqFxKMiMPwJ7Wgic6aIDFUhWMXhOp8q3crhkODZc6tsgLjoC2SToJyM\0D\0AGf+z0gzskSaHirOi4XCPLArlzW1oUevaPwV/izLmE1xr/l9A4iLItLRkT9a6fUg+qGkM17uGcclz\0D\0AuD87nSVL2v9A6wIDAQABo4IBlTCCAZEwDwYDVR0TAQH/BAUwAwEB/zCB4QYDVR0gBIHZMIHWMIHT\0D\0ABgkrBgEEAb5YAAMwgcUwgZMGCCsGAQUFBwICMIGGGoGDQW55IHVzZSBvZiB0aGlzIENlcnRpZmlj\0D\0AYXRlIGNvbnN0aXR1dGVzIGFjY2VwdGFuY2Ugb2YgdGhlIFF1b1ZhZGlzIFJvb3QgQ0EgMyBDZXJ0\0D\0AaWZpY2F0ZSBQb2xpY3kgLyBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudC4wLQYIKwYB\0D\0ABQUHAgEWIWh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL2NwczALBgNVHQ8EBAMCAQYwHQYD\0D\0AVR0OBBYEFPLAE+CCQz777i9nMpY1XNu4ywLQMG4GA1UdIwRnMGWAFPLAE+CCQz777i9nMpY1XNu4\0D\0AywLQoUmkRzBFMQswCQYDVQQGEwJCTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEbMBkGA1UE\0D\0AAxMSUXVvVmFkaXMgUm9vdCBDQSAzggIFxjANBgkqhkiG9w0BAQUFAAOCAgEAT62gLEz6wPJv92ZV\0D\0AqyM07ucp2sNbtrCD2dDQ4iH782CnO11gUyeim/YIIirnv6By5ZwkajGxkHon24QRiSemd1o417+s\0D\0AhvzuXYO8BsbRd2sPbSQvS3pspweWyuOEn62Iix2rFo1bZhfZFvSLgNLd+LJ2w/w4E6oM3kJpK27z\0D\0APOuAJ9v1pkQNn1pVWQvVDVJIxa6f8i+AxeoyUDUSly7B4f/xI4hROJ/yZlZ25w9Rl6VSDE1JUZU2\0D\0APb+iSwwQHYaZTKrzchGT5Or2m9qoXadNt54CrnMAyNojA+j56hl0YgCUyyIgvpSnWbWCar6ZeXqp\0D\0A8kokUvd0/bpO5qgdAm6xDYBEwa7TIzdfu4V8K5Iu6H6li92Z4b8nby1dqnuH/grdS/yO9SbkbnBC\0D\0AbjPsMZ57k8HkyWkaPcBrTiJt7qtYTcbQQcEr6k8Sh17rRdhs9ZgC06DYVYoGmRmioHfRMJ6szHXu\0D\0Ag/WwYjnPbFfiTNKRCw51KBuav/0aQ/HKd/s7j2G4aSgWQgRecCocIdiP4b0jWy10QJLZYxkNc91p\0D\0AvGJHvOB0K7Lrfb5BG7XARsWhIstfTsEokt4YutUqKLsRixeTmJlglFwjz1onl14LBQaTNx47aTbr\0D\0AqZ5hHY8y2o4M1nQ+ewkk2gF3R8Q7zTSMmfXK4SVhM7JZG+Ju1zdXtg2pEto=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASecurity Communication Root CA\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDWjCCAkKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMP\0D\0AU0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEw\0D\0AHhcNMDMwOTMwMDQyMDQ5WhcNMjMwOTMwMDQyMDQ5WjBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMP\0D\0AU0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEw\0D\0AggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzs/5/022x7xZ8V6UMbXaKL0u/ZPtM7orw\0D\0A8yl89f/uKuDp6bpbZCKamm8sOiZpUQWZJtzVHGpxxpp9Hp3dfGzGjGdnSj74cbAZJ6kJDKaVv0uM\0D\0ADPpVmDvY6CKhS3E4eayXkmmziX7qIWgGmBSWh9JhNrxtJ1aeV+7AwFb9Ms+k2Y7CI9eNqPPYJayX\0D\0A5HA49LY6tJ07lyZDo6G8SVlyTCMwhwFY9k6+HGhWZq/NQV3Is00qVUarH9oe4kA92819uZKAnDfd\0D\0ADJZkndwi92SL32HeFZRSFaB9UslLqCHJxrHty8OVYNEP8Ktw+N/LTX7s1vqr2b1/VPKl6Xn62dZ2\0D\0AJChzAgMBAAGjPzA9MB0GA1UdDgQWBBSgc0mZaNyFW2XjmygvV5+9M7wHSDALBgNVHQ8EBAMCAQYw\0D\0ADwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAaECpqLvkT115swW1F7NgE+vGkl3g\0D\0A0dNq/vu+m22/xwVtWSDEHPC32oRYAmP6SBbvT6UL90qY8j+eG61Ha2POCEfrUj94nK9NrvjVT8+a\0D\0AmCoQQTlSxN3Zmw7vkwGusi7KaEIkQmywszo+zenaSMQVy+n5Bw+SUEmK3TGXX8npN6o7WWWXlDLJ\0D\0As58+OmJYxUmtYg5xpTKqL8aJdkNAExNnPaJUJRDL8Try2frbSVa7pv6nQTXD4IhhyYjH3zYQIphZ\0D\0A6rBK+1YWc26sTfcioU+tHXotRSflMMFe8toTyyVCUZVHA4xsIcx0Qu1T/zOLjw9XARYvz6buyXAi\0D\0AFL39vmwLAw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASonera Class 2 Root CA\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDIDCCAgigAwIBAgIBHTANBgkqhkiG9w0BAQUFADA5MQswCQYDVQQGEwJGSTEPMA0GA1UEChMG\0D\0AU29uZXJhMRkwFwYDVQQDExBTb25lcmEgQ2xhc3MyIENBMB4XDTAxMDQwNjA3Mjk0MFoXDTIxMDQw\0D\0ANjA3Mjk0MFowOTELMAkGA1UEBhMCRkkxDzANBgNVBAoTBlNvbmVyYTEZMBcGA1UEAxMQU29uZXJh\0D\0AIENsYXNzMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJAXSjWdyvANlsdE+hY3\0D\0A/Ei9vX+ALTU74W+oZ6m/AxxNjG8yR9VBaKQTBME1DJqEQ/xcHf+Js+gXGM2RX/uJ4+q/Tl18GybT\0D\0AdXnt5oTjV+WtKcT0OijnpXuENmmz/V52vaMtmdOQTiMofRhj8VQ7Jp12W5dCsv+u8E7s3TmVToMG\0D\0Af+dJQMjFAbJUWmYdPfz56TwKnoG4cPABi+QjVHzIrviQHgCWctRUz2EjvOr7nQKV0ba5cTppCD8P\0D\0AtOFCx4j1P5iop7oc4HFx71hXgVB6XGt0Rg6DA5jDjqhu8nYybieDwnPz3BjotJPqdURrBGAgcVeH\0D\0AnfO+oJAjPYok4doh28MCAwEAAaMzMDEwDwYDVR0TAQH/BAUwAwEB/zARBgNVHQ4ECgQISqCqWITT\0D\0AXjwwCwYDVR0PBAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQBazof5FnIVV0sd2ZvnoiYw7JNn39Yt\0D\0A0jSv9zilzqsWuasvfDXLrNAPtEwr/IDva4yRXzZ299uzGxnq9LIR/WFxRL8oszodv7ND6J+/3DEI\0D\0AcbCdjdY0RzKQxmUk96BKfARzjzlvF4xytb1LyHr4e4PDKE6cCepnP7JnBBvDFNr450kkkdAdavph\0D\0AOe9r5yF1BgfYErQhIHBCcYHaPJo2vqZbDWpsmh+Re/n570K6Tk6ezAyNlNzZRZxe7EJQY670XcSx\0D\0AEtzKO6gunRRaBXW37Ndj4ro1tgQIkejanZz2ZrUYrAqmVCY0M9IbwdR/GjqOC6oybtv8TyWf2TLH\0D\0AllpwrN9M\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AUTN USERFirst Hardware Root CA\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEdDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCBlzELMAkGA1UE\0D\0ABhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMVVGhl\0D\0AIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAd\0D\0ABgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgx\0D\0AOTIyWjCBlzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0\0D\0AeTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVz\0D\0AZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwggEiMA0GCSqGSIb3\0D\0ADQEBAQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlI\0D\0AwrthdBKWHTxqctU8EGc6Oe0rE81m65UJM6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFd\0D\0Atqdt++BxF2uiiPsA3/4aMXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8\0D\0Ai4fDidNdoI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqIDsjf\0D\0APe58BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9KsyoUhbAgMBAAGjgbkw\0D\0AgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKFyXyYbKJhDlV0HN9WF\0D\0Alp1L0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNF\0D\0AUkZpcnN0LUhhcmR3YXJlLmNybDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUF\0D\0ABwMGBggrBgEFBQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM\0D\0A//bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28GpgoiskliCE7/yMgUsogW\0D\0AXecB5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gECJChicsZUN/KHAG8HQQZexB2\0D\0AlzvukJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kn\0D\0AiCrVWFCVH/A7HFe7fRQ5YiuayZSSKqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67\0D\0AnfhmqA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACamerfirma Chambers of Commerce Root\0D\0A====================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEvTCCA6WgAwIBAgIBADANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJFVTEnMCUGA1UEChMe\0D\0AQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1i\0D\0AZXJzaWduLm9yZzEiMCAGA1UEAxMZQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdDAeFw0wMzA5MzAx\0D\0ANjEzNDNaFw0zNzA5MzAxNjEzNDRaMH8xCzAJBgNVBAYTAkVVMScwJQYDVQQKEx5BQyBDYW1lcmZp\0D\0Acm1hIFNBIENJRiBBODI3NDMyODcxIzAhBgNVBAsTGmh0dHA6Ly93d3cuY2hhbWJlcnNpZ24ub3Jn\0D\0AMSIwIAYDVQQDExlDaGFtYmVycyBvZiBDb21tZXJjZSBSb290MIIBIDANBgkqhkiG9w0BAQEFAAOC\0D\0AAQ0AMIIBCAKCAQEAtzZV5aVdGDDg2olUkfzIx1L4L1DZ77F1c2VHfRtbunXF/KGIJPov7coISjlU\0D\0AxFF6tdpg6jg8gbLL8bvZkSM/SAFwdakFKq0fcfPJVD0dBmpAPrMMhe5cG3nCYsS4No41XQEMIwRH\0D\0ANaqbYE6gZj3LJgqcQKH0XZi/caulAGgq7YN6D6IUtdQis4CwPAxaUWktWBiP7Zme8a7ileb2R6jW\0D\0ADA+wWFjbw2Y3npuRVDM30pQcakjJyfKl2qUMI/cjDpwyVV5xnIQFUZot/eZOKjRa3spAN2cMVCFV\0D\0Ad9oKDMyXroDclDZK9D7ONhMeU+SsTjoF7Nuucpw4i9A5O4kKPnf+dQIBA6OCAUQwggFAMBIGA1Ud\0D\0AEwEB/wQIMAYBAf8CAQwwPAYDVR0fBDUwMzAxoC+gLYYraHR0cDovL2NybC5jaGFtYmVyc2lnbi5v\0D\0AcmcvY2hhbWJlcnNyb290LmNybDAdBgNVHQ4EFgQU45T1sU3p26EpW1eLTXYGduHRooowDgYDVR0P\0D\0AAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzAnBgNVHREEIDAegRxjaGFtYmVyc3Jvb3RAY2hh\0D\0AbWJlcnNpZ24ub3JnMCcGA1UdEgQgMB6BHGNoYW1iZXJzcm9vdEBjaGFtYmVyc2lnbi5vcmcwWAYD\0D\0AVR0gBFEwTzBNBgsrBgEEAYGHLgoDATA+MDwGCCsGAQUFBwIBFjBodHRwOi8vY3BzLmNoYW1iZXJz\0D\0AaWduLm9yZy9jcHMvY2hhbWJlcnNyb290Lmh0bWwwDQYJKoZIhvcNAQEFBQADggEBAAxBl8IahsAi\0D\0AfJ/7kPMa0QOx7xP5IV8EnNrJpY0nbJaHkb5BkAFyk+cefV/2icZdp0AJPaxJRUXcLo0waLIJuvvD\0D\0AL8y6C98/d3tGfToSJI6WjzwFCm/SlCgdbQzALogi1djPHRPH8EjX1wWnz8dHnjs8NMiAT9QUu/wN\0D\0AUPf6s+xCX6ndbcj0dc97wXImsQEcXCz9ek60AcUFV7nnPKoF2YjpB0ZBzu9Bga5Y34OirsrXdx/n\0D\0AADydb47kMgkdTXg0eDQ8lJsm7U9xxhl6vSAiSFr+S30Dt+dYvsYyTnQeaN2oaFuzPu5ifdmA6Ap1\0D\0AerfutGWaIZDgqtCYvDi1czyL+Nw=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACamerfirma Global Chambersign Root\0D\0A==================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIExTCCA62gAwIBAgIBADANBgkqhkiG9w0BAQUFADB9MQswCQYDVQQGEwJFVTEnMCUGA1UEChMe\0D\0AQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1i\0D\0AZXJzaWduLm9yZzEgMB4GA1UEAxMXR2xvYmFsIENoYW1iZXJzaWduIFJvb3QwHhcNMDMwOTMwMTYx\0D\0ANDE4WhcNMzcwOTMwMTYxNDE4WjB9MQswCQYDVQQGEwJFVTEnMCUGA1UEChMeQUMgQ2FtZXJmaXJt\0D\0AYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEg\0D\0AMB4GA1UEAxMXR2xvYmFsIENoYW1iZXJzaWduIFJvb3QwggEgMA0GCSqGSIb3DQEBAQUAA4IBDQAw\0D\0AggEIAoIBAQCicKLQn0KuWxfH2H3PFIP8T8mhtxOviteePgQKkotgVvq0Mi+ITaFgCPS3CU6gSS9J\0D\0A1tPfnZdan5QEcOw/Wdm3zGaLmFIoCQLfxS+EjXqXd7/sQJ0lcqu1PzKY+7e3/HKE5TWH+VX6ox8O\0D\0Aby4o3Wmg2UIQxvi1RMLQQ3/bvOSiPGpVeAp3qdjqGTK3L/5cPxvusZjsyq16aUXjlg9V9ubtdepl\0D\0A6DJWk0aJqCWKZQbua795B9Dxt6/tLE2Su8CoX6dnfQTyFQhwrJLWfQTSM/tMtgsL+xrJxI0DqX5c\0D\0A8lCrEqWhz0hQpe/SyBoT+rB/sYIcd2oPX9wLlY/vQ37mRQklAgEDo4IBUDCCAUwwEgYDVR0TAQH/\0D\0ABAgwBgEB/wIBDDA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLmNoYW1iZXJzaWduLm9yZy9j\0D\0AaGFtYmVyc2lnbnJvb3QuY3JsMB0GA1UdDgQWBBRDnDafsJ4wTcbOX60Qq+UDpfqpFDAOBgNVHQ8B\0D\0AAf8EBAMCAQYwEQYJYIZIAYb4QgEBBAQDAgAHMCoGA1UdEQQjMCGBH2NoYW1iZXJzaWducm9vdEBj\0D\0AaGFtYmVyc2lnbi5vcmcwKgYDVR0SBCMwIYEfY2hhbWJlcnNpZ25yb290QGNoYW1iZXJzaWduLm9y\0D\0AZzBbBgNVHSAEVDBSMFAGCysGAQQBgYcuCgEBMEEwPwYIKwYBBQUHAgEWM2h0dHA6Ly9jcHMuY2hh\0D\0AbWJlcnNpZ24ub3JnL2Nwcy9jaGFtYmVyc2lnbnJvb3QuaHRtbDANBgkqhkiG9w0BAQUFAAOCAQEA\0D\0APDtwkfkEVCeR4e3t/mh/YV3lQWVPMvEYBZRqHN4fcNs+ezICNLUMbKGKfKX0j//U2K0X1S0E0T9Y\0D\0AgOKBWYi+wONGkyT+kL0mojAt6JcmVzWJdJYY9hXiryQZVgICsroPFOrGimbBhkVVi76SvpykBMdJ\0D\0APJ7oKXqJ1/6v/2j1pReQvayZzKWGVwlnRtvWFsJG8eSpUPWP0ZIV018+xgBJOm5YstHRJw0lyDL4\0D\0AIBHNfTIzSJRUTN3cecQwn+uOuFW114hcxWokPbLTBQNRxgfvzBRydD1ucs4YKIxKoHflCStFREes\0D\0At2d/AYoFWpO+ocH/+OcOZ6RHSXZddZAa9SaP8A==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AXRamp Global CA Root\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEMDCCAxigAwIBAgIQUJRs7Bjq1ZxN1ZfvdY+grTANBgkqhkiG9w0BAQUFADCBgjELMAkGA1UE\0D\0ABhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2Vj\0D\0AdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBB\0D\0AdXRob3JpdHkwHhcNMDQxMTAxMTcxNDA0WhcNMzUwMTAxMDUzNzE5WjCBgjELMAkGA1UEBhMCVVMx\0D\0AHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2VjdXJpdHkg\0D\0AU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\0D\0AdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYJB69FbS638eMpSe2OAtp87ZOqCwu\0D\0AIR1cRN8hXX4jdP5efrRKt6atH67gBhbim1vZZ3RrXYCPKZ2GG9mcDZhtdhAoWORlsH9KmHmf4MMx\0D\0AfoArtYzAQDsRhtDLooY2YKTVMIJt2W7QDxIEM5dfT2Fa8OT5kavnHTu86M/0ay00fOJIYRyO82FE\0D\0AzG+gSqmUsE3a56k0enI4qEHMPJQRfevIpoy3hsvKMzvZPTeL+3o+hiznc9cKV6xkmxnr9A8ECIqs\0D\0AAxcZZPRaJSKNNCyy9mgdEm3Tih4U2sSPpuIjhdV6Db1q4Ons7Be7QhtnqiXtRYMh/MHJfNViPvry\0D\0AxS3T/dRlAgMBAAGjgZ8wgZwwEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1Ud\0D\0AEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMZPoj0GY4QJnM5i5ASsjVy16bYbMDYGA1UdHwQvMC0wK6Ap\0D\0AoCeGJWh0dHA6Ly9jcmwueHJhbXBzZWN1cml0eS5jb20vWEdDQS5jcmwwEAYJKwYBBAGCNxUBBAMC\0D\0AAQEwDQYJKoZIhvcNAQEFBQADggEBAJEVOQMBG2f7Shz5CmBbodpNl2L5JFMn14JkTpAuw0kbK5rc\0D\0A/Kh4ZzXxHfARvbdI4xD2Dd8/0sm2qlWkSLoC295ZLhVbO50WfUfXN+pfTXYSNrsf16GBBEYgoyxt\0D\0AqZ4Bfj8pzgCT3/3JknOJiWSe5yvkHJEs0rnOfc5vMZnT5r7SHpDwCRR5XCOrTdLaIR9NmXmd4c8n\0D\0AnxCbHIgNsIpkQTG4DmyQJKSbXHGPurt+HBvbaoAPIbzp26a3QPSyi6mx5O+aGtA9aZnuqCij4Tyz\0D\0A8LIRnM98QObd50N9otg6tamN8jSZxNQQ4Qb9CYQQO+7ETPTsJ3xCwnR8gooJybQDJbw=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGo Daddy Class 2 CA\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEADCCAuigAwIBAgIBADANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMY\0D\0AVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRp\0D\0AZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MDYyOTE3MDYyMFoXDTM0MDYyOTE3MDYyMFowYzELMAkG\0D\0AA1UEBhMCVVMxITAfBgNVBAoTGFRoZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMoR28g\0D\0ARGFkZHkgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASAwDQYJKoZIhvcNAQEBBQAD\0D\0AggENADCCAQgCggEBAN6d1+pXGEmhW+vXX0iG6r7d/+TvZxz0ZWizV3GgXne77ZtJ6XCAPVYYYwhv\0D\0A2vLM0D9/AlQiVBDYsoHUwHU9S3/Hd8M+eKsaA7Ugay9qK7HFiH7Eux6wwdhFJ2+qN1j3hybX2C32\0D\0AqRe3H3I2TqYXP2WYktsqbl2i/ojgC95/5Y0V4evLOtXiEqITLdiOr18SPaAIBQi2XKVlOARFmR6j\0D\0AYGB0xUGlcmIbYsUfb18aQr4CUWWoriMYavx4A6lNf4DD+qta/KFApMoZFv6yyO9ecw3ud72a9nmY\0D\0AvLEHZ6IVDd2gWMZEewo+YihfukEHU1jPEX44dMX4/7VpkI+EdOqXG68CAQOjgcAwgb0wHQYDVR0O\0D\0ABBYEFNLEsNKR1EwRcbNhyz2h/t2oatTjMIGNBgNVHSMEgYUwgYKAFNLEsNKR1EwRcbNhyz2h/t2o\0D\0AatTjoWekZTBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMu\0D\0AMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwG\0D\0AA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADJL87LKPpH8EsahB4yOd6AzBhRckB4Y9wim\0D\0APQoZ+YeAEW5p5JYXMP80kWNyOO7MHAGjHZQopDH2esRU1/blMVgDoszOYtuURXO1v0XJJLXVggKt\0D\0AI3lpjbi2Tc7PTMozI+gciKqdi0FuFskg5YmezTvacPd+mSYgFFQlq25zheabIZ0KbIIOqPjCDPoQ\0D\0AHmyW74cNxA9hi63ugyuV+I6ShHI56yDqg+2DzZduCLzrTia2cyvk0/ZM/iZx4mERdEr/VxqHD3VI\0D\0ALs9RaRegAhJhldXRQLIQTO7ErBBDpqWeCtWVYpoNz4iCxTIM5CufReYNnyicsbkqWletNw+vHX/b\0D\0AvZ8=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStarfield Class 2 CA\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzElMCMGA1UEChMc\0D\0AU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZpZWxkIENsYXNzIDIg\0D\0AQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQwNjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBo\0D\0AMQswCQYDVQQGEwJVUzElMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAG\0D\0AA1UECxMpU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqG\0D\0ASIb3DQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf8MOh2tTY\0D\0AbitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN+lq2cwQlZut3f+dZxkqZ\0D\0AJRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0X9tDkYI22WY8sbi5gv2cOj4QyDvvBmVm\0D\0AepsZGD3/cVE8MC5fvj13c7JdBmzDI1aaK4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSN\0D\0AF4Azbl5KXZnJHoe0nRrA1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HF\0D\0AMIHCMB0GA1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fRzt0f\0D\0AhvRbVazc1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNo\0D\0Abm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBDbGFzcyAyIENlcnRpZmljYXRpb24g\0D\0AQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGs\0D\0AafPzWdqbAYcaT1epoXkJKtv3L7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLM\0D\0APUxA2IGvd56Deruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJl\0D\0Axy16paq8U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynpVSJYACPq4xJD\0D\0AKVtHCN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEYWQPJIrSPnNVeKtelttQKbfi3\0D\0AQBFGmh95DmK/D5fs4C8fF5Q=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStartCom Certification Authority\0D\0A================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIHyTCCBbGgAwIBAgIBATANBgkqhkiG9w0BAQUFADB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMN\0D\0AU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmlu\0D\0AZzEpMCcGA1UEAxMgU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDYwOTE3MTk0\0D\0ANjM2WhcNMzYwOTE3MTk0NjM2WjB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRk\0D\0ALjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzEpMCcGA1UEAxMg\0D\0AU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw\0D\0AggIKAoICAQDBiNsJvGxGfHiflXu1M5DycmLWwTYgIiRezul38kMKogZkpMyONvg45iPwbm2xPN1y\0D\0Ao4UcodM9tDMr0y+v/uqwQVlntsQGfQqedIXWeUyAN3rfOQVSWff0G0ZDpNKFhdLDcfN1YjS6LIp/\0D\0AHo/u7TTQEceWzVI9ujPW3U3eCztKS5/CJi/6tRYccjV3yjxd5srhJosaNnZcAdt0FCX+7bWgiA/d\0D\0AeMotHweXMAEtcnn6RtYTKqi5pquDSR3l8u/d5AGOGAqPY1MWhWKpDhk6zLVmpsJrdAfkK+F2PrRt\0D\0A2PZE4XNiHzvEvqBTViVsUQn3qqvKv3b9bZvzndu/PWa8DFaqr5hIlTpL36dYUNk4dalb6kMMAv+Z\0D\0A6+hsTXBbKWWc3apdzK8BMewM69KN6Oqce+Zu9ydmDBpI125C4z/eIT574Q1w+2OqqGwaVLRcJXrJ\0D\0AosmLFqa7LH4XXgVNWG4SHQHuEhANxjJ/GP/89PrNbpHoNkm+Gkhpi8KWTRoSsmkXwQqQ1vp5Iki/\0D\0Auntp+HDH+no32NgN0nZPV/+Qt+OR0t3vwmC3Zzrd/qqc8NSLf3Iizsafl7b4r4qgEKjZ+xjGtrVc\0D\0AUjyJthkqcwEKDwOzEmDyei+B26Nu/yYwl/WL3YlXtq09s68rxbd2AvCl1iuahhQqcvbjM4xdCUsT\0D\0A37uMdBNSSwIDAQABo4ICUjCCAk4wDAYDVR0TBAUwAwEB/zALBgNVHQ8EBAMCAa4wHQYDVR0OBBYE\0D\0AFE4L7xqkQFulF2mHMMo0aEPQQa7yMGQGA1UdHwRdMFswLKAqoCiGJmh0dHA6Ly9jZXJ0LnN0YXJ0\0D\0AY29tLm9yZy9zZnNjYS1jcmwuY3JsMCugKaAnhiVodHRwOi8vY3JsLnN0YXJ0Y29tLm9yZy9zZnNj\0D\0AYS1jcmwuY3JsMIIBXQYDVR0gBIIBVDCCAVAwggFMBgsrBgEEAYG1NwEBATCCATswLwYIKwYBBQUH\0D\0AAgEWI2h0dHA6Ly9jZXJ0LnN0YXJ0Y29tLm9yZy9wb2xpY3kucGRmMDUGCCsGAQUFBwIBFilodHRw\0D\0AOi8vY2VydC5zdGFydGNvbS5vcmcvaW50ZXJtZWRpYXRlLnBkZjCB0AYIKwYBBQUHAgIwgcMwJxYg\0D\0AU3RhcnQgQ29tbWVyY2lhbCAoU3RhcnRDb20pIEx0ZC4wAwIBARqBl0xpbWl0ZWQgTGlhYmlsaXR5\0D\0ALCByZWFkIHRoZSBzZWN0aW9uICpMZWdhbCBMaW1pdGF0aW9ucyogb2YgdGhlIFN0YXJ0Q29tIENl\0D\0AcnRpZmljYXRpb24gQXV0aG9yaXR5IFBvbGljeSBhdmFpbGFibGUgYXQgaHR0cDovL2NlcnQuc3Rh\0D\0AcnRjb20ub3JnL3BvbGljeS5wZGYwEQYJYIZIAYb4QgEBBAQDAgAHMDgGCWCGSAGG+EIBDQQrFilT\0D\0AdGFydENvbSBGcmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTANBgkqhkiG9w0BAQUFAAOC\0D\0AAgEAFmyZ9GYMNPXQhV59CuzaEE44HF7fpiUFS5Eyweg78T3dRAlbB0mKKctmArexmvclmAk8jhvh\0D\0A3TaHK0u7aNM5Zj2gJsfyOZEdUauCe37Vzlrk4gNXcGmXCPleWKYK34wGmkUWFjgKXlf2Ysd6AgXm\0D\0AvB618p70qSmD+LIU424oh0TDkBreOKk8rENNZEXO3SipXPJzewT4F+irsfMuXGRuczE6Eri8sxHk\0D\0AfY+BUZo7jYn0TZNmezwD7dOaHZrzZVD1oNB1ny+v8OqCQ5j4aZyJecRDjkZy42Q2Eq/3JR44iZB3\0D\0AfsNrarnDy0RLrHiQi+fHLB5LEUTINFInzQpdn4XBidUaePKVEFMy3YCEZnXZtWgo+2EuvoSoOMCZ\0D\0AEoalHmdkrQYuL6lwhceWD3yJZfWOQ1QOq92lgDmUYMA0yZZwLKMS9R9Ie70cfmu3nZD0Ijuu+Pwq\0D\0AyvqCUqDvr0tVk+vBtfAii6w0TiYiBKGHLHVKt+V9E9e4DGTANtLJL4YSjCMJwRuCO3NJo2pXh5Tl\0D\0A1njFmUNj403gdy3hZZlyaQQaRwnmDwFWJPsfvw55qVguucQJAX6Vum0ABj6y6koQOdjQK/W/7HW/\0D\0AlwLFCRsI3FU34oH7N4RDYiDK51ZLZer+bMEkkyShNOsF/5oirpt9P/FlUQqmMGqz9IgcgA38coro\0D\0Ag14=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ATaiwan GRCA\0D\0A===========\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFcjCCA1qgAwIBAgIQH51ZWtcvwgZEpYAIaeNe9jANBgkqhkiG9w0BAQUFADA/MQswCQYDVQQG\0D\0AEwJUVzEwMC4GA1UECgwnR292ZXJubWVudCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4X\0D\0ADTAyMTIwNTEzMjMzM1oXDTMyMTIwNTEzMjMzM1owPzELMAkGA1UEBhMCVFcxMDAuBgNVBAoMJ0dv\0D\0AdmVybm1lbnQgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQAD\0D\0AggIPADCCAgoCggIBAJoluOzMonWoe/fOW1mKydGGEghU7Jzy50b2iPN86aXfTEc2pBsBHH8eV4qN\0D\0Aw8XRIePaJD9IK/ufLqGU5ywck9G/GwGHU5nOp/UKIXZ3/6m3xnOUT0b3EEk3+qhZSV1qgQdW8or5\0D\0ABtD3cCJNtLdBuTK4sfCxw5w/cP1T3YGq2GN49thTbqGsaoQkclSGxtKyyhwOeYHWtXBiCAEuTk8O\0D\0A1RGvqa/lmr/czIdtJuTJV6L7lvnM4T9TjGxMfptTCAtsF/tnyMKtsc2AtJfcdgEWFelq16TheEfO\0D\0AhtX7MfP6Mb40qij7cEwdScevLJ1tZqa2jWR+tSBqnTuBto9AAGdLiYa4zGX+FVPpBMHWXx1E1wov\0D\0AJ5pGfaENda1UhhXcSTvxls4Pm6Dso3pdvtUqdULle96ltqqvKKyskKw4t9VoNSZ63Pc78/1Fm9G7\0D\0AQ3hub/FCVGqY8A2tl+lSXunVanLeavcbYBT0peS2cWeqH+riTcFCQP5nRhc4L0c/cZyu5SHKYS1t\0D\0AB6iEfC3uUSXxY5Ce/eFXiGvviiNtsea9P63RPZYLhY3Naye7twWb7LuRqQoHEgKXTiCQ8P8NHuJB\0D\0AO9NAOueNXdpm5AKwB1KYXA6OM5zCppX7VRluTI6uSw+9wThNXo+EHWbNxWCWtFJaBYmOlXqYwZE8\0D\0AlSOyDvR5tMl8wUohAgMBAAGjajBoMB0GA1UdDgQWBBTMzO/MKWCkO7GStjz6MmKPrCUVOzAMBgNV\0D\0AHRMEBTADAQH/MDkGBGcqBwAEMTAvMC0CAQAwCQYFKw4DAhoFADAHBgVnKgMAAAQUA5vwIhP/lSg2\0D\0A09yewDL7MTqKUWUwDQYJKoZIhvcNAQEFBQADggIBAECASvomyc5eMN1PhnR2WPWus4MzeKR6dBcZ\0D\0ATulStbngCnRiqmjKeKBMmo4sIy7VahIkv9Ro04rQ2JyftB8M3jh+Vzj8jeJPXgyfqzvS/3WXy6Tj\0D\0AZwj/5cAWtUgBfen5Cv8b5Wppv3ghqMKnI6mGq3ZW6A4M9hPdKmaKZEk9GhiHkASfQlK3T8v+R0F2\0D\0ANe//AHY2RTKbxkaFXeIksB7jSJaYV0eUVXoPQbFEJPPB/hprv4j9wabak2BegUqZIJxIZhm1AHlU\0D\0AD7gsL0u8qV1bYH+Mh6XgUmMqvtg7hUAV/h62ZT/FS9p+tXo1KaMuephgIqP0fSdOLeq0dDzpD6Qz\0D\0ADxARvBMB1uUO07+1EqLhRSPAzAhuYbeJq4PjJB7mXQfnHyA+z2fI56wwbSdLaG5LKlwCCDTb+Hbk\0D\0AZ6MmnD+iMsJKxYEYMRBWqoTvLQr/uB930r+lWKBi5NdLkXWNiYCYfm3LU05er/ayl4WXudpVBrkk\0D\0A7tfGOB5jGxI7leFYrPLfhNVfmS8NVVvmONsuP3LpSIXLuykTjx44VbnzssQwmSNOXfJIoRIM3BKQ\0D\0ACZBUkQM8R+XVyWXgt0t97EfTsws+rZ7QdAAO671RrcDeLMDDav7v3Aun+kbfYNucpllQdSNpc5Oy\0D\0A+fwC00fmcc4QAu4njIT/rEUNE1yDMuAlpYYsfPQS\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASwisscom Root CA 1\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF2TCCA8GgAwIBAgIQXAuFXAvnWUHfV8w/f52oNjANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQG\0D\0AEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2Vy\0D\0AdmljZXMxGzAZBgNVBAMTElN3aXNzY29tIFJvb3QgQ0EgMTAeFw0wNTA4MTgxMjA2MjBaFw0yNTA4\0D\0AMTgyMjA2MjBaMGQxCzAJBgNVBAYTAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMcRGln\0D\0AaXRhbCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczEbMBkGA1UEAxMSU3dpc3Njb20gUm9vdCBDQSAxMIIC\0D\0AIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0LmwqAzZuz8h+BvVM5OAFmUgdbI9m2BtRsiM\0D\0AMW8Xw/qabFbtPMWRV8PNq5ZJkCoZSx6jbVfd8StiKHVFXqrWW/oLJdihFvkcxC7mlSpnzNApbjyF\0D\0ANDhhSbEAn9Y6cV9Nbc5fuankiX9qUvrKm/LcqfmdmUc/TilftKaNXXsLmREDA/7n29uj/x2lzZAe\0D\0AAR81sH8A25Bvxn570e56eqeqDFdvpG3FEzuwpdntMhy0XmeLVNxzh+XTF3xmUHJd1BpYwdnP2IkC\0D\0Ab6dJtDZd0KTeByy2dbcokdaXvij1mB7qWybJvbCXc9qukSbraMH5ORXWZ0sKbU/Lz7DkQnGMU3nn\0D\0A7uHbHaBuHYwadzVcFh4rUx80i9Fs/PJnB3r1re3WmquhsUvhzDdf/X/NTa64H5xD+SpYVUNFvJbN\0D\0AcA78yeNmuk6NO4HLFWR7uZToXTNShXEuT46iBhFRyePLoW4xCGQMwtI89Tbo19AOeCMgkckkKmUp\0D\0AWyL3Ic6DXqTz3kvTaI9GdVyDCW4pa8RwjPWd1yAv/0bSKzjCL3UcPX7ape8eYIVpQtPM+GP+HkM5\0D\0Ahaa2Y0EQs3MevNP6yn0WR+Kn1dCjigoIlmJWbjTb2QK5MHXjBNLnj8KwEUAKrNVxAmKLMb7dxiNY\0D\0AMUJDLXT5xp6mig/p/r+D5kNXJLrvRjSq1xIBOO0CAwEAAaOBhjCBgzAOBgNVHQ8BAf8EBAMCAYYw\0D\0AHQYDVR0hBBYwFDASBgdghXQBUwABBgdghXQBUwABMBIGA1UdEwEB/wQIMAYBAf8CAQcwHwYDVR0j\0D\0ABBgwFoAUAyUv3m+CATpcLNwroWm1Z9SM0/0wHQYDVR0OBBYEFAMlL95vggE6XCzcK6FptWfUjNP9\0D\0AMA0GCSqGSIb3DQEBBQUAA4ICAQA1EMvspgQNDQ/NwNurqPKIlwzfky9NfEBWMXrrpA9gzXrzvsMn\0D\0AjgM+pN0S734edAY8PzHyHHuRMSG08NBsl9Tpl7IkVh5WwzW9iAUPWxAaZOHHgjD5Mq2eUCzneAXQ\0D\0AMbFamIp1TpBcahQq4FJHgmDmHtqBsfsUC1rxn9KVuj7QG9YVHaO+htXbD8BJZLsuUBlL0iT43R4H\0D\0AVtA4oJVwIHaM190e3p9xxCPvgxNcoyQVTSlAPGrEqdi3pkSlDfTgnXceQHAm/NrZNuR55LU/vJtl\0D\0AvrsRls/bxig5OgjOR1tTWsWZ/l2p3e9M1MalrQLmjAcSHm8D0W+go/MpvRLHUKKwf4ipmXeascCl\0D\0AOS5cfGniLLDqN2qk4Vrh9VDlg++luyqI54zb/W1elxmofmZ1a3Hqv7HHb6D0jqTsNFFbjCYDcKF3\0D\0A1QESVwA12yPeDooomf2xEG9L/zgtYE4snOtnta1J7ksfrK/7DZBaZmBwXarNeNQk7shBoJMBkpxq\0D\0Anvy5JMWzFYJ+vq6VK+uxwNrjAWALXmmshFZhvnEX/h0TD/7Gh0Xp/jKgGg0TpJRVcaUWi7rKibCy\0D\0Ax/yP2FS1k2Kdzs9Z+z0YzirLNRWCXf9UIltxUvu3yf5gmwBBZPCqKuy2QkPOiWaByIufOVQDJdMW\0D\0ANY6E0F/6MBr1mmz0DlP5OlvRHA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Assured ID Root CA\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDtzCCAp+gAwIBAgIQDOfg5RfYRv6P5WD8G/AwOTANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQG\0D\0AEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQw\0D\0AIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwHhcNMDYxMTEwMDAwMDAwWhcNMzEx\0D\0AMTEwMDAwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQL\0D\0AExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0Ew\0D\0AggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtDhXO5EOAXLGH87dg+XESpa7cJpSIqvTO\0D\0A9SA5KFhgDPiA2qkVlTJhPLWxKISKityfCgyDF3qPkKyK53lTXDGEKvYPmDI2dsze3Tyoou9q+yHy\0D\0AUmHfnyDXH+Kx2f4YZNISW1/5WBg1vEfNoTb5a3/UsDg+wRvDjDPZ2C8Y/igPs6eD1sNuRMBhNZYW\0D\0A/lmci3Zt1/GiSw0r/wty2p5g0I6QNcZ4VYcgoc/lbQrISXwxmDNsIumH0DJaoroTghHtORedmTpy\0D\0Aoeb6pNnVFzF1roV9Iq4/AUaG9ih5yLHa5FcXxH4cDrC0kqZWs72yl+2qp/C3xag/lRbQ/6GW6whf\0D\0AGHdPAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRF\0D\0A66Kv9JLLgjEtUYunpyGd823IDzAfBgNVHSMEGDAWgBRF66Kv9JLLgjEtUYunpyGd823IDzANBgkq\0D\0AhkiG9w0BAQUFAAOCAQEAog683+Lt8ONyc3pklL/3cmbYMuRCdWKuh+vy1dneVrOfzM4UKLkNl2Bc\0D\0AEkxY5NM9g0lFWJc1aRqoR+pWxnmrEthngYTffwk8lOa4JiwgvT2zKIn3X/8i4peEH+ll74fg38Fn\0D\0ASbNd67IJKusm7Xi+fT8r87cmNW1fiQG2SVufAQWbqz0lwcy2f8Lxb4bG+mRo64EtlOtCt/qMHt1i\0D\0A8b5QZ7dsvfPxH2sMNgcWfzd8qVttevESRmCD1ycEvkvOl77DZypoEd+A5wwzZr8TDRRu838fYxAe\0D\0A+o0bJW1sj6W3YQGx0qMmoRBxna3iw/nDmVG3KwcIzi7mULKn+gpFL6Lw8g==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Global Root CA\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBhMQswCQYDVQQG\0D\0AEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAw\0D\0AHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBDQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAw\0D\0AMDAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3\0D\0Ady5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkq\0D\0AhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsBCSDMAZOn\0D\0ATjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97nh6Vfe63SKMI2tavegw5\0D\0ABmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt43C/dxC//AH2hdmoRBBYMql1GNXRor5H\0D\0A4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7PT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y\0D\0A7vrTC0LUq7dBMtoM1O/4gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQAB\0D\0Ao2MwYTAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbRTLtm\0D\0A8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUwDQYJKoZIhvcNAQEF\0D\0ABQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/EsrhMAtudXH/vTBH1jLuG2cenTnmCmr\0D\0AEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIt\0D\0Atep3Sp+dWOIrWcBAI+0tKIJFPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886\0D\0AUAb3LujEV0lsYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\0D\0ACAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert High Assurance EV Root CA\0D\0A==================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBsMQswCQYDVQQG\0D\0AEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSsw\0D\0AKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5jZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAw\0D\0AMFoXDTMxMTExMDAwMDAwMFowbDELMAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZ\0D\0AMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFu\0D\0AY2UgRVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm+9S75S0t\0D\0AMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTWPNt0OKRKzE0lgvdKpVMS\0D\0AOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEMxChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3\0D\0AMRuNs8ckRZqnrG0AFFoEt7oT61EKmEFBIk5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQ\0D\0ANAQTXKFx01p8VdteZOE3hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUe\0D\0Ah10aUAsgEsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMB\0D\0AAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaAFLE+w2kD+L9HAdSY\0D\0AJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3NecnzyIZgYIVyHbIUf4KmeqvxgydkAQ\0D\0AV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6zeM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFp\0D\0AmyPInngiK3BD41VHMWEZ71jFhS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkK\0D\0AmNEVX58Svnw2Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe\0D\0AvEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep+OkuE6N36B9K\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertplus Class 2 Primary CA\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDkjCCAnqgAwIBAgIRAIW9S/PY2uNp9pTXX8OlRCMwDQYJKoZIhvcNAQEFBQAwPTELMAkGA1UE\0D\0ABhMCRlIxETAPBgNVBAoTCENlcnRwbHVzMRswGQYDVQQDExJDbGFzcyAyIFByaW1hcnkgQ0EwHhcN\0D\0AOTkwNzA3MTcwNTAwWhcNMTkwNzA2MjM1OTU5WjA9MQswCQYDVQQGEwJGUjERMA8GA1UEChMIQ2Vy\0D\0AdHBsdXMxGzAZBgNVBAMTEkNsYXNzIDIgUHJpbWFyeSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\0D\0AADCCAQoCggEBANxQltAS+DXSCHh6tlJw/W/uz7kRy1134ezpfgSN1sxvc0NXYKwzCkTsA18cgCSR\0D\0A5aiRVhKC9+Ar9NuuYS6JEI1rbLqzAr3VNsVINyPi8Fo3UjMXEuLRYE2+L0ER4/YXJQyLkcAbmXuZ\0D\0AVg2v7tK8R1fjeUl7NIknJITesezpWE7+Tt9avkGtrAjFGA7v0lPubNCdEgETjdyAYveVqUSISnFO\0D\0AYFWe2yMZeVYHDD9jC1yw4r5+FfyUM1hBOHTE4Y+L3yasH7WLO7dDWWuwJKZtkIvEcupdM5i3y95e\0D\0Ae++U8Rs+yskhwcWYAqqi9lt3m/V+llU0HGdpwPFC40es/CgcZlUCAwEAAaOBjDCBiTAPBgNVHRME\0D\0ACDAGAQH/AgEKMAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQU43Mt38sOKAze3bOkynm4jrvoMIkwEQYJ\0D\0AYIZIAYb4QgEBBAQDAgEGMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly93d3cuY2VydHBsdXMuY29t\0D\0AL0NSTC9jbGFzczIuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCnVM+IRBnL39R/AN9WM2K191EBkOvD\0D\0AP9GIROkkXe/nFL0gt5o8AP5tn9uQ3Nf0YtaLcF3n5QRIqWh8yfFC82x/xXp8HVGIutIKPidd3i1R\0D\0ATtMTZGnkLuPT55sJmabglZvOGtd/vjzOUrMRFcEPF80Du5wlFbqidon8BvEY0JNLDnyCt6X09l/+\0D\0A7UCmnYR0ObncHoUW2ikbhiMAybuJfm6AiB4vFLQDJKgybwOaRywwvlbGp0ICcBvqQNi6BQNwB6SW\0D\0A//1IMwrh3KWBkJtN3X3n57LNXMhqlfil9o3EXXgIvnsG1knPGTZQIy4I5p4FTUcY1Rbpsda2ENW7\0D\0Al7+ijrRU\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADST Root CA X3\0D\0A==============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/MSQwIgYDVQQK\0D\0AExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMTDkRTVCBSb290IENBIFgzMB4X\0D\0ADTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVowPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1\0D\0AcmUgVHJ1c3QgQ28uMRcwFQYDVQQDEw5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQAD\0D\0AggEPADCCAQoCggEBAN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmT\0D\0ArE4Orz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEqOLl5CjH9\0D\0AUL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9bxiqKqy69cK3FCxolkHRy\0D\0AxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40d\0D\0AutolucbY38EVAjqr2m7xPi71XAicPNaDaeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0T\0D\0AAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQ\0D\0AMA0GCSqGSIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69ikug\0D\0AdB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXrAvHRAosZy5Q6XkjE\0D\0AGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZzR8srzJmwN0jP41ZL9c8PDHIyh8bw\0D\0ARLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubS\0D\0AfZGL+T0yjWW06XyxV3bqxbYoOb8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADST ACES CA X6\0D\0A==============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIECTCCAvGgAwIBAgIQDV6ZCtadt3js2AdWO4YV2TANBgkqhkiG9w0BAQUFADBbMQswCQYDVQQG\0D\0AEwJVUzEgMB4GA1UEChMXRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QxETAPBgNVBAsTCERTVCBBQ0VT\0D\0AMRcwFQYDVQQDEw5EU1QgQUNFUyBDQSBYNjAeFw0wMzExMjAyMTE5NThaFw0xNzExMjAyMTE5NTha\0D\0AMFsxCzAJBgNVBAYTAlVTMSAwHgYDVQQKExdEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdDERMA8GA1UE\0D\0ACxMIRFNUIEFDRVMxFzAVBgNVBAMTDkRTVCBBQ0VTIENBIFg2MIIBIjANBgkqhkiG9w0BAQEFAAOC\0D\0AAQ8AMIIBCgKCAQEAuT31LMmU3HWKlV1j6IR3dma5WZFcRt2SPp/5DgO0PWGSvSMmtWPuktKe1jzI\0D\0ADZBfZIGxqAgNTNj50wUoUrQBJcWVHAx+PhCEdc/BGZFjz+iokYi5Q1K7gLFViYsx+tC3dr5BPTCa\0D\0ApCIlF3PoHuLTrCq9Wzgh1SpL11V94zpVvddtawJXa+ZHfAjIgrrep4c9oW24MFbCswKBXy314pow\0D\0AGCi4ZtPLAZZv6opFVdbgnf9nKxcCpk4aahELfrd755jWjHZvwTvbUJN+5dCOHze4vbrGn2zpfDPy\0D\0AMjwmR/onJALJfh1biEITajV8fTXpLmaRcpPVMibEdPVTo7NdmvYJywIDAQABo4HIMIHFMA8GA1Ud\0D\0AEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgHGMB8GA1UdEQQYMBaBFHBraS1vcHNAdHJ1c3Rkc3Qu\0D\0AY29tMGIGA1UdIARbMFkwVwYKYIZIAWUDAgEBATBJMEcGCCsGAQUFBwIBFjtodHRwOi8vd3d3LnRy\0D\0AdXN0ZHN0LmNvbS9jZXJ0aWZpY2F0ZXMvcG9saWN5L0FDRVMtaW5kZXguaHRtbDAdBgNVHQ4EFgQU\0D\0ACXIGThhDD+XWzMNqizF7eI+og7gwDQYJKoZIhvcNAQEFBQADggEBAKPYjtay284F5zLNAdMEA+V2\0D\0A5FYrnJmQ6AgwbN99Pe7lv7UkQIRJ4dEorsTCOlMwiPH1d25Ryvr/ma8kXxug/fKshMrfqfBfBC6t\0D\0AFr8hlxCBPeP/h40y3JTlR4peahPJlJU90u7INJXQgNStMgiAVDzgvVJT11J8smk/f3rPanTK+gQq\0D\0AnExaBqXpIK1FZg9p8d2/6eMyi/rgwYZNcjwu2JN4Cir42NInPRmJX1p7ijvMDNpRrscL9yuwNwXs\0D\0AvFcj4jjSm2jzVhKIT0J8uDHEtdvkyCE06UgRNe76x5JXxZ805Mf29w4LTJxoeHtxMcfrHuBnQfO3\0D\0AoKfN5XozNmr6mis=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASwissSign Gold CA - G2\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFujCCA6KgAwIBAgIJALtAHEP1Xk+wMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNVBAYTAkNIMRUw\0D\0AEwYDVQQKEwxTd2lzc1NpZ24gQUcxHzAdBgNVBAMTFlN3aXNzU2lnbiBHb2xkIENBIC0gRzIwHhcN\0D\0AMDYxMDI1MDgzMDM1WhcNMzYxMDI1MDgzMDM1WjBFMQswCQYDVQQGEwJDSDEVMBMGA1UEChMMU3dp\0D\0Ac3NTaWduIEFHMR8wHQYDVQQDExZTd2lzc1NpZ24gR29sZCBDQSAtIEcyMIICIjANBgkqhkiG9w0B\0D\0AAQEFAAOCAg8AMIICCgKCAgEAr+TufoskDhJuqVAtFkQ7kpJcyrhdhJJCEyq8ZVeCQD5XJM1QiyUq\0D\0At2/876LQwB8CJEoTlo8jE+YoWACjR8cGp4QjK7u9lit/VcyLwVcfDmJlD909Vopz2q5+bbqBHH5C\0D\0AjCA12UNNhPqE21Is8w4ndwtrvxEvcnifLtg+5hg3Wipy+dpikJKVyh+c6bM8K8vzARO/Ws/BtQpg\0D\0Avd21mWRTuKCWs2/iJneRjOBiEAKfNA+k1ZIzUd6+jbqEemA8atufK+ze3gE/bk3lUIbLtK/tREDF\0D\0AylqM2tIrfKjuvqblCqoOpd8FUrdVxyJdMmqXl2MT28nbeTZ7hTpKxVKJ+STnnXepgv9VHKVxaSvR\0D\0AAiTysybUa9oEVeXBCsdtMDeQKuSeFDNeFhdVxVu1yzSJkvGdJo+hB9TGsnhQ2wwMC3wLjEHXuend\0D\0AjIj3o02yMszYF9rNt85mndT9Xv+9lz4pded+p2JYryU0pUHHPbwNUMoDAw8IWh+Vc3hiv69yFGkO\0D\0ApeUDDniOJihC8AcLYiAQZzlG+qkDzAQ4embvIIO1jEpWjpEA/I5cgt6IoMPiaG59je883WX0XaxR\0D\0A7ySArqpWl2/5rX3aYT+YdzylkbYcjCbaZaIJbcHiVOO5ykxMgI93e2CaHt+28kgeDrpOVG2Y4OGi\0D\0AGqJ3UM/EY5LsRxmd6+ZrzsECAwEAAaOBrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw\0D\0AAwEB/zAdBgNVHQ4EFgQUWyV7lqRlUX64OfPAeGZe6Drn8O4wHwYDVR0jBBgwFoAUWyV7lqRlUX64\0D\0AOfPAeGZe6Drn8O4wRgYDVR0gBD8wPTA7BglghXQBWQECAQEwLjAsBggrBgEFBQcCARYgaHR0cDov\0D\0AL3JlcG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBACe645R88a7A3hfm\0D\0A5djV9VSwg/S7zV4Fe0+fdWavPOhWfvxyeDgD2StiGwC5+OlgzczOUYrHUDFu4Up+GC9pWbY9ZIEr\0D\0A44OE5iKHjn3g7gKZYbge9LgriBIWhMIxkziWMaa5O1M/wySTVltpkuzFwbs4AOPsF6m43Md8AYOf\0D\0AMke6UiI0HTJ6CVanfCU2qT1L2sCCbwq7EsiHSycR+R4tx5M/nttfJmtS2S6K8RTGRI0Vqbe/vd6m\0D\0AGu6uLftIdxf+u+yvGPUqUfA5hJeVbG4bwyvEdGB5JbAKJ9/fXtI5z0V9QkvfsywexcZdylU6oJxp\0D\0Amo/a77KwPJ+HbBIrZXAVUjEaJM9vMSNQH4xPjyPDdEFjHFWoFN0+4FFQz/EbMFYOkrCChdiDyyJk\0D\0AvC24JdVUorgG6q2SpCSgwYa1ShNqR88uC1aVVMvOmttqtKay20EIhid392qgQmwLOM7XdVAyksLf\0D\0AKzAiSNDVQTglXaTpXZ/GlHXQRf0wl0OPkKsKx4ZzYEppLd6leNcG2mqeSz53OiATIgHQv2ieY2Br\0D\0ANU0LbbqhPcCT4H8js1WtciVORvnSFu+wZMEBnunKoGqYDs/YYPIvSbjkQuE4NRb0yG5P94FW6Lqj\0D\0AviOvrv1vA+ACOzB2+httQc8Bsem4yWb02ybzOqR08kkkW8mw0FfB+j564ZfJ\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASwissSign Silver CA - G2\0D\0A========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFvTCCA6WgAwIBAgIITxvUL1S7L0swDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCQ0gxFTAT\0D\0ABgNVBAoTDFN3aXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWduIFNpbHZlciBDQSAtIEcyMB4X\0D\0ADTA2MTAyNTA4MzI0NloXDTM2MTAyNTA4MzI0NlowRzELMAkGA1UEBhMCQ0gxFTATBgNVBAoTDFN3\0D\0AaXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWduIFNpbHZlciBDQSAtIEcyMIICIjANBgkqhkiG\0D\0A9w0BAQEFAAOCAg8AMIICCgKCAgEAxPGHf9N4Mfc4yfjDmUO8x/e8N+dOcbpLj6VzHVxumK4DV644\0D\0AN0MvFz0fyM5oEMF4rhkDKxD6LHmD9ui5aLlV8gREpzn5/ASLHvGiTSf5YXu6t+WiE7brYT7QbNHm\0D\0A+/pe7R20nqA1W6GSy/BJkv6FCgU+5tkL4k+73JU3/JHpMjUi0R86TieFnbAVlDLaYQ1HTWBCrpJH\0D\0A6INaUFjpiou5XaHc3ZlKHzZnu0jkg7Y360g6rw9njxcH6ATK72oxh9TAtvmUcXtnZLi2kUpCe2Uu\0D\0AMGoM9ZDulebyzYLs2aFK7PayS+VFheZteJMELpyCbTapxDFkH4aDCyr0NQp4yVXPQbBH6TCfmb5h\0D\0AqAaEuSh6XzjZG6k4sIN/c8HDO0gqgg8hm7jMqDXDhBuDsz6+pJVpATqJAHgE2cn0mRmrVn5bi4Y5\0D\0AFZGkECwJMoBgs5PAKrYYC51+jUnyEEp/+dVGLxmSo5mnJqy7jDzmDrxHB9xzUfFwZC8I+bRHHTBs\0D\0AROopN4WSaGa8gzj+ezku01DwH/teYLappvonQfGbGHLy9YR0SslnxFSuSGTfjNFusB3hB48IHpmc\0D\0AcelM2KX3RxIfdNFRnobzwqIjQAtz20um53MGjMGg6cFZrEb65i/4z3GcRm25xBWNOHkDRUjvxF3X\0D\0ACO6HOSKGsg0PWEP3calILv3q1h8CAwEAAaOBrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\0D\0ABAUwAwEB/zAdBgNVHQ4EFgQUF6DNweRBtjpbO8tFnb0cwpj6hlgwHwYDVR0jBBgwFoAUF6DNweRB\0D\0AtjpbO8tFnb0cwpj6hlgwRgYDVR0gBD8wPTA7BglghXQBWQEDAQEwLjAsBggrBgEFBQcCARYgaHR0\0D\0AcDovL3JlcG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBAHPGgeAn0i0P\0D\0A4JUw4ppBf1AsX19iYamGamkYDHRJ1l2E6kFSGG9YrVBWIGrGvShpWJHckRE1qTodvBqlYJ7YH39F\0D\0AkWnZfrt4csEGDyrOj4VwYaygzQu4OSlWhDJOhrs9xCrZ1x9y7v5RoSJBsXECYxqCsGKrXlcSH9/L\0D\0A3XWgwF15kIwb4FDm3jH+mHtwX6WQ2K34ArZv02DdQEsixT2tOnqfGhpHkXkzuoLcMmkDlm4fS/Bx\0D\0A/uNncqCxv1yL5PqZIseEuRuNI5c/7SXgz2W79WEE790eslpBIlqhn10s6FvJbakMDHiqYMZWjwFa\0D\0ADGi8aRl5xB9+lwW/xekkUV7U1UtT7dkjWjYDZaPBA61BMPNGG4WQr2W11bHkFlt4dR2Xem1ZqSqP\0D\0Ae97Dh4kQmUlzeMg9vVE1dCrV8X5pGyq7O70luJpaPXJhkGaH7gzWTdQRdAtq/gsD/KNVV4n+Ssuu\0D\0AWxcFyPKNIzFTONItaj+CuY0IavdeQXRuwxF+B6wpYJE/OMpXEA29MC/HpeZBoNquBYeaoKRlbEwJ\0D\0ADIm6uNO5wJOKMPqN5ZprFQFOZ6raYlY+hAhm0sQ2fac+EPyI4NSA5QC9qvNOBqN6avlicuMJT+ub\0D\0ADgEj8Z+7fNzcbBGXJbLytGMU0gYqZ4yD9c7qB9iaah7s5Aq7KkzrCWA5zspi2C5u\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Primary Certification Authority\0D\0A========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDfDCCAmSgAwIBAgIQGKy1av1pthU6Y2yv2vrEoTANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQG\0D\0AEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UEAxMoR2VvVHJ1c3QgUHJpbWFyeSBD\0D\0AZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjExMjcwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMFgx\0D\0ACzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTEwLwYDVQQDEyhHZW9UcnVzdCBQ\0D\0AcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\0D\0ACgKCAQEAvrgVe//UfH1nrYNke8hCUy3f9oQIIGHWAVlqnEQRr+92/ZV+zmEwu3qDXwK9AWbK7hWN\0D\0Ab6EwnL2hhZ6UOvNWiAAxz9juapYC2e0DjPt1befquFUWBRaa9OBesYjAZIVcFU2Ix7e64HXprQU9\0D\0AnceJSOC7KMgD4TCTZF5SwFlwIjVXiIrxlQqD17wxcwE07e9GceBrAqg1cmuXm2bgyxx5X9gaBGge\0D\0ARwLmnWDiNpcB3841kt++Z8dtd1k7j53WkBWUvEI0EME5+bEnPn7WinXFsq+W06Lem+SYvn3h6YGt\0D\0Atm/81w7a4DSwDRp35+MImO9Y+pyEtzavwt+s0vQQBnBxNQIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\0D\0AAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQULNVQQZcVi/CPNmFbSvtr2ZnJM5IwDQYJKoZI\0D\0AhvcNAQEFBQADggEBAFpwfyzdtzRP9YZRqSa+S7iq8XEN3GHHoOo0Hnp3DwQ16CePbJC/kRYkRj5K\0D\0ATs4rFtULUh38H2eiAkUxT87z+gOneZ1TatnaYzr4gNfTmeGl4b7UVXGYNTq+k+qurUKykG/g/CFN\0D\0ANWMziUnWm07Kx+dOCQD32sfvmWKZd7aVIl6KoKv0uHiYyjgZmclynnjNS6yvGaBzEi38wkG6gZHa\0D\0AFloxt/m0cYASSJlyc1pZU8FjUjPtp8nSOQJw+uCxQmYpqptR7TBUIhRf2asdweSU8Pj1K/fqynhG\0D\0A1riR/aYNKxoUAT6A8EKglQdebc3MS6RFjasS6LPeWuWgfOgPIh1a6Vk=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0Athawte Primary Root CA\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEIDCCAwigAwIBAgIQNE7VVyDV7exJ9C/ON9srbTANBgkqhkiG9w0BAQUFADCBqTELMAkGA1UE\0D\0ABhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2\0D\0AaWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhv\0D\0Acml6ZWQgdXNlIG9ubHkxHzAdBgNVBAMTFnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwHhcNMDYxMTE3\0D\0AMDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCBqTELMAkGA1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwg\0D\0ASW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMv\0D\0AKGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAMT\0D\0AFnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCs\0D\0AoPD7gFnUnMekz52hWXMJEEUMDSxuaPFsW0hoSVk3/AszGcJ3f8wQLZU0HObrTQmnHNK4yZc2AreJ\0D\0A1CRfBsDMRJSUjQJib+ta3RGNKJpchJAQeg29dGYvajig4tVUROsdB58Hum/u6f1OCyn1PoSgAfGc\0D\0Aq/gcfomk6KHYcWUNo1F77rzSImANuVud37r8UVsLr5iy6S7pBOhih94ryNdOwUxkHt3Ph1i6Sk/K\0D\0AaAcdHJ1KxtUvkcx8cXIcxcBn6zL9yZJclNqFwJu/U30rCfSMnZEfl2pSy94JNqR32HuHUETVPm4p\0D\0Aafs5SSYeCaWAe0At6+gnhcn+Yf1+5nyXHdWdAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYD\0D\0AVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBR7W0XPr87Lev0xkhpqtvNG61dIUDANBgkqhkiG9w0BAQUF\0D\0AAAOCAQEAeRHAS7ORtvzw6WfUDW5FvlXok9LOAz/t2iWwHVfLHjp2oEzsUHboZHIMpKnxuIvW1oeE\0D\0AuzLlQRHAd9mzYJ3rG9XRbkREqaYB7FViHXe4XI5ISXycO1cRrK1zN44veFyQaEfZYGDm/Ac9IiAX\0D\0AxPcW6cTYcvnIc3zfFi8VqT79aie2oetaupgf1eNNZAqdE8hhuvU5HIe6uL17In/2/qxAeeWsEG89\0D\0Ajxt5dovEN7MhGITlNgDrYyCZuen+MwS7QcjBAvlEYyCegc5C09Y/LHbTY5xZ3Y+m4Q6gLkH3LpVH\0D\0Az7z9M/P2C2F+fpErgUfCJzDupxBdN49cOSvkBPB7jVaMaA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AVeriSign Class 3 Public Primary Certification Authority - G5\0D\0A============================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCByjELMAkGA1UE\0D\0ABhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO\0D\0AZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk\0D\0AIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRp\0D\0AZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCB\0D\0AyjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2ln\0D\0AbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBh\0D\0AdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmlt\0D\0AYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\0D\0AggEKAoIBAQCvJAgIKXo1nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKz\0D\0Aj/i5Vbext0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIzSdhD\0D\0AY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQGBO+QueQA5N06tRn/\0D\0AArr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+rCpSx4/VBEnkjWNHiDxpg8v+R70r\0D\0Afk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/\0D\0ABAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2Uv\0D\0AZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy\0D\0AaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKvMzEzMA0GCSqG\0D\0ASIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzEp6B4Eq1iDkVwZMXnl2YtmAl+\0D\0AX6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKE\0D\0AKQsTb47bDN0lAtukixlE0kF6BWlKWE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiC\0D\0AKm0oHw0LxOXnGiYZ4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vE\0D\0AZV8NhnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASecureTrust CA\0D\0A==============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBIMQswCQYDVQQG\0D\0AEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xFzAVBgNVBAMTDlNlY3VyZVRy\0D\0AdXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIzMTE5NDA1NVowSDELMAkGA1UEBhMCVVMxIDAe\0D\0ABgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTCC\0D\0AASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7CT8rU4niVWJxB4Q2ZQCQX\0D\0AOZEzZum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29vo6pQT64lO0pGtSO0gMdA+9t\0D\0ADWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZbf2IzIaowW8xQmxSPmjL8xk037uH\0D\0AGFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b\0D\0A01k/unK8RCSc43Oz969XL0Imnal0ugBS8kvNU3xHCzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmH\0D\0AursCAwEAAaOBnTCBmjATBgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/\0D\0ABAUwAwEB/zAdBgNVHQ4EFgQUQjK2FvoE/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCegJYYj\0D\0AaHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU1RDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQAwDQYJ\0D\0AKoZIhvcNAQEFBQADggEBADDtT0rhWDpSclu1pqNlGKa7UTt36Z3q059c4EVlew3KW+JwULKUBRSu\0D\0ASceNQQcSc5R+DCMh/bwQf2AQWnL1mA6s7Ll/3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHf\0D\0Ambx8IVQr5Fiiu1cprp6poxkmD5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZ\0D\0AnMUFdAvnZyPSCPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR\0D\0A3ItHuuG51WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jE=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASecure Global CA\0D\0A================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDvDCCAqSgAwIBAgIQB1YipOjUiolN9BPI8PjqpTANBgkqhkiG9w0BAQUFADBKMQswCQYDVQQG\0D\0AEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBH\0D\0AbG9iYWwgQ0EwHhcNMDYxMTA3MTk0MjI4WhcNMjkxMjMxMTk1MjA2WjBKMQswCQYDVQQGEwJVUzEg\0D\0AMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwg\0D\0AQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvNS7YrGxVaQZx5RNoJLNP2MwhR/jx\0D\0AYDiJiQPpvepeRlMJ3Fz1Wuj3RSoC6zFh1ykzTM7HfAo3fg+6MpjhHZevj8fcyTiW89sa/FHtaMbQ\0D\0AbqR8JNGuQsiWUGMu4P51/pinX0kuleM5M2SOHqRfkNJnPLLZ/kG5VacJjnIFHovdRIWCQtBJwB1g\0D\0A8NEXLJXr9qXBkqPFwqcIYA1gBBCWeZ4WNOaptvolRTnIHmX5k/Wq8VLcmZg9pYYaDDUz+kulBAYV\0D\0AHDGA76oYa8J719rO+TMg1fW9ajMtgQT7sFzUnKPiXB3jqUJ1XnvUd+85VLrJChgbEplJL4hL/VBi\0D\0A0XPnj3pDAgMBAAGjgZ0wgZowEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1Ud\0D\0AEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK9EBMJBfkiD2045AuzshHrmzsmkMDQGA1UdHwQtMCswKaAn\0D\0AoCWGI2h0dHA6Ly9jcmwuc2VjdXJldHJ1c3QuY29tL1NHQ0EuY3JsMBAGCSsGAQQBgjcVAQQDAgEA\0D\0AMA0GCSqGSIb3DQEBBQUAA4IBAQBjGghAfaReUw132HquHw0LURYD7xh8yOOvaliTFGCRsoTciE6+\0D\0AOYo68+aCiV0BN7OrJKQVDpI1WkpEXk5X+nXOH0jOZvQ8QCaSmGwb7iRGDBezUqXbpZGRzzfTb+cn\0D\0ACDpOGR86p1hcF895P4vkp9MmI50mD1hp/Ed+stCNi5O/KU9DaXR2Z0vPB4zmAve14bRDtUstFJ/5\0D\0A3CYNv6ZHdAbYiNE6KTCEztI5gGIbqMdXSbxqVVFnFUq+NQfk1XWYN3kwFNspnWzFacxHVaIw98xc\0D\0Af8LDmBxrThaA63p4ZUWiABqvDA1VZDRIuJK58bRQKfJPIx/abKwfROHdI3hRW8cW\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACOMODO Certification Authority\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCBgTELMAkGA1UE\0D\0ABhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgG\0D\0AA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNVBAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1\0D\0AdGhvcml0eTAeFw0wNjEyMDEwMDAwMDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEb\0D\0AMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFD\0D\0AT01PRE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0aG9yaXR5\0D\0AMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3UcEbVASY06m/weaKXTuH\0D\0A+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI2GqGd0S7WWaXUF601CxwRM/aN5VCaTww\0D\0AxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV\0D\0A4EajcNxo2f8ESIl33rXp+2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA\0D\0A1KGzqSX+DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5OnKVI\0D\0ArLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW/zAOBgNVHQ8BAf8E\0D\0ABAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6gPKA6hjhodHRwOi8vY3JsLmNvbW9k\0D\0Ab2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOC\0D\0AAQEAPpiem/Yb6dc5t3iuHXIYSdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CP\0D\0AOGEIqB6BCsAvIC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/\0D\0ARxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4zJVSk/BwJVmc\0D\0AIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5ddBA6+C4OmF4O5MBKgxTMVBbkN\0D\0A+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IBZQ==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ANetwork Solutions Certificate Authority\0D\0A=======================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIID5jCCAs6gAwIBAgIQV8szb8JcFuZHFhfjkDFo4DANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQG\0D\0AEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMuMTAwLgYDVQQDEydOZXR3b3Jr\0D\0AIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMjAxMDAwMDAwWhcNMjkxMjMx\0D\0AMjM1OTU5WjBiMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMu\0D\0AMTAwLgYDVQQDEydOZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkvH6SMG3G2I4rC7xGzuAnlt7e+foS0zwzc7MEL7xx\0D\0AjOWftiJgPl9dzgn/ggwbmlFQGiaJ3dVhXRncEg8tCqJDXRfQNJIg6nPPOCwGJgl6cvf6UDL4wpPT\0D\0AaaIjzkGxzOTVHzbRijr4jGPiFFlp7Q3Tf2vouAPlT2rlmGNpSAW+Lv8ztumXWWn4Zxmuk2GWRBXT\0D\0AcrA/vGp97Eh/jcOrqnErU2lBUzS1sLnFBgrEsEX1QV1uiUV7PTsmjHTC5dLRfbIR1PtYMiKagMnc\0D\0A/Qzpf14Dl847ABSHJ3A4qY5usyd2mFHgBeMhqxrVhSI8KbWaFsWAqPS7azCPL0YCorEMIuDTAgMB\0D\0AAAGjgZcwgZQwHQYDVR0OBBYEFCEwyfsA106Y2oeqKtCnLrFAMadMMA4GA1UdDwEB/wQEAwIBBjAP\0D\0ABgNVHRMBAf8EBTADAQH/MFIGA1UdHwRLMEkwR6BFoEOGQWh0dHA6Ly9jcmwubmV0c29sc3NsLmNv\0D\0AbS9OZXR3b3JrU29sdXRpb25zQ2VydGlmaWNhdGVBdXRob3JpdHkuY3JsMA0GCSqGSIb3DQEBBQUA\0D\0AA4IBAQC7rkvnt1frf6ott3NHhWrB5KUd5Oc86fRZZXe1eltajSU24HqXLjjAV2CDmAaDn7l2em5Q\0D\0A4LqILPxFzBiwmZVRDuwduIj/h1AcgsLj4DKAv6ALR8jDMe+ZZzKATxcheQxpXN5eNK4CtSbqUN9/\0D\0AGGUsyfJj4akH/nxxH2szJGoeBfcFaMBqEssuXmHLrijTfsK0ZpEmXzwuJF/LWA/rKOyvEZbz3Htv\0D\0AwKeI8lN3s2Berq4o2jUsbzRF0ybh3uxbTydrFny9RAQYgrOJeRcQcT16ohZO9QHNpGxlaKFJdlxD\0D\0Aydi8NmdspZS11My5vWo1ViHe2MPr+8ukYEywVaCge1ey\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AWellsSecure Public Root Certificate Authority\0D\0A=============================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEvTCCA6WgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoM\0D\0AF1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYw\0D\0ANAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcN\0D\0AMDcxMjEzMTcwNzU0WhcNMjIxMjE0MDAwNzU0WjCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoMF1dl\0D\0AbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYwNAYD\0D\0AVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDub7S9eeKPCCGeOARBJe+rWxxTkqxtnt3CxC5FlAM1\0D\0AiGd0V+PfjLindo8796jE2yljDpFoNoqXjopxaAkH5OjUDk/41itMpBb570OYj7OeUt9tkTmPOL13\0D\0Ai0Nj67eT/DBMHAGTthP796EfvyXhdDcsHqRePGj4S78NuR4uNuip5Kf4D8uCdXw1LSLWwr8L87T8\0D\0AbJVhHlfXBIEyg1J55oNjz7fLY4sR4r1e6/aN7ZVyKLSsEmLpSjPmgzKuBXWVvYSV2ypcm44uDLiB\0D\0AK0HmOFafSZtsdvqKXfcBeYF8wYNABf5x/Qw/zE5gCQ5lRxAvAcAFP4/4s0HvWkJ+We/SlwxlAgMB\0D\0AAAGjggE0MIIBMDAPBgNVHRMBAf8EBTADAQH/MDkGA1UdHwQyMDAwLqAsoCqGKGh0dHA6Ly9jcmwu\0D\0AcGtpLndlbGxzZmFyZ28uY29tL3dzcHJjYS5jcmwwDgYDVR0PAQH/BAQDAgHGMB0GA1UdDgQWBBQm\0D\0AlRkQ2eihl5H/3BnZtQQ+0nMKajCBsgYDVR0jBIGqMIGngBQmlRkQ2eihl5H/3BnZtQQ+0nMKaqGB\0D\0Ai6SBiDCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoMF1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRww\0D\0AGgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYwNAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMg\0D\0AUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHmCAQEwDQYJKoZIhvcNAQEFBQADggEBALkVsUSRzCPI\0D\0AK0134/iaeycNzXK7mQDKfGYZUMbVmO2rvwNa5U3lHshPcZeG1eMd/ZDJPHV3V3p9+N701NX3leZ0\0D\0Abh08rnyd2wIDBSxxSyU+B+NemvVmFymIGjifz6pBA4SXa5M4esowRBskRDPQ5NHcKDj0E0M1NSlj\0D\0AqHyita04pO2t/caaH/+Xc/77szWnk4bGdpEA5qxRFsQnMlzbc9qlk1eOPm01JghZ1edE13YgY+es\0D\0AE2fDbbFwRnzVlhE9iW9dqKHrjQrawx0zbKPqZxmamX9LPYNRKh3KL4YMon4QLSvUFpULB6ouFJJJ\0D\0Atylv2G0xffX8oRAHh84vWdw+WNs=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACOMODO ECC Certification Authority\0D\0A==================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICiTCCAg+gAwIBAgIQH0evqmIAcFBUTAGem2OZKjAKBggqhkjOPQQDAzCBhTELMAkGA1UEBhMC\0D\0AR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UE\0D\0AChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBB\0D\0AdXRob3JpdHkwHhcNMDgwMzA2MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0Ix\0D\0AGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\0D\0AQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRo\0D\0Ab3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQDR3svdcmCFYX7deSRFtSrYpn1PlILBs5BAH+X\0D\0A4QokPB0BBO490o0JlwzgdeT6+3eKKvUDYEs2ixYjFq0JcfRK9ChQtP6IHG4/bC8vCVlbpVsLM5ni\0D\0Awz2J+Wos77LTBumjQjBAMB0GA1UdDgQWBBR1cacZSBm8nZ3qQUfflMRId5nTeTAOBgNVHQ8BAf8E\0D\0ABAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjEA7wNbeqy3eApyt4jf/7VG\0D\0AFAkK+qDmfQjGGoe9GKhzvSbKYAydzpmfz1wPMOG+FDHqAjAU9JM8SaczepBGR7NjfRObTrdvGDeA\0D\0AU/7dIOA1mjbRxwG55tzd8/8dLDoWV9mSOdY=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AIGC/A\0D\0A=====\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEAjCCAuqgAwIBAgIFORFFEJQwDQYJKoZIhvcNAQEFBQAwgYUxCzAJBgNVBAYTAkZSMQ8wDQYD\0D\0AVQQIEwZGcmFuY2UxDjAMBgNVBAcTBVBhcmlzMRAwDgYDVQQKEwdQTS9TR0ROMQ4wDAYDVQQLEwVE\0D\0AQ1NTSTEOMAwGA1UEAxMFSUdDL0ExIzAhBgkqhkiG9w0BCQEWFGlnY2FAc2dkbi5wbS5nb3V2LmZy\0D\0AMB4XDTAyMTIxMzE0MjkyM1oXDTIwMTAxNzE0MjkyMlowgYUxCzAJBgNVBAYTAkZSMQ8wDQYDVQQI\0D\0AEwZGcmFuY2UxDjAMBgNVBAcTBVBhcmlzMRAwDgYDVQQKEwdQTS9TR0ROMQ4wDAYDVQQLEwVEQ1NT\0D\0ASTEOMAwGA1UEAxMFSUdDL0ExIzAhBgkqhkiG9w0BCQEWFGlnY2FAc2dkbi5wbS5nb3V2LmZyMIIB\0D\0AIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsh/R0GLFMzvABIaIs9z4iPf930Pfeo2aSVz2\0D\0ATqrMHLmh6yeJ8kbpO0px1R2OLc/mratjUMdUC24SyZA2xtgv2pGqaMVy/hcKshd+ebUyiHDKcMCW\0D\0ASo7kVc0dJ5S/znIq7Fz5cyD+vfcuiWe4u0dzEvfRNWk68gq5rv9GQkaiv6GFGvm/5P9JhfejcIYy\0D\0AHF2fYPepraX/z9E0+X1bF8bc1g4oa8Ld8fUzaJ1O/Id8NhLWo4DoQw1VYZTqZDdH6nfK0LJYBcNd\0D\0AfrGoRpAxVs5wKpayMLh35nnAvSk7/ZR3TL0gzUEl4C7HG7vupARB0l2tEmqKm0f7yd1GQOGdPDPQ\0D\0AtQIDAQABo3cwdTAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBRjAVBgNVHSAEDjAMMAoGCCqB\0D\0AegF5AQEBMB0GA1UdDgQWBBSjBS8YYFDCiQrdKyFP/45OqDAxNjAfBgNVHSMEGDAWgBSjBS8YYFDC\0D\0AiQrdKyFP/45OqDAxNjANBgkqhkiG9w0BAQUFAAOCAQEABdwm2Pp3FURo/C9mOnTgXeQp/wYHE4RK\0D\0Aq89toB9RlPhJy3Q2FLwV3duJL92PoF189RLrn544pEfMs5bZvpwlqwN+Mw+VgQ39FuCIvjfwbF3Q\0D\0AMZsyK10XZZOYYLxuj7GoPB7ZHPOpJkL5ZB3C55L29B5aqhlSXa/oovdgoPaN8In1buAKBQGVyYsg\0D\0ACrpa/JosPL3Dt8ldeCUFP1YUmwza+zpI/pdpXsoQhvdOlgQITeywvl3cO45Pwf2aNjSaTFR+FwNI\0D\0AlQgRHAdvhQh+XU3Endv7rs6y0bO4g2wdsrN58dhwmX7wEwLOXt1R0982gaEbeC9xs/FZTEYYKKuF\0D\0A0mBWWg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASecurity Communication EV RootCA1\0D\0A=================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDfTCCAmWgAwIBAgIBADANBgkqhkiG9w0BAQUFADBgMQswCQYDVQQGEwJKUDElMCMGA1UEChMc\0D\0AU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEqMCgGA1UECxMhU2VjdXJpdHkgQ29tbXVuaWNh\0D\0AdGlvbiBFViBSb290Q0ExMB4XDTA3MDYwNjAyMTIzMloXDTM3MDYwNjAyMTIzMlowYDELMAkGA1UE\0D\0ABhMCSlAxJTAjBgNVBAoTHFNFQ09NIFRydXN0IFN5c3RlbXMgQ08uLExURC4xKjAoBgNVBAsTIVNl\0D\0AY3VyaXR5IENvbW11bmljYXRpb24gRVYgUm9vdENBMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\0D\0AAQoCggEBALx/7FebJOD+nLpCeamIivqA4PUHKUPqjgo0No0c+qe1OXj/l3X3L+SqawSERMqm4miO\0D\0A/VVQYg+kcQ7OBzgtQoVQrTyWb4vVog7P3kmJPdZkLjjlHmy1V4qe70gOzXppFodEtZDkBp2uoQSX\0D\0AWHnvIEqCa4wiv+wfD+mEce3xDuS4GBPMVjZd0ZoeUWs5bmB2iDQL87PRsJ3KYeJkHcFGB7hj3R4z\0D\0AZbOOCVVSPbW9/wfrrWFVGCypaZhKqkDFMxRldAD5kd6vA0jFQFTcD4SQaCDFkpbcLuUCRarAX1T4\0D\0AbepJz11sS6/vmsJWXMY1VkJqMF/Cq/biPT+zyRGPMUzXn0kCAwEAAaNCMEAwHQYDVR0OBBYEFDVK\0D\0A9U2vP9eCOKyrcWUXdYydVZPmMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\0D\0ASIb3DQEBBQUAA4IBAQCoh+ns+EBnXcPBZsdAS5f8hxOQWsTvoMpfi7ent/HWtWS3irO4G8za+6xm\0D\0AiEHO6Pzk2x6Ipu0nUBsCMCRGef4Eh3CXQHPRwMFXGZpppSeZq51ihPZRwSzJIxXYKLerJRO1RuGG\0D\0AAv8mjMSIkh1W/hln8lXkgKNrnKt34VFxDSDbEJrbvXZ5B3eZKK2aXtqxT0QsNY6llsf9g/BYxnnW\0D\0AmHyojf6GPgcWkuF75x3sM3Z+Qi5KhfmRiWiEA4Glm5q+4zfFVKtWOxgtQaQM+ELbmaDgcm+7XeEW\0D\0AT1MKZPlO9L9OVL14bIjqv5wTJMJwaaJ/D8g8rQjJsJhAoyrniIPtd490\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AOISTE WISeKey Global Root GA CA\0D\0A===============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIID8TCCAtmgAwIBAgIQQT1yx/RrH4FDffHSKFTfmjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UE\0D\0ABhMCQ0gxEDAOBgNVBAoTB1dJU2VLZXkxGzAZBgNVBAsTEkNvcHlyaWdodCAoYykgMjAwNTEiMCAG\0D\0AA1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBH\0D\0AbG9iYWwgUm9vdCBHQSBDQTAeFw0wNTEyMTExNjAzNDRaFw0zNzEyMTExNjA5NTFaMIGKMQswCQYD\0D\0AVQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEbMBkGA1UECxMSQ29weXJpZ2h0IChjKSAyMDA1MSIw\0D\0AIAYDVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5\0D\0AIEdsb2JhbCBSb290IEdBIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy0+zAJs9\0D\0ANt350UlqaxBJH+zYK7LG+DKBKUOVTJoZIyEVRd7jyBxRVVuuk+g3/ytr6dTqvirdqFEr12bDYVxg\0D\0AAsj1znJ7O7jyTmUIms2kahnBAbtzptf2w93NvKSLtZlhuAGio9RN1AU9ka34tAhxZK9w8RxrfvbD\0D\0Ad50kc3vkDIzh2TbhmYsFmQvtRTEJysIA2/dyoJaqlYfQjse2YXMNdmaM3Bu0Y6Kff5MTMPGhJ9vZ\0D\0A/yxViJGg4E8HsChWjBgbl0SOid3gF27nKu+POQoxhILYQBRJLnpB5Kf+42TMwVlxSywhp1t94B3R\0D\0ALoGbw9ho972WG6xwsRYUC9tguSYBBQIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUw\0D\0AAwEB/zAdBgNVHQ4EFgQUswN+rja8sHnR3JQmthG+IbJphpQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJ\0D\0AKoZIhvcNAQEFBQADggEBAEuh/wuHbrP5wUOxSPMowB0uyQlB+pQAHKSkq0lPjz0e701vvbyk9vIm\0D\0AMMkQyh2I+3QZH4VFvbBsUfk2ftv1TDI6QU9bR8/oCy22xBmddMVHxjtqD6wU2zz0c5ypBd8A3HR4\0D\0A+vg1YFkCExh8vPtNsCBtQ7tgMHpnM1zFmdH4LTlSc/uMqpclXHLZCB6rTjzjgTGfA6b7wP4piFXa\0D\0AhNVQA7bihKOmNqoROgHhGEvWRGizPflTdISzRpFGlgC3gCy24eMQ4tui5yiPAZZiFj4A4xylNoEY\0D\0AokxSdsARo27mHbrjWr42U8U+dY+GaSlYU7Wcu2+fXMUY7N0v4ZjJ/L7fCg0=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AMicrosec e-Szigno Root CA\0D\0A=========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIHqDCCBpCgAwIBAgIRAMy4579OKRr9otxmpRwsDxEwDQYJKoZIhvcNAQEFBQAwcjELMAkGA1UE\0D\0ABhMCSFUxETAPBgNVBAcTCEJ1ZGFwZXN0MRYwFAYDVQQKEw1NaWNyb3NlYyBMdGQuMRQwEgYDVQQL\0D\0AEwtlLVN6aWdubyBDQTEiMCAGA1UEAxMZTWljcm9zZWMgZS1Temlnbm8gUm9vdCBDQTAeFw0wNTA0\0D\0AMDYxMjI4NDRaFw0xNzA0MDYxMjI4NDRaMHIxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVz\0D\0AdDEWMBQGA1UEChMNTWljcm9zZWMgTHRkLjEUMBIGA1UECxMLZS1Temlnbm8gQ0ExIjAgBgNVBAMT\0D\0AGU1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\0D\0AAQDtyADVgXvNOABHzNuEwSFpLHSQDCHZU4ftPkNEU6+r+ICbPHiN1I2uuO/TEdyB5s87lozWbxXG\0D\0Ad36hL+BfkrYn13aaHUM86tnsL+4582pnS4uCzyL4ZVX+LMsvfUh6PXX5qqAnu3jCBspRwn5mS6/N\0D\0AoqdNAoI/gqyFxuEPkEeZlApxcpMqyabAvjxWTHOSJ/FrtfX9/DAFYJLG65Z+AZHCabEeHXtTRbjc\0D\0AQR/Ji3HWVBTji1R4P770Yjtb9aPs1ZJ04nQw7wHb4dSrmZsqa/i9phyGI0Jf7Enemotb9HI6QMVJ\0D\0APqW+jqpx62z69Rrkav17fVVA71hu5tnVvCSrwe+3AgMBAAGjggQ3MIIEMzBnBggrBgEFBQcBAQRb\0D\0AMFkwKAYIKwYBBQUHMAGGHGh0dHBzOi8vcmNhLmUtc3ppZ25vLmh1L29jc3AwLQYIKwYBBQUHMAKG\0D\0AIWh0dHA6Ly93d3cuZS1zemlnbm8uaHUvUm9vdENBLmNydDAPBgNVHRMBAf8EBTADAQH/MIIBcwYD\0D\0AVR0gBIIBajCCAWYwggFiBgwrBgEEAYGoGAIBAQEwggFQMCgGCCsGAQUFBwIBFhxodHRwOi8vd3d3\0D\0ALmUtc3ppZ25vLmh1L1NaU1ovMIIBIgYIKwYBBQUHAgIwggEUHoIBEABBACAAdABhAG4A+gBzAO0A\0D\0AdAB2AOEAbgB5ACAA6QByAHQAZQBsAG0AZQB6AOkAcwDpAGgAZQB6ACAA6QBzACAAZQBsAGYAbwBn\0D\0AAGEAZADhAHMA4QBoAG8AegAgAGEAIABTAHoAbwBsAGcA4QBsAHQAYQB0APMAIABTAHoAbwBsAGcA\0D\0A4QBsAHQAYQB0AOEAcwBpACAAUwB6AGEAYgDhAGwAeQB6AGEAdABhACAAcwB6AGUAcgBpAG4AdAAg\0D\0AAGsAZQBsAGwAIABlAGwAagDhAHIAbgBpADoAIABoAHQAdABwADoALwAvAHcAdwB3AC4AZQAtAHMA\0D\0AegBpAGcAbgBvAC4AaAB1AC8AUwBaAFMAWgAvMIHIBgNVHR8EgcAwgb0wgbqggbeggbSGIWh0dHA6\0D\0ALy93d3cuZS1zemlnbm8uaHUvUm9vdENBLmNybIaBjmxkYXA6Ly9sZGFwLmUtc3ppZ25vLmh1L0NO\0D\0APU1pY3Jvc2VjJTIwZS1Temlnbm8lMjBSb290JTIwQ0EsT1U9ZS1Temlnbm8lMjBDQSxPPU1pY3Jv\0D\0Ac2VjJTIwTHRkLixMPUJ1ZGFwZXN0LEM9SFU/Y2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdDtiaW5h\0D\0AcnkwDgYDVR0PAQH/BAQDAgEGMIGWBgNVHREEgY4wgYuBEGluZm9AZS1zemlnbm8uaHWkdzB1MSMw\0D\0AIQYDVQQDDBpNaWNyb3NlYyBlLVN6aWduw7MgUm9vdCBDQTEWMBQGA1UECwwNZS1TemlnbsOzIEhT\0D\0AWjEWMBQGA1UEChMNTWljcm9zZWMgS2Z0LjERMA8GA1UEBxMIQnVkYXBlc3QxCzAJBgNVBAYTAkhV\0D\0AMIGsBgNVHSMEgaQwgaGAFMegSXUWYYTbMUuE0vE3QJDvTtz3oXakdDByMQswCQYDVQQGEwJIVTER\0D\0AMA8GA1UEBxMIQnVkYXBlc3QxFjAUBgNVBAoTDU1pY3Jvc2VjIEx0ZC4xFDASBgNVBAsTC2UtU3pp\0D\0AZ25vIENBMSIwIAYDVQQDExlNaWNyb3NlYyBlLVN6aWdubyBSb290IENBghEAzLjnv04pGv2i3Gal\0D\0AHCwPETAdBgNVHQ4EFgQUx6BJdRZhhNsxS4TS8TdAkO9O3PcwDQYJKoZIhvcNAQEFBQADggEBANMT\0D\0AnGZjWS7KXHAM/IO8VbH0jgdsZifOwTsgqRy7RlRw7lrMoHfqaEQn6/Ip3Xep1fvj1KcExJW4C+FE\0D\0AaGAHQzAxQmHl7tnlJNUb3+FKG6qfx1/4ehHqE5MAyopYse7tDk2016g2JnzgOsHVV4Lxdbb9iV/a\0D\0A86g4nzUGCM4ilb7N1fy+W955a9x6qWVmvrElWl/tftOsRm1M9DKHtCAE4Gx4sHfRhUZLphK3dehK\0D\0AyVZs15KrnfVJONJPU+NVkBHbmJbGSfI+9J8b4PeI3CVimUTYc78/MPMMNz7UwiiAc7EBt51alhQB\0D\0AS6kRnSlqLtBdgcDPsiBDxwPgN05dCtxZICU=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertigna\0D\0A========\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDqDCCApCgAwIBAgIJAP7c4wEPyUj/MA0GCSqGSIb3DQEBBQUAMDQxCzAJBgNVBAYTAkZSMRIw\0D\0AEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hMB4XDTA3MDYyOTE1MTMwNVoXDTI3\0D\0AMDYyOTE1MTMwNVowNDELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURoaW15b3RpczERMA8GA1UEAwwI\0D\0AQ2VydGlnbmEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDIaPHJ1tazNHUmgh7stL7q\0D\0AXOEm7RFHYeGifBZ4QCHkYJ5ayGPhxLGWkv8YbWkj4Sti993iNi+RB7lIzw7sebYs5zRLcAglozyH\0D\0AGxnygQcPOJAZ0xH+hrTy0V4eHpbNgGzOOzGTtvKg0KmVEn2lmsxryIRWijOp5yIVUxbwzBfsV1/p\0D\0AogqYCd7jX5xv3EjjhQsVWqa6n6xI4wmy9/Qy3l40vhx4XUJbzg4ij02Q130yGLMLLGq/jj8UEYkg\0D\0ADncUtT2UCIf3JR7VsmAA7G8qKCVuKj4YYxclPz5EIBb2JsglrgVKtOdjLPOMFlN+XPsRGgjBRmKf\0D\0AIrjxwo1p3Po6WAbfAgMBAAGjgbwwgbkwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUGu3+QTmQ\0D\0AtCRZvgHyUtVF9lo53BEwZAYDVR0jBF0wW4AUGu3+QTmQtCRZvgHyUtVF9lo53BGhOKQ2MDQxCzAJ\0D\0ABgNVBAYTAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hggkA/tzjAQ/J\0D\0ASP8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzANBgkqhkiG9w0BAQUFAAOCAQEA\0D\0AhQMeknH2Qq/ho2Ge6/PAD/Kl1NqV5ta+aDY9fm4fTIrv0Q8hbV6lUmPOEvjvKtpv6zf+EwLHyzs+\0D\0AImvaYS5/1HI93TDhHkxAGYwP15zRgzB7mFncfca5DClMoTOi62c6ZYTTluLtdkVwj7Ur3vkj1klu\0D\0APBS1xp81HlDQwY9qcEQCYsuuHWhBp6pX6FOqB9IG9tUUBguRA3UsbHK1YZWaDYu5Def131TN3ubY\0D\0A1gkIl2PlwS6wt0QmwCbAr1UwnjvVNioZBPRcHv/PLLf/0P2HQBHVESO7SMAhqaQoLf0V+LBOK/Qw\0D\0AWyH8EZE0vkHve52Xdf+XlcCWWC/qu0bXu+TZLg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADeutsche Telekom Root CA 2\0D\0A==========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDnzCCAoegAwIBAgIBJjANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJERTEcMBoGA1UEChMT\0D\0ARGV1dHNjaGUgVGVsZWtvbSBBRzEfMB0GA1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRlcjEjMCEG\0D\0AA1UEAxMaRGV1dHNjaGUgVGVsZWtvbSBSb290IENBIDIwHhcNOTkwNzA5MTIxMTAwWhcNMTkwNzA5\0D\0AMjM1OTAwWjBxMQswCQYDVQQGEwJERTEcMBoGA1UEChMTRGV1dHNjaGUgVGVsZWtvbSBBRzEfMB0G\0D\0AA1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRlcjEjMCEGA1UEAxMaRGV1dHNjaGUgVGVsZWtvbSBS\0D\0Ab290IENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrC6M14IspFLEUha88EOQ5\0D\0AbzVdSq7d6mGNlUn0b2SjGmBmpKlAIoTZ1KXleJMOaAGtuU1cOs7TuKhCQN/Po7qCWWqSG6wcmtoI\0D\0AKyUn+WkjR/Hg6yx6m/UTAtB+NHzCnjwAWav12gz1MjwrrFDa1sPeg5TKqAyZMg4ISFZbavva4VhY\0D\0AAUlfckE8FQYBjl2tqriTtM2e66foai1SNNs671x1Udrb8zH57nGYMsRUFUQM+ZtV7a3fGAigo4aK\0D\0ASe5TBY8ZTNXeWHmb0mocQqvF1afPaA+W5OFhmHZhyJF81j4A4pFQh+GdCuatl9Idxjp9y7zaAzTV\0D\0AjlsB9WoHtxa2bkp/AgMBAAGjQjBAMB0GA1UdDgQWBBQxw3kbuvVT1xfgiXotF2wKsyudMzAPBgNV\0D\0AHRMECDAGAQH/AgEFMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAlGRZrTlk5ynr\0D\0AE/5aw4sTV8gEJPB0d8Bg42f76Ymmg7+Wgnxu1MM9756AbrsptJh6sTtU6zkXR34ajgv8HzFZMQSy\0D\0AzhfzLMdiNlXiItiJVbSYSKpk+tYcNthEeFpaIzpXl/V6ME+un2pMSyuOoAPjPuCp1NJ70rOo4nI8\0D\0ArZ7/gFnkm0W09juwzTkZmDLl6iFhkOQxIY40sfcvNUqFENrnijchvllj4PKFiDFT1FQUhXB59C4G\0D\0Adyd1Lx+4ivn+xbrYNuSD7Odlt79jWvNGr4GUN9RBjNYj1h7P9WgbRGOiWrqnNVmh5XAFmw4jV5mU\0D\0ACm26OWMohpLzGITY+9HPBVZkVw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACybertrust Global Root\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDoTCCAomgAwIBAgILBAAAAAABD4WqLUgwDQYJKoZIhvcNAQEFBQAwOzEYMBYGA1UEChMPQ3li\0D\0AZXJ0cnVzdCwgSW5jMR8wHQYDVQQDExZDeWJlcnRydXN0IEdsb2JhbCBSb290MB4XDTA2MTIxNTA4\0D\0AMDAwMFoXDTIxMTIxNTA4MDAwMFowOzEYMBYGA1UEChMPQ3liZXJ0cnVzdCwgSW5jMR8wHQYDVQQD\0D\0AExZDeWJlcnRydXN0IEdsb2JhbCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\0D\0A+Mi8vRRQZhP/8NN57CPytxrHjoXxEnOmGaoQ25yiZXRadz5RfVb23CO21O1fWLE3TdVJDm71aofW\0D\0A0ozSJ8bi/zafmGWgE07GKmSb1ZASzxQG9Dvj1Ci+6A74q05IlG2OlTEQXO2iLb3VOm2yHLtgwEZL\0D\0AAfVJrn5GitB0jaEMAs7u/OePuGtm839EAL9mJRQr3RAwHQeWP032a7iPt3sMpTjr3kfb1V05/Iin\0D\0A89cqdPHoWqI7n1C6poxFNcJQZZXcY4Lv3b93TZxiyWNzFtApD0mpSPCzqrdsxacwOUBdrsTiXSZT\0D\0A8M4cIwhhqJQZugRiQOwfOHB3EgZxpzAYXSUnpQIDAQABo4GlMIGiMA4GA1UdDwEB/wQEAwIBBjAP\0D\0ABgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS2CHsNesysIEyGVjJez6tuhS1wVzA/BgNVHR8EODA2\0D\0AMDSgMqAwhi5odHRwOi8vd3d3Mi5wdWJsaWMtdHJ1c3QuY29tL2NybC9jdC9jdHJvb3QuY3JsMB8G\0D\0AA1UdIwQYMBaAFLYIew16zKwgTIZWMl7Pq26FLXBXMA0GCSqGSIb3DQEBBQUAA4IBAQBW7wojoFRO\0D\0AlZfJ+InaRcHUowAl9B8Tq7ejhVhpwjCt2BWKLePJzYFa+HMjWqd8BfP9IjsO0QbE2zZMcwSO5bAi\0D\0A5MXzLqXZI+O4Tkogp24CJJ8iYGd7ix1yCcUxXOl5n4BHPa2hCwcUPUf/A2kaDAtE52Mlp3+yybh2\0D\0AhO0j9n0Hq0V+09+zv+mKts2oomcrUtW3ZfA5TGOgkXmTUg9U3YO7n9GPp1Nzw8v/MOx8BLjYRB+T\0D\0AX3EJIrduPuocA06dGiBh+4E37F78CkWr1+cXVdCg6mCbpvbjjFspwgZgFJ0tl0ypkxWdYcQBX0jW\0D\0AWL1WMRJOEcgh4LMRkWXbtKaIOM5V\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AePKI Root Certification Authority\0D\0A=================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFsDCCA5igAwIBAgIQFci9ZUdcr7iXAF7kBtK8nTANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQG\0D\0AEwJUVzEjMCEGA1UECgwaQ2h1bmdod2EgVGVsZWNvbSBDby4sIEx0ZC4xKjAoBgNVBAsMIWVQS0kg\0D\0AUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNDEyMjAwMjMxMjdaFw0zNDEyMjAwMjMx\0D\0AMjdaMF4xCzAJBgNVBAYTAlRXMSMwIQYDVQQKDBpDaHVuZ2h3YSBUZWxlY29tIENvLiwgTHRkLjEq\0D\0AMCgGA1UECwwhZVBLSSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0B\0D\0AAQEFAAOCAg8AMIICCgKCAgEA4SUP7o3biDN1Z82tH306Tm2d0y8U82N0ywEhajfqhFAHSyZbCUNs\0D\0AIZ5qyNUD9WBpj8zwIuQf5/dqIjG3LBXy4P4AakP/h2XGtRrBp0xtInAhijHyl3SJCRImHJ7K2RKi\0D\0AlTza6We/CKBk49ZCt0Xvl/T29de1ShUCWH2YWEtgvM3XDZoTM1PRYfl61dd4s5oz9wCGzh1NlDiv\0D\0AqOx4UXCKXBCDUSH3ET00hl7lSM2XgYI1TBnsZfZrxQWh7kcT1rMhJ5QQCtkkO7q+RBNGMD+XPNjX\0D\0A12ruOzjjK9SXDrkb5wdJfzcq+Xd4z1TtW0ado4AOkUPB1ltfFLqfpo0kR0BZv3I4sjZsN/+Z0V0O\0D\0AWQqraffAsgRFelQArr5T9rXn4fg8ozHSqf4hUmTFpmfwdQcGlBSBVcYn5AGPF8Fqcde+S/uUWH1+\0D\0AETOxQvdibBjWzwloPn9s9h6PYq2lY9sJpx8iQkEeb5mKPtf5P0B6ebClAZLSnT0IFaUQAS2zMnao\0D\0AlQ2zepr7BxB4EW/hj8e6DyUadCrlHJhBmd8hh+iVBmoKs2pHdmX2Os+PYhcZewoozRrSgx4hxyy/\0D\0Avv9haLdnG7t4TY3OZ+XkwY63I2binZB1NJipNiuKmpS5nezMirH4JYlcWrYvjB9teSSnUmjDhDXi\0D\0AZo1jDiVN1Rmy5nk3pyKdVDECAwEAAaNqMGgwHQYDVR0OBBYEFB4M97Zn8uGSJglFwFU5Lnc/Qkqi\0D\0AMAwGA1UdEwQFMAMBAf8wOQYEZyoHAAQxMC8wLQIBADAJBgUrDgMCGgUAMAcGBWcqAwAABBRFsMLH\0D\0AClZ87lt4DJX5GFPBphzYEDANBgkqhkiG9w0BAQUFAAOCAgEACbODU1kBPpVJufGBuvl2ICO1J2B0\0D\0A1GqZNF5sAFPZn/KmsSQHRGoqxqWOeBLoR9lYGxMqXnmbnwoqZ6YlPwZpVnPDimZI+ymBV3QGypzq\0D\0AKOg4ZyYr8dW1P2WT+DZdjo2NQCCHGervJ8A9tDkPJXtoUHRVnAxZfVo9QZQlUgjgRywVMRnVvwdV\0D\0AxrsStZf0X4OFunHB2WyBEXYKCrC/gpf36j36+uwtqSiUO1bd0lEursC9CBWMd1I0ltabrNMdjmEP\0D\0ANXubrjlpC2JgQCA2j6/7Nu4tCEoduL+bXPjqpRugc6bY+G7gMwRfaKonh+3ZwZCc7b3jajWvY9+r\0D\0AGNm65ulK6lCKD2GTHuItGeIwlDWSXQ62B68ZgI9HkFFLLk3dheLSClIKF5r8GrBQAuUBo2M3IUxE\0D\0AxJtRmREOc5wGj1QupyheRDmHVi03vYVElOEMSyycw5KFNGHLD7ibSkNS/jQ6fbjpKdx2qcgw+BRx\0D\0AgMYeNkh0IkFch4LoGHGLQYlE535YW6i4jRPpp2zDR+2zGp1iro2C6pSe3VkQw63d4k3jMdXH7Ojy\0D\0AsP6SHhYKGvzZ8/gntsm+HbRsZJB/9OTEW9c3rkIO3aQab3yIVMUWbuF6aC74Or8NpDyJO3inTmOD\0D\0ABCEIZ43ygknQW/2xzQ+DhNQ+IIX3Sj0rnP0qCglN6oH4EZw=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AT\C3\9CB\C4\B0TAK UEKAE K\C3\B6k Sertifika Hizmet Sa\C4\9Flay\C4\B1c\C4\B1s\C4\B1 - S\C3\BCr\C3\BCm 3\0D\0A=============================================================================================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFFzCCA/+gAwIBAgIBETANBgkqhkiG9w0BAQUFADCCASsxCzAJBgNVBAYTAlRSMRgwFgYDVQQH\0D\0ADA9HZWJ6ZSAtIEtvY2FlbGkxRzBFBgNVBAoMPlTDvHJraXllIEJpbGltc2VsIHZlIFRla25vbG9q\0D\0AaWsgQXJhxZ90xLFybWEgS3VydW11IC0gVMOcQsSwVEFLMUgwRgYDVQQLDD9VbHVzYWwgRWxla3Ry\0D\0Ab25payB2ZSBLcmlwdG9sb2ppIEFyYcWfdMSxcm1hIEVuc3RpdMO8c8O8IC0gVUVLQUUxIzAhBgNV\0D\0ABAsMGkthbXUgU2VydGlmaWthc3lvbiBNZXJrZXppMUowSAYDVQQDDEFUw5xCxLBUQUsgVUVLQUUg\0D\0AS8O2ayBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnEsWPEsXPEsSAtIFPDvHLDvG0gMzAeFw0wNzA4\0D\0AMjQxMTM3MDdaFw0xNzA4MjExMTM3MDdaMIIBKzELMAkGA1UEBhMCVFIxGDAWBgNVBAcMD0dlYnpl\0D\0AIC0gS29jYWVsaTFHMEUGA1UECgw+VMO8cmtpeWUgQmlsaW1zZWwgdmUgVGVrbm9sb2ppayBBcmHF\0D\0An3TEsXJtYSBLdXJ1bXUgLSBUw5xCxLBUQUsxSDBGBgNVBAsMP1VsdXNhbCBFbGVrdHJvbmlrIHZl\0D\0AIEtyaXB0b2xvamkgQXJhxZ90xLFybWEgRW5zdGl0w7xzw7wgLSBVRUtBRTEjMCEGA1UECwwaS2Ft\0D\0AdSBTZXJ0aWZpa2FzeW9uIE1lcmtlemkxSjBIBgNVBAMMQVTDnELEsFRBSyBVRUtBRSBLw7ZrIFNl\0D\0AcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxIC0gU8O8csO8bSAzMIIBIjANBgkqhkiG9w0B\0D\0AAQEFAAOCAQ8AMIIBCgKCAQEAim1L/xCIOsP2fpTo6iBkcK4hgb46ezzb8R1Sf1n68yJMlaCQvEhO\0D\0AEav7t7WNeoMojCZG2E6VQIdhn8WebYGHV2yKO7Rm6sxA/OOqbLLLAdsyv9Lrhc+hDVXDWzhXcLh1\0D\0AxnnRFDDtG1hba+818qEhTsXOfJlfbLm4IpNQp81McGq+agV/E5wrHur+R84EpW+sky58K5+eeROR\0D\0A6Oqeyjh1jmKwlZMq5d/pXpduIF9fhHpEORlAHLpVK/swsoHvhOPc7Jg4OQOFCKlUAwUp8MmPi+oL\0D\0AhmUZEdPpCSPeaJMDyTYcIW7OjGbxmTDY17PDHfiBLqi9ggtm/oLL4eAagsNAgQIDAQABo0IwQDAd\0D\0ABgNVHQ4EFgQUvYiHyY/2pAoLquvF/pEjnatKijIwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\0D\0AMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAB18+kmPNOm3JpIWmgV050vQbTlswyb2zrgxvMTfvCr4\0D\0AN5EY3ATIZJkrGG2AA1nJrvhY0D7twyOfaTyGOBye79oneNGEN3GKPEs5z35FBtYt2IpNeBLWrcLT\0D\0Ay9LQQfMmNkqblWwM7uXRQydmwYj3erMgbOqwaSvHIOgMA8RBBZniP+Rr+KCGgceExh/VS4ESshYh\0D\0ALBOhgLJeDEoTniDYYkCrkOpkSi+sDQESeUWoL4cZaMjihccwsnX5OD+ywJO0a+IDRM5noN+J1q2M\0D\0AdqMTw5RhK2vZbMEHCiIHhWyFJEapvj+LeISCfiQMnf2BN+MlqO02TpUsyZyQ2uypQjyttgI=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ABuypass Class 2 CA 1\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDUzCCAjugAwIBAgIBATANBgkqhkiG9w0BAQUFADBLMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU\0D\0AQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMMFEJ1eXBhc3MgQ2xhc3MgMiBDQSAxMB4XDTA2\0D\0AMTAxMzEwMjUwOVoXDTE2MTAxMzEwMjUwOVowSzELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBh\0D\0Ac3MgQVMtOTgzMTYzMzI3MR0wGwYDVQQDDBRCdXlwYXNzIENsYXNzIDIgQ0EgMTCCASIwDQYJKoZI\0D\0AhvcNAQEBBQADggEPADCCAQoCggEBAIs8B0XY9t/mx8q6jUPFR42wWsE425KEHK8T1A9vNkYgxC7M\0D\0AcXA0ojTTNy7Y3Tp3L8DrKehc0rWpkTSHIln+zNvnma+WwajHQN2lFYxuyHyXA8vmIPLXl18xoS83\0D\0A0r7uvqmtqEyeIWZDO6i88wmjONVZJMHCR3axiFyCO7srpgTXjAePzdVBHfCuuCkslFJgNJQ72uA4\0D\0A0Z0zPhX0kzLFANq1KWYOOngPIVJfAuWSeyXTkh4vFZ2B5J2O6O+JzhRMVB0cgRJNcKi+EAUXfh/R\0D\0AuFdV7c27UsKwHnjCTTZoy1YmwVLBvXb3WNVyfh9EdrsAiR0WnVE1703CVu9r4Iw7DekCAwEAAaNC\0D\0AMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUP42aWYv8e3uco684sDntkHGA1sgwDgYDVR0P\0D\0AAQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQAVGn4TirnoB6NLJzKyQJHyIdFkhb5jatLPgcIV\0D\0A1Xp+DCmsNx4cfHZSldq1fyOhKXdlyTKdqC5Wq2B2zha0jX94wNWZUYN/Xtm+DKhQ7SLHrQVMdvvt\0D\0A7h5HZPb3J31cKA9FxVxiXqaakZG3Uxcu3K1gnZZkOb1naLKuBctN518fV4bVIJwo+28TOPX2EZL2\0D\0AfZleHwzoq0QkKXJAPTZSr4xYkHPB7GEseaHsh7U/2k3ZIQAw3pDaDtMaSKk+hQsUi4y8QZ5q9w5w\0D\0AwDX3OaJdZtB7WZ+oRxKaJyOkLY4ng5IgodcVf/EuGO70SH8vf/GhGLWhC5SgYiAynB321O+/TIho\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEBG Elektronik Sertifika Hizmet Sa\C4\9Flay\C4\B1c\C4\B1s\C4\B1\0D\0A==========================================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF5zCCA8+gAwIBAgIITK9zQhyOdAIwDQYJKoZIhvcNAQEFBQAwgYAxODA2BgNVBAMML0VCRyBF\0D\0AbGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxMTcwNQYDVQQKDC5FQkcg\0D\0AQmlsacWfaW0gVGVrbm9sb2ppbGVyaSB2ZSBIaXptZXRsZXJpIEEuxZ4uMQswCQYDVQQGEwJUUjAe\0D\0AFw0wNjA4MTcwMDIxMDlaFw0xNjA4MTQwMDMxMDlaMIGAMTgwNgYDVQQDDC9FQkcgRWxla3Ryb25p\0D\0AayBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnEsWPEsXPEsTE3MDUGA1UECgwuRUJHIEJpbGnFn2lt\0D\0AIFRla25vbG9qaWxlcmkgdmUgSGl6bWV0bGVyaSBBLsWeLjELMAkGA1UEBhMCVFIwggIiMA0GCSqG\0D\0ASIb3DQEBAQUAA4ICDwAwggIKAoICAQDuoIRh0DpqZhAy2DE4f6en5f2h4fuXd7hxlugTlkaDT7by\0D\0AX3JWbhNgpQGR4lvFzVcfd2NR/y8927k/qqk153nQ9dAktiHq6yOU/im/+4mRDGSaBUorzAzu8T2b\0D\0AgmmkTPiab+ci2hC6X5L8GCcKqKpE+i4stPtGmggDg3KriORqcsnlZR9uKg+ds+g75AxuetpX/dfr\0D\0AeYteIAbTdgtsApWjluTLdlHRKJ2hGvxEok3MenaoDT2/F08iiFD9rrbskFBKW5+VQarKD7JK/oCZ\0D\0ATqNGFav4c0JqwmZ2sQomFd2TkuzbqV9UIlKRcF0T6kjsbgNs2d1s/OsNA/+mgxKb8amTD8UmTDGy\0D\0AY5lhcucqZJnSuOl14nypqZoaqsNW2xCaPINStnuWt6yHd6i58mcLlEOzrz5z+kI2sSXFCjEmN1Zn\0D\0AuqMLfdb3ic1nobc6HmZP9qBVFCVMLDMNpkGMvQQxahByCp0OLna9XvNRiYuoP1Vzv9s6xiQFlpJI\0D\0AqkuNKgPlV5EQ9GooFW5Hd4RcUXSfGenmHmMWOeMRFeNYGkS9y8RsZteEBt8w9DeiQyJ50hBs37vm\0D\0AExH8nYQKE3vwO9D8owrXieqWfo1IhR5kX9tUoqzVegJ5a9KK8GfaZXINFHDk6Y54jzJ0fFfy1tb0\0D\0ANokb+Clsi7n2l9GkLqq+CxnCRelwXQIDAJ3Zo2MwYTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\0D\0A/wQEAwIBBjAdBgNVHQ4EFgQU587GT/wWZ5b6SqMHwQSny2re2kcwHwYDVR0jBBgwFoAU587GT/wW\0D\0AZ5b6SqMHwQSny2re2kcwDQYJKoZIhvcNAQEFBQADggIBAJuYml2+8ygjdsZs93/mQJ7ANtyVDR2t\0D\0AFcU22NU57/IeIl6zgrRdu0waypIN30ckHrMk2pGI6YNw3ZPX6bqz3xZaPt7gyPvT/Wwp+BVGoGgm\0D\0AzJNSroIBk5DKd8pNSe/iWtkqvTDOTLKBtjDOWU/aWR1qeqRFsIImgYZ29fUQALjuswnoT4cCB64k\0D\0AXPBfrAowzIpAoHMEwfuJJPaaHFy3PApnNgUIMbOv2AFoKuB4j3TeuFGkjGwgPaL7s9QJ/XvCgKqT\0D\0AbCmYIai7FvOpEl90tYeY8pUm3zTvilORiF0alKM/fCL414i6poyWqD1SNGKfAB5UVUJnxk1Gj7sU\0D\0ART0KlhaOEKGXmdXTMIXM3rRyt7yKPBgpaP3ccQfuJDlq+u2lrDgv+R4QDgZxGhBM/nV+/x5XOULK\0D\0A1+EVoVZVWRvRo68R2E7DpSvvkL/A7IITW43WciyTTo9qKd+FPNMN4KIYEsxVL0e3p5sC/kH2iExt\0D\0A2qkBR4NkJ2IQgtYSe14DHzSpyZH+r11thie3I6p1GMog57AP14kOpmciY/SDQSsGS7tY1dHXt7kQ\0D\0AY9iJSrSq3RZj9W6+YKH47ejWkE8axsWgKdOnIaj1Wjz3x0miIZpKlVIglnKaZsv30oZDfCK+lvm9\0D\0AAahH3eU7QPl1K5srRmSGjR70j/sHd9DqSaIcjVIUpgqT\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AcertSIGN ROOT CA\0D\0A================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDODCCAiCgAwIBAgIGIAYFFnACMA0GCSqGSIb3DQEBBQUAMDsxCzAJBgNVBAYTAlJPMREwDwYD\0D\0AVQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBDQTAeFw0wNjA3MDQxNzIwMDRa\0D\0AFw0zMTA3MDQxNzIwMDRaMDsxCzAJBgNVBAYTAlJPMREwDwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UE\0D\0ACxMQY2VydFNJR04gUk9PVCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALczuX7I\0D\0AJUqOtdu0KBuqV5Do0SLTZLrTk+jUrIZhQGpgV2hUhE28alQCBf/fm5oqrl0Hj0rDKH/v+yv6efHH\0D\0ArfAQUySQi2bJqIirr1qjAOm+ukbuW3N7LBeCgV5iLKECZbO9xSsAfsT8AzNXDe3i+s5dRdY4zTW2\0D\0AssHQnIFKquSyAVwdj1+ZxLGt24gh65AIgoDzMKND5pCCrlUoSe1b16kQOA7+j0xbm0bqQfWwCHTD\0D\0A0IgztnzXdN/chNFDDnU5oSVAKOp4yw4sLjmdjItuFhwvJoIQ4uNllAoEwF73XVv4EOLQunpL+943\0D\0AAAAaWyjj0pxzPjKHmKHJUS/X3qwzs08CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8B\0D\0AAf8EBAMCAcYwHQYDVR0OBBYEFOCMm9slSbPxfIbWskKHC9BroNnkMA0GCSqGSIb3DQEBBQUAA4IB\0D\0AAQA+0hyJLjX8+HXd5n9liPRyTMks1zJO890ZeUe9jjtbkw9QSSQTaxQGcu8J06Gh40CEyecYMnQ8\0D\0ASG4Pn0vU9x7Tk4ZkVJdjclDVVc/6IJMCopvDI5NOFlV2oHB5bc0hH88vLbwZ44gx+FkagQnIl6Z0\0D\0Ax2DEW8xXjrJ1/RsCCdtZb3KTafcxQdaIOL+Hsr0Wefmq5L6IJd1hJyMctTEHBDa0GpC9oHRxUIlt\0D\0AvBTjD4au8as+x6AJzKNI0eDbZOeStc+vckNwi/nDhDwTqn6Sm1dTk/pwwpEOMfmbZ13pljheX7Nz\0D\0ATogVZ96edhBiIL5VaZVDADlN9u6wWk5JRFRYX0KD\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACNNIC ROOT\0D\0A==========\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDVTCCAj2gAwIBAgIESTMAATANBgkqhkiG9w0BAQUFADAyMQswCQYDVQQGEwJDTjEOMAwGA1UE\0D\0AChMFQ05OSUMxEzARBgNVBAMTCkNOTklDIFJPT1QwHhcNMDcwNDE2MDcwOTE0WhcNMjcwNDE2MDcw\0D\0AOTE0WjAyMQswCQYDVQQGEwJDTjEOMAwGA1UEChMFQ05OSUMxEzARBgNVBAMTCkNOTklDIFJPT1Qw\0D\0AggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDTNfc/c3et6FtzF8LRb+1VvG7q6KR5smzD\0D\0Ao+/hn7E7SIX1mlwhIhAsxYLO2uOabjfhhyzcuQxauohV3/2q2x8x6gHx3zkBwRP9SFIhxFXf2tiz\0D\0AVHa6dLG3fdfA6PZZxU3Iva0fFNrfWEQlMhkqx35+jq44sDB7R3IJMfAw28Mbdim7aXZOV/kbZKKT\0D\0AVrdvmW7bCgScEeOAH8tjlBAKqeFkgjH5jCftppkA9nCTGPihNIaj3XrCGHn2emU1z5DrvTOTn1Or\0D\0AczvmmzQgLx3vqR1jGqCA2wMv+SYahtKNu6m+UjqHZ0gNv7Sg2Ca+I19zN38m5pIEo3/PIKe38zrK\0D\0Ay5nLAgMBAAGjczBxMBEGCWCGSAGG+EIBAQQEAwIABzAfBgNVHSMEGDAWgBRl8jGtKvf33VKWCscC\0D\0AwQ7vptU7ETAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIB/jAdBgNVHQ4EFgQUZfIxrSr3991S\0D\0AlgrHAsEO76bVOxEwDQYJKoZIhvcNAQEFBQADggEBAEs17szkrr/Dbq2flTtLP1se31cpolnKOOK5\0D\0AGv+e5m4y3R6u6jW39ZORTtpC4cMXYFDy0VwmuYK36m3knITnA3kXr5g9lNvHugDnuL8BV8F3RTIM\0D\0AO/G0HAiw/VGgod2aHRM2mm23xzy54cXZF/qD1T0VoDy7HgviyJA/qIYM/PmLXoXLT1tLYhFHxUV8\0D\0ABS9BsZ4QaRuZluBVeftOhpm4lNqGOGqTo+fLbuXf6iFViZx9fX+Y9QCJ7uOEwFyWtcVG6kbghVW2\0D\0AG8kS1sHNzYDzAgE8yGnLRUhj2JTQ7IUOO04RZfSCjKY9ri4ilAnIXOo8gV0WKgOXFlUJ24pBgp5m\0D\0AmxE=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AApplicationCA - Japanese Government\0D\0A===================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDoDCCAoigAwIBAgIBMTANBgkqhkiG9w0BAQUFADBDMQswCQYDVQQGEwJKUDEcMBoGA1UEChMT\0D\0ASmFwYW5lc2UgR292ZXJubWVudDEWMBQGA1UECxMNQXBwbGljYXRpb25DQTAeFw0wNzEyMTIxNTAw\0D\0AMDBaFw0xNzEyMTIxNTAwMDBaMEMxCzAJBgNVBAYTAkpQMRwwGgYDVQQKExNKYXBhbmVzZSBHb3Zl\0D\0Acm5tZW50MRYwFAYDVQQLEw1BcHBsaWNhdGlvbkNBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\0D\0ACgKCAQEAp23gdE6Hj6UG3mii24aZS2QNcfAKBZuOquHMLtJqO8F6tJdhjYq+xpqcBrSGUeQ3DnR4\0D\0Afl+Kf5Sk10cI/VBaVuRorChzoHvpfxiSQE8tnfWuREhzNgaeZCw7NCPbXCbkcXmP1G55IrmTwcrN\0D\0AwVbtiGrXoDkhBFcsovW8R0FPXjQilbUfKW1eSvNNcr5BViCH/OlQR9cwFO5cjFW6WY2H/CPek9AE\0D\0AjP3vbb3QesmlOmpyM8ZKDQUXKi17safY1vC+9D/qDihtQWEjdnjDuGWk81quzMKq2edY3rZ+nYVu\0D\0AnyoKb58DKTCXKB28t89UKU5RMfkntigm/qJj5kEW8DOYRwIDAQABo4GeMIGbMB0GA1UdDgQWBBRU\0D\0AWssmP3HMlEYNllPqa0jQk/5CdTAOBgNVHQ8BAf8EBAMCAQYwWQYDVR0RBFIwUKROMEwxCzAJBgNV\0D\0ABAYTAkpQMRgwFgYDVQQKDA/ml6XmnKzlm73mlL/lupwxIzAhBgNVBAsMGuOCouODl+ODquOCseOD\0D\0AvOOCt+ODp+ODs0NBMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADlqRHZ3ODrs\0D\0Ao2dGD/mLBqj7apAxzn7s2tGJfHrrLgy9mTLnsCTWw//1sogJhyzjVOGjprIIC8CFqMjSnHH2HZ9g\0D\0A/DgzE+Ge3Atf2hZQKXsvcJEPmbo0NI2VdMV+eKlmXb3KIXdCEKxmJj3ekav9FfBv7WxfEPjzFvYD\0D\0Aio+nEhEMy/0/ecGc/WLuo89UDNErXxc+4z6/wCs+CZv+iKZ+tJIX/COUgb1up8WMwusRRdv4QcmW\0D\0AdupwX3kSa+SjB1oF7ydJzyGfikwJcGapJsErEU4z0g781mzSDjJkaP+tBXhfAx2o45CsJOAPQKdL\0D\0Arosot4LKGAfmt1t06SAZf7IbiVQ=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Primary Certification Authority - G3\0D\0A=============================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UE\0D\0ABhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA4IEdlb1RydXN0\0D\0AIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFy\0D\0AeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIz\0D\0ANTk1OVowgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAo\0D\0AYykgMjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMT\0D\0ALUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZI\0D\0AhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz+uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5j\0D\0AK/BGvESyiaHAKAxJcCGVn2TAppMSAmUmhsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdE\0D\0Ac5IiaacDiGydY8hS2pgn5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3C\0D\0AIShwiP/WJmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exALDmKu\0D\0AdlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZChuOl1UcCAwEAAaNC\0D\0AMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMR5yo6hTgMdHNxr\0D\0A2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IBAQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9\0D\0Acr5HqQ6XErhK8WTTOd8lNNTBzU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbE\0D\0AAp7aDHdlDkQNkv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD\0D\0AAWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUHSJsMC8tJP33s\0D\0At/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2Gspki4cErx5z481+oghLrGREt\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0Athawte Primary Root CA - G2\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICiDCCAg2gAwIBAgIQNfwmXNmET8k9Jj1Xm67XVjAKBggqhkjOPQQDAzCBhDELMAkGA1UEBhMC\0D\0AVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjE4MDYGA1UECxMvKGMpIDIwMDcgdGhhd3RlLCBJbmMu\0D\0AIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3Qg\0D\0AQ0EgLSBHMjAeFw0wNzExMDUwMDAwMDBaFw0zODAxMTgyMzU5NTlaMIGEMQswCQYDVQQGEwJVUzEV\0D\0AMBMGA1UEChMMdGhhd3RlLCBJbmMuMTgwNgYDVQQLEy8oYykgMjAwNyB0aGF3dGUsIEluYy4gLSBG\0D\0Ab3IgYXV0aG9yaXplZCB1c2Ugb25seTEkMCIGA1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAt\0D\0AIEcyMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEotWcgnuVnfFSeIf+iha/BebfowJPDQfGAFG6DAJS\0D\0ALSKkQjnE/o/qycG+1E3/n3qe4rF8mq2nhglzh9HnmuN6papu+7qzcMBniKI11KOasf2twu8x+qi5\0D\0A8/sIxpHR+ymVo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU\0D\0AmtgAMADna3+FGO6Lts6KDPgR4bswCgYIKoZIzj0EAwMDaQAwZgIxAN344FdHW6fmCsO99YCKlzUN\0D\0AG4k8VIZ3KMqh9HneteY4sPBlcIx/AlTCv//YoT7ZzwIxAMSNlPzcU9LcnXgWHxUzI1NS41oxXZ3K\0D\0Arr0TKUQNJ1uo52icEvdYPy5yAlejj6EULg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0Athawte Primary Root CA - G3\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEKjCCAxKgAwIBAgIQYAGXt0an6rS0mtZLL/eQ+zANBgkqhkiG9w0BAQsFADCBrjELMAkGA1UE\0D\0ABhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2\0D\0AaWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDggdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhv\0D\0Acml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EgLSBHMzAeFw0w\0D\0AODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIGuMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMdGhh\0D\0Ad3RlLCBJbmMuMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMTgwNgYD\0D\0AVQQLEy8oYykgMjAwOCB0aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEkMCIG\0D\0AA1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAtIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\0D\0AMIIBCgKCAQEAsr8nLPvb2FvdeHsbnndmgcs+vHyu86YnmjSjaDFxODNi5PNxZnmxqWWjpYvVj2At\0D\0AP0LMqmsywCPLLEHd5N/8YZzic7IilRFDGF/Eth9XbAoFWCLINkw6fKXRz4aviKdEAhN0cXMKQlkC\0D\0A+BsUa0Lfb1+6a4KinVvnSr0eAXLbS3ToO39/fR8EtCab4LRarEc9VbjXsCZSKAExQGbY2SS99irY\0D\0A7CFJXJv2eul/VTV+lmuNk5Mny5K76qxAwJ/C+IDPXfRa3M50hqY+bAtTyr2SzhkGcuYMXDhpxwTW\0D\0AvGzOW/b3aJzcJRVIiKHpqfiYnODz1TEoYRFsZ5aNOZnLwkUkOQIDAQABo0IwQDAPBgNVHRMBAf8E\0D\0ABTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUrWyqlGCc7eT/+j4KdCtjA/e2Wb8wDQYJ\0D\0AKoZIhvcNAQELBQADggEBABpA2JVlrAmSicY59BDlqQ5mU1143vokkbvnRFHfxhY0Cu9qRFHqKweK\0D\0AA3rD6z8KLFIWoCtDuSWQP3CpMyVtRRooOyfPqsMpQhvfO0zAMzRbQYi/aytlryjvsvXDqmbOe1bu\0D\0At8jLZ8HJnBoYuMTDSQPxYA5QzUbF83d597YV4Djbxy8ooAw/dyZ02SUS2jHaGh7cKUGRIjxpp7sC\0D\0A8rZcJwOJ9Abqm+RyguOhCcHpABnTPtRwa7pxpqpYrvS76Wy274fMm7v/OeZWYdMKp8RcTGB7BXcm\0D\0Aer/YB1IsYvdwY9k5vG8cwnncdimvzsUsZAReiDZuMdRAGmI0Nj81Aa6sY6A=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGeoTrust Primary Certification Authority - G2\0D\0A=============================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDELMAkGA1UEBhMC\0D\0AVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA3IEdlb1RydXN0IElu\0D\0AYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBD\0D\0AZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1\0D\0AOVowgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg\0D\0AMjAwNyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMTLUdl\0D\0Ab1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjB2MBAGByqGSM49AgEG\0D\0ABSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcLSo17VDs6bl8VAsBQps8lL33KSLjHUGMc\0D\0AKiEIfJo22Av+0SbFWDEwKCXzXV2juLaltJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYD\0D\0AVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+\0D\0AEVXVMAoGCCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGTqQ7m\0D\0AndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBuczrD6ogRLQy7rQkgu2\0D\0AnpaqBA+K\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AVeriSign Universal Root Certification Authority\0D\0A===============================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCBvTELMAkGA1UE\0D\0ABhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO\0D\0AZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk\0D\0AIHVzZSBvbmx5MTgwNgYDVQQDEy9WZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9u\0D\0AIEF1dGhvcml0eTAeFw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJV\0D\0AUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdv\0D\0AcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl\0D\0AIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNhbCBSb290IENlcnRpZmljYXRpb24gQXV0\0D\0AaG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj\0D\0A1mCOkdeQmIN65lgZOIzF9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGP\0D\0AMiJhgsWHH26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+HLL72\0D\0A9fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN/BMReYTtXlT2NJ8I\0D\0AAfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPTrJ9VAMf2CGqUuV/c4DPxhGD5WycR\0D\0AtPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0G\0D\0ACCsGAQUFBwEMBGEwX6FdoFswWTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2O\0D\0Aa8PPgGrUSBgsexkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud\0D\0ADgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4sAPmLGd75JR3\0D\0AY8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+seQxIcaBlVZaDrHC1LGmWazx\0D\0AY8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTx\0D\0AP/jgdFcrGJ2BtMQo2pSXpXDrrB2+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+P\0D\0AwGZsY6rp2aQW9IHRlRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4\0D\0AmJO37M2CYfE45k+XmCpajQ==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AVeriSign Class 3 Public Primary Certification Authority - G4\0D\0A============================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjELMAkGA1UEBhMC\0D\0AVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3\0D\0Ab3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVz\0D\0AZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj\0D\0AYXRpb24gQXV0aG9yaXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjEL\0D\0AMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU\0D\0AcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRo\0D\0Ab3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5\0D\0AIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8\0D\0AUtpkmw4tXNherJI9/gHmGUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGz\0D\0Arl0Bp3vefLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUwAwEB\0D\0A/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEw\0D\0AHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24u\0D\0AY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMWkf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMD\0D\0AA2gAMGUCMGYhDBgmYFo4e1ZC4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIx\0D\0AAJw9SDkjOVgaFRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ANetLock Arany (Class Gold) F\C5\91tan\C3\BAs\C3\ADtv\C3\A1ny\0D\0A========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEFTCCAv2gAwIBAgIGSUEs5AAQMA0GCSqGSIb3DQEBCwUAMIGnMQswCQYDVQQGEwJIVTERMA8G\0D\0AA1UEBwwIQnVkYXBlc3QxFTATBgNVBAoMDE5ldExvY2sgS2Z0LjE3MDUGA1UECwwuVGFuw7pzw610\0D\0AdsOhbnlraWFkw7NrIChDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzKTE1MDMGA1UEAwwsTmV0TG9jayBB\0D\0AcmFueSAoQ2xhc3MgR29sZCkgRsWRdGFuw7pzw610dsOhbnkwHhcNMDgxMjExMTUwODIxWhcNMjgx\0D\0AMjA2MTUwODIxWjCBpzELMAkGA1UEBhMCSFUxETAPBgNVBAcMCEJ1ZGFwZXN0MRUwEwYDVQQKDAxO\0D\0AZXRMb2NrIEtmdC4xNzA1BgNVBAsMLlRhbsO6c8OtdHbDoW55a2lhZMOzayAoQ2VydGlmaWNhdGlv\0D\0AbiBTZXJ2aWNlcykxNTAzBgNVBAMMLE5ldExvY2sgQXJhbnkgKENsYXNzIEdvbGQpIEbFkXRhbsO6\0D\0Ac8OtdHbDoW55MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxCRec75LbRTDofTjl5Bu\0D\0A0jBFHjzuZ9lk4BqKf8owyoPjIMHj9DrTlF8afFttvzBPhCf2nx9JvMaZCpDyD/V/Q4Q3Y1GLeqVw\0D\0A/HpYzY6b7cNGbIRwXdrzAZAj/E4wqX7hJ2Pn7WQ8oLjJM2P+FpD/sLj916jAwJRDC7bVWaaeVtAk\0D\0AH3B5r9s5VA1lddkVQZQBr17s9o3x/61k/iCa11zr/qYfCGSji3ZVrR47KGAuhyXoqq8fxmRGILdw\0D\0AfzzeSNuWU7c5d+Qa4scWhHaXWy+7GRWF+GmF9ZmnqfI0p6m2pgP8b4Y9VHx2BJtr+UBdADTHLpl1\0D\0AneWIA6pN+APSQnbAGwIDAKiLo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIB\0D\0ABjAdBgNVHQ4EFgQUzPpnk/C2uNClwB7zU/2MU9+D15YwDQYJKoZIhvcNAQELBQADggEBAKt/7hwW\0D\0AqZw8UQCgwBEIBaeZ5m8BiFRhbvG5GK1Krf6BQCOUL/t1fC8oS2IkgYIL9WHxHG64YTjrgfpioTta\0D\0AYtOUZcTh5m2C+C8lcLIhJsFyUR+MLMOEkMNaj7rP9KdlpeuY0fsFskZ1FSNqb4VjMIDw1Z4fKRzC\0D\0AbLBQWV2QWzuoDTDPv31/zvGdg73JRm4gpvlhUbohL3u+pRVjodSVh/GeufOJ8z2FuLjbvrW5Kfna\0D\0ANwUASZQDhETnv0Mxz3WLJdH0pmT1kvarBes96aULNmLazAZfNou2XjG4Kvte9nHfRCaexOYNkbQu\0D\0AdZWAUWpLMKawYqGT8ZvYzsRjdT9ZR7E=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStaat der Nederlanden Root CA - G2\0D\0A==================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFyjCCA7KgAwIBAgIEAJiWjDANBgkqhkiG9w0BAQsFADBaMQswCQYDVQQGEwJOTDEeMBwGA1UE\0D\0ACgwVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSswKQYDVQQDDCJTdGFhdCBkZXIgTmVkZXJsYW5kZW4g\0D\0AUm9vdCBDQSAtIEcyMB4XDTA4MDMyNjExMTgxN1oXDTIwMDMyNTExMDMxMFowWjELMAkGA1UEBhMC\0D\0ATkwxHjAcBgNVBAoMFVN0YWF0IGRlciBOZWRlcmxhbmRlbjErMCkGA1UEAwwiU3RhYXQgZGVyIE5l\0D\0AZGVybGFuZGVuIFJvb3QgQ0EgLSBHMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMVZ\0D\0A5291qj5LnLW4rJ4L5PnZyqtdj7U5EILXr1HgO+EASGrP2uEGQxGZqhQlEq0i6ABtQ8SpuOUfiUtn\0D\0AvWFI7/3S4GCI5bkYYCjDdyutsDeqN95kWSpGV+RLufg3fNU254DBtvPUZ5uW6M7XxgpT0GtJlvOj\0D\0ACwV3SPcl5XCsMBQgJeN/dVrlSPhOewMHBPqCYYdu8DvEpMfQ9XQ+pV0aCPKbJdL2rAQmPlU6Yiil\0D\0Ae7Iwr/g3wtG61jj99O9JMDeZJiFIhQGp5Rbn3JBV3w/oOM2ZNyFPXfUib2rFEhZgF1XyZWampzCR\0D\0AOME4HYYEhLoaJXhena/MUGDWE4dS7WMfbWV9whUYdMrhfmQpjHLYFhN9C0lK8SgbIHRrxT3dsKpI\0D\0ACT0ugpTNGmXZK4iambwYfp/ufWZ8Pr2UuIHOzZgweMFvZ9C+X+Bo7d7iscksWXiSqt8rYGPy5V65\0D\0A48r6f1CGPqI0GAwJaCgRHOThuVw+R7oyPxjMW4T182t0xHJ04eOLoEq9jWYv6q012iDTiIJh8BIi\0D\0AtrzQ1aTsr1SIJSQ8p22xcik/Plemf1WvbibG/ufMQFxRRIEKeN5KzlW/HdXZt1bv8Hb/C3m1r737\0D\0AqWmRRpdogBQ2HbN/uymYNqUg+oJgYjOk7Na6B6duxc8UpufWkjTYgfX8HV2qXB72o007uPc5AgMB\0D\0AAAGjgZcwgZQwDwYDVR0TAQH/BAUwAwEB/zBSBgNVHSAESzBJMEcGBFUdIAAwPzA9BggrBgEFBQcC\0D\0AARYxaHR0cDovL3d3dy5wa2lvdmVyaGVpZC5ubC9wb2xpY2llcy9yb290LXBvbGljeS1HMjAOBgNV\0D\0AHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJFoMocVHYnitfGsNig0jQt8YojrMA0GCSqGSIb3DQEBCwUA\0D\0AA4ICAQCoQUpnKpKBglBu4dfYszk78wIVCVBR7y29JHuIhjv5tLySCZa59sCrI2AGeYwRTlHSeYAz\0D\0A+51IvuxBQ4EffkdAHOV6CMqqi3WtFMTC6GY8ggen5ieCWxjmD27ZUD6KQhgpxrRW/FYQoAUXvQwj\0D\0Af/ST7ZwaUb7dRUG/kSS0H4zpX897IZmflZ85OkYcbPnNe5yQzSipx6lVu6xiNGI1E0sUOlWDuYaN\0D\0AkqbG9AclVMwWVxJKgnjIFNkXgiYtXSAfea7+1HAWFpWD2DU5/1JddRwWxRNVz0fMdWVSSt7wsKfk\0D\0ACpYL+63C4iWEst3kvX5ZbJvw8NjnyvLplzh+ib7M+zkXYT9y2zqR2GUBGR2tUKRXCnxLvJxxcypF\0D\0AURmFzI79R6d0lR2o0a9OF7FpJsKqeFdbxU2n5Z4FF5TKsl+gSRiNNOkmbEgeqmiSBeGCc1qb3Adb\0D\0ACG19ndeNIdn8FCCqwkXfP+cAslHkwvgFuXkajDTznlvkN1trSt8sV4pAWja63XVECDdCcAz+3F4h\0D\0AoKOKwJCcaNpQ5kUQR3i2TtJlycM33+FCY7BXN0Ute4qcvwXqZVUz9zkQxSgqIXobisQk+T8VyJoV\0D\0AIPVVYpbtbZNQvOSqeK3Zywplh6ZmwcSBo3c6WB4L7oOLnR7SUqTMHW+wmG2UMbX4cQrcufx9MmDm\0D\0A66+KAQ==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AJuur-SK\0D\0A=======\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIE5jCCA86gAwIBAgIEO45L/DANBgkqhkiG9w0BAQUFADBdMRgwFgYJKoZIhvcNAQkBFglwa2lA\0D\0Ac2suZWUxCzAJBgNVBAYTAkVFMSIwIAYDVQQKExlBUyBTZXJ0aWZpdHNlZXJpbWlza2Vza3VzMRAw\0D\0ADgYDVQQDEwdKdXVyLVNLMB4XDTAxMDgzMDE0MjMwMVoXDTE2MDgyNjE0MjMwMVowXTEYMBYGCSqG\0D\0ASIb3DQEJARYJcGtpQHNrLmVlMQswCQYDVQQGEwJFRTEiMCAGA1UEChMZQVMgU2VydGlmaXRzZWVy\0D\0AaW1pc2tlc2t1czEQMA4GA1UEAxMHSnV1ci1TSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\0D\0AggEBAIFxNj4zB9bjMI0TfncyRsvPGbJgMUaXhvSYRqTCZUXP00B841oiqBB4M8yIsdOBSvZiF3tf\0D\0ATQou0M+LI+5PAk676w7KvRhj6IAcjeEcjT3g/1tf6mTll+g/mX8MCgkzABpTpyHhOEvWgxutr2TC\0D\0A+Rx6jGZITWYfGAriPrsfB2WThbkasLnE+w0R9vXW+RvHLCu3GFH+4Hv2qEivbDtPL+/40UceJlfw\0D\0AUR0zlv/vWT3aTdEVNMfqPxZIe5EcgEMPPbgFPtGzlc3Yyg/CQ2fbt5PgIoIuvvVoKIO5wTtpeyDa\0D\0ATpxt4brNj3pssAki14sL2xzVWiZbDcDq5WDQn/413z8CAwEAAaOCAawwggGoMA8GA1UdEwEB/wQF\0D\0AMAMBAf8wggEWBgNVHSAEggENMIIBCTCCAQUGCisGAQQBzh8BAQEwgfYwgdAGCCsGAQUFBwICMIHD\0D\0AHoHAAFMAZQBlACAAcwBlAHIAdABpAGYAaQBrAGEAYQB0ACAAbwBuACAAdgDkAGwAagBhAHMAdABh\0D\0AAHQAdQBkACAAQQBTAC0AaQBzACAAUwBlAHIAdABpAGYAaQB0AHMAZQBlAHIAaQBtAGkAcwBrAGUA\0D\0AcwBrAHUAcwAgAGEAbABhAG0ALQBTAEsAIABzAGUAcgB0AGkAZgBpAGsAYQBhAHQAaQBkAGUAIABr\0D\0AAGkAbgBuAGkAdABhAG0AaQBzAGUAawBzMCEGCCsGAQUFBwIBFhVodHRwOi8vd3d3LnNrLmVlL2Nw\0D\0Acy8wKwYDVR0fBCQwIjAgoB6gHIYaaHR0cDovL3d3dy5zay5lZS9qdXVyL2NybC8wHQYDVR0OBBYE\0D\0AFASqekej5ImvGs8KQKcYP2/v6X2+MB8GA1UdIwQYMBaAFASqekej5ImvGs8KQKcYP2/v6X2+MA4G\0D\0AA1UdDwEB/wQEAwIB5jANBgkqhkiG9w0BAQUFAAOCAQEAe8EYlFOiCfP+JmeaUOTDBS8rNXiRTHyo\0D\0AERF5TElZrMj3hWVcRrs7EKACr81Ptcw2Kuxd/u+gkcm2k298gFTsxwhwDY77guwqYHhpNjbRxZyL\0D\0AabVAyJRld/JXIWY7zoVAtjNjGr95HvxcHdMdkxuLDF2FvZkwMhgJkVLpfKG6/2SSmuz+Ne6ML678\0D\0AIIbsSt4beDI3poHSna9aEhbKmVv8b20OxaAehsmR0FyYgl9jDIpaq9iVpszLita/ZEuOyoqysOkh\0D\0AMp6qqIWYNIE5ITuoOlIyPfZrN4YGWhWY3PARZv40ILcD9EEQfTmEeZZyY7aWAuVrua0ZTbvGRNs2\0D\0Ayyqcjg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AHongkong Post Root CA 1\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDMDCCAhigAwIBAgICA+gwDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCSEsxFjAUBgNVBAoT\0D\0ADUhvbmdrb25nIFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3QgUm9vdCBDQSAxMB4XDTAzMDUx\0D\0ANTA1MTMxNFoXDTIzMDUxNTA0NTIyOVowRzELMAkGA1UEBhMCSEsxFjAUBgNVBAoTDUhvbmdrb25n\0D\0AIFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3QgUm9vdCBDQSAxMIIBIjANBgkqhkiG9w0BAQEF\0D\0AAAOCAQ8AMIIBCgKCAQEArP84tulmAknjorThkPlAj3n54r15/gK97iSSHSL22oVyaf7XPwnU3ZG1\0D\0AApzQjVrhVcNQhrkpJsLj2aDxaQMoIIBFIi1WpztUlVYiWR8o3x8gPW2iNr4joLFutbEnPzlTCeqr\0D\0Aauh0ssJlXI6/fMN4hM2eFvz1Lk8gKgifd/PFHsSaUmYeSF7jEAaPIpjhZY4bXSNmO7ilMlHIhqqh\0D\0AqZ5/dpTCpmy3QfDVyAY45tQM4vM7TG1QjMSDJ8EThFk9nnV0ttgCXjqQesBCNnLsak3c78QA3xMY\0D\0AV18meMjWCnl3v/evt3a5pQuEF10Q6m/hq5URX208o1xNg1vysxmKgIsLhwIDAQABoyYwJDASBgNV\0D\0AHRMBAf8ECDAGAQH/AgEDMA4GA1UdDwEB/wQEAwIBxjANBgkqhkiG9w0BAQUFAAOCAQEADkbVPK7i\0D\0Ah9legYsCmEEIjEy82tvuJxuC52pF7BaLT4Wg87JwvVqWuspube5Gi27nKi6Wsxkz67SfqLI37pio\0D\0Al7Yutmcn1KZJ/RyTZXaeQi/cImyaT/JaFTmxcdcrUehtHJjA2Sr0oYJ71clBoiMBdDhViw+5Lmei\0D\0AIAQ32pwL0xch4I+XeTRvhEgCIDMb5jREn5Fw9IBehEPCKdJsEhTkYY2sEJCehFC78JZvRZ+K88ps\0D\0AT/oROhUVRsPNH4NbLUES7VBnQRM9IauUiqpOfMGx+6fWtScvl6tu4B3i0RwsH0Ti/L6RoZz71ilT\0D\0Ac4afU9hDDl3WY4JxHYB0yvbiAmvZWg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASecureSign RootCA11\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDbTCCAlWgAwIBAgIBATANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQGEwJKUDErMCkGA1UEChMi\0D\0ASmFwYW4gQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcywgSW5jLjEcMBoGA1UEAxMTU2VjdXJlU2lnbiBS\0D\0Ab290Q0ExMTAeFw0wOTA0MDgwNDU2NDdaFw0yOTA0MDgwNDU2NDdaMFgxCzAJBgNVBAYTAkpQMSsw\0D\0AKQYDVQQKEyJKYXBhbiBDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzLCBJbmMuMRwwGgYDVQQDExNTZWN1\0D\0AcmVTaWduIFJvb3RDQTExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA/XeqpRyQBTvL\0D\0ATJszi1oURaTnkBbR31fSIRCkF/3frNYfp+TbfPfs37gD2pRY/V1yfIw/XwFndBWW4wI8h9uuywGO\0D\0AwvNmxoVF9ALGOrVisq/6nL+k5tSAMJjzDbaTj6nU2DbysPyKyiyhFTOVMdrAG/LuYpmGYz+/3ZMq\0D\0Ag6h2uRMft85OQoWPIucuGvKVCbIFtUROd6EgvanyTgp9UK31BQ1FT0Zx/Sg+U/sE2C3XZR1KG/rP\0D\0AO7AxmjVuyIsG0wCR8pQIZUyxNAYAeoni8McDWc/V1uinMrPmmECGxc0nEovMe863ETxiYAcjPitA\0D\0AbpSACW22s293bzUIUPsCh8U+iQIDAQABo0IwQDAdBgNVHQ4EFgQUW/hNT7KlhtQ60vFjmqC+CfZX\0D\0At94wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAKCh\0D\0AOBZmLqdWHyGcBvod7bkixTgm2E5P7KN/ed5GIaGHd48HCJqypMWvDzKYC3xmKbabfSVSSUOrTC4r\0D\0AbnpwrxYO4wJs+0LmGJ1F2FXI6Dvd5+H0LgscNFxsWEr7jIhQX5Ucv+2rIrVls4W6ng+4reV6G4pQ\0D\0AOh29Dbx7VFALuUKvVaAYga1lme++5Jy/xIWrQbJUb9wlze144o4MjQlJ3WN7WmmWAiGovVJZ6X01\0D\0Ay8hSyn+B/tlr0/cR7SXf+Of5pPpyl4RTDaXQMhhRdlkUbA/r7F+AjHVDg8OFmP9Mni0N5HeDk061\0D\0AlgeLKBObjBmNQSdJQO7e5iNEOdyhIta6A/I=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AACEDICOM Root\0D\0A=============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFtTCCA52gAwIBAgIIYY3HhjsBggUwDQYJKoZIhvcNAQEFBQAwRDEWMBQGA1UEAwwNQUNFRElD\0D\0AT00gUm9vdDEMMAoGA1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00xCzAJBgNVBAYTAkVTMB4XDTA4\0D\0AMDQxODE2MjQyMloXDTI4MDQxMzE2MjQyMlowRDEWMBQGA1UEAwwNQUNFRElDT00gUm9vdDEMMAoG\0D\0AA1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00xCzAJBgNVBAYTAkVTMIICIjANBgkqhkiG9w0BAQEF\0D\0AAAOCAg8AMIICCgKCAgEA/5KV4WgGdrQsyFhIyv2AVClVYyT/kGWbEHV7w2rbYgIB8hiGtXxaOLHk\0D\0AWLn709gtn70yN78sFW2+tfQh0hOR2QetAQXW8713zl9CgQr5auODAKgrLlUTY4HKRxx7XBZXehuD\0D\0AYAQ6PmXDzQHe3qTWDLqO3tkE7hdWIpuPY/1NFgu3e3eM+SW10W2ZEi5PGrjm6gSSrj0RuVFCPYew\0D\0AMYWveVqc/udOXpJPQ/yrOq2lEiZmueIM15jO1FillUAKt0SdE3QrwqXrIhWYENiLxQSfHY9g5QYb\0D\0Am8+5eaA9oiM/Qj9r+hwDezCNzmzAv+YbX79nuIQZ1RXve8uQNjFiybwCq0Zfm/4aaJQ0PZCOrfbk\0D\0AHQl/Sog4P75n/TSW9R28MHTLOO7VbKvU/PQAtwBbhTIWdjPp2KOZnQUAqhbm84F9b32qhm2tFXTT\0D\0AxKJxqvQUfecyuB+81fFOvW8XAjnXDpVCOscAPukmYxHqC9FK/xidstd7LzrZlvvoHpKuE1XI2Sf2\0D\0A3EgbsCTBheN3nZqk8wwRHQ3ItBTutYJXCb8gWH8vIiPYcMt5bMlL8qkqyPyHK9caUPgn6C9D4zq9\0D\0A2Fdx/c6mUlv53U3t5fZvie27k5x2IXXwkkwp9y+cAS7+UEaeZAwUswdbxcJzbPEHXEUkFDWug/Fq\0D\0ATYl6+rPYLWbwNof1K1MCAwEAAaOBqjCBpzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFKaz\0D\0A4SsrSbbXc6GqlPUB53NlTKxQMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUprPhKytJttdzoaqU\0D\0A9QHnc2VMrFAwRAYDVR0gBD0wOzA5BgRVHSAAMDEwLwYIKwYBBQUHAgEWI2h0dHA6Ly9hY2VkaWNv\0D\0AbS5lZGljb21ncm91cC5jb20vZG9jMA0GCSqGSIb3DQEBBQUAA4ICAQDOLAtSUWImfQwng4/F9tqg\0D\0AaHtPkl7qpHMyEVNEskTLnewPeUKzEKbHDZ3Ltvo/Onzqv4hTGzz3gvoFNTPhNahXwOf9jU8/kzJP\0D\0AeGYDdwdY6ZXIfj7QeQCM8htRM5u8lOk6e25SLTKeI6RF+7YuE7CLGLHdztUdp0J/Vb77W7tH1Pwk\0D\0AzQSulgUV1qzOMPPKC8W64iLgpq0i5ALudBF/TP94HTXa5gI06xgSYXcGCRZj6hitoocf8seACQl1\0D\0AThCojz2GuHURwCRiipZ7SkXp7FnFvmuD5uHorLUwHv4FB4D54SMNUI8FmP8sX+g7tq3PgbUhh8oI\0D\0AKiMnMCArz+2UW6yyetLHKKGKC5tNSixthT8Jcjxn4tncB7rrZXtaAWPWkFtPF2Y9fwsZo5NjEFIq\0D\0AnxQWWOLcpfShFosOkYuByptZ+thrkQdlVV9SH686+5DdaaVbnG0OLLb6zqylfDJKZ0DcMDQj3dcE\0D\0AI2bw/FWAp/tmGYI1Z2JwOV5vx+qQQEQIHriy1tvuWacNGHk0vFQYXlPKNFHtRQrmjseCNj6nOGOp\0D\0AMCwXEGCSn1WHElkQwg9naRHMTh5+Spqtr0CodaxWkHS4oJyleW/c6RrIaQXpuvoDs3zk4E7Czp3o\0D\0AtkYNbn5XOmeUwssfnHdKZ05phkOTOPu220+DkdRgfks+KzgHVZhepA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AMicrosec e-Szigno Root CA 2009\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIECjCCAvKgAwIBAgIJAMJ+QwRORz8ZMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYDVQQGEwJIVTER\0D\0AMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1pY3Jv\0D\0Ac2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5o\0D\0AdTAeFw0wOTA2MTYxMTMwMThaFw0yOTEyMzAxMTMwMThaMIGCMQswCQYDVQQGEwJIVTERMA8GA1UE\0D\0ABwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1pY3Jvc2VjIGUt\0D\0AU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5odTCCASIw\0D\0ADQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOn4j/NjrdqG2KfgQvvPkd6mJviZpWNwrZuuyjNA\0D\0AfW2WbqEORO7hE52UQlKavXWFdCyoDh2Tthi3jCyoz/tccbna7P7ofo/kLx2yqHWH2Leh5TvPmUpG\0D\0A0IMZfcChEhyVbUr02MelTTMuhTlAdX4UfIASmFDHQWe4oIBhVKZsTh/gnQ4H6cm6M+f+wFUoLAKA\0D\0Apxn1ntxVUwOXewdI/5n7N4okxFnMUBBjjqqpGrCEGob5X7uxUG6k0QrM1XF+H6cbfPVTbiJfyyvm\0D\0A1HxdrtbCxkzlBQHZ7Vf8wSN5/PrIJIOV87VqUQHQd9bpEqH5GoP7ghu5sJf0dgYzQ0mg/wu1+rUC\0D\0AAwEAAaOBgDB+MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBTLD8bf\0D\0AQkPMPcu1SCOhGnqmKrs0aDAfBgNVHSMEGDAWgBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAbBgNVHREE\0D\0AFDASgRBpbmZvQGUtc3ppZ25vLmh1MA0GCSqGSIb3DQEBCwUAA4IBAQDJ0Q5eLtXMs3w+y/w9/w0o\0D\0AlZMEyL/azXm4Q5DwpL7v8u8hmLzU1F0G9u5C7DBsoKqpyvGvivo/C3NqPuouQH4frlRheesuCDfX\0D\0AI/OMn74dseGkddug4lQUsbocKaQY9hK6ohQU4zE1yED/t+AFdlfBHFny+L/k7SViXITwfn4fs775\0D\0AtyERzAMBVnCnEJIeGzSBHq2cGsMEPO0CYdYeBvNfOofyK/FFh+U9rNHHV4S9a67c2Pm2G2JwCz02\0D\0AyULyMtd6YebS2z3PyKnJm9zbWETXbzivf3jTo60adbocwTZ8jx5tHMN1Rq41Bab2XD0h7lbwyYIi\0D\0ALXpUq3DDfSJlgnCW\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGlobalSign Root CA - R3\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4GA1UECxMXR2xv\0D\0AYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMTCkdsb2Jh\0D\0AbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxT\0D\0AaWduIFJvb3QgQ0EgLSBSMzETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2ln\0D\0AbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWt\0D\0AiHL8RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsTgHeMCOFJ\0D\0A0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmmKPZpO/bLyCiR5Z2KYVc3\0D\0ArHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zdQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjl\0D\0AOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2\0D\0AxmmFghcCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\0D\0AFI/wS3+oLkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZURUm7\0D\0AlgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMpjjM5RcOO5LlXbKr8\0D\0AEpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK6fBdRoyV3XpYKBovHd7NADdBj+1E\0D\0AbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQXmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18\0D\0AYIvDQVETI53O9zJrlAGomecsMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7r\0D\0AkpeDMdmztcpHWD9f\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAutoridad de Certificacion Firmaprofesional CIF A62634068\0D\0A=========================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIGFDCCA/ygAwIBAgIIU+w77vuySF8wDQYJKoZIhvcNAQEFBQAwUTELMAkGA1UEBhMCRVMxQjBA\0D\0ABgNVBAMMOUF1dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIEZpcm1hcHJvZmVzaW9uYWwgQ0lGIEE2\0D\0AMjYzNDA2ODAeFw0wOTA1MjAwODM4MTVaFw0zMDEyMzEwODM4MTVaMFExCzAJBgNVBAYTAkVTMUIw\0D\0AQAYDVQQDDDlBdXRvcmlkYWQgZGUgQ2VydGlmaWNhY2lvbiBGaXJtYXByb2Zlc2lvbmFsIENJRiBB\0D\0ANjI2MzQwNjgwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKlmuO6vj78aI14H9M2uDD\0D\0AUtd9thDIAl6zQyrET2qyyhxdKJp4ERppWVevtSBC5IsP5t9bpgOSL/UR5GLXMnE42QQMcas9UX4P\0D\0AB99jBVzpv5RvwSmCwLTaUbDBPLutN0pcyvFLNg4kq7/DhHf9qFD0sefGL9ItWY16Ck6WaVICqjaY\0D\0A7Pz6FIMMNx/Jkjd/14Et5cS54D40/mf0PmbR0/RAz15iNA9wBj4gGFrO93IbJWyTdBSTo3OxDqqH\0D\0AECNZXyAFGUftaI6SEspd/NYrspI8IM/hX68gvqB2f3bl7BqGYTM+53u0P6APjqK5am+5hyZvQWyI\0D\0AplD9amML9ZMWGxmPsu2bm8mQ9QEM3xk9Dz44I8kvjwzRAv4bVdZO0I08r0+k8/6vKtMFnXkIoctX\0D\0AMbScyJCyZ/QYFpM6/EfY0XiWMR+6KwxfXZmtY4laJCB22N/9q06mIqqdXuYnin1oKaPnirjaEbsX\0D\0ALZmdEyRG98Xi2J+Of8ePdG1asuhy9azuJBCtLxTa/y2aRnFHvkLfuwHb9H/TKI8xWVvTyQKmtFLK\0D\0Abpf7Q8UIJm+K9Lv9nyiqDdVF8xM6HdjAeI9BZzwelGSuewvF6NkBiDkal4ZkQdU7hwxu+g/GvUgU\0D\0AvzlN1J5Bto+WHWOWk9mVBngxaJ43BjuAiUVhOSPHG0SjFeUc+JIwuwIDAQABo4HvMIHsMBIGA1Ud\0D\0AEwEB/wQIMAYBAf8CAQEwDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRlzeurNR4APn7VdMActHNH\0D\0ADhpkLzCBpgYDVR0gBIGeMIGbMIGYBgRVHSAAMIGPMC8GCCsGAQUFBwIBFiNodHRwOi8vd3d3LmZp\0D\0Acm1hcHJvZmVzaW9uYWwuY29tL2NwczBcBggrBgEFBQcCAjBQHk4AUABhAHMAZQBvACAAZABlACAA\0D\0AbABhACAAQgBvAG4AYQBuAG8AdgBhACAANAA3ACAAQgBhAHIAYwBlAGwAbwBuAGEAIAAwADgAMAAx\0D\0AADcwDQYJKoZIhvcNAQEFBQADggIBABd9oPm03cXF661LJLWhAqvdpYhKsg9VSytXjDvlMd3+xDLx\0D\0A51tkljYyGOylMnfX40S2wBEqgLk9am58m9Ot/MPWo+ZkKXzR4Tgegiv/J2Wv+xYVxC5xhOW1//qk\0D\0AR71kMrv2JYSiJ0L1ILDCExARzRAVukKQKtJE4ZYm6zFIEv0q2skGz3QeqUvVhyj5eTSSPi5E6PaP\0D\0AT481PyWzOdxjKpBrIF/EUhJOlywqrJ2X3kjyo2bbwtKDlaZmp54lD+kLM5FlClrD2VQS3a/DTg4f\0D\0AJl4N3LON7NWBcN7STyQF82xO9UxJZo3R/9ILJUFI/lGExkKvgATP0H5kSeTy36LssUzAKh3ntLFl\0D\0AosS88Zj0qnAHY7S42jtM+kAiMFsRpvAFDsYCA0irhpuF3dvd6qJ2gHN99ZwExEWN57kci57q13XR\0D\0AcrHedUTnQn3iV2t93Jm8PYMo6oCTjcVMZcFwgbg4/EMxsvYDNEeyrPsiBsse3RdHHF9mudMaotoR\0D\0AsaS8I8nkvof/uZS2+F0gStRf571oe2XyFR7SOqkt6dhrJKyXWERHrVkY8SFlcN7ONGCoQPHzPKTD\0D\0AKCOM/iczQ0CgFzzr6juwcqajuUpLXhZI9LK8yIySxZ2frHI2vDSANGupi5LAuBft7HZT9SQBjLMi\0D\0A6Et8Vcad+qMUu2WFbm5PEn4KPJ2V\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AIzenpe.com\0D\0A==========\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF8TCCA9mgAwIBAgIQALC3WhZIX7/hy/WL1xnmfTANBgkqhkiG9w0BAQsFADA4MQswCQYDVQQG\0D\0AEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5jb20wHhcNMDcxMjEz\0D\0AMTMwODI4WhcNMzcxMjEzMDgyNzI1WjA4MQswCQYDVQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMu\0D\0AQS4xEzARBgNVBAMMCkl6ZW5wZS5jb20wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDJ\0D\0A03rKDx6sp4boFmVqscIbRTJxldn+EFvMr+eleQGPicPK8lVx93e+d5TzcqQsRNiekpsUOqHnJJAK\0D\0AClaOxdgmlOHZSOEtPtoKct2jmRXagaKH9HtuJneJWK3W6wyyQXpzbm3benhB6QiIEn6HLmYRY2xU\0D\0A+zydcsC8Lv/Ct90NduM61/e0aL6i9eOBbsFGb12N4E3GVFWJGjMxCrFXuaOKmMPsOzTFlUFpfnXC\0D\0APCDFYbpRR6AgkJOhkEvzTnyFRVSa0QUmQbC1TR0zvsQDyCV8wXDbO/QJLVQnSKwv4cSsPsjLkkxT\0D\0AOTcj7NMB+eAJRE1NZMDhDVqHIrytG6P+JrUV86f8hBnp7KGItERphIPzidF0BqnMC9bC3ieFUCbK\0D\0AF7jJeodWLBoBHmy+E60QrLUk9TiRodZL2vG70t5HtfG8gfZZa88ZU+mNFctKy6lvROUbQc/hhqfK\0D\0A0GqfvEyNBjNaooXlkDWgYlwWTvDjovoDGrQscbNYLN57C9saD+veIR8GdwYDsMnvmfzAuU8Lhij+\0D\0A0rnq49qlw0dpEuDb8PYZi+17cNcC1u2HGCgsBCRMd+RIihrGO5rUD8r6ddIBQFqNeb+Lz0vPqhbB\0D\0AleStTIo+F5HUsWLlguWABKQDfo2/2n+iD5dPDNMN+9fR5XJ+HMh3/1uaD7euBUbl8agW7EekFwID\0D\0AAQABo4H2MIHzMIGwBgNVHREEgagwgaWBD2luZm9AaXplbnBlLmNvbaSBkTCBjjFHMEUGA1UECgw+\0D\0ASVpFTlBFIFMuQS4gLSBDSUYgQTAxMzM3MjYwLVJNZXJjLlZpdG9yaWEtR2FzdGVpeiBUMTA1NSBG\0D\0ANjIgUzgxQzBBBgNVBAkMOkF2ZGEgZGVsIE1lZGl0ZXJyYW5lbyBFdG9yYmlkZWEgMTQgLSAwMTAx\0D\0AMCBWaXRvcmlhLUdhc3RlaXowDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0O\0D\0ABBYEFB0cZQ6o8iV7tJHP5LGx5r1VdGwFMA0GCSqGSIb3DQEBCwUAA4ICAQB4pgwWSp9MiDrAyw6l\0D\0AFn2fuUhfGI8NYjb2zRlrrKvV9pF9rnHzP7MOeIWblaQnIUdCSnxIOvVFfLMMjlF4rJUT3sb9fbga\0D\0AkEyrkgPH7UIBzg/YsfqikuFgba56awmqxinuaElnMIAkejEWOVt+8Rwu3WwJrfIxwYJOubv5vr8q\0D\0AhT/AQKM6WfxZSzwoJNu0FXWuDYi6LnPAvViH5ULy617uHjAimcs30cQhbIHsvm0m5hzkQiCeR7Cs\0D\0Ag1lwLDXWrzY0tM07+DKo7+N4ifuNRSzanLh+QBxh5z6ikixL8s36mLYp//Pye6kfLqCTVyvehQP5\0D\0AaTfLnnhqBbTFMXiJ7HqnheG5ezzevh55hM6fcA5ZwjUukCox2eRFekGkLhObNA5me0mrZJfQRsN5\0D\0AnXJQY6aYWwa9SG3YOYNw6DXwBdGqvOPbyALqfP2C2sJbUjWumDqtujWTI6cfSN01RpiyEGjkpTHC\0D\0AClguGYEQyVB1/OpaFs4R1+7vUIgtYf8/QnMFlEPVjjxOAToZpR9GTnfQXeWBIiGH/pR9hNiTrdZo\0D\0AQ0iy2+tzJOeRf1SktoA+naM8THLCV8Sg1Mw4J87VBp6iSNnpn86CcDaTmjvfliHjWbcM2pE38P1Z\0D\0AWrOZyGlsQyYBNWNgVYkDOnXYukrZVP/u3oDYLdE41V4tC5h9Pmzb/CaIxw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AChambers of Commerce Root - 2008\0D\0A================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIHTzCCBTegAwIBAgIJAKPaQn6ksa7aMA0GCSqGSIb3DQEBBQUAMIGuMQswCQYDVQQGEwJFVTFD\0D\0AMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNv\0D\0AbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMu\0D\0AQS4xKTAnBgNVBAMTIENoYW1iZXJzIG9mIENvbW1lcmNlIFJvb3QgLSAyMDA4MB4XDTA4MDgwMTEy\0D\0AMjk1MFoXDTM4MDczMTEyMjk1MFowga4xCzAJBgNVBAYTAkVVMUMwQQYDVQQHEzpNYWRyaWQgKHNl\0D\0AZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNhbWVyZmlybWEuY29tL2FkZHJlc3MpMRIwEAYDVQQF\0D\0AEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENhbWVyZmlybWEgUy5BLjEpMCcGA1UEAxMgQ2hhbWJl\0D\0AcnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDgwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC\0D\0AAQCvAMtwNyuAWko6bHiUfaN/Gh/2NdW928sNRHI+JrKQUrpjOyhYb6WzbZSm891kDFX29ufyIiKA\0D\0AXuFixrYp4YFs8r/lfTJqVKAyGVn+H4vXPWCGhSRv4xGzdz4gljUha7MI2XAuZPeEklPWDrCQiorj\0D\0Ah40G072QDuKZoRuGDtqaCrsLYVAGUvGef3bsyw/QHg3PmTA9HMRFEFis1tPo1+XqxQEHd9ZR5gN/\0D\0AikilTWh1uem8nk4ZcfUyS5xtYBkL+8ydddy/Js2Pk3g5eXNeJQ7KXOt3EgfLZEFHcpOrUMPrCXZk\0D\0ANNI5t3YRCQ12RcSprj1qr7V9ZS+UWBDsXHyvfuK2GNnQm05aSd+pZgvMPMZ4fKecHePOjlO+Bd5g\0D\0AD2vlGts/4+EhySnB8esHnFIbAURRPHsl18TlUlRdJQfKFiC4reRB7noI/plvg6aRArBsNlVq5331\0D\0AlubKgdaX8ZSD6e2wsWsSaR6s+12pxZjptFtYer49okQ6Y1nUCyXeG0+95QGezdIp1Z8XGQpvvwyQ\0D\0A0wlf2eOKNcx5Wk0ZN5K3xMGtr/R5JJqyAQuxr1yW84Ay+1w9mPGgP0revq+ULtlVmhduYJ1jbLhj\0D\0Aya6BXBg14JC7vjxPNyK5fuvPnnchpj04gftI2jE9K+OJ9dC1vX7gUMQSibMjmhAxhduub+84Mxh2\0D\0AEQIDAQABo4IBbDCCAWgwEgYDVR0TAQH/BAgwBgEB/wIBDDAdBgNVHQ4EFgQU+SSsD7K1+HnA+mCI\0D\0AG8TZTQKeFxkwgeMGA1UdIwSB2zCB2IAU+SSsD7K1+HnA+mCIG8TZTQKeFxmhgbSkgbEwga4xCzAJ\0D\0ABgNVBAYTAkVVMUMwQQYDVQQHEzpNYWRyaWQgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNh\0D\0AbWVyZmlybWEuY29tL2FkZHJlc3MpMRIwEAYDVQQFEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENh\0D\0AbWVyZmlybWEgUy5BLjEpMCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDiC\0D\0ACQCj2kJ+pLGu2jAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUH\0D\0AAgEWHGh0dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZIhvcNAQEFBQADggIBAJASryI1\0D\0AwqM58C7e6bXpeHxIvj99RZJe6dqxGfwWPJ+0W2aeaufDuV2I6A+tzyMP3iU6XsxPpcG1Lawk0lgH\0D\0A3qLPaYRgM+gQDROpI9CF5Y57pp49chNyM/WqfcZjHwj0/gF/JM8rLFQJ3uIrbZLGOU8W6jx+ekbU\0D\0ARWpGqOt1glanq6B8aBMz9p0w8G8nOSQjKpD9kCk18pPfNKXG9/jvjA9iSnyu0/VU+I22mlaHFoI6\0D\0AM6taIgj3grrqLuBHmrS1RaMFO9ncLkVAO+rcf+g769HsJtg1pDDFOqxXnrN2pSB7+R5KBWIBpih1\0D\0AYJeSDW4+TTdDDZIVnBgizVGZoCkaPF+KMjNbMMeJL0eYD6MDxvbxrN8y8NmBGuScvfaAFPDRLLmF\0D\0A9dijscilIeUcE5fuDr3fKanvNFNb0+RqE4QGtjICxFKuItLcsiFCGtpA8CnJ7AoMXOLQusxI0zcK\0D\0AzBIKinmwPQN/aUv0NCB9szTqjktk9T79syNnFQ0EuPAtwQlRPLJsFfClI9eDdOTlLsn+mCdCxqvG\0D\0AnrDQWzilm1DefhiYtUU79nm06PcaewaD+9CL2rvHvRirCG88gGtAPxkZumWK5r7VXNM21+9AUiRg\0D\0AOGcEMeyP84LG3rlV8zsxkVrctQgVrXYlCg17LofiDKYGvCYQbTed7N14jHyAxfDZd0jQ\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGlobal Chambersign Root - 2008\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIHSTCCBTGgAwIBAgIJAMnN0+nVfSPOMA0GCSqGSIb3DQEBBQUAMIGsMQswCQYDVQQGEwJFVTFD\0D\0AMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNv\0D\0AbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMu\0D\0AQS4xJzAlBgNVBAMTHkdsb2JhbCBDaGFtYmVyc2lnbiBSb290IC0gMjAwODAeFw0wODA4MDExMjMx\0D\0ANDBaFw0zODA3MzExMjMxNDBaMIGsMQswCQYDVQQGEwJFVTFDMEEGA1UEBxM6TWFkcmlkIChzZWUg\0D\0AY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJ\0D\0AQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xJzAlBgNVBAMTHkdsb2JhbCBD\0D\0AaGFtYmVyc2lnbiBSb290IC0gMjAwODCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMDf\0D\0AVtPkOpt2RbQT2//BthmLN0EYlVJH6xedKYiONWwGMi5HYvNJBL99RDaxccy9Wglz1dmFRP+RVyXf\0D\0AXjaOcNFccUMd2drvXNL7G706tcuto8xEpw2uIRU/uXpbknXYpBI4iRmKt4DS4jJvVpyR1ogQC7N0\0D\0AZJJ0YPP2zxhPYLIj0Mc7zmFLmY/CDNBAspjcDahOo7kKrmCgrUVSY7pmvWjg+b4aqIG7HkF4ddPB\0D\0A/gBVsIdU6CeQNR1MM62X/JcumIS/LMmjv9GYERTtY/jKmIhYF5ntRQOXfjyGHoiMvvKRhI9lNNgA\0D\0ATH23MRdaKXoKGCQwoze1eqkBfSbW+Q6OWfH9GzO1KTsXO0G2Id3UwD2ln58fQ1DJu7xsepeY7s2M\0D\0AH/ucUa6LcL0nn3HAa6x9kGbo1106DbDVwo3VyJ2dwW3Q0L9R5OP4wzg2rtandeavhENdk5IMagfe\0D\0AOx2YItaswTXbo6Al/3K1dh3ebeksZixShNBFks4c5eUzHdwHU1SjqoI7mjcv3N2gZOnm3b2u/GSF\0D\0AHTynyQbehP9r6GsaPMWis0L7iwk+XwhSx2LE1AVxv8Rk5Pihg+g+EpuoHtQ2TS9x9o0o9oOpE9Jh\0D\0AwZG7SMA0j0GMS0zbaRL/UJScIINZc+18ofLx/d33SdNDWKBWY8o9PeU1VlnpDsogzCtLkykPAgMB\0D\0AAAGjggFqMIIBZjASBgNVHRMBAf8ECDAGAQH/AgEMMB0GA1UdDgQWBBS5CcqcHtvTbDprru1U8VuT\0D\0ABjUuXjCB4QYDVR0jBIHZMIHWgBS5CcqcHtvTbDprru1U8VuTBjUuXqGBsqSBrzCBrDELMAkGA1UE\0D\0ABhMCRVUxQzBBBgNVBAcTOk1hZHJpZCAoc2VlIGN1cnJlbnQgYWRkcmVzcyBhdCB3d3cuY2FtZXJm\0D\0AaXJtYS5jb20vYWRkcmVzcykxEjAQBgNVBAUTCUE4Mjc0MzI4NzEbMBkGA1UEChMSQUMgQ2FtZXJm\0D\0AaXJtYSBTLkEuMScwJQYDVQQDEx5HbG9iYWwgQ2hhbWJlcnNpZ24gUm9vdCAtIDIwMDiCCQDJzdPp\0D\0A1X0jzjAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0\0D\0AdHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZIhvcNAQEFBQADggIBAICIf3DekijZBZRG\0D\0A/5BXqfEv3xoNa/p8DhxJJHkn2EaqbylZUohwEurdPfWbU1Rv4WCiqAm57OtZfMY18dwY6fFn5a+6\0D\0AReAJ3spED8IXDneRRXozX1+WLGiLwUePmJs9wOzL9dWCkoQ10b42OFZyMVtHLaoXpGNR6woBrX/s\0D\0AdZ7LoR/xfxKxueRkf2fWIyr0uDldmOghp+G9PUIadJpwr2hsUF1Jz//7Dl3mLEfXgTpZALVza2Mg\0D\0A9jFFCDkO9HB+QHBaP9BrQql0PSgvAm11cpUJjUhjxsYjV5KTXjXBjfkK9yydYhz2rXzdpjEetrHH\0D\0AfoUm+qRqtdpjMNHvkzeyZi99Bffnt0uYlDXA2TopwZ2yUDMdSqlapskD7+3056huirRXhOukP9Du\0D\0AqqqHW2Pok+JrqNS4cnhrG+055F3Lm6qH1U9OAP7Zap88MQ8oAgF9mOinsKJknnn4SPIVqczmyETr\0D\0AP3iZ8ntxPjzxmKfFGBI/5rsoM0LpRQp8bfKGeS/Fghl9CYl8slR2iK7ewfPM4W7bMdaTrpmg7yVq\0D\0Ac5iJWzouE4gev8CSlDQb4ye3ix5vQv/n6TebUB0tovkC7stYWDpxvGjjqsGvHCgfotwjZT+B6q6Z\0D\0A09gwzxMNTxXJhLynSC34MCN32EZLeW32jO06f2ARePTpm67VVMB0gNELQp/B\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGo Daddy Root Certificate Authority - G2\0D\0A========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDxTCCAq2gAwIBAgIBADANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVVMxEDAOBgNVBAgT\0D\0AB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29tLCBJbmMu\0D\0AMTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5\0D\0AMDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgYMxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6\0D\0Ab25hMRMwEQYDVQQHEwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNvbSwgSW5jLjExMC8G\0D\0AA1UEAxMoR28gRGFkZHkgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZI\0D\0AhvcNAQEBBQADggEPADCCAQoCggEBAL9xYgjx+lk09xvJGKP3gElY6SKDE6bFIEMBO4Tx5oVJnyfq\0D\0A9oQbTqC023CYxzIBsQU+B07u9PpPL1kwIuerGVZr4oAH/PMWdYA5UXvl+TW2dE6pjYIT5LY/qQOD\0D\0A+qK+ihVqf94Lw7YZFAXK6sOoBJQ7RnwyDfMAZiLIjWltNowRGLfTshxgtDj6AozO091GB94KPutd\0D\0AfMh8+7ArU6SSYmlRJQVhGkSBjCypQ5Yj36w6gZoOKcUcqeldHraenjAKOc7xiID7S13MMuyFYkMl\0D\0ANAJWJwGRtDtwKj9useiciAF9n9T521NtYJ2/LOdYq7hfRvzOxBsDPAnrSTFcaUaz4EcCAwEAAaNC\0D\0AMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDqahQcQZyi27/a9\0D\0ABUFuIMGU2g/eMA0GCSqGSIb3DQEBCwUAA4IBAQCZ21151fmXWWcDYfF+OwYxdS2hII5PZYe096ac\0D\0AvNjpL9DbWu7PdIxztDhC2gV7+AJ1uP2lsdeu9tfeE8tTEH6KRtGX+rcuKxGrkLAngPnon1rpN5+r\0D\0A5N9ss4UXnT3ZJE95kTXWXwTrgIOrmgIttRD02JDHBHNA7XIloKmf7J6raBKZV8aPEjoJpL1E/QYV\0D\0AN8Gb5DKj7Tjo2GTzLH4U/ALqn83/B2gX2yKQOC16jdFU8WnjXzPKej17CuPKf1855eJ1usV2GDPO\0D\0ALPAvTK33sefOT6jEm0pUBsV/fdUID+Ic/n4XuKxe9tQWskMJDE32p2u0mYRlynqI4uJEvlz36hz1\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStarfield Root Certificate Authority - G2\0D\0A=========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIID3TCCAsWgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxEDAOBgNVBAgT\0D\0AB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9s\0D\0Ab2dpZXMsIEluYy4xMjAwBgNVBAMTKVN0YXJmaWVsZCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0\0D\0AeSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgY8xCzAJBgNVBAYTAlVTMRAw\0D\0ADgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFyZmllbGQg\0D\0AVGVjaG5vbG9naWVzLCBJbmMuMTIwMAYDVQQDEylTdGFyZmllbGQgUm9vdCBDZXJ0aWZpY2F0ZSBB\0D\0AdXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL3twQP89o/8ArFv\0D\0AW59I2Z154qK3A2FWGMNHttfKPTUuiUP3oWmb3ooa/RMgnLRJdzIpVv257IzdIvpy3Cdhl+72WoTs\0D\0Abhm5iSzchFvVdPtrX8WJpRBSiUZV9Lh1HOZ/5FSuS/hVclcCGfgXcVnrHigHdMWdSL5stPSksPNk\0D\0AN3mSwOxGXn/hbVNMYq/NHwtjuzqd+/x5AJhhdM8mgkBj87JyahkNmcrUDnXMN/uLicFZ8WJ/X7Nf\0D\0AZTD4p7dNdloedl40wOiWVpmKs/B/pM293DIxfJHP4F8R+GuqSVzRmZTRouNjWwl2tVZi4Ut0HZbU\0D\0AJtQIBFnQmA4O5t78w+wfkPECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\0D\0AAQYwHQYDVR0OBBYEFHwMMh+n2TB/xH1oo2Kooc6rB1snMA0GCSqGSIb3DQEBCwUAA4IBAQARWfol\0D\0ATwNvlJk7mh+ChTnUdgWUXuEok21iXQnCoKjUsHU48TRqneSfioYmUeYs0cYtbpUgSpIB7LiKZ3sx\0D\0A4mcujJUDJi5DnUox9g61DLu34jd/IroAow57UvtruzvE03lRTs2Q9GcHGcg8RnoNAX3FWOdt5oUw\0D\0AF5okxBDgBPfg8n/Uqgr/Qh037ZTlZFkSIHc40zI+OIF1lnP6aI+xy84fxez6nH7PfrHxBy22/L/K\0D\0ApL/QlwVKvOoYKAKQvVR4CSFx09F9HdkWsKlhPdAKACL8x3vLCWRFCztAgfd9fDL1mMpYjn0q7pBZ\0D\0Ac2T5NnReJaH1ZgUufzkVqSr7UIuOhWn0\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStarfield Services Root Certificate Authority - G2\0D\0A==================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgT\0D\0AB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9s\0D\0Ab2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRl\0D\0AIEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgZgxCzAJBgNV\0D\0ABAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxT\0D\0AdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFyZmllbGQgU2VydmljZXMg\0D\0AUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\0D\0AAQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20pOsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2\0D\0Ah/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm28xpWriu2dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4Pa\0D\0AhHQUw2eeBGg6345AWh1KTs9DkTvnVtYAcMtS7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLP\0D\0ALJGmpufehRhJfGZOozptqbXuNC66DQO4M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk6mFB\0D\0ArMnUVN+HL8cisibMn1lUaJ/8viovxFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAwDwYDVR0TAQH/BAUw\0D\0AAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMA0GCSqG\0D\0ASIb3DQEBCwUAA4IBAQBLNqaEd2ndOxmfZyMIbw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPP\0D\0AE95Dz+I0swSdHynVv/heyNXBve6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTy\0D\0AxQGjhdByPq1zqwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkd\0D\0AiEDPfUYd/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn0q23KXB56jza\0D\0AYyWf/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCNsSi6\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAffirmTrust Commercial\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDTDCCAjSgAwIBAgIId3cGJyapsXwwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UEBhMCVVMxFDAS\0D\0ABgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBDb21tZXJjaWFsMB4XDTEw\0D\0AMDEyOTE0MDYwNloXDTMwMTIzMTE0MDYwNlowRDELMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmly\0D\0AbVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBDb21tZXJjaWFsMIIBIjANBgkqhkiG9w0BAQEF\0D\0AAAOCAQ8AMIIBCgKCAQEA9htPZwcroRX1BiLLHwGy43NFBkRJLLtJJRTWzsO3qyxPxkEylFf6Eqdb\0D\0ADuKPHx6GGaeqtS25Xw2Kwq+FNXkyLbscYjfysVtKPcrNcV/pQr6U6Mje+SJIZMblq8Yrba0F8PrV\0D\0AC8+a5fBQpIs7R6UjW3p6+DM/uO+Zl+MgwdYoic+U+7lF7eNAFxHUdPALMeIrJmqbTFeurCA+ukV6\0D\0ABfO9m2kVrn1OIGPENXY6BwLJN/3HR+7o8XYdcxXyl6S1yHp52UKqK39c/s4mT6NmgTWvRLpUHhww\0D\0AMmWd5jyTXlBOeuM61G7MGvv50jeuJCqrVwMiKA1JdX+3KNp1v47j3A55MQIDAQABo0IwQDAdBgNV\0D\0AHQ4EFgQUnZPGU4teyq8/nx4P5ZmVvCT2lI8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\0D\0AAQYwDQYJKoZIhvcNAQELBQADggEBAFis9AQOzcAN/wr91LoWXym9e2iZWEnStB03TX8nfUYGXUPG\0D\0Ahi4+c7ImfU+TqbbEKpqrIZcUsd6M06uJFdhrJNTxFq7YpFzUf1GO7RgBsZNjvbz4YYCanrHOQnDi\0D\0AqX0GJX0nof5v7LMeJNrjS1UaADs1tDvZ110w/YETifLCBivtZ8SOyUOyXGsViQK8YvxO8rUzqrJv\0D\0A0wqiUOP2O+guRMLbZjipM1ZI8W0bM40NjD9gN53Tym1+NH4Nn3J2ixufcv1SNUFFApYvHLKac0kh\0D\0AsUlHRUe072o0EclNmsxZt9YCnlpOZbWUrhvfKbAW8b8Angc6F2S1BLUjIZkKlTuXfO8=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAffirmTrust Networking\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDTDCCAjSgAwIBAgIIfE8EORzUmS0wDQYJKoZIhvcNAQEFBQAwRDELMAkGA1UEBhMCVVMxFDAS\0D\0ABgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBOZXR3b3JraW5nMB4XDTEw\0D\0AMDEyOTE0MDgyNFoXDTMwMTIzMTE0MDgyNFowRDELMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmly\0D\0AbVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBOZXR3b3JraW5nMIIBIjANBgkqhkiG9w0BAQEF\0D\0AAAOCAQ8AMIIBCgKCAQEAtITMMxcua5Rsa2FSoOujz3mUTOWUgJnLVWREZY9nZOIG41w3SfYvm4SE\0D\0AHi3yYJ0wTsyEheIszx6e/jarM3c1RNg1lho9Nuh6DtjVR6FqaYvZ/Ls6rnla1fTWcbuakCNrmreI\0D\0AdIcMHl+5ni36q1Mr3Lt2PpNMCAiMHqIjHNRqrSK6mQEubWXLviRmVSRLQESxG9fhwoXA3hA/Pe24\0D\0A/PHxI1Pcv2WXb9n5QHGNfb2V1M6+oF4nI979ptAmDgAp6zxG8D1gvz9Q0twmQVGeFDdCBKNwV6gb\0D\0Ah+0t+nvujArjqWaJGctB+d1ENmHP4ndGyH329JKBNv3bNPFyfvMMFr20FQIDAQABo0IwQDAdBgNV\0D\0AHQ4EFgQUBx/S55zawm6iQLSwelAQUHTEyL0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\0D\0AAQYwDQYJKoZIhvcNAQEFBQADggEBAIlXshZ6qML91tmbmzTCnLQyFE2npN/svqe++EPbkTfOtDIu\0D\0AUFUaNU52Q3Eg75N3ThVwLofDwR1t3Mu1J9QsVtFSUzpE0nPIxBsFZVpikpzuQY0x2+c06lkh1QF6\0D\0A12S4ZDnNye2v7UsDSKegmQGA3GWjNq5lWUhPgkvIZfFXHeVZLgo/bNjR9eUJtGxUAArgFU2HdW23\0D\0AWJZa3W3SAKD0m0i+wzekujbgfIeFlxoVot4uolu9rxj5kFDNcFn4J2dHy8egBzp90SxdbBk6ZrV9\0D\0A/ZFvgrG+CJPbFEfxojfHRZ48x3evZKiT3/Zpg4Jg8klCNO1aAFSFHBY2kgxc+qatv9s=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAffirmTrust Premium\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFRjCCAy6gAwIBAgIIbYwURrGmCu4wDQYJKoZIhvcNAQEMBQAwQTELMAkGA1UEBhMCVVMxFDAS\0D\0ABgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVzdCBQcmVtaXVtMB4XDTEwMDEy\0D\0AOTE0MTAzNloXDTQwMTIzMTE0MTAzNlowQTELMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRy\0D\0AdXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVzdCBQcmVtaXVtMIICIjANBgkqhkiG9w0BAQEFAAOCAg8A\0D\0AMIICCgKCAgEAxBLfqV/+Qd3d9Z+K4/as4Tx4mrzY8H96oDMq3I0gW64tb+eT2TZwamjPjlGjhVtn\0D\0ABKAQJG9dKILBl1fYSCkTtuG+kU3fhQxTGJoeJKJPj/CihQvL9Cl/0qRY7iZNyaqoe5rZ+jjeRFcV\0D\0A5fiMyNlI4g0WJx0eyIOFJbe6qlVBzAMiSy2RjYvmia9mx+n/K+k8rNrSs8PhaJyJ+HoAVt70VZVs\0D\0A+7pk3WKL3wt3MutizCaam7uqYoNMtAZ6MMgpv+0GTZe5HMQxK9VfvFMSF5yZVylmd2EhMQcuJUmd\0D\0AGPLu8ytxjLW6OQdJd/zvLpKQBY0tL3d770O/Nbua2Plzpyzy0FfuKE4mX4+QaAkvuPjcBukumj5R\0D\0Ap9EixAqnOEhss/n/fauGV+O61oV4d7pD6kh/9ti+I20ev9E2bFhc8e6kGVQa9QPSdubhjL08s9NI\0D\0AS+LI+H+SqHZGnEJlPqQewQcDWkYtuJfzt9WyVSHvutxMAJf7FJUnM7/oQ0dG0giZFmA7mn7S5u04\0D\0A6uwBHjxIVkkJx0w3AJ6IDsBz4W9m6XJHMD4Q5QsDyZpCAGzFlH5hxIrff4IaC1nEWTJ3s7xgaVY5\0D\0A/bQGeyzWZDbZvUjthB9+pSKPKrhC9IK31FOQeE4tGv2Bb0TXOwF0lkLgAOIua+rF7nKsu7/+6qqo\0D\0A+Nz2snmKtmcCAwEAAaNCMEAwHQYDVR0OBBYEFJ3AZ6YMItkm9UWrpmVSESfYRaxjMA8GA1UdEwEB\0D\0A/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBDAUAA4ICAQCzV00QYk465KzquByv\0D\0AMiPIs0laUZx2KI15qldGF9X1Uva3ROgIRL8YhNILgM3FEv0AVQVhh0HctSSePMTYyPtwni94loMg\0D\0ANt58D2kTiKV1NpgIpsbfrM7jWNa3Pt668+s0QNiigfV4Py/VpfzZotReBA4Xrf5B8OWycvpEgjNC\0D\0A6C1Y91aMYj+6QrCcDFx+LmUmXFNPALJ4fqENmS2NuB2OosSw/WDQMKSOyARiqcTtNd56l+0OOF6S\0D\0AL5Nwpamcb6d9Ex1+xghIsV5n61EIJenmJWtSKZGc0jlzCFfemQa0W50QBuHCAKi4HEoCChTQwUHK\0D\0A+4w1IX2COPKpVJEZNZOUbWo6xbLQu4mGk+ibyQ86p3q4ofB4Rvr8Ny/lioTz3/4E2aFooC8k4gmV\0D\0ABtWVyuEklut89pMFu+1z6S3RdTnX5yTb2E5fQ4+e0BQ5v1VwSJlXMbSc7kqYA5YwH2AG7hsj/oFg\0D\0AIxpHYoWlzBk0gG+zrBrjn/B7SK3VAdlntqlyk+otZrWyuOQ9PLLvTIzq6we/qzWaVYa8GKa1qF60\0D\0Ag2xraUDTn9zxw2lrueFtCfTxqlB2Cnp9ehehVZZCmTEJ3WARjQUwfuaORtGdFNrHF+QFlozEJLUb\0D\0AzxQHskD4o55BhrwE0GuWyCqANP2/7waj3VjFhT0+j/6eKeC2uAloGRwYQw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAffirmTrust Premium ECC\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIB/jCCAYWgAwIBAgIIdJclisc/elQwCgYIKoZIzj0EAwMwRTELMAkGA1UEBhMCVVMxFDASBgNV\0D\0ABAoMC0FmZmlybVRydXN0MSAwHgYDVQQDDBdBZmZpcm1UcnVzdCBQcmVtaXVtIEVDQzAeFw0xMDAx\0D\0AMjkxNDIwMjRaFw00MDEyMzExNDIwMjRaMEUxCzAJBgNVBAYTAlVTMRQwEgYDVQQKDAtBZmZpcm1U\0D\0AcnVzdDEgMB4GA1UEAwwXQWZmaXJtVHJ1c3QgUHJlbWl1bSBFQ0MwdjAQBgcqhkjOPQIBBgUrgQQA\0D\0AIgNiAAQNMF4bFZ0D0KF5Nbc6PJJ6yhUczWLznCZcBz3lVPqj1swS6vQUX+iOGasvLkjmrBhDeKzQ\0D\0AN8O9ss0s5kfiGuZjuD0uL3jET9v0D6RoTFVya5UdThhClXjMNzyR4ptlKymjQjBAMB0GA1UdDgQW\0D\0ABBSaryl6wBE1NSZRMADDav5A1a7WPDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAK\0D\0ABggqhkjOPQQDAwNnADBkAjAXCfOHiFBar8jAQr9HX/VsaobgxCd05DhT1wV/GzTjxi+zygk8N53X\0D\0A57hG8f2h4nECMEJZh0PUUd+60wkyWs6Iflc9nF9Ca/UHLbXwgpP5WW+uZPpY5Yse42O+tYHNbwKM\0D\0AeQ==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertum Trusted Network CA\0D\0A=========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDuzCCAqOgAwIBAgIDBETAMA0GCSqGSIb3DQEBBQUAMH4xCzAJBgNVBAYTAlBMMSIwIAYDVQQK\0D\0AExlVbml6ZXRvIFRlY2hub2xvZ2llcyBTLkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlv\0D\0AbiBBdXRob3JpdHkxIjAgBgNVBAMTGUNlcnR1bSBUcnVzdGVkIE5ldHdvcmsgQ0EwHhcNMDgxMDIy\0D\0AMTIwNzM3WhcNMjkxMjMxMTIwNzM3WjB+MQswCQYDVQQGEwJQTDEiMCAGA1UEChMZVW5pemV0byBU\0D\0AZWNobm9sb2dpZXMgUy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRpZmljYXRpb24gQXV0aG9yaXR5\0D\0AMSIwIAYDVQQDExlDZXJ0dW0gVHJ1c3RlZCBOZXR3b3JrIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\0D\0AAQ8AMIIBCgKCAQEA4/t9o3K6wvDJFIf1awFO4W5AB7ptJ11/91sts1rHUV+rpDKmYYe2bg+G0jAC\0D\0Al/jXaVehGDldamR5xgFZrDwxSjh80gTSSyjoIF87B6LMTXPb865Px1bVWqeWifrzq2jUI4ZZJ88J\0D\0AJ7ysbnKDHDBy3+Ci6dLhdHUZvSqeexVUBBvXQzmtVSjF4hq79MDkrjhJM8x2hZ85RdKknvISjFH4\0D\0AfOQtf/WsX+sWn7Et0brMkUJ3TCXJkDhv2/DM+44el1k+1WBO5gUo7Ul5E0u6SNsv+XLTOcr+H9g0\0D\0AcvW0QM8xAcPs3hEtF10fuFDRXhmnad4HMyjKUJX5p1TLVIZQRan5SQIDAQABo0IwQDAPBgNVHRMB\0D\0AAf8EBTADAQH/MB0GA1UdDgQWBBQIds3LB/8k9sXN7buQvOKEN0Z19zAOBgNVHQ8BAf8EBAMCAQYw\0D\0ADQYJKoZIhvcNAQEFBQADggEBAKaorSLOAT2mo/9i0Eidi15ysHhE49wcrwn9I0j6vSrEuVUEtRCj\0D\0AjSfeC4Jj0O7eDDd5QVsisrCaQVymcODU0HfLI9MA4GxWL+FpDQ3Zqr8hgVDZBqWo/5U30Kr+4rP1\0D\0AmS1FhIrlQgnXdAIv94nYmem8J9RHjboNRhx3zxSkHLmkMcScKHQDNP8zGSal6Q10tz6XxnboJ5aj\0D\0AZt3hrvJBW8qYVoNzcOSGGtIxQbovvi0TWnZvTuhOgQ4/WwMioBK+ZlgRSssDxLQqKi2WF+A5VLxI\0D\0A03YnnZotBqbJ7DnSq9ufmgsnAjUpsUCV5/nonFWIGUbWtzT1fs45mtk48VH3Tyw=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertinomis - Autorit\C3\A9 Racine\0D\0A============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFnDCCA4SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJGUjETMBEGA1UEChMK\0D\0AQ2VydGlub21pczEXMBUGA1UECxMOMDAwMiA0MzM5OTg5MDMxJjAkBgNVBAMMHUNlcnRpbm9taXMg\0D\0ALSBBdXRvcml0w6kgUmFjaW5lMB4XDTA4MDkxNzA4Mjg1OVoXDTI4MDkxNzA4Mjg1OVowYzELMAkG\0D\0AA1UEBhMCRlIxEzARBgNVBAoTCkNlcnRpbm9taXMxFzAVBgNVBAsTDjAwMDIgNDMzOTk4OTAzMSYw\0D\0AJAYDVQQDDB1DZXJ0aW5vbWlzIC0gQXV0b3JpdMOpIFJhY2luZTCCAiIwDQYJKoZIhvcNAQEBBQAD\0D\0AggIPADCCAgoCggIBAJ2Fn4bT46/HsmtuM+Cet0I0VZ35gb5j2CN2DpdUzZlMGvE5x4jYF1AMnmHa\0D\0AwE5V3udauHpOd4cN5bjr+p5eex7Ezyh0x5P1FMYiKAT5kcOrJ3NqDi5N8y4oH3DfVS9O7cdxbwly\0D\0ALu3VMpfQ8Vh30WC8Tl7bmoT2R2FFK/ZQpn9qcSdIhDWerP5pqZ56XjUl+rSnSTV3lqc2W+HN3yNw\0D\0A2F1MpQiD8aYkOBOo7C+ooWfHpi2GR+6K/OybDnT0K0kCe5B1jPyZOQE51kqJ5Z52qz6WKDgmi92N\0D\0AjMD2AR5vpTESOH2VwnHu7XSu5DaiQ3XV8QCb4uTXzEIDS3h65X27uK4uIJPT5GHfceF2Z5c/tt9q\0D\0Ac1pkIuVC28+BA5PY9OMQ4HL2AHCs8MF6DwV/zzRpRbWT5BnbUhYjBYkOjUjkJW+zeL9i9Qf6lSTC\0D\0AlrLooyPCXQP8w9PlfMl1I9f09bze5N/NgL+RiH2nE7Q5uiy6vdFrzPOlKO1Enn1So2+WLhl+HPNb\0D\0AxxaOu2B9d2ZHVIIAEWBsMsGoOBvrbpgT1u449fCfDu/+MYHB0iSVL1N6aaLwD4ZFjliCK0wi1F6g\0D\0A530mJ0jfJUaNSih8hp75mxpZuWW/Bd22Ql095gBIgl4g9xGC3srYn+Y3RyYe63j3YcNBZFgCQfna\0D\0A4NH4+ej9Uji29YnfAgMBAAGjWzBZMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0G\0D\0AA1UdDgQWBBQNjLZh2kS40RR9w759XkjwzspqsDAXBgNVHSAEEDAOMAwGCiqBegFWAgIAAQEwDQYJ\0D\0AKoZIhvcNAQEFBQADggIBACQ+YAZ+He86PtvqrxyaLAEL9MW12Ukx9F1BjYkMTv9sov3/4gbIOZ/x\0D\0AWqndIlgVqIrTseYyCYIDbNc/CMf4uboAbbnW/FIyXaR/pDGUu7ZMOH8oMDX/nyNTt7buFHAAQCva\0D\0AR6s0fl6nVjBhK4tDrP22iCj1a7Y+YEq6QpA0Z43q619FVDsXrIvkxmUP7tCMXWY5zjKn2BCXwH40\0D\0AnJ+U8/aGH88bc62UeYdocMMzpXDn2NU4lG9jeeu/Cg4I58UvD0KgKxRA/yHgBcUn4YQRE7rWhh1B\0D\0ACxMjidPJC+iKunqjo3M3NYB9Ergzd0A4wPpeMNLytqOx1qKVl4GbUu1pTP+A5FPbVFsDbVRfsbjv\0D\0AJL1vnxHDx2TCDyhihWZeGnuyt++uNckZM6i4J9szVb9o4XVIRFb7zdNIu0eJOqxp9YDG5ERQL1TE\0D\0AqkPFMTFYvZbF6nVsmnWxTfj3l/+WFvKXTej28xH5On2KOG4Ey+HTRRWqpdEdnV1j6CTmNhTih60b\0D\0AWfVEm/vXd3wfAXBioSAaosUaKPQhA+4u2cGA6rnZgtZbdsLLO7XSAPCjDuGtbkD326C00EauFddE\0D\0Awk01+dIL8hf2rGbVJLJP0RyZwG71fet0BLj5TXcJ17TPBzAJ8bgAVtkXFhYKK4bfjwEZGuW7gmP/\0D\0Avgt2Fl43N+bYdJeimUV5\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ARoot CA Generalitat Valenciana\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIGizCCBXOgAwIBAgIEO0XlaDANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJFUzEfMB0GA1UE\0D\0AChMWR2VuZXJhbGl0YXQgVmFsZW5jaWFuYTEPMA0GA1UECxMGUEtJR1ZBMScwJQYDVQQDEx5Sb290\0D\0AIENBIEdlbmVyYWxpdGF0IFZhbGVuY2lhbmEwHhcNMDEwNzA2MTYyMjQ3WhcNMjEwNzAxMTUyMjQ3\0D\0AWjBoMQswCQYDVQQGEwJFUzEfMB0GA1UEChMWR2VuZXJhbGl0YXQgVmFsZW5jaWFuYTEPMA0GA1UE\0D\0ACxMGUEtJR1ZBMScwJQYDVQQDEx5Sb290IENBIEdlbmVyYWxpdGF0IFZhbGVuY2lhbmEwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDGKqtXETcvIorKA3Qdyu0togu8M1JAJke+WmmmO3I2\0D\0AF0zo37i7L3bhQEZ0ZQKQUgi0/6iMweDHiVYQOTPvaLRfX9ptI6GJXiKjSgbwJ/BXufjpTjJ3Cj9B\0D\0AZPPrZe52/lSqfR0grvPXdMIKX/UIKFIIzFVd0g/bmoGlu6GzwZTNVOAydTGRGmKy3nXiz0+J2ZGQ\0D\0AD0EbtFpKd71ng+CT516nDOeB0/RSrFOyA8dEJvt55cs0YFAQexvba9dHq198aMpunUEDEO5rmXte\0D\0AJajCq+TA81yc477OMUxkHl6AovWDfgzWyoxVjr7gvkkHD6MkQXpYHYTqWBLI4bft75PelAgxAgMB\0D\0AAAGjggM7MIIDNzAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAGGFmh0dHA6Ly9vY3NwLnBraS5n\0D\0AdmEuZXMwEgYDVR0TAQH/BAgwBgEB/wIBAjCCAjQGA1UdIASCAiswggInMIICIwYKKwYBBAG/VQIB\0D\0AADCCAhMwggHoBggrBgEFBQcCAjCCAdoeggHWAEEAdQB0AG8AcgBpAGQAYQBkACAAZABlACAAQwBl\0D\0AAHIAdABpAGYAaQBjAGEAYwBpAPMAbgAgAFIAYQDtAHoAIABkAGUAIABsAGEAIABHAGUAbgBlAHIA\0D\0AYQBsAGkAdABhAHQAIABWAGEAbABlAG4AYwBpAGEAbgBhAC4ADQAKAEwAYQAgAEQAZQBjAGwAYQBy\0D\0AAGEAYwBpAPMAbgAgAGQAZQAgAFAAcgDhAGMAdABpAGMAYQBzACAAZABlACAAQwBlAHIAdABpAGYA\0D\0AaQBjAGEAYwBpAPMAbgAgAHEAdQBlACAAcgBpAGcAZQAgAGUAbAAgAGYAdQBuAGMAaQBvAG4AYQBt\0D\0AAGkAZQBuAHQAbwAgAGQAZQAgAGwAYQAgAHAAcgBlAHMAZQBuAHQAZQAgAEEAdQB0AG8AcgBpAGQA\0D\0AYQBkACAAZABlACAAQwBlAHIAdABpAGYAaQBjAGEAYwBpAPMAbgAgAHMAZQAgAGUAbgBjAHUAZQBu\0D\0AAHQAcgBhACAAZQBuACAAbABhACAAZABpAHIAZQBjAGMAaQDzAG4AIAB3AGUAYgAgAGgAdAB0AHAA\0D\0AOgAvAC8AdwB3AHcALgBwAGsAaQAuAGcAdgBhAC4AZQBzAC8AYwBwAHMwJQYIKwYBBQUHAgEWGWh0\0D\0AdHA6Ly93d3cucGtpLmd2YS5lcy9jcHMwHQYDVR0OBBYEFHs100DSHHgZZu90ECjcPk+yeAT8MIGV\0D\0ABgNVHSMEgY0wgYqAFHs100DSHHgZZu90ECjcPk+yeAT8oWykajBoMQswCQYDVQQGEwJFUzEfMB0G\0D\0AA1UEChMWR2VuZXJhbGl0YXQgVmFsZW5jaWFuYTEPMA0GA1UECxMGUEtJR1ZBMScwJQYDVQQDEx5S\0D\0Ab290IENBIEdlbmVyYWxpdGF0IFZhbGVuY2lhbmGCBDtF5WgwDQYJKoZIhvcNAQEFBQADggEBACRh\0D\0ATvW1yEICKrNcda3FbcrnlD+laJWIwVTAEGmiEi8YPyVQqHxK6sYJ2fR1xkDar1CdPaUWu20xxsdz\0D\0ACkj+IHLtb8zog2EWRpABlUt9jppSCS/2bxzkoXHPjCpaF3ODR00PNvsETUlR4hTJZGH71BTg9J63\0D\0ANI8KJr2XXPR5OkowGcytT6CYirQxlyric21+eLj4iIlPsSKRZEv1UN4D2+XFducTZnV+ZfsBn5OH\0D\0AiJ35Rld8TWCvmHMTI6QgkYH60GFmuH3Rr9ZvHmw96RH9qfmCIoaZM3Fa6hlXPZHNqcCjbgcTpsnt\0D\0A+GijnsNacgmHKNHEc8RzGF9QdRYxn7fofMM=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ATWCA Root Certification Authority\0D\0A=================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDezCCAmOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJUVzESMBAGA1UECgwJ\0D\0AVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NBIFJvb3QgQ2VydGlmaWNh\0D\0AdGlvbiBBdXRob3JpdHkwHhcNMDgwODI4MDcyNDMzWhcNMzAxMjMxMTU1OTU5WjBfMQswCQYDVQQG\0D\0AEwJUVzESMBAGA1UECgwJVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NB\0D\0AIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\0D\0AAoIBAQCwfnK4pAOU5qfeCTiRShFAh6d8WWQUe7UREN3+v9XAu1bihSX0NXIP+FPQQeFEAcK0HMMx\0D\0AQhZHhTMidrIKbw/lJVBPhYa+v5guEGcevhEFhgWQxFnQfHgQsIBct+HHK3XLfJ+utdGdIzdjp9xC\0D\0Aoi2SBBtQwXu4PhvJVgSLL1KbralW6cH/ralYhzC2gfeXRfwZVzsrb+RH9JlF/h3x+JejiB03HFyP\0D\0A4HYlmlD4oFT/RJB2I9IyxsOrBr/8+7/zrX2SYgJbKdM1o5OaQ2RgXbL6Mv87BK9NQGr5x+PvI/1r\0D\0Ay+UPizgN7gr8/g+YnzAx3WxSZfmLgb4i4RxYA7qRG4kHAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIB\0D\0ABjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqOFsmjd6LWvJPelSDGRjjCDWmujANBgkqhkiG\0D\0A9w0BAQUFAAOCAQEAPNV3PdrfibqHDAhUaiBQkr6wQT25JmSDCi/oQMCXKCeCMErJk/9q56YAf4lC\0D\0AmtYR5VPOL8zy2gXE/uJQxDqGfczafhAJO5I1KlOy/usrBdlsXebQ79NqZp4VKIV66IIArB6nCWlW\0D\0AQtNoURi+VJq/REG6Sb4gumlc7rh3zc5sH62Dlhh9DrUUOYTxKOkto557HnpyWoOzeW/vtPzQCqVY\0D\0AT0bf+215WfKEIlKuD8z7fDvnaspHYcN6+NOSBB+4IIThNlQWx0DeO4pz3N/GCUzf7Nr/1FNCocny\0D\0AYh0igzyXxfkZYiesZSLX0zzG5Y6yU8xJzrww/nsOM5D77dIUkR8Hrw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASecurity Communication RootCA2\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDdzCCAl+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBdMQswCQYDVQQGEwJKUDElMCMGA1UEChMc\0D\0AU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEnMCUGA1UECxMeU2VjdXJpdHkgQ29tbXVuaWNh\0D\0AdGlvbiBSb290Q0EyMB4XDTA5MDUyOTA1MDAzOVoXDTI5MDUyOTA1MDAzOVowXTELMAkGA1UEBhMC\0D\0ASlAxJTAjBgNVBAoTHFNFQ09NIFRydXN0IFN5c3RlbXMgQ08uLExURC4xJzAlBgNVBAsTHlNlY3Vy\0D\0AaXR5IENvbW11bmljYXRpb24gUm9vdENBMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\0D\0AANAVOVKxUrO6xVmCxF1SrjpDZYBLx/KWvNs2l9amZIyoXvDjChz335c9S672XewhtUGrzbl+dp++\0D\0A+T42NKA7wfYxEUV0kz1XgMX5iZnK5atq1LXaQZAQwdbWQonCv/Q4EpVMVAX3NuRFg3sUZdbcDE3R\0D\0A3n4MqzvEFb46VqZab3ZpUql6ucjrappdUtAtCms1FgkQhNBqyjoGADdH5H5XTz+L62e4iKrFvlNV\0D\0AspHEfbmwhRkGeC7bYRr6hfVKkaHnFtWOojnflLhwHyg/i/xAXmODPIMqGplrz95Zajv8bxbXH/1K\0D\0AEOtOghY6rCcMU/Gt1SSwawNQwS08Ft1ENCcadfsCAwEAAaNCMEAwHQYDVR0OBBYEFAqFqXdlBZh8\0D\0AQIH4D5csOPEK7DzPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEB\0D\0ACwUAA4IBAQBMOqNErLlFsceTfsgLCkLfZOoc7llsCLqJX2rKSpWeeo8HxdpFcoJxDjrSzG+ntKEj\0D\0Au/Ykn8sX/oymzsLS28yN/HH8AynBbF0zX2S2ZTuJbxh2ePXcokgfGT+Ok+vx+hfuzU7jBBJV1uXk\0D\0A3fs+BXziHV7Gp7yXT2g69ekuCkO2r1dcYmh8t/2jioSgrGK+KwmHNPBqAbubKVY8/gA3zyNs8U6q\0D\0AtnRGEmyR7jTV7JqR50S+kDFy1UkC9gLl9B/rfNmWVan/7Ir5mUf/NVoCqgTLiluHcSmRvaS0eg29\0D\0AmvVXIwAHIRc/SjnRBUkLp7Y3gaVdjKozXoEofKd9J+sAro03\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEC-ACC\0D\0A======\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFVjCCBD6gAwIBAgIQ7is969Qh3hSoYqwE893EATANBgkqhkiG9w0BAQUFADCB8zELMAkGA1UE\0D\0ABhMCRVMxOzA5BgNVBAoTMkFnZW5jaWEgQ2F0YWxhbmEgZGUgQ2VydGlmaWNhY2lvIChOSUYgUS0w\0D\0AODAxMTc2LUkpMSgwJgYDVQQLEx9TZXJ2ZWlzIFB1YmxpY3MgZGUgQ2VydGlmaWNhY2lvMTUwMwYD\0D\0AVQQLEyxWZWdldSBodHRwczovL3d3dy5jYXRjZXJ0Lm5ldC92ZXJhcnJlbCAoYykwMzE1MDMGA1UE\0D\0ACxMsSmVyYXJxdWlhIEVudGl0YXRzIGRlIENlcnRpZmljYWNpbyBDYXRhbGFuZXMxDzANBgNVBAMT\0D\0ABkVDLUFDQzAeFw0wMzAxMDcyMzAwMDBaFw0zMTAxMDcyMjU5NTlaMIHzMQswCQYDVQQGEwJFUzE7\0D\0AMDkGA1UEChMyQWdlbmNpYSBDYXRhbGFuYSBkZSBDZXJ0aWZpY2FjaW8gKE5JRiBRLTA4MDExNzYt\0D\0ASSkxKDAmBgNVBAsTH1NlcnZlaXMgUHVibGljcyBkZSBDZXJ0aWZpY2FjaW8xNTAzBgNVBAsTLFZl\0D\0AZ2V1IGh0dHBzOi8vd3d3LmNhdGNlcnQubmV0L3ZlcmFycmVsIChjKTAzMTUwMwYDVQQLEyxKZXJh\0D\0AcnF1aWEgRW50aXRhdHMgZGUgQ2VydGlmaWNhY2lvIENhdGFsYW5lczEPMA0GA1UEAxMGRUMtQUND\0D\0AMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsyLHT+KXQpWIR4NA9h0X84NzJB5R85iK\0D\0Aw5K4/0CQBXCHYMkAqbWUZRkiFRfCQ2xmRJoNBD45b6VLeqpjt4pEndljkYRm4CgPukLjbo73FCeT\0D\0Aae6RDqNfDrHrZqJyTxIThmV6PttPB/SnCWDaOkKZx7J/sxaVHMf5NLWUhdWZXqBIoH7nF2W4onW4\0D\0AHvPlQn2v7fOKSGRdghST2MDk/7NQcvJ29rNdQlB50JQ+awwAvthrDk4q7D7SzIKiGGUzE3eeml0a\0D\0AE9jD2z3Il3rucO2n5nzbcc8tlGLfbdb1OL4/pYUKGbio2Al1QnDE6u/LDsg0qBIimAy4E5S2S+zw\0D\0A0JDnJwIDAQABo4HjMIHgMB0GA1UdEQQWMBSBEmVjX2FjY0BjYXRjZXJ0Lm5ldDAPBgNVHRMBAf8E\0D\0ABTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUoMOLRKo3pUW/l4Ba0fF4opvpXY0wfwYD\0D\0AVR0gBHgwdjB0BgsrBgEEAfV4AQMBCjBlMCwGCCsGAQUFBwIBFiBodHRwczovL3d3dy5jYXRjZXJ0\0D\0ALm5ldC92ZXJhcnJlbDA1BggrBgEFBQcCAjApGidWZWdldSBodHRwczovL3d3dy5jYXRjZXJ0Lm5l\0D\0AdC92ZXJhcnJlbCAwDQYJKoZIhvcNAQEFBQADggEBAKBIW4IB9k1IuDlVNZyAelOZ1Vr/sXE7zDkJ\0D\0AlF7W2u++AVtd0x7Y/X1PzaBB4DSTv8vihpw3kpBWHNzrKQXlxJ7HNd+KDM3FIUPpqojlNcAZQmNa\0D\0AAl6kSBg6hW/cnbw/nZzBh7h6YQjpdwt/cKt63dmXLGQehb+8dJahw3oS7AwaboMMPOhyRp/7SNVe\0D\0Al+axofjk70YllJyJ22k4vuxcDlbHZVHlUIiIv0LVKz3l+bqeLrPK9HOSAgu+TGbrIP65y7WZf+a2\0D\0AE/rKS03Z7lNGBjvGTq2TWoF+bCpLagVFjPIhpDGQh2xlnJ2lYJU6Un/10asIbvPuW/mIPX64b24D\0D\0A5EI=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AHellenic Academic and Research Institutions RootCA 2011\0D\0A=======================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEMTCCAxmgAwIBAgIBADANBgkqhkiG9w0BAQUFADCBlTELMAkGA1UEBhMCR1IxRDBCBgNVBAoT\0D\0AO0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4gQXV0aG9y\0D\0AaXR5MUAwPgYDVQQDEzdIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25z\0D\0AIFJvb3RDQSAyMDExMB4XDTExMTIwNjEzNDk1MloXDTMxMTIwMTEzNDk1MlowgZUxCzAJBgNVBAYT\0D\0AAkdSMUQwQgYDVQQKEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25z\0D\0AIENlcnQuIEF1dGhvcml0eTFAMD4GA1UEAxM3SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNo\0D\0AIEluc3RpdHV0aW9ucyBSb290Q0EgMjAxMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\0D\0AAKlTAOMupvaO+mDYLZU++CwqVE7NuYRhlFhPjz2L5EPzdYmNUeTDN9KKiE15HrcS3UN4SoqS5tdI\0D\0A1Q+kOilENbgH9mgdVc04UfCMJDGFr4PJfel3r+0ae50X+bOdOFAPplp5kYCvN66m0zH7tSYJnTxa\0D\0A71HFK9+WXesyHgLacEnsbgzImjeN9/E2YEsmLIKe0HjzDQ9jpFEw4fkrJxIH2Oq9GGKYsFk3fb7u\0D\0A8yBRQlqD75O6aRXxYp2fmTmCobd0LovUxQt7L/DICto9eQqakxylKHJzkUOap9FNhYS5qXSPFEDH\0D\0A3N6sQWRstBmbAmNtJGSPRLIl6s5ddAxjMlyNh+UCAwEAAaOBiTCBhjAPBgNVHRMBAf8EBTADAQH/\0D\0AMAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQUppFC/RNhSiOeCKQp5dgTBCPuQSUwRwYDVR0eBEAwPqA8\0D\0AMAWCAy5ncjAFggMuZXUwBoIELmVkdTAGggQub3JnMAWBAy5ncjAFgQMuZXUwBoEELmVkdTAGgQQu\0D\0Ab3JnMA0GCSqGSIb3DQEBBQUAA4IBAQAf73lB4XtuP7KMhjdCSk4cNx6NZrokgclPEg8hwAOXhiVt\0D\0AXdMiKahsog2p6z0GW5k6x8zDmjR/qw7IThzh+uTczQ2+vyT+bOdrwg3IBp5OjWEopmr95fZi6hg8\0D\0ATqBTnbI6nOulnJEWtk2C4AwFSKls9cz4y51JtPACpf1wA+2KIaWuE4ZJwzNzvoc7dIsXRSZMFpGD\0D\0A/md9zU1jZ/rzAxKWeAaNsWftjj++n08C9bMJL/NMh98qy5V8AcysNnq/onN694/BtZqhFLKPM58N\0D\0A7yLcZnuEvUUXBj08yrl3NI/K6s8/MT7jiOOASSXIl7WdmplNsDz4SgCbZN2fOUvRJ9e4\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AActalis Authentication Root CA\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFuzCCA6OgAwIBAgIIVwoRl0LE48wwDQYJKoZIhvcNAQELBQAwazELMAkGA1UEBhMCSVQxDjAM\0D\0ABgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8wMzM1ODUyMDk2NzEnMCUGA1UE\0D\0AAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290IENBMB4XDTExMDkyMjExMjIwMloXDTMwMDky\0D\0AMjExMjIwMlowazELMAkGA1UEBhMCSVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlz\0D\0AIFMucC5BLi8wMzM1ODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290\0D\0AIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAp8bEpSmkLO/lGMWwUKNvUTufClrJ\0D\0Awkg4CsIcoBh/kbWHuUA/3R1oHwiD1S0eiKD4j1aPbZkCkpAW1V8IbInX4ay8IMKx4INRimlNAJZa\0D\0Aby/ARH6jDuSRzVju3PvHHkVH3Se5CAGfpiEd9UEtL0z9KK3giq0itFZljoZUj5NDKd45RnijMCO6\0D\0AzfB9E1fAXdKDa0hMxKufgFpbOr3JpyI/gCczWw63igxdBzcIy2zSekciRDXFzMwujt0q7bd9Zg1f\0D\0AYVEiVRvjRuPjPdA1YprbrxTIW6HMiRvhMCb8oJsfgadHHwTrozmSBp+Z07/T6k9QnBn+locePGX2\0D\0Aoxgkg4YQ51Q+qDp2JE+BIcXjDwL4k5RHILv+1A7TaLndxHqEguNTVHnd25zS8gebLra8Pu2Fbe8l\0D\0AEfKXGkJh90qX6IuxEAf6ZYGyojnP9zz/GPvG8VqLWeICrHuS0E4UT1lF9gxeKF+w6D9Fz8+vm2/7\0D\0AhNN3WpVvrJSEnu68wEqPSpP4RCHiMUVhUE4Q2OM1fEwZtN4Fv6MGn8i1zeQf1xcGDXqVdFUNaBr8\0D\0AEBtiZJ1t4JWgw5QHVw0U5r0F+7if5t+L4sbnfpb2U8WANFAoWPASUHEXMLrmeGO89LKtmyuy/uE5\0D\0AjF66CyCU3nuDuP/jVo23Eek7jPKxwV2dpAtMK9myGPW1n0sCAwEAAaNjMGEwHQYDVR0OBBYEFFLY\0D\0AiDrIn3hm7YnzezhwlMkCAjbQMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUUtiIOsifeGbt\0D\0AifN7OHCUyQICNtAwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQALe3KHwGCmSUyI\0D\0AWOYdiPcUZEim2FgKDk8TNd81HdTtBjHIgT5q1d07GjLukD0R0i70jsNjLiNmsGe+b7bAEzlgqqI0\0D\0AJZN1Ut6nna0Oh4lScWoWPBkdg/iaKWW+9D+a2fDzWochcYBNy+A4mz+7+uAwTc+G02UQGRjRlwKx\0D\0AK3JCaKygvU5a2hi/a5iB0P2avl4VSM0RFbnAKVy06Ij3Pjaut2L9HmLecHgQHEhb2rykOLpn7VU+\0D\0AXlff1ANATIGk0k9jpwlCCRT8AKnCgHNPLsBA2RF7SOp6AsDT6ygBJlh0wcBzIm2Tlf05fbsq4/aC\0D\0A4yyXX04fkZT6/iyj2HYauE2yOE+b+h1IYHkm4vP9qdCa6HCPSXrW5b0KDtst842/6+OkfcvHlXHo\0D\0A2qN8xcL4dJIEG4aspCJTQLas/kx2z/uUMsA1n3Y/buWQbqCmJqK4LL7RK4X9p2jIugErsWx0Hbhz\0D\0Alefut8cl8ABMALJ+tguLHPPAUJ4lueAI3jZm/zel0btUZCzJJ7VLkn5l/9Mt4blOvH+kQSGQQXem\0D\0AOR/qnuOf0GZvBeyqdn6/axag67XH/JJULysRJyU3eExRarDzzFhdFPFqSBX/wge2sY0PjlxQRrM9\0D\0AvwGYT7JZVEc+NHt4bVaTLnPqZih4zR0Uv6CPLy64Lo7yFIrM6bV8+2ydDKXhlg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ATrustis FPS Root CA\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDZzCCAk+gAwIBAgIQGx+ttiD5JNM2a/fH8YygWTANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQG\0D\0AEwJHQjEYMBYGA1UEChMPVHJ1c3RpcyBMaW1pdGVkMRwwGgYDVQQLExNUcnVzdGlzIEZQUyBSb290\0D\0AIENBMB4XDTAzMTIyMzEyMTQwNloXDTI0MDEyMTExMzY1NFowRTELMAkGA1UEBhMCR0IxGDAWBgNV\0D\0ABAoTD1RydXN0aXMgTGltaXRlZDEcMBoGA1UECxMTVHJ1c3RpcyBGUFMgUm9vdCBDQTCCASIwDQYJ\0D\0AKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMVQe547NdDfxIzNjpvto8A2mfRC6qc+gIMPpqdZh8mQ\0D\0ARUN+AOqGeSoDvT03mYlmt+WKVoaTnGhLaASMk5MCPjDSNzoiYYkchU59j9WvezX2fihHiTHcDnlk\0D\0AH5nSW7r+f2C/revnPDgpai/lkQtV/+xvWNUtyd5MZnGPDNcE2gfmHhjjvSkCqPoc4Vu5g6hBSLwa\0D\0AcY3nYuUtsuvffM/bq1rKMfFMIvMFE/eC+XN5DL7XSxzA0RU8k0Fk0ea+IxciAIleH2ulrG6nS4zt\0D\0Ao3Lmr2NNL4XSFDWaLk6M6jKYKIahkQlBOrTh4/L68MkKokHdqeMDx4gVOxzUGpTXn2RZEm0CAwEA\0D\0AAaNTMFEwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS6+nEleYtXQSUhhgtx67JkDoshZzAd\0D\0ABgNVHQ4EFgQUuvpxJXmLV0ElIYYLceuyZA6LIWcwDQYJKoZIhvcNAQEFBQADggEBAH5Y//01GX2c\0D\0AGE+esCu8jowU/yyg2kdbw++BLa8F6nRIW/M+TgfHbcWzk88iNVy2P3UnXwmWzaD+vkAMXBJV+JOC\0D\0AyinpXj9WV4s4NvdFGkwozZ5BuO1WTISkQMi4sKUraXAEasP41BIy+Q7DsdwyhEQsb8tGD+pmQQ9P\0D\0A8Vilpg0ND2HepZ5dfWWhPBfnqFVO76DH7cZEf1T1o+CP8HxVIo8ptoGj4W1OLBuAZ+ytIJ8MYmHV\0D\0Al/9D7S3B2l0pKoU/rGXuhg8FjZBf3+6f9L/uHfuY5H+QK4R4EA5sSVPvFVtlRkpdr7r7OnIdzfYl\0D\0AiB6XzCGcKQENZetX2fNXlrtIzYE=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStartCom Certification Authority\0D\0A================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIHhzCCBW+gAwIBAgIBLTANBgkqhkiG9w0BAQsFADB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMN\0D\0AU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmlu\0D\0AZzEpMCcGA1UEAxMgU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDYwOTE3MTk0\0D\0ANjM3WhcNMzYwOTE3MTk0NjM2WjB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRk\0D\0ALjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzEpMCcGA1UEAxMg\0D\0AU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw\0D\0AggIKAoICAQDBiNsJvGxGfHiflXu1M5DycmLWwTYgIiRezul38kMKogZkpMyONvg45iPwbm2xPN1y\0D\0Ao4UcodM9tDMr0y+v/uqwQVlntsQGfQqedIXWeUyAN3rfOQVSWff0G0ZDpNKFhdLDcfN1YjS6LIp/\0D\0AHo/u7TTQEceWzVI9ujPW3U3eCztKS5/CJi/6tRYccjV3yjxd5srhJosaNnZcAdt0FCX+7bWgiA/d\0D\0AeMotHweXMAEtcnn6RtYTKqi5pquDSR3l8u/d5AGOGAqPY1MWhWKpDhk6zLVmpsJrdAfkK+F2PrRt\0D\0A2PZE4XNiHzvEvqBTViVsUQn3qqvKv3b9bZvzndu/PWa8DFaqr5hIlTpL36dYUNk4dalb6kMMAv+Z\0D\0A6+hsTXBbKWWc3apdzK8BMewM69KN6Oqce+Zu9ydmDBpI125C4z/eIT574Q1w+2OqqGwaVLRcJXrJ\0D\0AosmLFqa7LH4XXgVNWG4SHQHuEhANxjJ/GP/89PrNbpHoNkm+Gkhpi8KWTRoSsmkXwQqQ1vp5Iki/\0D\0Auntp+HDH+no32NgN0nZPV/+Qt+OR0t3vwmC3Zzrd/qqc8NSLf3Iizsafl7b4r4qgEKjZ+xjGtrVc\0D\0AUjyJthkqcwEKDwOzEmDyei+B26Nu/yYwl/WL3YlXtq09s68rxbd2AvCl1iuahhQqcvbjM4xdCUsT\0D\0A37uMdBNSSwIDAQABo4ICEDCCAgwwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYD\0D\0AVR0OBBYEFE4L7xqkQFulF2mHMMo0aEPQQa7yMB8GA1UdIwQYMBaAFE4L7xqkQFulF2mHMMo0aEPQ\0D\0AQa7yMIIBWgYDVR0gBIIBUTCCAU0wggFJBgsrBgEEAYG1NwEBATCCATgwLgYIKwYBBQUHAgEWImh0\0D\0AdHA6Ly93d3cuc3RhcnRzc2wuY29tL3BvbGljeS5wZGYwNAYIKwYBBQUHAgEWKGh0dHA6Ly93d3cu\0D\0Ac3RhcnRzc2wuY29tL2ludGVybWVkaWF0ZS5wZGYwgc8GCCsGAQUFBwICMIHCMCcWIFN0YXJ0IENv\0D\0AbW1lcmNpYWwgKFN0YXJ0Q29tKSBMdGQuMAMCAQEagZZMaW1pdGVkIExpYWJpbGl0eSwgcmVhZCB0\0D\0AaGUgc2VjdGlvbiAqTGVnYWwgTGltaXRhdGlvbnMqIG9mIHRoZSBTdGFydENvbSBDZXJ0aWZpY2F0\0D\0AaW9uIEF1dGhvcml0eSBQb2xpY3kgYXZhaWxhYmxlIGF0IGh0dHA6Ly93d3cuc3RhcnRzc2wuY29t\0D\0AL3BvbGljeS5wZGYwEQYJYIZIAYb4QgEBBAQDAgAHMDgGCWCGSAGG+EIBDQQrFilTdGFydENvbSBG\0D\0AcmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTANBgkqhkiG9w0BAQsFAAOCAgEAjo/n3JR5\0D\0AfPGFf59Jb2vKXfuM/gTFwWLRfUKKvFO3lANmMD+x5wqnUCBVJX92ehQN6wQOQOY+2IirByeDqXWm\0D\0AN3PH/UvSTa0XQMhGvjt/UfzDtgUx3M2FIk5xt/JxXrAaxrqTi3iSSoX4eA+D/i+tLPfkpLst0OcN\0D\0AOrg+zvZ49q5HJMqjNTbOx8aHmNrs++myziebiMMEofYLWWivydsQD032ZGNcpRJvkrKTlMeIFw6T\0D\0Atn5ii5B/q06f/ON1FE8qMt9bDeD1e5MNq6HPh+GlBEXoPBKlCcWw0bdT82AUuoVpaiF8H3VhFyAX\0D\0Ae2w7QSlc4axa0c2Mm+tgHRns9+Ww2vl5GKVFP0lDV9LdJNUso/2RjSe15esUBppMeyG7Oq0wBhjA\0D\0A2MFrLH9ZXF2RsXAiV+uKa0hK1Q8p7MZAwC+ITGgBF3f0JBlPvfrhsiAhS90a2Cl9qrjeVOwhVYBs\0D\0AHvUwyKMQ5bLmKhQxw4UtjJixhlpPiVktucf3HMiKf8CdBUrmQk9io20ppB+Fq9vlgcitKj1MXVuE\0D\0AJnHEhV5xJMqlG2zYYdMa4FTbzrqpMrUi9nNBCV24F10OD5mQ1kfabwo6YigUZ4LZ8dCAWZvLMdib\0D\0AD4x3TrVoivJs9iQOLWxwxXPR3hTQcY+203sC9uO41Alua551hDnmfyWl8kgAwKQB2j8=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStartCom Certification Authority G2\0D\0A===================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFYzCCA0ugAwIBAgIBOzANBgkqhkiG9w0BAQsFADBTMQswCQYDVQQGEwJJTDEWMBQGA1UEChMN\0D\0AU3RhcnRDb20gTHRkLjEsMCoGA1UEAxMjU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\0D\0ARzIwHhcNMTAwMTAxMDEwMDAxWhcNMzkxMjMxMjM1OTAxWjBTMQswCQYDVQQGEwJJTDEWMBQGA1UE\0D\0AChMNU3RhcnRDb20gTHRkLjEsMCoGA1UEAxMjU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3Jp\0D\0AdHkgRzIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2iTZbB7cgNr2Cu+EWIAOVeq8O\0D\0Ao1XJJZlKxdBWQYeQTSFgpBSHO839sj60ZwNq7eEPS8CRhXBF4EKe3ikj1AENoBB5uNsDvfOpL9HG\0D\0A4A/LnooUCri99lZi8cVytjIl2bLzvWXFDSxu1ZJvGIsAQRSCb0AgJnooD/Uefyf3lLE3PbfHkffi\0D\0AAez9lInhzG7TNtYKGXmu1zSCZf98Qru23QumNK9LYP5/Q0kGi4xDuFby2X8hQxfqp0iVAXV16iul\0D\0AQ5XqFYSdCI0mblWbq9zSOdIxHWDirMxWRST1HFSr7obdljKF+ExP6JV2tgXdNiNnvP8V4so75qbs\0D\0AO+wmETRIjfaAKxojAuuKHDp2KntWFhxyKrOq42ClAJ8Em+JvHhRYW6Vsi1g8w7pOOlz34ZYrPu8H\0D\0AvKTlXcxNnw3h3Kq74W4a7I/htkxNeXJdFzULHdfBR9qWJODQcqhaX2YtENwvKhOuJv4KHBnM0D4L\0D\0AnMgJLvlblnpHnOl68wVQdJVznjAJ85eCXuaPOQgeWeU1FEIT/wCc976qUM/iUUjXuG+v+E5+M5iS\0D\0AFGI6dWPPe/regjupuznixL0sAA7IF6wT700ljtizkC+p2il9Ha90OrInwMEePnWjFqmveiJdnxMa\0D\0Az6eg6+OGCtP95paV1yPIN93EfKo2rJgaErHgTuixO/XWb/Ew1wIDAQABo0IwQDAPBgNVHRMBAf8E\0D\0ABTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUS8W0QGutHLOlHGVuRjaJhwUMDrYwDQYJ\0D\0AKoZIhvcNAQELBQADggIBAHNXPyzVlTJ+N9uWkusZXn5T50HsEbZH77Xe7XRcxfGOSeD8bpkTzZ+K\0D\0A2s06Ctg6Wgk/XzTQLwPSZh0avZyQN8gMjgdalEVGKua+etqhqaRpEpKwfTbURIfXUfEpY9Z1zRbk\0D\0AJ4kd+MIySP3bmdCPX1R0zKxnNBFi2QwKN4fRoxdIjtIXHfbX/dtl6/2o1PXWT6RbdejF0mCy2wl+\0D\0AJYt7ulKSnj7oxXehPOBKc2thz4bcQ///If4jXSRK9dNtD2IEBVeC2m6kMyV5Sy5UGYvMLD0w6dEG\0D\0A/+gyRr61M3Z3qAFdlsHB1b6uJcDJHgoJIIihDsnzb02CVAAgp9KP5DlUFy6NHrgbuxu9mk47EDTc\0D\0AnIhT76IxW1hPkWLIwpqazRVdOKnWvvgTtZ8SafJQYqz7Fzf07rh1Z2AQ+4NQ+US1dZxAF7L+/Xld\0D\0AblhYXzD8AK6vM8EOTmy6p6ahfzLbOOCxchcKK5HsamMm7YnUeMx0HgX4a/6ManY5Ka5lIxKVCCIc\0D\0Al85bBu4M4ru8H0ST9tg4RQUh7eStqxK2A6RCLi3ECToDZ2mEmuFZkIoohdVddLHRDiBYmxOlsGOm\0D\0A7XtH/UVVMKTumtTm4ofvmMkyghEpIrwACjFeLQ/Ajulrso8uBtjRkcfGEvRM/TAXw8HaOFvjqerm\0D\0Aobp573PYtlNXLfbQ4ddI\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ABuypass Class 2 Root CA\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU\0D\0AQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3MgQ2xhc3MgMiBSb290IENBMB4X\0D\0ADTEwMTAyNjA4MzgwM1oXDTQwMTAyNjA4MzgwM1owTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1\0D\0AeXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDIgUm9vdCBDQTCCAiIw\0D\0ADQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANfHXvfBB9R3+0Mh9PT1aeTuMgHbo4Yf5FkNuud1\0D\0Ag1Lr6hxhFUi7HQfKjK6w3Jad6sNgkoaCKHOcVgb/S2TwDCo3SbXlzwx87vFKu3MwZfPVL4O2fuPn\0D\0A9Z6rYPnT8Z2SdIrkHJasW4DptfQxh6NR/Md+oW+OU3fUl8FVM5I+GC911K2GScuVr1QGbNgGE41b\0D\0A/+EmGVnAJLqBcXmQRFBoJJRfuLMR8SlBYaNByyM21cHxMlAQTn/0hpPshNOOvEu/XAFOBz3cFIqU\0D\0ACqTqc/sLUegTBxj6DvEr0VQVfTzh97QZQmdiXnfgolXsttlpF9U6r0TtSsWe5HonfOV116rLJeff\0D\0AawrbD02TTqigzXsu8lkBarcNuAeBfos4GzjmCleZPe4h6KP1DBbdi+w0jpwqHAAVF41og9JwnxgI\0D\0AzRFo1clrUs3ERo/ctfPYV3Me6ZQ5BL/T3jjetFPsaRyifsSP5BtwrfKi+fv3FmRmaZ9JUaLiFRhn\0D\0ABkp/1Wy1TbMz4GHrXb7pmA8y1x1LPC5aAVKRCfLf6o3YBkBjqhHk/sM3nhRSP/TizPJhk9H9Z2vX\0D\0AUq6/aKtAQ6BXNVN48FP4YUIHZMbXb5tMOA1jrGKvNouicwoN9SG9dKpN6nIDSdvHXx1iY8f93ZHs\0D\0AM+71bbRuMGjeyNYmsHVee7QHIJihdjK4TWxPAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\0D\0AVR0OBBYEFMmAd+BikoL1RpzzuvdMw964o605MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsF\0D\0AAAOCAgEAU18h9bqwOlI5LJKwbADJ784g7wbylp7ppHR/ehb8t/W2+xUbP6umwHJdELFx7rxP462s\0D\0AA20ucS6vxOOto70MEae0/0qyexAQH6dXQbLArvQsWdZHEIjzIVEpMMpghq9Gqx3tOluwlN5E40EI\0D\0AosHsHdb9T7bWR9AUC8rmyrV7d35BH16Dx7aMOZawP5aBQW9gkOLo+fsicdl9sz1Gv7SEr5AcD48S\0D\0Aaq/v7h56rgJKihcrdv6sVIkkLE8/trKnToyokZf7KcZ7XC25y2a2t6hbElGFtQl+Ynhw/qlqYLYd\0D\0ADnkM/crqJIByw5c/8nerQyIKx+u2DISCLIBrQYoIwOula9+ZEsuK1V6ADJHgJgg2SMX6OBE1/yWD\0D\0ALfJ6v9r9jv6ly0UsH8SIU653DtmadsWOLB2jutXsMq7Aqqz30XpN69QH4kj3Io6wpJ9qzo6ysmD0\0D\0AoyLQI+uUWnpp3Q+/QFesa1lQ2aOZ4W7+jQF5JyMV3pKdewlNWudLSDBaGOYKbeaP4NK75t98biGC\0D\0AwWg5TbSYWGZizEqQXsP6JwSxeRV0mcy+rSDeJmAc61ZRpqPq5KM/p/9h3PFaTWwyI0PurKju7koS\0D\0ACTxdccK+efrCh2gdC/1cacwG0Jp9VJkqyTkaGa9LKkPzY11aWOIv4x3kqdbQCtCev9eBCfHJxyYN\0D\0ArJgWVqA=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ABuypass Class 3 Root CA\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU\0D\0AQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3MgQ2xhc3MgMyBSb290IENBMB4X\0D\0ADTEwMTAyNjA4Mjg1OFoXDTQwMTAyNjA4Mjg1OFowTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1\0D\0AeXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDMgUm9vdCBDQTCCAiIw\0D\0ADQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKXaCpUWUOOV8l6ddjEGMnqb8RB2uACatVI2zSRH\0D\0AsJ8YZLya9vrVediQYkwiL944PdbgqOkcLNt4EemOaFEVcsfzM4fkoF0LXOBXByow9c3EN3coTRiR\0D\0A5r/VUv1xLXA+58bEiuPwKAv0dpihi4dVsjoT/Lc+JzeOIuOoTyrvYLs9tznDDgFHmV0ST9tD+leh\0D\0A7fmdvhFHJlsTmKtdFoqwNxxXnUX/iJY2v7vKB3tvh2PX0DJq1l1sDPGzbjniazEuOQAnFN44wOwZ\0D\0AZoYS6J1yFhNkUsepNxz9gjDthBgd9K5c/3ATAOux9TN6S9ZV+AWNS2mw9bMoNlwUxFFzTWsL8TQH\0D\0A2xc519woe2v1n/MuwU8XKhDzzMro6/1rqy6any2CbgTUUgGTLT2G/H783+9CHaZr77kgxve9oKeV\0D\0A/afmiSTYzIw0bOIjL9kSGiG5VZFvC5F5GQytQIgLcOJ60g7YaEi7ghM5EFjp2CoHxhLbWNvSO1UQ\0D\0ARwUVZ2J+GGOmRj8JDlQyXr8NYnon74Do29lLBlo3WiXQCBJ31G8JUJc9yB3D34xFMFbG02SrZvPA\0D\0AXpacw8Tvw3xrizp5f7NJzz3iiZ+gMEuFuZyUJHmPfWupRWgPK9Dx2hzLabjKSWJtyNBjYt1gD1iq\0D\0Aj6G8BaVmos8bdrKEZLFMOVLAMLrwjEsCsLa3AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\0D\0AVR0OBBYEFEe4zf/lb+74suwvTg75JbCOPGvDMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsF\0D\0AAAOCAgEAACAjQTUEkMJAYmDv4jVM1z+s4jSQuKFvdvoWFqRINyzpkMLyPPgKn9iB5btb2iUspKdV\0D\0AcSQy9sgL8rxq+JOssgfCX5/bzMiKqr5qb+FJEMwx14C7u8jYog5kV+qi9cKpMRXSIGrs/CIBKM+G\0D\0AuIAeqcwRpTzyFrNHnfzSgCHEy9BHcEGhyoMZCCxt8l13nIoUE9Q2HJLw5QY33KbmkJs4j1xrG0aG\0D\0AQ0JfPgEHU1RdZX33inOhmlRaHylDFCfChQ+1iHsaO5S3HWCntZznKWlXWpuTekMwGwPXYshApqr8\0D\0AZORK15FTAaggiG6cX0S5y2CBNOxv033aSF/rtJC8LakcC6wc1aJoIIAE1vyxjy+7SjENSoYc6+I2\0D\0AKSb12tjE8nVhz36udmNKekBlk4f4HoCMhuWG1o8O/FMsYOgWYRqiPkN7zTlgVGr18okmAWiDSKIz\0D\0A6MkEkbIRNBE+6tBDGR8Dk5AM/1E9V/RBbuHLoL7ryWPNbczk+DaqaJ3tvV2XcEQNtg413OEMXbug\0D\0AUZTLfhbrES+jkkXITHHZvMmZUldGL1DPvTVp9D0VzgalLA8+9oG6lLvDu79leNKGef9JOxqDDPDe\0D\0AeOzI8k1MGt6CKfjBWtrt7uYnXuhF0J0cUahoq0Tj0Itq4/g7u9xN12TyUb7mqqta6THuBrxzvxNi\0D\0ACp/HuZc=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AT-TeleSec GlobalRoot Class 3\0D\0A============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoM\0D\0AIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBU\0D\0AcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDMwHhcNMDgx\0D\0AMDAxMTAyOTU2WhcNMzMxMDAxMjM1OTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lz\0D\0AdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBD\0D\0AZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDMwggEiMA0GCSqGSIb3\0D\0ADQEBAQUAA4IBDwAwggEKAoIBAQC9dZPwYiJvJK7genasfb3ZJNW4t/zN8ELg63iIVl6bmlQdTQyK\0D\0A9tPPcPRStdiTBONGhnFBSivwKixVA9ZIw+A5OO3yXDw/RLyTPWGrTs0NvvAgJ1gORH8EGoel15YU\0D\0ANpDQSXuhdfsaa3Ox+M6pCSzyU9XDFES4hqX2iys52qMzVNn6chr3IhUciJFrf2blw2qAsCTz34ZF\0D\0AiP0Zf3WHHx+xGwpzJFu5ZeAsVMhg02YXP+HMVDNzkQI6pn97djmiH5a2OK61yJN0HZ65tOVgnS9W\0D\0A0eDrXltMEnAMbEQgqxHY9Bn20pxSN+f6tsIxO0rUFJmtxxr1XV/6B7h8DR/Wgx6zAgMBAAGjQjBA\0D\0AMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS1A/d2O2GCahKqGFPr\0D\0AAyGUv/7OyjANBgkqhkiG9w0BAQsFAAOCAQEAVj3vlNW92nOyWL6ukK2YJ5f+AbGwUgC4TeQbIXQb\0D\0AfsDuXmkqJa9c1h3a0nnJ85cp4IaH3gRZD/FZ1GSFS5mvJQQeyUapl96Cshtwn5z2r3Ex3XsFpSzT\0D\0AucpH9sry9uetuUg/vBa3wW306gmv7PO15wWeph6KU1HWk4HMdJP2udqmJQV0eVp+QD6CSyYRMG7h\0D\0AP0HHRwA11fXT91Q+gT3aSWqas+8QPebrb9HIIkfLzM8BMZLZGOMivgkeGj5asuRrDFR6fUNOuIml\0D\0Ae9eiPZaGzPImNC1qkp2aGtAw4l1OBLBfiyB+d8E9lYLRRpo7PHi4b6HQDWSieB4pTpPDpFQUWw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEE Certification Centre Root CA\0D\0A===============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEAzCCAuugAwIBAgIQVID5oHPtPwBMyonY43HmSjANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQG\0D\0AEwJFRTEiMCAGA1UECgwZQVMgU2VydGlmaXRzZWVyaW1pc2tlc2t1czEoMCYGA1UEAwwfRUUgQ2Vy\0D\0AdGlmaWNhdGlvbiBDZW50cmUgUm9vdCBDQTEYMBYGCSqGSIb3DQEJARYJcGtpQHNrLmVlMCIYDzIw\0D\0AMTAxMDMwMTAxMDMwWhgPMjAzMDEyMTcyMzU5NTlaMHUxCzAJBgNVBAYTAkVFMSIwIAYDVQQKDBlB\0D\0AUyBTZXJ0aWZpdHNlZXJpbWlza2Vza3VzMSgwJgYDVQQDDB9FRSBDZXJ0aWZpY2F0aW9uIENlbnRy\0D\0AZSBSb290IENBMRgwFgYJKoZIhvcNAQkBFglwa2lAc2suZWUwggEiMA0GCSqGSIb3DQEBAQUAA4IB\0D\0ADwAwggEKAoIBAQDIIMDs4MVLqwd4lfNE7vsLDP90jmG7sWLqI9iroWUyeuuOF0+W2Ap7kaJjbMeM\0D\0ATC55v6kF/GlclY1i+blw7cNRfdCT5mzrMEvhvH2/UpvObntl8jixwKIy72KyaOBhU8E2lf/slLo2\0D\0ArpwcpzIP5Xy0xm90/XsY6KxX7QYgSzIwWFv9zajmofxwvI6Sc9uXp3whrj3B9UiHbCe9nyV0gVWw\0D\0A93X2PaRka9ZP585ArQ/dMtO8ihJTmMmJ+xAdTX7Nfh9WDSFwhfYggx/2uh8Ej+p3iDXE/+pOoYtN\0D\0AP2MbRMNE1CV2yreN1x5KZmTNXMWcg+HCCIia7E6j8T4cLNlsHaFLAgMBAAGjgYowgYcwDwYDVR0T\0D\0AAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBLyWj7qVhy/zQas8fElyalL1BSZ\0D\0AMEUGA1UdJQQ+MDwGCCsGAQUFBwMCBggrBgEFBQcDAQYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEF\0D\0ABQcDCAYIKwYBBQUHAwkwDQYJKoZIhvcNAQEFBQADggEBAHv25MANqhlHt01Xo/6tu7Fq1Q+e2+Rj\0D\0AxY6hUFaTlrg4wCQiZrxTFGGVv9DHKpY5P30osxBAIWrEr7BSdxjhlthWXePdNl4dp1BUoMUq5KqM\0D\0AlIpPnTX/dqQGE5Gion0ARD9V04I8GtVbvFZMIi5GQ4okQC3zErg7cBqklrkar4dBGmoYDQZPxz5u\0D\0AuSlNDUmJEYcyW+ZLBMjkXOZ0c5RdFpgTlf7727FE5TpwrDdr5rMzcijJs1eg9gIWiAYLtqZLICjU\0D\0A3j2LrTcFU3T+bsy8QxdxXvnFzBqpYe73dgzzcvRyrc9yAjYHR8/vGVCJYMzpJJUPwssd8m92kMfM\0D\0AdcGWxZ0=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ATURKTRUST Certificate Services Provider Root 2007\0D\0A=================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEPTCCAyWgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBvzE/MD0GA1UEAww2VMOcUktUUlVTVCBF\0D\0AbGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxMQswCQYDVQQGEwJUUjEP\0D\0AMA0GA1UEBwwGQW5rYXJhMV4wXAYDVQQKDFVUw5xSS1RSVVNUIEJpbGdpIMSwbGV0acWfaW0gdmUg\0D\0AQmlsacWfaW0gR8O8dmVubGnEn2kgSGl6bWV0bGVyaSBBLsWeLiAoYykgQXJhbMSxayAyMDA3MB4X\0D\0ADTA3MTIyNTE4MzcxOVoXDTE3MTIyMjE4MzcxOVowgb8xPzA9BgNVBAMMNlTDnFJLVFJVU1QgRWxl\0D\0Aa3Ryb25payBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnEsWPEsXPEsTELMAkGA1UEBhMCVFIxDzAN\0D\0ABgNVBAcMBkFua2FyYTFeMFwGA1UECgxVVMOcUktUUlVTVCBCaWxnaSDEsGxldGnFn2ltIHZlIEJp\0D\0AbGnFn2ltIEfDvHZlbmxpxJ9pIEhpem1ldGxlcmkgQS7Fni4gKGMpIEFyYWzEsWsgMjAwNzCCASIw\0D\0ADQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKu3PgqMyKVYFeaK7yc9SrToJdPNM8Ig3BnuiD9N\0D\0AYvDdE3ePYakqtdTyuTFYKTsvP2qcb3N2Je40IIDu6rfwxArNK4aUyeNgsURSsloptJGXg9i3phQv\0D\0AKUmi8wUG+7RP2qFsmmaf8EMJyupyj+sA1zU511YXRxcw9L6/P8JorzZAwan0qafoEGsIiveGHtya\0D\0AKhUG9qPw9ODHFNRRf8+0222vR5YXm3dx2KdxnSQM9pQ/hTEST7ruToK4uT6PIzdezKKqdfcYbwnT\0D\0ArqdUKDT74eA7YH2gvnmJhsifLfkKS8RQouf9eRbHegsYz85M733WB2+Y8a+xwXrXgTW4qhe04MsC\0D\0AAwEAAaNCMEAwHQYDVR0OBBYEFCnFkKslrxHkYb+j/4hhkeYO/pyBMA4GA1UdDwEB/wQEAwIBBjAP\0D\0ABgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQAQDdr4Ouwo0RSVgrESLFF6QSU2TJ/s\0D\0APx+EnWVUXKgWAkD6bho3hO9ynYYKVZ1WKKxmLNA6VpM0ByWtCLCPyA8JWcqdmBzlVPi5RX9ql2+I\0D\0AaE1KBiY3iAIOtsbWcpnOa3faYjGkVh+uX4132l32iPwa2Z61gfAyuOOI0JzzaqC5mxRZNTZPz/OO\0D\0AXl0XrRWV2N2y1RVuAE6zS89mlOTgzbUF2mNXi+WzqtvALhyQRNsaXRik7r4EW5nVcV9VZWRi1aKb\0D\0ABFmGyGJ353yCRWo9F7/snXUMrqNvWtMvmDb08PUZqxFdyKbjKlhqQgnDvZImZjINXQhVdP+MmNAK\0D\0ApoRq0Tl9\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AD-TRUST Root Class 3 CA 2 2009\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEMzCCAxugAwIBAgIDCYPzMA0GCSqGSIb3DQEBCwUAME0xCzAJBgNVBAYTAkRFMRUwEwYDVQQK\0D\0ADAxELVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgMjAwOTAe\0D\0AFw0wOTExMDUwODM1NThaFw0yOTExMDUwODM1NThaME0xCzAJBgNVBAYTAkRFMRUwEwYDVQQKDAxE\0D\0ALVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgMjAwOTCCASIw\0D\0ADQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANOySs96R+91myP6Oi/WUEWJNTrGa9v+2wBoqOAD\0D\0AER03UAifTUpolDWzU9GUY6cgVq/eUXjsKj3zSEhQPgrfRlWLJ23DEE0NkVJD2IfgXU42tSHKXzlA\0D\0ABF9bfsyjxiupQB7ZNoTWSPOSHjRGICTBpFGOShrvUD9pXRl/RcPHAY9RySPocq60vFYJfxLLHLGv\0D\0AKZAKyVXMD9O0Gu1HNVpK7ZxzBCHQqr0ME7UAyiZsxGsMlFqVlNpQmvH/pStmMaTJOKDfHR+4CS7z\0D\0Ap+hnUquVH+BGPtikw8paxTGA6Eian5Rp/hnd2HN8gcqW3o7tszIFZYQ05ub9VxC1X3a/L7AQDcUC\0D\0AAwEAAaOCARowggEWMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFP3aFMSfMN4hvR5COfyrYyNJ\0D\0A4PGEMA4GA1UdDwEB/wQEAwIBBjCB0wYDVR0fBIHLMIHIMIGAoH6gfIZ6bGRhcDovL2RpcmVjdG9y\0D\0AeS5kLXRydXN0Lm5ldC9DTj1ELVRSVVNUJTIwUm9vdCUyMENsYXNzJTIwMyUyMENBJTIwMiUyMDIw\0D\0AMDksTz1ELVRydXN0JTIwR21iSCxDPURFP2NlcnRpZmljYXRlcmV2b2NhdGlvbmxpc3QwQ6BBoD+G\0D\0APWh0dHA6Ly93d3cuZC10cnVzdC5uZXQvY3JsL2QtdHJ1c3Rfcm9vdF9jbGFzc18zX2NhXzJfMjAw\0D\0AOS5jcmwwDQYJKoZIhvcNAQELBQADggEBAH+X2zDI36ScfSF6gHDOFBJpiBSVYEQBrLLpME+bUMJm\0D\0A2H6NMLVwMeniacfzcNsgFYbQDfC+rAF1hM5+n02/t2A7nPPKHeJeaNijnZflQGDSNiH+0LS4F9p0\0D\0Ao3/U37CYAqxva2ssJSRyoWXuJVrl5jLn8t+rSfrzkGkj2wTZ51xY/GXUl77M/C4KzCUqNQT4YJEV\0D\0AdT1B/yMfGchs64JTBKbkTCJNjYy6zltz7GRUUG3RnFX7acM2w4y8PIWmawomDeCTmGCufsYkl4ph\0D\0AX5GOZpIJhzbNi5stPvZR1FDUWSi9g/LMKHtThm3YJohw1+qRzT65ysCQblrGXnRl11z+o+I=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AD-TRUST Root Class 3 CA 2 EV 2009\0D\0A=================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEQzCCAyugAwIBAgIDCYP0MA0GCSqGSIb3DQEBCwUAMFAxCzAJBgNVBAYTAkRFMRUwEwYDVQQK\0D\0ADAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgRVYgMjAw\0D\0AOTAeFw0wOTExMDUwODUwNDZaFw0yOTExMDUwODUwNDZaMFAxCzAJBgNVBAYTAkRFMRUwEwYDVQQK\0D\0ADAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgRVYgMjAw\0D\0AOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJnxhDRwui+3MKCOvXwEz75ivJn9gpfS\0D\0AegpnljgJ9hBOlSJzmY3aFS3nBfwZcyK3jpgAvDw9rKFs+9Z5JUut8Mxk2og+KbgPCdM03TP1YtHh\0D\0AzRnp7hhPTFiu4h7WDFsVWtg6uMQYZB7jM7K1iXdODL/ZlGsTl28So/6ZqQTMFexgaDbtCHu39b+T\0D\0A7WYxg4zGcTSHThfqr4uRjRxWQa4iN1438h3Z0S0NL2lRp75mpoo6Kr3HGrHhFPC+Oh25z1uxav60\0D\0AsUYgovseO3Dvk5h9jHOW8sXvhXCtKSb8HgQ+HKDYD8tSg2J87otTlZCpV6LqYQXY+U3EJ/pure35\0D\0A11H3a6UCAwEAAaOCASQwggEgMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNOUikxiEyoZLsyv\0D\0Acop9NteaHNxnMA4GA1UdDwEB/wQEAwIBBjCB3QYDVR0fBIHVMIHSMIGHoIGEoIGBhn9sZGFwOi8v\0D\0AZGlyZWN0b3J5LmQtdHJ1c3QubmV0L0NOPUQtVFJVU1QlMjBSb290JTIwQ2xhc3MlMjAzJTIwQ0El\0D\0AMjAyJTIwRVYlMjAyMDA5LE89RC1UcnVzdCUyMEdtYkgsQz1ERT9jZXJ0aWZpY2F0ZXJldm9jYXRp\0D\0Ab25saXN0MEagRKBChkBodHRwOi8vd3d3LmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2xh\0D\0Ac3NfM19jYV8yX2V2XzIwMDkuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQA07XtaPKSUiO8aEXUHL7P+\0D\0APPoeUSbrh/Yp3uDx1MYkCenBz1UbtDDZzhr+BlGmFaQt77JLvyAoJUnRpjZ3NOhk31KxEcdzes05\0D\0AnsKtjHEh8lprr988TlWvsoRlFIm5d8sqMb7Po23Pb0iUMkZv53GMoKaEGTcH8gNFCSuGdXzfX2lX\0D\0AANtu2KZyIktQ1HWYVt+3GP9DQ1CuekR78HlR10M9p9OB0/DJT7naxpeG0ILD5EJt/rDiZE4OJudA\0D\0ANCa1CInXCGNjOCd1HjPqbqjdn5lPdE2BiYBL3ZqXKVwvvoFBuYz/6n1gBp7N1z3TLqMVvKjmJuVv\0D\0Aw9y4AyHqnxbxLFS1\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0APSCProcert\0D\0A==========\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIJhjCCB26gAwIBAgIBCzANBgkqhkiG9w0BAQsFADCCAR4xPjA8BgNVBAMTNUF1dG9yaWRhZCBk\0D\0AZSBDZXJ0aWZpY2FjaW9uIFJhaXogZGVsIEVzdGFkbyBWZW5lem9sYW5vMQswCQYDVQQGEwJWRTEQ\0D\0AMA4GA1UEBxMHQ2FyYWNhczEZMBcGA1UECBMQRGlzdHJpdG8gQ2FwaXRhbDE2MDQGA1UEChMtU2lz\0D\0AdGVtYSBOYWNpb25hbCBkZSBDZXJ0aWZpY2FjaW9uIEVsZWN0cm9uaWNhMUMwQQYDVQQLEzpTdXBl\0D\0AcmludGVuZGVuY2lhIGRlIFNlcnZpY2lvcyBkZSBDZXJ0aWZpY2FjaW9uIEVsZWN0cm9uaWNhMSUw\0D\0AIwYJKoZIhvcNAQkBFhZhY3JhaXpAc3VzY2VydGUuZ29iLnZlMB4XDTEwMTIyODE2NTEwMFoXDTIw\0D\0AMTIyNTIzNTk1OVowgdExJjAkBgkqhkiG9w0BCQEWF2NvbnRhY3RvQHByb2NlcnQubmV0LnZlMQ8w\0D\0ADQYDVQQHEwZDaGFjYW8xEDAOBgNVBAgTB01pcmFuZGExKjAoBgNVBAsTIVByb3ZlZWRvciBkZSBD\0D\0AZXJ0aWZpY2Fkb3MgUFJPQ0VSVDE2MDQGA1UEChMtU2lzdGVtYSBOYWNpb25hbCBkZSBDZXJ0aWZp\0D\0AY2FjaW9uIEVsZWN0cm9uaWNhMQswCQYDVQQGEwJWRTETMBEGA1UEAxMKUFNDUHJvY2VydDCCAiIw\0D\0ADQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANW39KOUM6FGqVVhSQ2oh3NekS1wwQYalNo97BVC\0D\0AwfWMrmoX8Yqt/ICV6oNEolt6Vc5Pp6XVurgfoCfAUFM+jbnADrgV3NZs+J74BCXfgI8Qhd19L3uA\0D\0A3VcAZCP4bsm+lU/hdezgfl6VzbHvvnpC2Mks0+saGiKLt38GieU89RLAu9MLmV+QfI4tL3czkkoh\0D\0ARqipCKzx9hEC2ZUWno0vluYC3XXCFCpa1sl9JcLB/KpnheLsvtF8PPqv1W7/U0HU9TI4seJfxPmO\0D\0AEO8GqQKJ/+MMbpfg353bIdD0PghpbNjU5Db4g7ayNo+c7zo3Fn2/omnXO1ty0K+qP1xmk6wKImG2\0D\0A0qCZyFSTXai20b1dCl53lKItwIKOvMoDKjSuc/HUtQy9vmebVOvh+qBa7Dh+PsHMosdEMXXqP+UH\0D\0A0quhJZb25uSgXTcYOWEAM11G1ADEtMo88aKjPvM6/2kwLkDd9p+cJsmWN63nOaK/6mnbVSKVUyqU\0D\0Atd+tFjiBdWbjxywbk5yqjKPK2Ww8F22c3HxT4CAnQzb5EuE8XL1mv6JpIzi4mWCZDlZTOpx+FIyw\0D\0ABm/xhnaQr/2v/pDGj59/i5IjnOcVdo/Vi5QTcmn7K2FjiO/mpF7moxdqWEfLcU8UC17IAggmosvp\0D\0Ar2uKGcfLFFb14dq12fy/czja+eevbqQ34gcnAgMBAAGjggMXMIIDEzASBgNVHRMBAf8ECDAGAQH/\0D\0AAgEBMDcGA1UdEgQwMC6CD3N1c2NlcnRlLmdvYi52ZaAbBgVghl4CAqASDBBSSUYtRy0yMDAwNDAz\0D\0ANi0wMB0GA1UdDgQWBBRBDxk4qpl/Qguk1yeYVKIXTC1RVDCCAVAGA1UdIwSCAUcwggFDgBStuyId\0D\0AxuDSAaj9dlBSk+2YwU2u06GCASakggEiMIIBHjE+MDwGA1UEAxM1QXV0b3JpZGFkIGRlIENlcnRp\0D\0AZmljYWNpb24gUmFpeiBkZWwgRXN0YWRvIFZlbmV6b2xhbm8xCzAJBgNVBAYTAlZFMRAwDgYDVQQH\0D\0AEwdDYXJhY2FzMRkwFwYDVQQIExBEaXN0cml0byBDYXBpdGFsMTYwNAYDVQQKEy1TaXN0ZW1hIE5h\0D\0AY2lvbmFsIGRlIENlcnRpZmljYWNpb24gRWxlY3Ryb25pY2ExQzBBBgNVBAsTOlN1cGVyaW50ZW5k\0D\0AZW5jaWEgZGUgU2VydmljaW9zIGRlIENlcnRpZmljYWNpb24gRWxlY3Ryb25pY2ExJTAjBgkqhkiG\0D\0A9w0BCQEWFmFjcmFpekBzdXNjZXJ0ZS5nb2IudmWCAQowDgYDVR0PAQH/BAQDAgEGME0GA1UdEQRG\0D\0AMESCDnByb2NlcnQubmV0LnZloBUGBWCGXgIBoAwMClBTQy0wMDAwMDKgGwYFYIZeAgKgEgwQUklG\0D\0ALUotMzE2MzUzNzMtNzB2BgNVHR8EbzBtMEagRKBChkBodHRwOi8vd3d3LnN1c2NlcnRlLmdvYi52\0D\0AZS9sY3IvQ0VSVElGSUNBRE8tUkFJWi1TSEEzODRDUkxERVIuY3JsMCOgIaAfhh1sZGFwOi8vYWNy\0D\0AYWl6LnN1c2NlcnRlLmdvYi52ZTA3BggrBgEFBQcBAQQrMCkwJwYIKwYBBQUHMAGGG2h0dHA6Ly9v\0D\0AY3NwLnN1c2NlcnRlLmdvYi52ZTBBBgNVHSAEOjA4MDYGBmCGXgMBAjAsMCoGCCsGAQUFBwIBFh5o\0D\0AdHRwOi8vd3d3LnN1c2NlcnRlLmdvYi52ZS9kcGMwDQYJKoZIhvcNAQELBQADggIBACtZ6yKZu4Sq\0D\0AT96QxtGGcSOeSwORR3C7wJJg7ODU523G0+1ng3dS1fLld6c2suNUvtm7CpsR72H0xpkzmfWvADmN\0D\0Ag7+mvTV+LFwxNG9s2/NkAZiqlCxB3RWGymspThbASfzXg0gTB1GEMVKIu4YXx2sviiCtxQuPcD4q\0D\0Auxtxj7mkoP3YldmvWb8lK5jpY5MvYB7Eqvh39YtsL+1+LrVPQA3uvFd359m21D+VJzog1eWuq2w1\0D\0An8GhHVnchIHuTQfiSLaeS5UtQbHh6N5+LwUeaO6/u5BlOsju6rEYNxxik6SgMexxbJHmpHmJWhSn\0D\0AFFAFTKQAVzAswbVhltw+HoSvOULP5dAssSS830DD7X9jSr3hTxJkhpXzsOfIt+FTvZLm8wyWuevo\0D\0A5pLtp4EJFAv8lXrPj9Y0TzYS3F7RNHXGRoAvlQSMx4bEqCaJqD8Zm4G7UaRKhqsLEQ+xrmNTbSjq\0D\0A3TNWOByyrYDT13K9mmyZY+gAu0F2BbdbmRiKw7gSXFbPVgx96OLP7bx0R/vu0xdOIk9W/1DzLuY5\0D\0ApoLWccret9W6aAjtmcz9opLLabid+Qqkpj5PkygqYWwHJgD/ll9ohri4zspV4KuxPX+Y1zMOWj3Y\0D\0AeMLEYC/HYvBhkdI4sPaeVdtAgAUSM84dkpvRabP/v/GSCmE1P93+hvS84Bpxs2Km\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AChina Internet Network Information Center EV Certificates Root\0D\0A==============================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIID9zCCAt+gAwIBAgIESJ8AATANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCQ04xMjAwBgNV\0D\0ABAoMKUNoaW5hIEludGVybmV0IE5ldHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyMUcwRQYDVQQDDD5D\0D\0AaGluYSBJbnRlcm5ldCBOZXR3b3JrIEluZm9ybWF0aW9uIENlbnRlciBFViBDZXJ0aWZpY2F0ZXMg\0D\0AUm9vdDAeFw0xMDA4MzEwNzExMjVaFw0zMDA4MzEwNzExMjVaMIGKMQswCQYDVQQGEwJDTjEyMDAG\0D\0AA1UECgwpQ2hpbmEgSW50ZXJuZXQgTmV0d29yayBJbmZvcm1hdGlvbiBDZW50ZXIxRzBFBgNVBAMM\0D\0APkNoaW5hIEludGVybmV0IE5ldHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyIEVWIENlcnRpZmljYXRl\0D\0AcyBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm35z7r07eKpkQ0H1UN+U8i6y\0D\0AjUqORlTSIRLIOTJCBumD1Z9S7eVnAztUwYyZmczpwA//DdmEEbK40ctb3B75aDFk4Zv6dOtouSCV\0D\0A98YPjUesWgbdYavi7NifFy2cyjw1l1VxzUOFsUcW9SxTgHbP0wBkvUCZ3czY28Sf1hNfQYOL+Q2H\0D\0AklY0bBoQCxfVWhyXWIQ8hBouXJE0bhlffxdpxWXvayHG1VA6v2G5BY3vbzQ6sm8UY78WO5upKv23\0D\0AKzhmBsUs4qpnHkWnjQRmQvaPK++IIGmPMowUc9orhpFjIpryp9vOiYurXccUwVswah+xt54ugQEC\0D\0A7c+WXmPbqOY4twIDAQABo2MwYTAfBgNVHSMEGDAWgBR8cks5x8DbYqVPm6oYNJKiyoOCWTAPBgNV\0D\0AHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUfHJLOcfA22KlT5uqGDSSosqD\0D\0AglkwDQYJKoZIhvcNAQEFBQADggEBACrDx0M3j92tpLIM7twUbY8opJhJywyA6vPtI2Z1fcXTIWd5\0D\0A0XPFtQO3WKwMVC/GVhMPMdoG52U7HW8228gd+f2ABsqjPWYWqJ1MFn3AlUa1UeTiH9fqBk1jjZaM\0D\0A7+czV0I664zBechNdn3e9rG3geCg+aF4RhcaVpjwTj2rHO3sOdwHSPdj/gauwqRcalsyiMXHM4Ws\0D\0AZkJHwlgkmeHlPuV1LI5D1l08eB6olYIpUNHRFrrvwb562bTYzB5MRuF3sTGrvSrIzo9uoV1/A3U0\0D\0A5K2JRVRevq4opbs/eHnrc7MKDf2+yfdWrPa37S+bISnHOLaVxATywy39FCqQmbkHzJ8=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASwisscom Root CA 2\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF2TCCA8GgAwIBAgIQHp4o6Ejy5e/DfEoeWhhntjANBgkqhkiG9w0BAQsFADBkMQswCQYDVQQG\0D\0AEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2Vy\0D\0AdmljZXMxGzAZBgNVBAMTElN3aXNzY29tIFJvb3QgQ0EgMjAeFw0xMTA2MjQwODM4MTRaFw0zMTA2\0D\0AMjUwNzM4MTRaMGQxCzAJBgNVBAYTAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMcRGln\0D\0AaXRhbCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczEbMBkGA1UEAxMSU3dpc3Njb20gUm9vdCBDQSAyMIIC\0D\0AIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAlUJOhJ1R5tMJ6HJaI2nbeHCOFvErjw0DzpPM\0D\0ALgAIe6szjPTpQOYXTKueuEcUMncy3SgM3hhLX3af+Dk7/E6J2HzFZ++r0rk0X2s682Q2zsKwzxNo\0D\0AysjL67XiPS4h3+os1OD5cJZM/2pYmLcX5BtS5X4HAB1f2uY+lQS3aYg5oUFgJWFLlTloYhyxCwWJ\0D\0AwDaCFCE/rtuh/bxvHGCGtlOUSbkrRsVPACu/obvLP+DHVxxX6NZp+MEkUp2IVd3Chy50I9AU/SpH\0D\0AWrumnf2U5NGKpV+GY3aFy6//SSj8gO1MedK75MDvAe5QQQg1I3ArqRa0jG6F6bYRzzHdUyYb3y1a\0D\0ASgJA/MTAtukxGggo5WDDH8SQjhBiYEQN7Aq+VRhxLKX0srwVYv8c474d2h5Xszx+zYIdkeNL6yxS\0D\0ANLCK/RJOlrDrcH+eOfdmQrGrrFLadkBXeyq96G4DsguAhYidDMfCd7Camlf0uPoTXGiTOmekl9Ab\0D\0AmbeGMktg2M7v0Ax/lZ9vh0+Hio5fCHyqW/xavqGRn1V9TrALacywlKinh/LTSlDcX3KwFnUey7QY\0D\0AYpqwpzmqm59m2I2mbJYV4+by+PGDYmy7Velhk6M99bFXi08jsJvllGov34zflVEpYKELKeRcVVi3\0D\0AqPyZ7iVNTA6z00yPhOgpD/0QVAKFyPnlw4vP5w8CAwEAAaOBhjCBgzAOBgNVHQ8BAf8EBAMCAYYw\0D\0AHQYDVR0hBBYwFDASBgdghXQBUwIBBgdghXQBUwIBMBIGA1UdEwEB/wQIMAYBAf8CAQcwHQYDVR0O\0D\0ABBYEFE0mICKJS9PVpAqhb97iEoHF8TwuMB8GA1UdIwQYMBaAFE0mICKJS9PVpAqhb97iEoHF8Twu\0D\0AMA0GCSqGSIb3DQEBCwUAA4ICAQAyCrKkG8t9voJXiblqf/P0wS4RfbgZPnm3qKhyN2abGu2sEzsO\0D\0Av2LwnN+ee6FTSA5BesogpxcbtnjsQJHzQq0Qw1zv/2BZf82Fo4s9SBwlAjxnffUy6S8w5X2lejjQ\0D\0A82YqZh6NM4OKb3xuqFp1mrjX2lhIREeoTPpMSQpKwhI3qEAMw8jh0FcNlzKVxzqfl9NX+Ave5XLz\0D\0Ao9v/tdhZsnPdTSpxsrpJ9csc1fV5yJmz/MFMdOO0vSk3FQQoHt5FRnDsr7p4DooqzgB53MBfGWcs\0D\0Aa0vvaGgLQ+OswWIJ76bdZWGgr4RVSJFSHMYlkSrQwSIjYVmvRRGFHQEkNI/Ps/8XciATwoCqISxx\0D\0AOQ7Qj1zB09GOInJGTB2Wrk9xseEFKZZZ9LuedT3PDTcNYtsmjGOpI99nBjx8Oto0QuFmtEYE3saW\0D\0AmA9LSHokMnWRn6z3aOkquVVlzl1h0ydw2Df+n7mvoC5Wt6NlUe07qxS/TFED6F+KBZvuim6c779o\0D\0A+sjaC+NCydAXFJy3SuCvkychVSa1ZC+N8f+mQAWFBVzKBxlcCxMoTFh/wqXvRdpg065lYZ1Tg3TC\0D\0ArvJcwhbtkj6EPnNgiLx29CzP0H1907he0ZESEOnN3col49XtmS++dYFLJPlFRpTJKSFTnCZFqhMX\0D\0A5OfNeOI5wSsSnqaeG8XmDtkx2Q==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASwisscom Root EV CA 2\0D\0A=====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF4DCCA8igAwIBAgIRAPL6ZOJ0Y9ON/RAdBB92ylgwDQYJKoZIhvcNAQELBQAwZzELMAkGA1UE\0D\0ABhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNl\0D\0AcnZpY2VzMR4wHAYDVQQDExVTd2lzc2NvbSBSb290IEVWIENBIDIwHhcNMTEwNjI0MDk0NTA4WhcN\0D\0AMzEwNjI1MDg0NTA4WjBnMQswCQYDVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsT\0D\0AHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2VydmljZXMxHjAcBgNVBAMTFVN3aXNzY29tIFJvb3QgRVYg\0D\0AQ0EgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMT3HS9X6lds93BdY7BxUglgRCgz\0D\0Ao3pOCvrY6myLURYaVa5UJsTMRQdBTxB5f3HSek4/OE6zAMaVylvNwSqD1ycfMQ4jFrclyxy0uYAy\0D\0AXhqdk/HoPGAsp15XGVhRXrwsVgu42O+LgrQ8uMIkqBPHoCE2G3pXKSinLr9xJZDzRINpUKTk4Rti\0D\0AGZQJo/PDvO/0vezbE53PnUgJUmfANykRHvvSEaeFGHR55E+FFOtSN+KxRdjMDUN/rhPSays/p8Li\0D\0AqG12W0OfvrSdsyaGOx9/5fLoZigWJdBLlzin5M8J0TbDC77aO0RYjb7xnglrPvMyxyuHxuxenPaH\0D\0AZa0zKcQvidm5y8kDnftslFGXEBuGCxobP/YCfnvUxVFkKJ3106yDgYjTdLRZncHrYTNaRdHLOdAG\0D\0AalNgHa/2+2m8atwBz735j9m9W8E6X47aD0upm50qKGsaCnw8qyIL5XctcfaCNYGu+HuB5ur+rPQa\0D\0Am3Rc6I8k9l2dRsQs0h4rIWqDJ2dVSqTjyDKXZpBy2uPUZC5f46Fq9mDU5zXNysRojddxyNMkM3Ox\0D\0AbPlq4SjbX8Y96L5V5jcb7STZDxmPX2MYWFCBUWVv8p9+agTnNCRxunZLWB4ZvRVgRaoMEkABnRDi\0D\0AxzgHcgplwLa7JSnaFp6LNYth7eVxV4O1PHGf40+/fh6Bn0GXAgMBAAGjgYYwgYMwDgYDVR0PAQH/\0D\0ABAQDAgGGMB0GA1UdIQQWMBQwEgYHYIV0AVMCAgYHYIV0AVMCAjASBgNVHRMBAf8ECDAGAQH/AgED\0D\0AMB0GA1UdDgQWBBRF2aWBbj2ITY1x0kbBbkUe88SAnTAfBgNVHSMEGDAWgBRF2aWBbj2ITY1x0kbB\0D\0AbkUe88SAnTANBgkqhkiG9w0BAQsFAAOCAgEAlDpzBp9SSzBc1P6xXCX5145v9Ydkn+0UjrgEjihL\0D\0Aj6p7jjm02Vj2e6E1CqGdivdj5eu9OYLU43otb98TPLr+flaYC/NUn81ETm484T4VvwYmneTwkLbU\0D\0Awp4wLh/vx3rEUMfqe9pQy3omywC0Wqu1kx+AiYQElY2NfwmTv9SoqORjbdlk5LgpWgi/UOGED1V7\0D\0AXwgiG/W9mR4U9s70WBCCswo9GcG/W6uqmdjyMb3lOGbcWAXH7WMaLgqXfIeTK7KK4/HsGOV1timH\0D\0A59yLGn602MnTihdsfSlEvoqq9X46Lmgxk7lq2prg2+kupYTNHAq4Sgj5nPFhJpiTt3tm7JFe3VE/\0D\0A23MPrQRYCd0EApUKPtN236YQHoA96M2kZNEzx5LH4k5E4wnJTsJdhw4Snr8PyQUQ3nqjsTzyP6Wq\0D\0AJ3mtMX0f/fwZacXduT98zca0wjAefm6S139hdlqP65VNvBFuIXxZN5nQBrz5Bm0yFqXZaajh3DyA\0D\0AHmBR3NdUIR7KYndP+tiPsys6DXhyyWhBWkdKwqPrGtcKqzwyVcgKEZzfdNbwQBUdyLmPtTbFr/gi\0D\0AuMod89a2GQ+fYWVq6nTIfI/DT11lgh/ZDYnadXL77/FHZxOzyNEZiCcmmpl5fx7kLD977vHeTYuW\0D\0Al8PVP3wbI+2ksx0WckNLIOFZfsLorSa/ovc=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACA Disig Root R1\0D\0A================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFaTCCA1GgAwIBAgIJAMMDmu5QkG4oMA0GCSqGSIb3DQEBBQUAMFIxCzAJBgNVBAYTAlNLMRMw\0D\0AEQYDVQQHEwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMuMRkwFwYDVQQDExBDQSBEaXNp\0D\0AZyBSb290IFIxMB4XDTEyMDcxOTA5MDY1NloXDTQyMDcxOTA5MDY1NlowUjELMAkGA1UEBhMCU0sx\0D\0AEzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xGTAXBgNVBAMTEENBIERp\0D\0Ac2lnIFJvb3QgUjEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCqw3j33Jijp1pedxiy\0D\0A3QRkD2P9m5YJgNXoqqXinCaUOuiZc4yd39ffg/N4T0Dhf9Kn0uXKE5Pn7cZ3Xza1lK/oOI7bm+V8\0D\0Au8yN63Vz4STN5qctGS7Y1oprFOsIYgrY3LMATcMjfF9DCCMyEtztDK3AfQ+lekLZWnDZv6fXARz2\0D\0Am6uOt0qGeKAeVjGu74IKgEH3G8muqzIm1Cxr7X1r5OJeIgpFy4QxTaz+29FHuvlglzmxZcfe+5nk\0D\0ACiKxLU3lSCZpq+Kq8/v8kiky6bM+TR8noc2OuRf7JT7JbvN32g0S9l3HuzYQ1VTW8+DiR0jm3hTa\0D\0AYVKvJrT1cU/J19IG32PK/yHoWQbgCNWEFVP3Q+V8xaCJmGtzxmjOZd69fwX3se72V6FglcXM6pM6\0D\0AvpmumwKjrckWtc7dXpl4fho5frLABaTAgqWjR56M6ly2vGfb5ipN0gTco65F97yLnByn1tUD3AjL\0D\0ALhbKXEAz6GfDLuemROoRRRw1ZS0eRWEkG4IupZ0zXWX4Qfkuy5Q/H6MMMSRE7cderVC6xkGbrPAX\0D\0AZcD4XW9boAo0PO7X6oifmPmvTiT6l7Jkdtqr9O3jw2Dv1fkCyC2fg69naQanMVXVz0tv/wQFx1is\0D\0AXxYb5dKj6zHbHzMVTdDypVP1y+E9Tmgt2BLdqvLmTZtJ5cUoobqwWsagtQIDAQABo0IwQDAPBgNV\0D\0AHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUiQq0OJMa5qvum5EY+fU8PjXQ\0D\0A04IwDQYJKoZIhvcNAQEFBQADggIBADKL9p1Kyb4U5YysOMo6CdQbzoaz3evUuii+Eq5FLAR0rBNR\0D\0AxVgYZk2C2tXck8An4b58n1KeElb21Zyp9HWc+jcSjxyT7Ff+Bw+r1RL3D65hXlaASfX8MPWbTx9B\0D\0ALxyE04nH4toCdu0Jz2zBuByDHBb6lM19oMgY0sidbvW9adRtPTXoHqJPYNcHKfyyo6SdbhWSVhlM\0D\0ACrDpfNIZTUJG7L399ldb3Zh+pE3McgODWF3vkzpBemOqfDqo9ayk0d2iLbYq/J8BjuIQscTK5Gfb\0D\0AVSUZP/3oNn6z4eGBrxEWi1CXYBmCAMBrTXO40RMHPuq2MU/wQppt4hF05ZSsjYSVPCGvxdpHyN85\0D\0AYmLLW1AL14FABZyb7bq2ix4Eb5YgOe2kfSnbSM6C3NQCjR0EMVrHS/BsYVLXtFHCgWzN4funodKS\0D\0Ads+xDzdYpPJScWc/DIh4gInByLUfkmO+p3qKViwaqKactV2zY9ATIKHrkWzQjX2v3wvkF7mGnjix\0D\0AlAxYjOBVqjtjbZqJYLhkKpLGN/R+Q0O3c+gB53+XD9fyexn9GtePyfqFa3qdnom2piiZk4hA9z7N\0D\0AUaPK6u95RyG1/jLix8NRb76AdPCkwzryT+lf3xkK8jsTQ6wxpLPn6/wY1gGp8yqPNg7rtLG8t0zJ\0D\0Aa7+h89n07eLw4+1knj0vllJPgFOL\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACA Disig Root R2\0D\0A================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFaTCCA1GgAwIBAgIJAJK4iNuwisFjMA0GCSqGSIb3DQEBCwUAMFIxCzAJBgNVBAYTAlNLMRMw\0D\0AEQYDVQQHEwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMuMRkwFwYDVQQDExBDQSBEaXNp\0D\0AZyBSb290IFIyMB4XDTEyMDcxOTA5MTUzMFoXDTQyMDcxOTA5MTUzMFowUjELMAkGA1UEBhMCU0sx\0D\0AEzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xGTAXBgNVBAMTEENBIERp\0D\0Ac2lnIFJvb3QgUjIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCio8QACdaFXS1tFPbC\0D\0Aw3OeNcJxVX6B+6tGUODBfEl45qt5WDza/3wcn9iXAng+a0EE6UG9vgMsRfYvZNSrXaNHPWSb6Wia\0D\0AxswbP7q+sos0Ai6YVRn8jG+qX9pMzk0DIaPY0jSTVpbLTAwAFjxfGs3Ix2ymrdMxp7zo5eFm1tL7\0D\0AA7RBZckQrg4FY8aAamkw/dLukO8NJ9+flXP04SXabBbeQTg06ov80egEFGEtQX6sx3dOy1FU+16S\0D\0AGBsEWmjGycT6txOgmLcRK7fWV8x8nhfRyyX+hk4kLlYMeE2eARKmK6cBZW58Yh2EhN/qwGu1pSqV\0D\0Ag8NTEQxzHQuyRpDRQjrOQG6Vrf/GlK1ul4SOfW+eioANSW1z4nuSHsPzwfPrLgVv2RvPN3YEyLRa\0D\0A5Beny912H9AZdugsBbPWnDTYltxhh5EF5EQIM8HauQhl1K6yNg3ruji6DOWbnuuNZt2Zz9aJQfYE\0D\0AkoopKW1rOhzndX0CcQ7zwOe9yxndnWCywmZgtrEE7snmhrmaZkCo5xHtgUUDi/ZnWejBBhG93c+A\0D\0AAk9lQHhcR1DIm+YfgXvkRKhbhZri3lrVx/k6RGZL5DJUfORsnLMOPReisjQS1n6yqEm70XooQL6i\0D\0AFh/f5DcfEXP7kAplQ6INfPgGAVUzfbANuPT1rqVCV3w2EYx7XsQDnYx5nQIDAQABo0IwQDAPBgNV\0D\0AHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUtZn4r7CU9eMg1gqtzk5WpC5u\0D\0AQu0wDQYJKoZIhvcNAQELBQADggIBACYGXnDnZTPIgm7ZnBc6G3pmsgH2eDtpXi/q/075KMOYKmFM\0D\0AtCQSin1tERT3nLXK5ryeJ45MGcipvXrA1zYObYVybqjGom32+nNjf7xueQgcnYqfGopTpti72TVV\0D\0AsRHFqQOzVju5hJMiXn7B9hJSi+osZ7z+Nkz1uM/Rs0mSO9MpDpkblvdhuDvEK7Z4bLQjb/D907Je\0D\0AdR+Zlais9trhxTF7+9FGs9K8Z7RiVLoJ92Owk6Ka+elSLotgEqv89WBW7xBci8QaQtyDW2QOy7W8\0D\0A1k/BfDxujRNt+3vrMNDcTa/F1balTFtxyegxvug4BkihGuLq0t4SOVga/4AOgnXmt8kHbA7v/zjx\0D\0AmHHEt38OFdAlab0inSvtBfZGR6ztwPDUO+Ls7pZbkBNOHlY667DvlruWIxG68kOGdGSVyCh13x01\0D\0AutI3gzhTODY7z2zp+WsO0PsE6E9312UBeIYMej4hYvF/Y3EMyZ9E26gnonW+boE+18DrG5gPcFw0\0D\0AsorMwIUY6256s/daoQe/qUKS82Ail+QUoQebTnbAjn39pCXHR+3/H3OszMOl6W8KjptlwlCFtaOg\0D\0AUxLMVYdh84GuEEZhvUQhuMI9dM9+JDX6HAcOmz0iyu8xL4ysEr3vQCj8KWefshNPZiTEUxnpHikV\0D\0A7+ZtsH8tZ/3zbBt1RqPlShfppNcL\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AACCVRAIZ1\0D\0A=========\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UEAwwJQUNDVlJB\0D\0ASVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQswCQYDVQQGEwJFUzAeFw0xMTA1\0D\0AMDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQBgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwH\0D\0AUEtJQUNDVjENMAsGA1UECgwEQUNDVjELMAkGA1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4IC\0D\0ADwAwggIKAoICAQCbqau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gM\0D\0AjmoYHtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM3802/J+Nq2DoLSRYWoG2ioPej0\0D\0ARGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkXhBilyNpAlHPrzg5XPAOBOp0KoVdD\0D\0AaaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ7a4DIrhrIA8wKFSVf+DuzgpmndFALW4ir50awQUZ\0D\0A0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/0KIV9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDG\0D\0AWuzndN9wrqODJerWx5eHk6fGioozl2A3ED6XPm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs7\0D\0A8yM2x/474KElB0iryYl0/wiPgL/AlmXz7uxLaL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMOm3WR\0D\0A5LpSLhl+0fXNWhn8ugb2+1KoS5kE3fj5tItQo05iifCHJPqDQsGH+tUtKSpacXpkatcnYGMN285J\0D\0A9Y0fkIkyF/hzQ7jSWpOGYdbhdQrqeWZ2iE9x6wQl1gpaepPluUsXQA+xtrn13k/c4LOsOxFwYIRK\0D\0AQ26ZIMApcQrAZQIDAQABo4ICyzCCAscwfQYIKwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRw\0D\0AOi8vd3d3LmFjY3YuZXMvZmlsZWFkbWluL0FyY2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEu\0D\0AY3J0MB8GCCsGAQUFBzABhhNodHRwOi8vb2NzcC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2\0D\0AVuqB5TbMjB4/vTAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNKHtOPfNyeTVfZW6oHlNsyM\0D\0AHj+9MIIBcwYDVR0gBIIBajCCAWYwggFiBgRVHSAAMIIBWDCCASIGCCsGAQUFBwICMIIBFB6CARAA\0D\0AQQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABDAGUAcgB0AGkAZgBpAGMAYQBjAGkA8wBuACAAUgBh\0D\0AAO0AegAgAGQAZQAgAGwAYQAgAEEAQwBDAFYAIAAoAEEAZwBlAG4AYwBpAGEAIABkAGUAIABUAGUA\0D\0AYwBuAG8AbABvAGcA7QBhACAAeQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABFAGwAZQBj\0D\0AAHQAcgDzAG4AaQBjAGEALAAgAEMASQBGACAAUQA0ADYAMAAxADEANQA2AEUAKQAuACAAQwBQAFMA\0D\0AIABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3AC4AYQBjAGMAdgAuAGUAczAwBggrBgEFBQcCARYk\0D\0AaHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFjaW9uX2MuaHRtMFUGA1UdHwROMEwwSqBIoEaGRGh0\0D\0AdHA6Ly93d3cuYWNjdi5lcy9maWxlYWRtaW4vQXJjaGl2b3MvY2VydGlmaWNhZG9zL3JhaXphY2N2\0D\0AMV9kZXIuY3JsMA4GA1UdDwEB/wQEAwIBBjAXBgNVHREEEDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZI\0D\0AhvcNAQEFBQADggIBAJcxAp/n/UNnSEQU5CmH7UwoZtCPNdpNYbdKl02125DgBS4OxnnQ8pdpD70E\0D\0AR9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTKFpV8M9xii6g3+CfYCS0b78gUJyCpZET/LtZ1qmxN\0D\0AYEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEnWCzI7UiRfD+mAM/EKXMRNt6GGT6d7hmKG9Ww7Y49\0D\0AnCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepDvV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJ\0D\0ATS+xJlsndQAJxGJ3KQhfnlmstn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3\0D\0AsCPdK6jT2iWH7ehVRE2I9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5h\0D\0AI6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szAh1xA2syVP1Xg\0D\0ANce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xFd3+YJ5oyXSrjhO7FmGYvliAd\0D\0A3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2HpPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3p\0D\0AEfbRD0tVNEYqi4Y7\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ATWCA Global Root CA\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFQTCCAymgAwIBAgICDL4wDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVFcxEjAQBgNVBAoT\0D\0ACVRBSVdBTi1DQTEQMA4GA1UECxMHUm9vdCBDQTEcMBoGA1UEAxMTVFdDQSBHbG9iYWwgUm9vdCBD\0D\0AQTAeFw0xMjA2MjcwNjI4MzNaFw0zMDEyMzExNTU5NTlaMFExCzAJBgNVBAYTAlRXMRIwEAYDVQQK\0D\0AEwlUQUlXQU4tQ0ExEDAOBgNVBAsTB1Jvb3QgQ0ExHDAaBgNVBAMTE1RXQ0EgR2xvYmFsIFJvb3Qg\0D\0AQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCwBdvI64zEbooh745NnHEKH1Jw7W2C\0D\0AnJfF10xORUnLQEK1EjRsGcJ0pDFfhQKX7EMzClPSnIyOt7h52yvVavKOZsTuKwEHktSz0ALfUPZV\0D\0Ar2YOy+BHYC8rMjk1Ujoog/h7FsYYuGLWRyWRzvAZEk2tY/XTP3VfKfChMBwqoJimFb3u/Rk28OKR\0D\0AQ4/6ytYQJ0lM793B8YVwm8rqqFpD/G2Gb3PpN0Wp8DbHzIh1HrtsBv+baz4X7GGqcXzGHaL3SekV\0D\0AtTzWoWH1EfcFbx39Eb7QMAfCKbAJTibc46KokWofwpFFiFzlmLhxpRUZyXx1EcxwdE8tmx2RRP1W\0D\0AKKD+u4ZqyPpcC1jcxkt2yKsi2XMPpfRaAok/T54igu6idFMqPVMnaR1sjjIsZAAmY2E2TqNGtz99\0D\0Asy2sbZCilaLOz9qC5wc0GZbpuCGqKX6mOL6OKUohZnkfs8O1CWfe1tQHRvMq2uYiN2DLgbYPoA/p\0D\0AyJV/v1WRBXrPPRXAb94JlAGD1zQbzECl8LibZ9WYkTunhHiVJqRaCPgrdLQABDzfuBSO6N+pjWxn\0D\0AkjMdwLfS7JLIvgm/LCkFbwJrnu+8vyq8W8BQj0FwcYeyTbcEqYSjMq+u7msXi7Kx/mzhkIyIqJdI\0D\0AzshNy/MGz19qCkKxHh53L46g5pIOBvwFItIm4TFRfTLcDwIDAQABoyMwITAOBgNVHQ8BAf8EBAMC\0D\0AAQYwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAXzSBdu+WHdXltdkCY4QWwa6g\0D\0AcFGn90xHNcgL1yg9iXHZqjNB6hQbbCEAwGxCGX6faVsgQt+i0trEfJdLjbDorMjupWkEmQqSpqsn\0D\0ALhpNgb+E1HAerUf+/UqdM+DyucRFCCEK2mlpc3INvjT+lIutwx4116KD7+U4x6WFH6vPNOw/KP4M\0D\0A8VeGTslV9xzU2KV9Bnpv1d8Q34FOIWWxtuEXeZVFBs5fzNxGiWNoRI2T9GRwoD2dKAXDOXC4Ynsg\0D\0A/eTb6QihuJ49CcdP+yz4k3ZB3lLg4VfSnQO8d57+nile98FRYB/e2guyLXW3Q0iT5/Z5xoRdgFlg\0D\0AlPx4mI88k1HtQJAH32RjJMtOcQWh15QaiDLxInQirqWm2BJpTGCjAu4r7NRjkgtevi92a6O2JryP\0D\0AA9gK8kxkRr05YuWW6zRjESjMlfGt7+/cgFhI6Uu46mWs6fyAtbXIRfmswZ/ZuepiiI7E8UuDEq3m\0D\0Ai4TWnsLrgxifarsbJGAzcMzs9zLzXNl5fe+epP7JI8Mk7hWSsT2RTyaGvWZzJBPqpK5jwa19hAM8\0D\0AEHiGG3njxPPyBJUgriOCxLM6AGK/5jYk4Ve6xx6QddVfP5VhK8E7zeWzaGHQRiapIVJpLesux+t3\0D\0AzqY6tQMzT3bR51xUAV3LePTJDL/PEo4XLSNolOer/qmyKwbQBM0=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ATeliaSonera Root CA v1\0D\0A======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFODCCAyCgAwIBAgIRAJW+FqD3LkbxezmCcvqLzZYwDQYJKoZIhvcNAQEFBQAwNzEUMBIGA1UE\0D\0ACgwLVGVsaWFTb25lcmExHzAdBgNVBAMMFlRlbGlhU29uZXJhIFJvb3QgQ0EgdjEwHhcNMDcxMDE4\0D\0AMTIwMDUwWhcNMzIxMDE4MTIwMDUwWjA3MRQwEgYDVQQKDAtUZWxpYVNvbmVyYTEfMB0GA1UEAwwW\0D\0AVGVsaWFTb25lcmEgUm9vdCBDQSB2MTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMK+\0D\0A6yfwIaPzaSZVfp3FVRaRXP3vIb9TgHot0pGMYzHw7CTww6XScnwQbfQ3t+XmfHnqjLWCi65ItqwA\0D\0A3GV17CpNX8GH9SBlK4GoRz6JI5UwFpB/6FcHSOcZrr9FZ7E3GwYq/t75rH2D+1665I+XZ75Ljo1k\0D\0AB1c4VWk0Nj0TSO9P4tNmHqTPGrdeNjPUtAa9GAH9d4RQAEX1jF3oI7x+/jXh7VB7qTCNGdMJjmhn\0D\0AXb88lxhTuylixcpecsHHltTbLaC0H2kD7OriUPEMPPCs81Mt8Bz17Ww5OXOAFshSsCPN4D7c3TxH\0D\0AoLs1iuKYaIu+5b9y7tL6pe0S7fyYGKkmdtwoSxAgHNN/Fnct7W+A90m7UwW7XWjH1Mh1Fj+JWov3\0D\0AF0fUTPHSiXk+TT2YqGHeOh7S+F4D4MHJHIzTjU3TlTazN19jY5szFPAtJmtTfImMMsJu7D0hADnJ\0D\0AoWjiUIMusDor8zagrC/kb2HCUQk5PotTubtn2txTuXZZNp1D5SDgPTJghSJRt8czu90VL6R4pgd7\0D\0AgUY2BIbdeTXHlSw7sKMXNeVzH7RcWe/a6hBle3rQf5+ztCo3O3CLm1u5K7fsslESl1MpWtTwEhDc\0D\0ATwK7EpIvYtQ/aUN8Ddb8WHUBiJ1YFkveupD/RwGJBmr2X7KQarMCpgKIv7NHfirZ1fpoeDVNAgMB\0D\0AAAGjPzA9MA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBTwj1k4ALP1j5qW\0D\0ADNXr+nuqF+gTEjANBgkqhkiG9w0BAQUFAAOCAgEAvuRcYk4k9AwI//DTDGjkk0kiP0Qnb7tt3oNm\0D\0AzqjMDfz1mgbldxSR651Be5kqhOX//CHBXfDkH1e3damhXwIm/9fH907eT/j3HEbAek9ALCI18Bmx\0D\0A0GtnLLCo4MBANzX2hFxc469CeP6nyQ1Q6g2EdvZR74NTxnr/DlZJLo961gzmJ1TjTQpgcmLNkQfW\0D\0Apb/ImWvtxBnmq0wROMVvMeJuScg/doAmAyYp4Db29iBT4xdwNBedY2gea+zDTYa4EzAvXUYNR0PV\0D\0AG6pZDrlcjQZIrXSHX8f8MVRBE+LHIQ6e4B4N4cB7Q4WQxYpYxmUKeFfyxiMPAdkgS94P+5KFdSpc\0D\0Ac41teyWRyu5FrgZLAMzTsVlQ2jqIOylDRl6XK1TOU2+NSueW+r9xDkKLfP0ooNBIytrEgUy7onOT\0D\0AJsjrDNYmiLbAJM+7vVvrdX3pCI6GMyx5dwlppYn8s3CQh3aP0yK7Qs69cwsgJirQmz1wHiRszYd2\0D\0AqReWt88NkvuOGKmYSdGe/mBEciG5Ge3C9THxOUiIkCR1VBatzvT4aRRkOfujuLpwQMcnHL/EVlP6\0D\0AY2XQ8xwOFvVrhlhNGNTkDY6lnVuR3HYkUD/GKvvZt5y11ubQ2egZixVxSK236thZiNSQvxaz2ems\0D\0AWWFUyBy6ysHK4bkgTI86k4mloMy/0/Z1pHWWbVY=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AE-Tugra Certification Authority\0D\0A===============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIGSzCCBDOgAwIBAgIIamg+nFGby1MwDQYJKoZIhvcNAQELBQAwgbIxCzAJBgNVBAYTAlRSMQ8w\0D\0ADQYDVQQHDAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xvamls\0D\0AZXJpIHZlIEhpem1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBN\0D\0AZXJrZXppMSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTEzMDMw\0D\0ANTEyMDk0OFoXDTIzMDMwMzEyMDk0OFowgbIxCzAJBgNVBAYTAlRSMQ8wDQYDVQQHDAZBbmthcmEx\0D\0AQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xvamlsZXJpIHZlIEhpem1ldGxl\0D\0AcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBNZXJrZXppMSgwJgYDVQQD\0D\0ADB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8A\0D\0AMIICCgKCAgEA4vU/kwVRHoViVF56C/UYB4Oufq9899SKa6VjQzm5S/fDxmSJPZQuVIBSOTkHS0vd\0D\0AhQd2h8y/L5VMzH2nPbxHD5hw+IyFHnSOkm0bQNGZDbt1bsipa5rAhDGvykPL6ys06I+XawGb1Q5K\0D\0ACKpbknSFQ9OArqGIW66z6l7LFpp3RMih9lRozt6Plyu6W0ACDGQXwLWTzeHxE2bODHnv0ZEoq1+g\0D\0AElIwcxmOj+GMB6LDu0rw6h8VqO4lzKRG+Bsi77MOQ7osJLjFLFzUHPhdZL3Dk14opz8n8Y4e0ypQ\0D\0ABaNV2cvnOVPAmJ6MVGKLJrD3fY185MaeZkJVgkfnsliNZvcHfC425lAcP9tDJMW/hkd5s3kc91r0\0D\0AE+xs+D/iWR+V7kI+ua2oMoVJl0b+SzGPWsutdEcf6ZG33ygEIqDUD13ieU/qbIWGvaimzuT6w+Gz\0D\0Art48Ue7LE3wBf4QOXVGUnhMMti6lTPk5cDZvlsouDERVxcr6XQKj39ZkjFqzAQqptQpHF//vkUAq\0D\0AjqFGOjGY5RH8zLtJVor8udBhmm9lbObDyz51Sf6Pp+KJxWfXnUYTTjF2OySznhFlhqt/7x3U+Lzn\0D\0ArFpct1pHXFXOVbQicVtbC/DP3KBhZOqp12gKY6fgDT+gr9Oq0n7vUaDmUStVkhUXU8u3Zg5mTPj5\0D\0AdUyQ5xJwx0UCAwEAAaNjMGEwHQYDVR0OBBYEFC7j27JJ0JxUeVz6Jyr+zE7S6E5UMA8GA1UdEwEB\0D\0A/wQFMAMBAf8wHwYDVR0jBBgwFoAULuPbsknQnFR5XPonKv7MTtLoTlQwDgYDVR0PAQH/BAQDAgEG\0D\0AMA0GCSqGSIb3DQEBCwUAA4ICAQAFNzr0TbdF4kV1JI+2d1LoHNgQk2Xz8lkGpD4eKexd0dCrfOAK\0D\0AkEh47U6YA5n+KGCRHTAduGN8qOY1tfrTYXbm1gdLymmasoR6d5NFFxWfJNCYExL/u6Au/U5Mh/jO\0D\0AXKqYGwXgAEZKgoClM4so3O0409/lPun++1ndYYRP0lSWE2ETPo+Aab6TR7U1Q9Jauz1c77NCR807\0D\0AVRMGsAnb/WP2OogKmW9+4c4bU2pEZiNRCHu8W1Ki/QY3OEBhj0qWuJA3+GbHeJAAFS6LrVE1Uweo\0D\0Aa2iu+U48BybNCAVwzDk/dr2l02cmAYamU9JgO3xDf1WKvJUawSg5TB9D0pH0clmKuVb8P7Sd2nCc\0D\0AdlqMQ1DujjByTd//SffGqWfZbawCEeI6FiWnWAjLb1NBnEg4R2gz0dfHj9R0IdTDBZB6/86WiLEV\0D\0AKV0jq9BgoRJP3vQXzTLlyb/IQ639Lo7xr+L0mPoSHyDYwKcMhcWQ9DstliaxLL5Mq+ux0orJ23gT\0D\0ADx4JnW2PAJ8C2sH6H3p6CcRK5ogql5+Ji/03X186zjhZhkuvcQu02PJwT58yE+Owp1fl2tpDy4Q0\0D\0A8ijE6m30Ku/Ba3ba+367hTzSU8JNvnHhRdH9I2cNE3X7z2VnIp2usAnRCf8dNL/+I5c30jn6PQ0G\0D\0AC7TbO6Orb1wdtn7os4I07QZcJA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AT-TeleSec GlobalRoot Class 2\0D\0A============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoM\0D\0AIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBU\0D\0AcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwHhcNMDgx\0D\0AMDAxMTA0MDE0WhcNMzMxMDAxMjM1OTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lz\0D\0AdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBD\0D\0AZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwggEiMA0GCSqGSIb3\0D\0ADQEBAQUAA4IBDwAwggEKAoIBAQCqX9obX+hzkeXaXPSi5kfl82hVYAUdAqSzm1nzHoqvNK38DcLZ\0D\0ASBnuaY/JIPwhqgcZ7bBcrGXHX+0CfHt8LRvWurmAwhiCFoT6ZrAIxlQjgeTNuUk/9k9uN0goOA/F\0D\0AvudocP05l03Sx5iRUKrERLMjfTlH6VJi1hKTXrcxlkIF+3anHqP1wvzpesVsqXFP6st4vGCvx970\0D\0A2cu+fjOlbpSD8DT6IavqjnKgP6TeMFvvhk1qlVtDRKgQFRzlAVfFmPHmBiiRqiDFt1MmUUOyCxGV\0D\0AWOHAD3bZwI18gfNycJ5v/hqO2V81xrJvNHy+SE/iWjnX2J14np+GPgNeGYtEotXHAgMBAAGjQjBA\0D\0AMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS/WSA2AHmgoCJrjNXy\0D\0AYdK4LMuCSjANBgkqhkiG9w0BAQsFAAOCAQEAMQOiYQsfdOhyNsZt+U2e+iKo4YFWz827n+qrkRk4\0D\0Ar6p8FU3ztqONpfSO9kSpp+ghla0+AGIWiPACuvxhI+YzmzB6azZie60EI4RYZeLbK4rnJVM3YlNf\0D\0AvNoBYimipidx5joifsFvHZVwIEoHNN/q/xWA5brXethbdXwFeilHfkCoMRN3zUA7tFFHei4R40cR\0D\0A3p1m0IvVVGb6g1XqfMIpiRvpb7PO4gWEyS8+eIVibslfwXhjdFjASBgMmTnrpMwatXlajRWc2BQN\0D\0A9noHV8cigwUtPJslJj0Ys6lDfMjIq2SPDqO/nBudMNva0Bkuqjzx+zOAduTNrRlPBSeOE6Fuwg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AAtos TrustedRoot 2011\0D\0A=====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDdzCCAl+gAwIBAgIIXDPLYixfszIwDQYJKoZIhvcNAQELBQAwPDEeMBwGA1UEAwwVQXRvcyBU\0D\0AcnVzdGVkUm9vdCAyMDExMQ0wCwYDVQQKDARBdG9zMQswCQYDVQQGEwJERTAeFw0xMTA3MDcxNDU4\0D\0AMzBaFw0zMDEyMzEyMzU5NTlaMDwxHjAcBgNVBAMMFUF0b3MgVHJ1c3RlZFJvb3QgMjAxMTENMAsG\0D\0AA1UECgwEQXRvczELMAkGA1UEBhMCREUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCV\0D\0AhTuXbyo7LjvPpvMpNb7PGKw+qtn4TaA+Gke5vJrf8v7MPkfoepbCJI419KkM/IL9bcFyYie96mvr\0D\0A54rMVD6QUM+A1JX76LWC1BTFtqlVJVfbsVD2sGBkWXppzwO3bw2+yj5vdHLqqjAqc2K+SZFhyBH+\0D\0ADgMq92og3AIVDV4VavzjgsG1xZ1kCWyjWZgHJ8cblithdHFsQ/H3NYkQ4J7sVaE3IqKHBAUsR320\0D\0AHLliKWYoyrfhk/WklAOZuXCFteZI6o1Q/NnezG8HDt0Lcp2AMBYHlT8oDv3FdU9T1nSatCQujgKR\0D\0Az3bFmx5VdJx4IbHwLfELn8LVlhgf8FQieowHAgMBAAGjfTB7MB0GA1UdDgQWBBSnpQaxLKYJYO7R\0D\0Al+lwrrw7GWzbITAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFKelBrEspglg7tGX6XCuvDsZ\0D\0AbNshMBgGA1UdIAQRMA8wDQYLKwYBBAGwLQMEAQEwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB\0D\0ACwUAA4IBAQAmdzTblEiGKkGdLD4GkGDEjKwLVLgfuXvTBznk+j57sj1O7Z8jvZfza1zv7v1Apt+h\0D\0Ak6EKhqzvINB5Ab149xnYJDE0BAGmuhWawyfc2E8PzBhj/5kPDpFrdRbhIfzYJsdHt6bPWHJxfrrh\0D\0ATZVHO8mvbaG0weyJ9rQPOLXiZNwlz6bb65pcmaHFCN795trV1lpFDMS3wrUU77QR/w4VtfX128a9\0D\0A61qn8FYiqTxlVMYVqL2Gns2Dlmh6cYGJ4Qvh6hEbaAjMaZ7snkGeRDImeuKHCnE96+RapNLbxc3G\0D\0A3mB/ufNPRJLvKrcYPqcZ2Qt9sTdBQrC6YB3y/gkRsPCHe6ed\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AQuoVadis Root CA 1 G3\0D\0A=====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFYDCCA0igAwIBAgIUeFhfLq0sGUvjNwc1NBMotZbUZZMwDQYJKoZIhvcNAQELBQAwSDELMAkG\0D\0AA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1ZhZGlzIFJv\0D\0Ab3QgQ0EgMSBHMzAeFw0xMjAxMTIxNzI3NDRaFw00MjAxMTIxNzI3NDRaMEgxCzAJBgNVBAYTAkJN\0D\0AMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDEg\0D\0ARzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCgvlAQjunybEC0BJyFuTHK3C3kEakE\0D\0APBtVwedYMB0ktMPvhd6MLOHBPd+C5k+tR4ds7FtJwUrVu4/sh6x/gpqG7D0DmVIB0jWerNrwU8lm\0D\0APNSsAgHaJNM7qAJGr6Qc4/hzWHa39g6QDbXwz8z6+cZM5cOGMAqNF34168Xfuw6cwI2H44g4hWf6\0D\0APser4BOcBRiYz5P1sZK0/CPTz9XEJ0ngnjybCKOLXSoh4Pw5qlPafX7PGglTvF0FBM+hSo+LdoIN\0D\0AofjSxxR3W5A2B4GbPgb6Ul5jxaYA/qXpUhtStZI5cgMJYr2wYBZupt0lwgNm3fME0UDiTouG9G/l\0D\0Ag6AnhF4EwfWQvTA9xO+oabw4m6SkltFi2mnAAZauy8RRNOoMqv8hjlmPSlzkYZqn0ukqeI1RPToV\0D\0A7qJZjqlc3sX5kCLliEVx3ZGZbHqfPT2YfF72vhZooF6uCyP8Wg+qInYtyaEQHeTTRCOQiJ/GKubX\0D\0A9ZqzWB4vMIkIG1SitZgj7Ah3HJVdYdHLiZxfokqRmu8hqkkWCKi9YSgxyXSthfbZxbGL0eUQMk1f\0D\0AiyA6PEkfM4VZDdvLCXVDaXP7a3F98N/ETH3Goy7IlXnLc6KOTk0k+17kBL5yG6YnLUlamXrXXAkg\0D\0At3+UuU/xDRxeiEIbEbfnkduebPRq34wGmAOtzCjvpUfzUwIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\0D\0AAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUo5fW816iEOGrRZ88F2Q87gFwnMwwDQYJKoZI\0D\0AhvcNAQELBQADggIBABj6W3X8PnrHX3fHyt/PX8MSxEBd1DKquGrX1RUVRpgjpeaQWxiZTOOtQqOC\0D\0AMTaIzen7xASWSIsBx40Bz1szBpZGZnQdT+3Btrm0DWHMY37XLneMlhwqI2hrhVd2cDMT/uFPpiN3\0D\0AGPoajOi9ZcnPP/TJF9zrx7zABC4tRi9pZsMbj/7sPtPKlL92CiUNqXsCHKnQO18LwIE6PWThv6ct\0D\0ATr1NxNgpxiIY0MWscgKCP6o6ojoilzHdCGPDdRS5YCgtW2jgFqlmgiNR9etT2DGbe+m3nUvriBbP\0D\0A+V04ikkwj+3x6xn0dxoxGE1nVGwvb2X52z3sIexe9PSLymBlVNFxZPT5pqOBMzYzcfCkeF9OrYMh\0D\0A3jRJjehZrJ3ydlo28hP0r+AJx2EqbPfgna67hkooby7utHnNkDPDs3b69fBsnQGQ+p6Q9pxyz0fa\0D\0Awx/kNSBT8lTR32GDpgLiJTjehTItXnOQUl1CxM49S+H5GYQd1aJQzEH7QRTDvdbJWqNjZgKAvQU6\0D\0AO0ec7AAmTPWIUb+oI38YB7AL7YsmoWTTYUrrXJ/es69nA7Mf3W1daWhpq1467HxpvMc7hU6eFbm0\0D\0AFU/DlXpY18ls6Wy58yljXrQs8C097Vpl4KlbQMJImYFtnh8GKjwStIsPm6Ik8KaN1nrgS7ZklmOV\0D\0AhMJKzRwuJIczYOXD\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AQuoVadis Root CA 2 G3\0D\0A=====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFYDCCA0igAwIBAgIURFc0JFuBiZs18s64KztbpybwdSgwDQYJKoZIhvcNAQELBQAwSDELMAkG\0D\0AA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1ZhZGlzIFJv\0D\0Ab3QgQ0EgMiBHMzAeFw0xMjAxMTIxODU5MzJaFw00MjAxMTIxODU5MzJaMEgxCzAJBgNVBAYTAkJN\0D\0AMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDIg\0D\0ARzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQChriWyARjcV4g/Ruv5r+LrI3HimtFh\0D\0AZiFfqq8nUeVuGxbULX1QsFN3vXg6YOJkApt8hpvWGo6t/x8Vf9WVHhLL5hSEBMHfNrMWn4rjyduY\0D\0ANM7YMxcoRvynyfDStNVNCXJJ+fKH46nafaF9a7I6JaltUkSs+L5u+9ymc5GQYaYDFCDy54ejiK2t\0D\0AoIz/pgslUiXnFgHVy7g1gQyjO/Dh4fxaXc6AcW34Sas+O7q414AB+6XrW7PFXmAqMaCvN+ggOp+o\0D\0AMiwMzAkd056OXbxMmO7FGmh77FOm6RQ1o9/NgJ8MSPsc9PG/Srj61YxxSscfrf5BmrODXfKEVu+l\0D\0AV0POKa2Mq1W/xPtbAd0jIaFYAI7D0GoT7RPjEiuA3GfmlbLNHiJuKvhB1PLKFAeNilUSxmn1uIZo\0D\0AL1NesNKqIcGY5jDjZ1XHm26sGahVpkUG0CM62+tlXSoREfA7T8pt9DTEceT/AFr2XK4jYIVz8eQQ\0D\0AsSWu1ZK7E8EM4DnatDlXtas1qnIhO4M15zHfeiFuuDIIfR0ykRVKYnLP43ehvNURG3YBZwjgQQvD\0D\0A6xVu+KQZ2aKrr+InUlYrAoosFCT5v0ICvybIxo/gbjh9Uy3l7ZizlWNof/k19N+IxWA1ksB8aRxh\0D\0AlRbQ694Lrz4EEEVlWFA4r0jyWbYW8jwNkALGcC4BrTwV1wIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\0D\0AAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU7edvdlq/YOxJW8ald7tyFnGbxD0wDQYJKoZI\0D\0AhvcNAQELBQADggIBAJHfgD9DCX5xwvfrs4iP4VGyvD11+ShdyLyZm3tdquXK4Qr36LLTn91nMX66\0D\0AAarHakE7kNQIXLJgapDwyM4DYvmL7ftuKtwGTTwpD4kWilhMSA/ohGHqPHKmd+RCroijQ1h5fq7K\0D\0ApVMNqT1wvSAZYaRsOPxDMuHBR//47PERIjKWnML2W2mWeyAMQ0GaW/ZZGYjeVYg3UQt4XAoeo0L9\0D\0Ax52ID8DyeAIkVJOviYeIyUqAHerQbj5hLja7NQ4nlv1mNDthcnPxFlxHBlRJAHpYErAK74X9sbgz\0D\0AdWqTHBLmYF5vHX/JHyPLhGGfHoJE+V+tYlUkmlKY7VHnoX6XOuYvHxHaU4AshZ6rNRDbIl9qxV6X\0D\0AU/IyAgkwo1jwDQHVcsaxfGl7w/U2Rcxhbl5MlMVerugOXou/983g7aEOGzPuVBj+D77vfoRrQ+Nw\0D\0AmNtddbINWQeFFSM51vHfqSYP1kjHs6Yi9TM3WpVHn3u6GBVv/9YUZINJ0gpnIdsPNWNgKCLjsZWD\0D\0AzYWm3S8P52dSbrsvhXz1SnPnxT7AvSESBT/8twNJAlvIJebiVDj1eYeMHVOyToV7BjjHLPj4sHKN\0D\0AJeV3UvQDHEimUF+IIDBu8oJDqz2XhOdT+yHBTw8imoa4WSr2Rz0ZiC3oheGe7IUIarFsNMkd7Egr\0D\0AO3jtZsSOeWmD3n+M\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AQuoVadis Root CA 3 G3\0D\0A=====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFYDCCA0igAwIBAgIULvWbAiin23r/1aOp7r0DoM8Sah0wDQYJKoZIhvcNAQELBQAwSDELMAkG\0D\0AA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1ZhZGlzIFJv\0D\0Ab3QgQ0EgMyBHMzAeFw0xMjAxMTIyMDI2MzJaFw00MjAxMTIyMDI2MzJaMEgxCzAJBgNVBAYTAkJN\0D\0AMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDMg\0D\0ARzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCzyw4QZ47qFJenMioKVjZ/aEzHs286\0D\0AIxSR/xl/pcqs7rN2nXrpixurazHb+gtTTK/FpRp5PIpM/6zfJd5O2YIyC0TeytuMrKNuFoM7pmRL\0D\0AMon7FhY4futD4tN0SsJiCnMK3UmzV9KwCoWdcTzeo8vAMvMBOSBDGzXRU7Ox7sWTaYI+FrUoRqHe\0D\0A6okJ7UO4BUaKhvVZR74bbwEhELn9qdIoyhA5CcoTNs+cra1AdHkrAj80//ogaX3T7mH1urPnMNA3\0D\0AI4ZyYUUpSFlob3emLoG+B01vr87ERRORFHAGjx+f+IdpsQ7vw4kZ6+ocYfx6bIrc1gMLnia6Et3U\0D\0AVDmrJqMz6nWB2i3ND0/kA9HvFZcba5DFApCTZgIhsUfei5pKgLlVj7WiL8DWM2fafsSntARE60f7\0D\0A5li59wzweyuxwHApw0BiLTtIadwjPEjrewl5qW3aqDCYz4ByA4imW0aucnl8CAMhZa634RylsSqi\0D\0AMd5mBPfAdOhx3v89WcyWJhKLhZVXGqtrdQtEPREoPHtht+KPZ0/l7DxMYIBpVzgeAVuNVejH38DM\0D\0AdyM0SXV89pgR6y3e7UEuFAUCf+D+IOs15xGsIs5XPd7JMG0QA4XN8f+MFrXBsj6IbGB/kE+V9/Yt\0D\0ArQE5BwT6dYB9v0lQ7e/JxHwc64B+27bQ3RP+ydOc17KXqQIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\0D\0AAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUxhfQvKjqAkPyGwaZXSuQILnXnOQwDQYJKoZI\0D\0AhvcNAQELBQADggIBADRh2Va1EodVTd2jNTFGu6QHcrxfYWLopfsLN7E8trP6KZ1/AvWkyaiTt3px\0D\0AKGmPc+FSkNrVvjrlt3ZqVoAh313m6Tqe5T72omnHKgqwGEfcIHB9UqM+WXzBusnIFUBhynLWcKzS\0D\0At/Ac5IYp8M7vaGPQtSCKFWGafoaYtMnCdvvMujAWzKNhxnQT5WvvoxXqA/4Ti2Tk08HS6IT7SdEQ\0D\0ATXlm66r99I0xHnAUrdzeZxNMgRVhvLfZkXdxGYFgu/BYpbWcC/ePIlUnwEsBbTuZDdQdm2NnL9Du\0D\0ADcpmvJRPpq3t/O5jrFc/ZSXPsoaP0Aj/uHYUbt7lJ+yreLVTubY/6CD50qi+YUbKh4yE8/nxoGib\0D\0AIh6BJpsQBJFxwAYf3KDTuVan45gtf4Od34wrnDKOMpTwATwiKp9Dwi7DmDkHOHv8XgBCH/MyJnmD\0D\0AhPbl8MFREsALHgQjDFSlTC9JxUrRtm5gDWv8a4uFJGS3iQ6rJUdbPM9+Sb3H6QrG2vd+DhcI00iX\0D\0A0HGS8A85PjRqHH3Y8iKuu2n0M7SmSFXRDw4m6Oy2Cy2nhTXN/VnIn9HNPlopNLk9hM6xZdRZkZFW\0D\0AdSHBd575euFgndOtBBj0fOtek49TSiIp+EgrPk2GrFt/ywaZWWDYWGWVjUTR939+J399roD1B0y2\0D\0APpxxVJkES/1Y+Zj0\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Assured ID Root G2\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDljCCAn6gAwIBAgIQC5McOtY5Z+pnI7/Dr5r0SzANBgkqhkiG9w0BAQsFADBlMQswCQYDVQQG\0D\0AEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQw\0D\0AIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIwHhcNMTMwODAxMTIwMDAwWhcNMzgw\0D\0AMTE1MTIwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQL\0D\0AExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIw\0D\0AggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ5ygvUj82ckmIkzTz+GoeMVSAn61UQbVH\0D\0A35ao1K+ALbkKz3X9iaV9JPrjIgwrvJUXCzO/GU1BBpAAvQxNEP4HteccbiJVMWWXvdMX0h5i89vq\0D\0AbFCMP4QMls+3ywPgym2hFEwbid3tALBSfK+RbLE4E9HpEgjAALAcKxHad3A2m67OeYfcgnDmCXRw\0D\0AVWmvo2ifv922ebPynXApVfSr/5Vh88lAbx3RvpO704gqu52/clpWcTs/1PPRCv4o76Pu2ZmvA9OP\0D\0AYLfykqGxvYmJHzDNw6YuYjOuFgJ3RFrngQo8p0Quebg/BLxcoIfhG69Rjs3sLPr4/m3wOnyqi+Rn\0D\0AlTGNAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBTO\0D\0Aw0q5mVXyuNtgv6l+vVa1lzan1jANBgkqhkiG9w0BAQsFAAOCAQEAyqVVjOPIQW5pJ6d1Ee88hjZv\0D\0A0p3GeDgdaZaikmkuOGybfQTUiaWxMTeKySHMq2zNixya1r9I0jJmwYrA8y8678Dj1JGG0VDjA9tz\0D\0Ad29KOVPt3ibHtX2vK0LRdWLjSisCx1BL4GnilmwORGYQRI+tBev4eaymG+g3NJ1TyWGqolKvSnAW\0D\0AhsI6yLETcDbYz+70CjTVW0z9B5yiutkBclzzTcHdDrEcDcRjvq30FPuJ7KJBDkzMyFdA0G4Dqs0M\0D\0AjomZmWzwPDCvON9vvKO+KSAnq3T/EyJ43pdSVR6DtVQgA+6uwE9W3jfMw3+qBCe703e4YtsXfJwo\0D\0AIhNzbM8m9Yop5w==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Assured ID Root G3\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICRjCCAc2gAwIBAgIQC6Fa+h3foLVJRK/NJKBs7DAKBggqhkjOPQQDAzBlMQswCQYDVQQGEwJV\0D\0AUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQwIgYD\0D\0AVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1\0D\0AMTIwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\0D\0Ad3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwdjAQ\0D\0ABgcqhkjOPQIBBgUrgQQAIgNiAAQZ57ysRGXtzbg/WPuNsVepRC0FFfLvC/8QdJ+1YlJfZn4f5dwb\0D\0ARXkLzMZTCp2NXQLZqVneAlr2lSoOjThKiknGvMYDOAdfVdp+CW7if17QRSAPWXYQ1qAk8C3eNvJs\0D\0AKTmjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBTL0L2p4ZgF\0D\0AUaFNN6KDec6NHSrkhDAKBggqhkjOPQQDAwNnADBkAjAlpIFFAmsSS3V0T8gj43DydXLefInwz5Fy\0D\0AYZ5eEJJZVrmDxxDnOOlYJjZ91eQ0hjkCMHw2U/Aw5WJjOpnitqM7mzT6HtoQknFekROn3aRukswy\0D\0A1vUhZscv6pZjamVFkpUBtA==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Global Root G2\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBhMQswCQYDVQQG\0D\0AEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAw\0D\0AHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUx\0D\0AMjAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3\0D\0Ady5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkq\0D\0AhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI2/Ou8jqJ\0D\0AkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx1x7e/dfgy5SDN67sH0NO\0D\0A3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQq2EGnI/yuum06ZIya7XzV+hdG82MHauV\0D\0ABJVJ8zUtluNJbd134/tJS7SsVQepj5WztCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyM\0D\0AUNGPHgm+F6HmIcr9g+UQvIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQAB\0D\0Ao0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV5uNu\0D\0A5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY1Yl9PMWLSn/pvtsr\0D\0AF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4NeF22d+mQrvHRAiGfzZ0JFrabA0U\0D\0AWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NGFdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBH\0D\0AQRFXGU7Aj64GxJUTFy8bJZ918rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/\0D\0AiyK5S9kJRaTepLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl\0D\0AMrY=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Global Root G3\0D\0A=======================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICPzCCAcWgAwIBAgIQBVVWvPJepDU1w6QP1atFcjAKBggqhkjOPQQDAzBhMQswCQYDVQQGEwJV\0D\0AUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAwHgYD\0D\0AVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMzAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAw\0D\0AMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5k\0D\0AaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEczMHYwEAYHKoZIzj0C\0D\0AAQYFK4EEACIDYgAE3afZu4q4C/sLfyHS8L6+c/MzXRq8NOrexpu80JX28MzQC7phW1FGfp4tn+6O\0D\0AYwwX7Adw9c+ELkCDnOg/QW07rdOkFFk2eJ0DQ+4QE2xy3q6Ip6FrtUPOZ9wj/wMco+I+o0IwQDAP\0D\0ABgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUs9tIpPmhxdiuNkHMEWNp\0D\0AYim8S8YwCgYIKoZIzj0EAwMDaAAwZQIxAK288mw/EkrRLTnDCgmXc/SINoyIJ7vmiI1Qhadj+Z4y\0D\0A3maTD/HMsQmP3Wyr+mt/oAIwOWZbwmSNuJ5Q3KjVSaLtx9zRSX8XAbjIho9OjIgrqJqpisXRAL34\0D\0AVOKa5Vt8sycX\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ADigiCert Trusted Root G4\0D\0A========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFkDCCA3igAwIBAgIQBZsbV56OITLiOQe9p3d1XDANBgkqhkiG9w0BAQwFADBiMQswCQYDVQQG\0D\0AEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSEw\0D\0AHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1\0D\0AMTIwMDAwWjBiMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\0D\0Ad3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwggIiMA0G\0D\0ACSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC/5pBzaN675F1KPDAiMGkz7MKnJS7JIT3yithZwuEp\0D\0Apz1Yq3aaza57G4QNxDAf8xukOBbrVsaXbR2rsnnyyhHS5F/WBTxSD1Ifxp4VpX6+n6lXFllVcq9o\0D\0Ak3DCsrp1mWpzMpTREEQQLt+C8weE5nQ7bXHiLQwb7iDVySAdYyktzuxeTsiT+CFhmzTrBcZe7Fsa\0D\0AvOvJz82sNEBfsXpm7nfISKhmV1efVFiODCu3T6cw2Vbuyntd463JT17lNecxy9qTXtyOj4DatpGY\0D\0AQJB5w3jHtrHEtWoYOAMQjdjUN6QuBX2I9YI+EJFwq1WCQTLX2wRzKm6RAXwhTNS8rhsDdV14Ztk6\0D\0AMUSaM0C/CNdaSaTC5qmgZ92kJ7yhTzm1EVgX9yRcRo9k98FpiHaYdj1ZXUJ2h4mXaXpI8OCiEhtm\0D\0AmnTK3kse5w5jrubU75KSOp493ADkRSWJtppEGSt+wJS00mFt6zPZxd9LBADMfRyVw4/3IbKyEbe7\0D\0Af/LVjHAsQWCqsWMYRJUadmJ+9oCw++hkpjPRiQfhvbfmQ6QYuKZ3AeEPlAwhHbJUKSWJbOUOUlFH\0D\0AdL4mrLZBdd56rF+NP8m800ERElvlEFDrMcXKchYiCd98THU/Y+whX8QgUWtvsauGi0/C1kVfnSD8\0D\0AoR7FwI+isX4KJpn15GkvmB0t9dmpsh3lGwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1Ud\0D\0ADwEB/wQEAwIBhjAdBgNVHQ4EFgQU7NfjgtJxXWRM3y5nP+e6mK4cD08wDQYJKoZIhvcNAQEMBQAD\0D\0AggIBALth2X2pbL4XxJEbw6GiAI3jZGgPVs93rnD5/ZpKmbnJeFwMDF/k5hQpVgs2SV1EY+CtnJYY\0D\0AZhsjDT156W1r1lT40jzBQ0CuHVD1UvyQO7uYmWlrx8GnqGikJ9yd+SeuMIW59mdNOj6PWTkiU0Tr\0D\0AyF0Dyu1Qen1iIQqAyHNm0aAFYF/opbSnr6j3bTWcfFqK1qI4mfN4i/RN0iAL3gTujJtHgXINwBQy\0D\0A7zBZLq7gcfJW5GqXb5JQbZaNaHqasjYUegbyJLkJEVDXCLG4iXqEI2FCKeWjzaIgQdfRnGTZ6iah\0D\0AixTXTBmyUEFxPT9NcCOGDErcgdLMMpSEDQgJlxxPwO5rIHQw0uA5NBCFIRUBCOhVMt5xSdkoF1BN\0D\0A5r5N0XWs0Mr7QbhDparTwwVETyw2m+L64kW4I1NsBm9nVX9GtUw/bihaeSbSpKhil9Ie4u1Ki7wb\0D\0A/UdKDd9nZn6yW0HQO+T0O/QEY+nvwlQAUaCKKsnOeMzV6ocEGLPOr0mIr/OSmbaz5mEP0oUA51Aa\0D\0A5BuVnRmhuZyxm7EAHu/QD09CbMkKvO5D+jpxpchNJqU1/YldvIViHTLSoCtU7ZpXwdv6EM8Zt4tK\0D\0AG48BtieVU+i2iW1bvGjUI+iLUaJW+fCmgKDWHrO8Dw9TdSmq6hN35N6MgSGtBxBHEa2HPQfRdbzP\0D\0A82Z+\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AWoSign\0D\0A======\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFdjCCA16gAwIBAgIQXmjWEXGUY1BWAGjzPsnFkTANBgkqhkiG9w0BAQUFADBVMQswCQYDVQQG\0D\0AEwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxKjAoBgNVBAMTIUNlcnRpZmljYXRpb24g\0D\0AQXV0aG9yaXR5IG9mIFdvU2lnbjAeFw0wOTA4MDgwMTAwMDFaFw0zOTA4MDgwMTAwMDFaMFUxCzAJ\0D\0ABgNVBAYTAkNOMRowGAYDVQQKExFXb1NpZ24gQ0EgTGltaXRlZDEqMCgGA1UEAxMhQ2VydGlmaWNh\0D\0AdGlvbiBBdXRob3JpdHkgb2YgV29TaWduMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\0D\0AvcqNrLiRFVaXe2tcesLea9mhsMMQI/qnobLMMfo+2aYpbxY94Gv4uEBf2zmoAHqLoE1UfcIiePyO\0D\0ACbiohdfMlZdLdNiefvAA5A6JrkkoRBoQmTIPJYhTpA2zDxIIFgsDcSccf+Hb0v1naMQFXQoOXXDX\0D\0A2JegvFNBmpGN9J42Znp+VsGQX+axaCA2pIwkLCxHC1l2ZjC1vt7tj/id07sBMOby8w7gLJKA84X5\0D\0AKIq0VC6a7fd2/BVoFutKbOsuEo/Uz/4Mx1wdC34FMr5esAkqQtXJTpCzWQ27en7N1QhatH/YHGkR\0D\0A+ScPewavVIMYe+HdVHpRaG53/Ma/UkpmRqGyZxq7o093oL5d//xWC0Nyd5DKnvnyOfUNqfTq1+ez\0D\0AEC8wQjchzDBwyYaYD8xYTYO7feUapTeNtqwylwA6Y3EkHp43xP901DfA4v6IRmAR3Qg/UDaruHqk\0D\0AlWJqbrDKaiFaafPz+x1wOZXzp26mgYmhiMU7ccqjUu6Du/2gd/Tkb+dC221KmYo0SLwX3OSACCK2\0D\0A8jHAPwQ+658geda4BmRkAjHXqc1S+4RFaQkAKtxVi8QGRkvASh0JWzko/amrzgD5LkhLJuYwTKVY\0D\0AyrREgk/nkR4zw7CT/xH8gdLKH3Ep3XZPkiWvHYG3Dy+MwwbMLyejSuQOmbp8HkUff6oZRZb9/D0C\0D\0AAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFOFmzw7R\0D\0A8bNLtwYgFP6HEtX2/vs+MA0GCSqGSIb3DQEBBQUAA4ICAQCoy3JAsnbBfnv8rWTjMnvMPLZdRtP1\0D\0ALOJwXcgu2AZ9mNELIaCJWSQBnfmvCX0KI4I01fx8cpm5o9dU9OpScA7F9dY74ToJMuYhOZO9sxXq\0D\0AT2r09Ys/L3yNWC7F4TmgPsc9SnOeQHrAK2GpZ8nzJLmzbVUsWh2eJXLOC62qx1ViC777Y7NhRCOj\0D\0Ay+EaDveaBk3e1CNOIZZbOVtXHS9dCF4Jef98l7VNg64N1uajeeAz0JmWAjCnPv/So0M/BVoG6kQC\0D\0A2nz4SNAzqfkHx5Xh9T71XXG68pWpdIhhWeO/yloTunK0jF02h+mmxTwTv97QRCbut+wucPrXnbes\0D\0A5cVAWubXbHssw1abR80LzvobtCHXt2a49CUwi1wNuepnsvRtrtWhnk/Yn+knArAdBtaP4/tIEp9/\0D\0AEaEQPkxROpaw0RPxx9gmrjrKkcRpnd8BKWRRb2jaFOwIQZeQjdCygPLPwj2/kWjFgGcexGATVdVh\0D\0AmVd8upUPYUk6ynW8yQqTP2cOEvIo4jEbwFcW3wh8GcF+Dx+FHgo2fFt+J7x6v+Db9NpSvd4MVHAx\0D\0AkUOVyLzwPt0JfjBkUO1/AaQzZ01oT74V77D2AhGiGxMlOtzCWfHjXEa7ZywCRuoeSKbmW9m1vFGi\0D\0AkpbbqsY3Iqb+zCB0oy2pLmvLwIIRIbWTee5Ehr7XHuQe+w==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AWoSign China\0D\0A============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFWDCCA0CgAwIBAgIQUHBrzdgT/BtOOzNy0hFIjTANBgkqhkiG9w0BAQsFADBGMQswCQYDVQQG\0D\0AEwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxGzAZBgNVBAMMEkNBIOayg+mAmuagueiv\0D\0AgeS5pjAeFw0wOTA4MDgwMTAwMDFaFw0zOTA4MDgwMTAwMDFaMEYxCzAJBgNVBAYTAkNOMRowGAYD\0D\0AVQQKExFXb1NpZ24gQ0EgTGltaXRlZDEbMBkGA1UEAwwSQ0Eg5rKD6YCa5qC56K+B5LmmMIICIjAN\0D\0ABgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0EkhHiX8h8EqwqzbdoYGTufQdDTc7WU1/FDWiD+k\0D\0A8H/rD195L4mx/bxjWDeTmzj4t1up+thxx7S8gJeNbEvxUNUqKaqoGXqW5pWOdO2XCld19AXbbQs5\0D\0AuQF/qvbW2mzmBeCkTVL829B0txGMe41P/4eDrv8FAxNXUDf+jJZSEExfv5RxadmWPgxDT74wwJ85\0D\0AdE8GRV2j1lY5aAfMh09Qd5Nx2UQIsYo06Yms25tO4dnkUkWMLhQfkWsZHWgpLFbE4h4TV2TwYeO5\0D\0AEd+w4VegG63XX9Gv2ystP9Bojg/qnw+LNVgbExz03jWhCl3W6t8Sb8D7aQdGctyB9gQjF+BNdeFy\0D\0Ab7Ao65vh4YOhn0pdr8yb+gIgthhid5E7o9Vlrdx8kHccREGkSovrlXLp9glk3Kgtn3R46MGiCWOc\0D\0A76DbT52VqyBPt7D3h1ymoOQ3OMdc4zUPLK2jgKLsLl3Az+2LBcLmc272idX10kaO6m1jGx6KyX2m\0D\0A+Jzr5dVjhU1zZmkR/sgO9MHHZklTfuQZa/HpelmjbX7FF+Ynxu8b22/8DU0GAbQOXDBGVWCvOGU6\0D\0Ayke6rCzMRh+yRpY/8+0mBe53oWprfi1tWFxK1I5nuPHa1UaKJ/kR8slC/k7e3x9cxKSGhxYzoacX\0D\0AGKUN5AXlK8IrC6KVkLn9YDxOiT7nnO4fuwECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1Ud\0D\0AEwEB/wQFMAMBAf8wHQYDVR0OBBYEFOBNv9ybQV0T6GTwp+kVpOGBwboxMA0GCSqGSIb3DQEBCwUA\0D\0AA4ICAQBqinA4WbbaixjIvirTthnVZil6Xc1bL3McJk6jfW+rtylNpumlEYOnOXOvEESS5iVdT2H6\0D\0AyAa+Tkvv/vMx/sZ8cApBWNromUuWyXi8mHwCKe0JgOYKOoICKuLJL8hWGSbueBwj/feTZU7n85iY\0D\0Ar83d2Z5AiDEoOqsuC7CsDCT6eiaY8xJhEPRdF/d+4niXVOKM6Cm6jBAyvd0zaziGfjk9DgNyp115\0D\0Aj0WKWa5bIW4xRtVZjc8VX90xJc/bYNaBRHIpAlf2ltTW/+op2znFuCyKGo3Oy+dCMYYFaA6eFN0A\0D\0AkLppRQjbbpCBhqcqBT/mhDn4t/lXX0ykeVoQDF7Va/81XwVRHmyjdanPUIPTfPRm94KNPQx96N97\0D\0AqA4bLJyuQHCH2u2nFoJavjVsIE4iYdm8UXrNemHcSxH5/mc0zy4EZmFcV5cjjPOGG0jfKq+nwf/Y\0D\0Ajj4Du9gqsPoUJbJRa4ZDhS4HIxaAjUz7tGM7zMN07RujHv41D198HRaG9Q7DlfEvr10lO1Hm13ZB\0D\0AONFLAzkopR6RctR9q5czxNM+4Gm2KHmgCY0c0f9BckgG/Jou5yD5m6Leie2uPAmvylezkolwQOQv\0D\0AT8Jwg0DXJCxr5wkf09XHwQj02w47HAcLQxGEIYbpgNR12KvxAmLBsX5VYc8T1yaw15zLKYs4SgsO\0D\0AkI26oQ==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACOMODO RSA Certification Authority\0D\0A==================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCBhTELMAkGA1UE\0D\0ABhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgG\0D\0AA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlv\0D\0AbiBBdXRob3JpdHkwHhcNMTAwMTE5MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMC\0D\0AR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UE\0D\0AChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBB\0D\0AdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR6FSS0gpWsawNJN3Fz0Rn\0D\0AdJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8Xpz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZ\0D\0AFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+\0D\0A5eNu/Nio5JIk2kNrYrhV/erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pG\0D\0Ax8cgoLEfZd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z+pUX\0D\0A2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7wqP/0uK3pN/u6uPQL\0D\0AOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZahSL0896+1DSJMwBGB7FY79tOi4lu3\0D\0AsgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVICu9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+C\0D\0AGCe01a60y1Dma/RMhnEw6abfFobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5\0D\0AWdYgGq/yapiqcrxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E\0D\0AFgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w\0D\0ADQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvlwFTPoCWOAvn9sKIN9SCYPBMt\0D\0ArFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+\0D\0Anq6PK7o9mfjYcwlYRm6mnPTXJ9OV2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSg\0D\0AtZx8jb8uk2IntznaFxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwW\0D\0AsRqZCuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiKboHGhfKp\0D\0ApC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmckejkk9u+UJueBPSZI9FoJA\0D\0AzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yLS0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHq\0D\0AZJx64SIDqZxubw5lT2yHh17zbqD5daWbQOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk52\0D\0A7RH89elWsn2/x20Kk4yl0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7I\0D\0ALaZRfyHBNVOFBkpdn627G190\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AUSERTrust RSA Certification Authority\0D\0A=====================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF3jCCA8agAwIBAgIQAf1tMPyjylGoG7xkDjUDLTANBgkqhkiG9w0BAQwFADCBiDELMAkGA1UE\0D\0ABhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQK\0D\0AExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNh\0D\0AdGlvbiBBdXRob3JpdHkwHhcNMTAwMjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UE\0D\0ABhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQK\0D\0AExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNh\0D\0AdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCAEmUXNg7D2wiz\0D\0A0KxXDXbtzSfTTK1Qg2HiqiBNCS1kCdzOiZ/MPans9s/B3PHTsdZ7NygRK0faOca8Ohm0X6a9fZ2j\0D\0AY0K2dvKpOyuR+OJv0OwWIJAJPuLodMkYtJHUYmTbf6MG8YgYapAiPLz+E/CHFHv25B+O1ORRxhFn\0D\0ARghRy4YUVD+8M/5+bJz/Fp0YvVGONaanZshyZ9shZrHUm3gDwFA66Mzw3LyeTP6vBZY1H1dat//O\0D\0A+T23LLb2VN3I5xI6Ta5MirdcmrS3ID3KfyI0rn47aGYBROcBTkZTmzNg95S+UzeQc0PzMsNT79uq\0D\0A/nROacdrjGCT3sTHDN/hMq7MkztReJVni+49Vv4M0GkPGw/zJSZrM233bkf6c0Plfg6lZrEpfDKE\0D\0AY1WJxA3Bk1QwGROs0303p+tdOmw1XNtB1xLaqUkL39iAigmTYo61Zs8liM2EuLE/pDkP2QKe6xJM\0D\0AlXzzawWpXhaDzLhn4ugTncxbgtNMs+1b/97lc6wjOy0AvzVVdAlJ2ElYGn+SNuZRkg7zJn0cTRe8\0D\0AyexDJtC/QV9AqURE9JnnV4eeUB9XVKg+/XRjL7FQZQnmWEIuQxpMtPAlR1n6BB6T1CZGSlCBst6+\0D\0AeLf8ZxXhyVeEHg9j1uliutZfVS7qXMYoCAQlObgOK6nyTJccBz8NUvXt7y+CDwIDAQABo0IwQDAd\0D\0ABgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\0D\0AMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAFzUfA3P9wF9QZllDHPFUp/L+M+ZBn8b2kMVn54CVVeW\0D\0AFPFSPCeHlCjtHzoBN6J2/FNQwISbxmtOuowhT6KOVWKR82kV2LyI48SqC/3vqOlLVSoGIG1VeCkZ\0D\0A7l8wXEskEVX/JJpuXior7gtNn3/3ATiUFJVDBwn7YKnuHKsSjKCaXqeYalltiz8I+8jRRa8YFWSQ\0D\0AEg9zKC7F4iRO/Fjs8PRF/iKz6y+O0tlFYQXBl2+odnKPi4w2r78NBc5xjeambx9spnFixdjQg3IM\0D\0A8WcRiQycE0xyNN+81XHfqnHd4blsjDwSXWXavVcStkNr/+XeTWYRUc+ZruwXtuhxkYzeSf7dNXGi\0D\0AFSeUHM9h4ya7b6NnJSFd5t0dCy5oGzuCr+yDZ4XUmFF0sbmZgIn/f3gZXHlKYC6SQK5MNyosycdi\0D\0AyA5d9zZbyuAlJQG03RoHnHcAP9Dc1ew91Pq7P8yF1m9/qS3fuQL39ZeatTXaw2ewh0qpKJ4jjv9c\0D\0AJ2vhsE/zB+4ALtRZh8tSQZXq9EfX7mRBVXyNWQKV3WKdwrnuWih0hKWbt5DHDAff9Yk2dDLWKMGw\0D\0AsAvgnEzDHNb842m1R0aBL6KCq9NjRHDEjf8tM7qtj3u1cIiuPhnPQCjY/MiQu12ZIvVS5ljFH4gx\0D\0AQ+6IHdfGjjxDah2nGN59PRbxYvnKkKj9\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AUSERTrust ECC Certification Authority\0D\0A=====================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICjzCCAhWgAwIBAgIQXIuZxVqUxdJxVt7NiYDMJjAKBggqhkjOPQQDAzCBiDELMAkGA1UEBhMC\0D\0AVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU\0D\0AaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBFQ0MgQ2VydGlmaWNhdGlv\0D\0AbiBBdXRob3JpdHkwHhcNMTAwMjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UEBhMC\0D\0AVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU\0D\0AaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBFQ0MgQ2VydGlmaWNhdGlv\0D\0AbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQarFRaqfloI+d61SRvU8Za2EurxtW2\0D\0A0eZzca7dnNYMYf3boIkDuAUU7FfO7l0/4iGzzvfUinngo4N+LZfQYcTxmdwlkWOrfzCjtHDix6Ez\0D\0AnPO/LlxTsV+zfTJ/ijTjeXmjQjBAMB0GA1UdDgQWBBQ64QmG1M8ZwpZ2dEl23OA1xmNjmjAOBgNV\0D\0AHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjA2Z6EWCNzklwBB\0D\0AHU6+4WMBzzuqQhFkoJ2UOQIReVx7Hfpkue4WQrO/isIJxOzksU0CMQDpKmFHjFJKS04YcPbWRNZu\0D\0A9YO6bVi9JNlWSOrvxKJGgYhqOkbRqZtNyWHa0V1Xahg=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGlobalSign ECC Root CA - R4\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIB4TCCAYegAwIBAgIRKjikHJYKBN5CsiilC+g0mAIwCgYIKoZIzj0EAwIwUDEkMCIGA1UECxMb\0D\0AR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI0MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQD\0D\0AEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoXDTM4MDExOTAzMTQwN1owUDEkMCIGA1UECxMb\0D\0AR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI0MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQD\0D\0AEwpHbG9iYWxTaWduMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEuMZ5049sJQ6fLjkZHAOkrprl\0D\0AOQcJFspjsbmG+IpXwVfOQvpzofdlQv8ewQCybnMO/8ch5RikqtlxP6jUuc6MHaNCMEAwDgYDVR0P\0D\0AAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFSwe61FuOJAf/sKbvu+M8k8o4TV\0D\0AMAoGCCqGSM49BAMCA0gAMEUCIQDckqGgE6bPA7DmxCGXkPoUVy0D7O48027KqGx2vKLeuwIgJ6iF\0D\0AJzWbVsaj8kfSt24bAgAXqmemFZHe+pTsewv4n4Q=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AGlobalSign ECC Root CA - R5\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICHjCCAaSgAwIBAgIRYFlJ4CYuu1X5CneKcflK2GwwCgYIKoZIzj0EAwMwUDEkMCIGA1UECxMb\0D\0AR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI1MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQD\0D\0AEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoXDTM4MDExOTAzMTQwN1owUDEkMCIGA1UECxMb\0D\0AR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI1MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQD\0D\0AEwpHbG9iYWxTaWduMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAER0UOlvt9Xb/pOdEh+J8LttV7HpI6\0D\0ASFkc8GIxLcB6KP4ap1yztsyX50XUWPrRd21DosCHZTQKH3rd6zwzocWdTaRvQZU4f8kehOvRnkmS\0D\0Ah5SHDDqFSmafnVmTTZdhBoZKo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAd\0D\0ABgNVHQ4EFgQUPeYpSJvqB8ohREom3m7e0oPQn1kwCgYIKoZIzj0EAwMDaAAwZQIxAOVpEslu28Yx\0D\0AuglB4Zf4+/2a4n0Sye18ZNPLBSWLVtmg515dTguDnFt2KaAJJiFqYgIwcdK1j1zqO+F4CYWodZI7\0D\0AyFz9SO8NdCKoCOJuxUnOxwy8p2Fp8fc74SrL+SvzZpA3\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStaat der Nederlanden Root CA - G3\0D\0A==================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFdDCCA1ygAwIBAgIEAJiiOTANBgkqhkiG9w0BAQsFADBaMQswCQYDVQQGEwJOTDEeMBwGA1UE\0D\0ACgwVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSswKQYDVQQDDCJTdGFhdCBkZXIgTmVkZXJsYW5kZW4g\0D\0AUm9vdCBDQSAtIEczMB4XDTEzMTExNDExMjg0MloXDTI4MTExMzIzMDAwMFowWjELMAkGA1UEBhMC\0D\0ATkwxHjAcBgNVBAoMFVN0YWF0IGRlciBOZWRlcmxhbmRlbjErMCkGA1UEAwwiU3RhYXQgZGVyIE5l\0D\0AZGVybGFuZGVuIFJvb3QgQ0EgLSBHMzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAL4y\0D\0AolQPcPssXFnrbMSkUeiFKrPMSjTysF/zDsccPVMeiAho2G89rcKezIJnByeHaHE6n3WWIkYFsO2t\0D\0Ax1ueKt6c/DrGlaf1F2cY5y9JCAxcz+bMNO14+1Cx3Gsy8KL+tjzk7FqXxz8ecAgwoNzFs21v0IJy\0D\0AEavSgWhZghe3eJJg+szeP4TrjTgzkApyI/o1zCZxMdFyKJLZWyNtZrVtB0LrpjPOktvA9mxjeM3K\0D\0ATj215VKb8b475lRgsGYeCasH/lSJEULR9yS6YHgamPfJEf0WwTUaVHXvQ9Plrk7O53vDxk5hUUur\0D\0AmkVLoR9BvUhTFXFkC4az5S6+zqQbwSmEorXLCCN2QyIkHxcE1G6cxvx/K2Ya7Irl1s9N9WMJtxU5\0D\0A1nus6+N86U78dULI7ViVDAZCopz35HCz33JvWjdAidiFpNfxC95DGdRKWCyMijmev4SH8RY7Ngzp\0D\0A07TKbBlBUgmhHbBqv4LvcFEhMtwFdozL92TkA1CvjJFnq8Xy7ljY3r735zHPbMk7ccHViLVlvMDo\0D\0AFxcHErVc0qsgk7TmgoNwNsXNo42ti+yjwUOH5kPiNL6VizXtBznaqB16nzaeErAMZRKQFWDZJkBE\0D\0A41ZgpRDUajz9QdwOWke275dhdU/Z/seyHdTtXUmzqWrLZoQT1Vyg3N9udwbRcXXIV2+vD3dbAgMB\0D\0AAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRUrfrHkleu\0D\0AyjWcLhL75LpdINyUVzANBgkqhkiG9w0BAQsFAAOCAgEAMJmdBTLIXg47mAE6iqTnB/d6+Oea31BD\0D\0AU5cqPco8R5gu4RV78ZLzYdqQJRZlwJ9UXQ4DO1t3ApyEtg2YXzTdO2PCwyiBwpwpLiniyMMB8jPq\0D\0AKqrMCQj3ZWfGzd/TtiunvczRDnBfuCPRy5FOCvTIeuXZYzbB1N/8Ipf3YF3qKS9Ysr1YvY2WTxB1\0D\0Av0h7PVGHoTx0IsL8B3+A3MSs/mrBcDCw6Y5p4ixpgZQJut3+TcCDjJRYwEYgr5wfAvg1VUkvRtTA\0D\0A8KCWAg8zxXHzniN9lLf9OtMJgwYh/WA9rjLA0u6NpvDntIJ8CsxwyXmA+P5M9zWEGYox+wrZ13+b\0D\0A8KKaa8MFSu1BYBQw0aoRQm7TIwIEC8Zl3d1Sd9qBa7Ko+gE4uZbqKmxnl4mUnrzhVNXkanjvSr0r\0D\0Amj1AfsbAddJu+2gw7OyLnflJNZoaLNmzlTnVHpL3prllL+U9bTpITAjc5CgSKL59NVzq4BZ+Extq\0D\0A1z7XnvwtdbLBFNUjA9tbbws+eC8N3jONFrdI54OagQ97wUNNVQQXOEpR1VmiiXTTn74eS9fGbbeI\0D\0AJG9gkaSChVtWQbzQRKtqE77RLFi3EjNYsjdj3BP1lB0/QFH1T/U67cjF68IeHRaVesd+QnGTbksV\0D\0AtzDfqu1XhUisHWrdOWnk4Xl4vs4Fv6EM94B7IWcnMFk=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AStaat der Nederlanden EV Root CA\0D\0A================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFcDCCA1igAwIBAgIEAJiWjTANBgkqhkiG9w0BAQsFADBYMQswCQYDVQQGEwJOTDEeMBwGA1UE\0D\0ACgwVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSkwJwYDVQQDDCBTdGFhdCBkZXIgTmVkZXJsYW5kZW4g\0D\0ARVYgUm9vdCBDQTAeFw0xMDEyMDgxMTE5MjlaFw0yMjEyMDgxMTEwMjhaMFgxCzAJBgNVBAYTAk5M\0D\0AMR4wHAYDVQQKDBVTdGFhdCBkZXIgTmVkZXJsYW5kZW4xKTAnBgNVBAMMIFN0YWF0IGRlciBOZWRl\0D\0AcmxhbmRlbiBFViBSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA48d+ifkk\0D\0ASzrSM4M1LGns3Amk41GoJSt5uAg94JG6hIXGhaTK5skuU6TJJB79VWZxXSzFYGgEt9nCUiY4iKTW\0D\0AO0Cmws0/zZiTs1QUWJZV1VD+hq2kY39ch/aO5ieSZxeSAgMs3NZmdO3dZ//BYY1jTw+bbRcwJu+r\0D\0A0h8QoPnFfxZpgQNH7R5ojXKhTbImxrpsX23Wr9GxE46prfNeaXUmGD5BKyF/7otdBwadQ8QpCiv8\0D\0AKj6GyzyDOvnJDdrFmeK8eEEzduG/L13lpJhQDBXd4Pqcfzho0LKmeqfRMb1+ilgnQ7O6M5HTp5gV\0D\0AXJrm0w912fxBmJc+qiXbj5IusHsMX/FjqTf5m3VpTCgmJdrV8hJwRVXj33NeN/UhbJCONVrJ0yPr\0D\0A08C+eKxCKFhmpUZtcALXEPlLVPxdhkqHz3/KRawRWrUgUY0viEeXOcDPusBCAUCZSCELa6fS/ZbV\0D\0A0b5GnUngC6agIk440ME8MLxwjyx1zNDFjFE7PZQIZCZhfbnDZY8UnCHQqv0XcgOPvZuM5l5Tnrmd\0D\0A74K74bzickFbIZTTRTeU0d8JOV3nI6qaHcptqAqGhYqCvkIH1vI4gnPah1vlPNOePqc7nvQDs/nx\0D\0AfRN0Av+7oeX6AHkcpmZBiFxgV6YuCcS6/ZrPpx9Aw7vMWgpVSzs4dlG4Y4uElBbmVvMCAwEAAaNC\0D\0AMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFP6rAJCYniT8qcwa\0D\0AivsnuL8wbqg7MA0GCSqGSIb3DQEBCwUAA4ICAQDPdyxuVr5Os7aEAJSrR8kN0nbHhp8dB9O2tLsI\0D\0AeK9p0gtJ3jPFrK3CiAJ9Brc1AsFgyb/E6JTe1NOpEyVa/m6irn0F3H3zbPB+po3u2dfOWBfoqSmu\0D\0Ac0iH55vKbimhZF8ZE/euBhD/UcabTVUlT5OZEAFTdfETzsemQUHSv4ilf0X8rLiltTMMgsT7B/Zq\0D\0A5SWEXwbKwYY5EdtYzXc7LMJMD16a4/CrPmEbUCTCwPTxGfARKbalGAKb12NMcIxHowNDXLldRqAN\0D\0Ab/9Zjr7dn3LDWyvfjFvO5QxGbJKyCqNMVEIYFRIYvdr8unRu/8G2oGTYqV9Vrp9canaW2HNnh/tN\0D\0Af1zuacpzEPuKqf2evTY4SUmH9A4U8OmHuD+nT3pajnnUk+S7aFKErGzp85hwVXIy+TSrK0m1zSBi\0D\0A5Dp6Z2Orltxtrpfs/J92VoguZs9btsmksNcFuuEnL5O7Jiqik7Ab846+HUCjuTaPPoIaGl6I6lD4\0D\0AWeKDRikL40Rc4ZW2aZCaFG+XroHPaO+Zmr615+F/+PoTRxZMzG0IQOeLeG9QgkRQP2YGiqtDhFZK\0D\0ADyAthg710tvSeopLzaXoTvFeJiUBWSOgftL2fiFX1ye8FVdMpEbB4IMeDExNH08GGeL5qPQ6gqGy\0D\0AeUN51q1veieQA6TqJIc/2b3Z6fJfUEkc7uzXLg==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AIdenTrust Commercial Root CA 1\0D\0A==============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFYDCCA0igAwIBAgIQCgFCgAAAAUUjyES1AAAAAjANBgkqhkiG9w0BAQsFADBKMQswCQYDVQQG\0D\0AEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBS\0D\0Ab290IENBIDEwHhcNMTQwMTE2MTgxMjIzWhcNMzQwMTE2MTgxMjIzWjBKMQswCQYDVQQGEwJVUzES\0D\0AMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBSb290IENB\0D\0AIDEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCnUBneP5k91DNG8W9RYYKyqU+PZ4ld\0D\0AhNlT3Qwo2dfw/66VQ3KZ+bVdfIrBQuExUHTRgQ18zZshq0PirK1ehm7zCYofWjK9ouuU+ehcCuz/\0D\0AmNKvcbO0U59Oh++SvL3sTzIwiEsXXlfEU8L2ApeN2WIrvyQfYo3fw7gpS0l4PJNgiCL8mdo2yMKi\0D\0A1CxUAGc1bnO/AljwpN3lsKImesrgNqUZFvX9t++uP0D1bVoE/c40yiTcdCMbXTMTEl3EASX2MN0C\0D\0AXZ/g1Ue9tOsbobtJSdifWwLziuQkkORiT0/Br4sOdBeo0XKIanoBScy0RnnGF7HamB4HWfp1IYVl\0D\0A3ZBWzvurpWCdxJ35UrCLvYf5jysjCiN2O/cz4ckA82n5S6LgTrx+kzmEB/dEcH7+B1rlsazRGMzy\0D\0ANeVJSQjKVsk9+w8YfYs7wRPCTY/JTw436R+hDmrfYi7LNQZReSzIJTj0+kuniVyc0uMNOYZKdHzV\0D\0AWYfCP04MXFL0PfdSgvHqo6z9STQaKPNBiDoT7uje/5kdX7rL6B7yuVBgwDHTc+XvvqDtMwt0viAg\0D\0AxGds8AgDelWAf0ZOlqf0Hj7h9tgJ4TNkK2PXMl6f+cB7D3hvl7yTmvmcEpB4eoCHFddydJxVdHix\0D\0AuuFucAS6T6C6aMN7/zHwcz09lCqxC0EOoP5NiGVreTO01wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMC\0D\0AAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU7UQZwNPwBovupHu+QucmVMiONnYwDQYJKoZI\0D\0AhvcNAQELBQADggIBAA2ukDL2pkt8RHYZYR4nKM1eVO8lvOMIkPkp165oCOGUAFjvLi5+U1KMtlwH\0D\0A6oi6mYtQlNeCgN9hCQCTrQ0U5s7B8jeUeLBfnLOic7iPBZM4zY0+sLj7wM+x8uwtLRvM7Kqas6pg\0D\0AghstO8OEPVeKlh6cdbjTMM1gCIOQ045U8U1mwF10A0Cj7oV+wh93nAbowacYXVKV7cndJZ5t+qnt\0D\0Aozo00Fl72u1Q8zW/7esUTTHHYPTa8Yec4kjixsU3+wYQ+nVZZjFHKdp2mhzpgq7vmrlR94gjmmmV\0D\0AYjzlVYA211QC//G5Xc7UI2/YRYRKW2XviQzdFKcgyxilJbQN+QHwotL0AMh0jqEqSI5l2xPE4iUX\0D\0Afeu+h1sXIFRRk0pTAwvsXcoz7WL9RccvW9xYoIA55vrX/hMUpu09lEpCdNTDd1lzzY9GvlU47/ro\0D\0AkTLql1gEIt44w8y8bckzOmoKaT+gyOpyj4xjhiO9bTyWnpXgSUyqorkqG5w2gXjtw+hG4iZZRHUe\0D\0A2XWJUc0QhJ1hYMtd+ZciTY6Y5uN/9lu7rs3KSoFrXgvzUeF0K+l+J6fZmUlO+KWA2yUPHGNiiskz\0D\0AZ2s8EIPGrd6ozRaOjfAHN3Gf8qv8QfXBi+wAN10J5U6A7/qxXDgGpRtK4dw4LTzcqx+QGtVKnO7R\0D\0AcGzM7vRX+Bi6hG6H\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AIdenTrust Public Sector Root CA 1\0D\0A=================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFZjCCA06gAwIBAgIQCgFCgAAAAUUjz0Z8AAAAAjANBgkqhkiG9w0BAQsFADBNMQswCQYDVQQG\0D\0AEwJVUzESMBAGA1UEChMJSWRlblRydXN0MSowKAYDVQQDEyFJZGVuVHJ1c3QgUHVibGljIFNlY3Rv\0D\0AciBSb290IENBIDEwHhcNMTQwMTE2MTc1MzMyWhcNMzQwMTE2MTc1MzMyWjBNMQswCQYDVQQGEwJV\0D\0AUzESMBAGA1UEChMJSWRlblRydXN0MSowKAYDVQQDEyFJZGVuVHJ1c3QgUHVibGljIFNlY3RvciBS\0D\0Ab290IENBIDEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2IpT8pEiv6EdrCvsnduTy\0D\0AP4o7ekosMSqMjbCpwzFrqHd2hCa2rIFCDQjrVVi7evi8ZX3yoG2LqEfpYnYeEe4IFNGyRBb06tD6\0D\0AHi9e28tzQa68ALBKK0CyrOE7S8ItneShm+waOh7wCLPQ5CQ1B5+ctMlSbdsHyo+1W/CD80/HLaXI\0D\0ArcuVIKQxKFdYWuSNG5qrng0M8gozOSI5Cpcu81N3uURF/YTLNiCBWS2ab21ISGHKTN9T0a9SvESf\0D\0Aqy9rg3LvdYDaBjMbXcjaY8ZNzaxmMc3R3j6HEDbhuaR672BQssvKplbgN6+rNBM5Jeg5ZuSYeqoS\0D\0AmJxZZoY+rfGwyj4GD3vwEUs3oERte8uojHH01bWRNszwFcYr3lEXsZdMUD2xlVl8BX0tIdUAvwFn\0D\0Aol57plzy9yLxkA2T26pEUWbMfXYD62qoKjgZl3YNa4ph+bz27nb9cCvdKTz4Ch5bQhyLVi9VGxyh\0D\0ALrXHFub4qjySjmm2AcG1hp2JDws4lFTo6tyePSW8Uybt1as5qsVATFSrsrTZ2fjXctscvG29ZV/v\0D\0AiDUqZi/u9rNl8DONfJhBaUYPQxxp+pu10GFqzcpL2UyQRqsVWaFHVCkugyhfHMKiq3IXAAaOReyL\0D\0A4jM9f9oZRORicsPfIsbyVtTdX5Vy7W1f90gDW/3FKqD2cyOEEBsB5wIDAQABo0IwQDAOBgNVHQ8B\0D\0AAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU43HgntinQtnbcZFrlJPrw6PRFKMw\0D\0ADQYJKoZIhvcNAQELBQADggIBAEf63QqwEZE4rU1d9+UOl1QZgkiHVIyqZJnYWv6IAcVYpZmxI1Qj\0D\0At2odIFflAWJBF9MJ23XLblSQdf4an4EKwt3X9wnQW3IV5B4Jaj0z8yGa5hV+rVHVDRDtfULAj+7A\0D\0AmgjVQdZcDiFpboBhDhXAuM/FSRJSzL46zNQuOAXeNf0fb7iAaJg9TaDKQGXSc3z1i9kKlT/YPyNt\0D\0AGtEqJBnZhbMX73huqVjRI9PHE+1yJX9dsXNw0H8GlwmEKYBhHfpe/3OsoOOJuBxxFcbeMX8S3OFt\0D\0Am6/n6J91eEyrRjuazr8FGF1NFTwWmhlQBJqymm9li1JfPFgEKCXAZmExfrngdbkaqIHWchezxQMx\0D\0ANRF4eKLg6TCMf4DfWN88uieW4oA0beOY02QnrEh+KHdcxiVhJfiFDGX6xDIvpZgF5PgLZxYWxoK4\0D\0AMhn5+bl53B/N66+rDt0b20XkeucC4pVd/GnwU2lhlXV5C15V5jgclKlZM57IcXR5f1GJtshquDDI\0D\0AajjDbp7hNxbqBWJMWxJH7ae0s1hWx0nzfxJoCTFx8G34Tkf71oXuxVhAGaQdp/lLQzfcaFpPz+vC\0D\0AZHTetBXZ9FRUGi8c15dxVJCO2SCdUyt/q4/i6jC8UDfv8Ue1fXwsBOxonbRJRBD0ckscZOf85muQ\0D\0A3Wl9af0AVqW3rLatt8o+Ae+c\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEntrust Root Certification Authority - G2\0D\0A=========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCVVMxFjAUBgNV\0D\0ABAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVy\0D\0AbXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ug\0D\0Ab25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIw\0D\0AHhcNMDkwNzA3MTcyNTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoT\0D\0ADUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMx\0D\0AOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25s\0D\0AeTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwggEi\0D\0AMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP\0D\0A/vaCeb9zYQYKpSfYs1/TRU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXz\0D\0AHHfV1IWNcCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hWwcKU\0D\0As/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1U1+cPvQXLOZprE4y\0D\0ATGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0jaWvYkxN4FisZDQSA/i2jZRjJKRx\0D\0AAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ6\0D\0A0B7vfec7aVHUbI2fkBJmqzANBgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5Z\0D\0AiXMRrEPR9RP/jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ\0D\0ARkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v1fN2D807iDgi\0D\0AnWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4RnAuknZoh8/CbCzB428Hch0P+\0D\0AvGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmHVHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xO\0D\0Ae4pIb4tF9g==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AEntrust Root Certification Authority - EC1\0D\0A==========================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIC+TCCAoCgAwIBAgINAKaLeSkAAAAAUNCR+TAKBggqhkjOPQQDAzCBvzELMAkGA1UEBhMCVVMx\0D\0AFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVn\0D\0AYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXpl\0D\0AZCB1c2Ugb25seTEzMDEGA1UEAxMqRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5\0D\0AIC0gRUMxMB4XDTEyMTIxODE1MjUzNloXDTM3MTIxODE1NTUzNlowgb8xCzAJBgNVBAYTAlVTMRYw\0D\0AFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQLEx9TZWUgd3d3LmVudHJ1c3QubmV0L2xlZ2Fs\0D\0ALXRlcm1zMTkwNwYDVQQLEzAoYykgMjAxMiBFbnRydXN0LCBJbmMuIC0gZm9yIGF1dGhvcml6ZWQg\0D\0AdXNlIG9ubHkxMzAxBgNVBAMTKkVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt\0D\0AIEVDMTB2MBAGByqGSM49AgEGBSuBBAAiA2IABIQTydC6bUF74mzQ61VfZgIaJPRbiWlH47jCffHy\0D\0AAsWfoPZb1YsGGYZPUxBtByQnoaD41UcZYUx9ypMn6nQM72+WCf5j7HBdNq1nd67JnXxVRDqiY1Ef\0D\0A9eNi1KlHBz7MIKNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\0D\0AFLdj5xrdjekIplWDpOBqUEFlEUJJMAoGCCqGSM49BAMDA2cAMGQCMGF52OVCR98crlOZF7ZvHH3h\0D\0AvxGU0QOIdeSNiaSKd0bebWHvAvX7td/M/k7//qnmpwIwW5nXhTcGtXsI/esni0qU+eH6p44mCOh8\0D\0Akmhtc9hvJqwhAriZtyZBWyVgrtBIGu4G\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACFCA EV ROOT\0D\0A============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFjTCCA3WgAwIBAgIEGErM1jANBgkqhkiG9w0BAQsFADBWMQswCQYDVQQGEwJDTjEwMC4GA1UE\0D\0ACgwnQ2hpbmEgRmluYW5jaWFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRUwEwYDVQQDDAxDRkNB\0D\0AIEVWIFJPT1QwHhcNMTIwODA4MDMwNzAxWhcNMjkxMjMxMDMwNzAxWjBWMQswCQYDVQQGEwJDTjEw\0D\0AMC4GA1UECgwnQ2hpbmEgRmluYW5jaWFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRUwEwYDVQQD\0D\0ADAxDRkNBIEVWIFJPT1QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDXXWvNED8fBVnV\0D\0ABU03sQ7smCuOFR36k0sXgiFxEFLXUWRwFsJVaU2OFW2fvwwbwuCjZ9YMrM8irq93VCpLTIpTUnrD\0D\0A7i7es3ElweldPe6hL6P3KjzJIx1qqx2hp/Hz7KDVRM8Vz3IvHWOX6Jn5/ZOkVIBMUtRSqy5J35DN\0D\0AuF++P96hyk0g1CXohClTt7GIH//62pCfCqktQT+x8Rgp7hZZLDRJGqgG16iI0gNyejLi6mhNbiyW\0D\0AZXvKWfry4t3uMCz7zEasxGPrb382KzRzEpR/38wmnvFyXVBlWY9ps4deMm/DGIq1lY+wejfeWkU7\0D\0Axzbh72fROdOXW3NiGUgthxwG+3SYIElz8AXSG7Ggo7cbcNOIabla1jj0Ytwli3i/+Oh+uFzJlU9f\0D\0Apy25IGvPa931DfSCt/SyZi4QKPaXWnuWFo8BGS1sbn85WAZkgwGDg8NNkt0yxoekN+kWzqotaK8K\0D\0AgWU6cMGbrU1tVMoqLUuFG7OA5nBFDWteNfB/O7ic5ARwiRIlk9oKmSJgamNgTnYGmE69g60dWIol\0D\0AhdLHZR4tjsbftsbhf4oEIRUpdPA+nJCdDC7xij5aqgwJHsfVPKPtl8MeNPo4+QgO48BdK4PRVmrJ\0D\0AtqhUUy54Mmc9gn900PvhtgVguXDbjgv5E1hvcWAQUhC5wUEJ73IfZzF4/5YFjQIDAQABo2MwYTAf\0D\0ABgNVHSMEGDAWgBTj/i39KNALtbq2osS/BqoFjJP7LzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\0D\0A/wQEAwIBBjAdBgNVHQ4EFgQU4/4t/SjQC7W6tqLEvwaqBYyT+y8wDQYJKoZIhvcNAQELBQADggIB\0D\0AACXGumvrh8vegjmWPfBEp2uEcwPenStPuiB/vHiyz5ewG5zz13ku9Ui20vsXiObTej/tUxPQ4i9q\0D\0AecsAIyjmHjdXNYmEwnZPNDatZ8POQQaIxffu2Bq41gt/UP+TqhdLjOztUmCypAbqTuv0axn96/Ua\0D\0A4CUqmtzHQTb3yHQFhDmVOdYLO6Qn+gjYXB74BGBSESgoA//vU2YApUo0FmZ8/Qmkrp5nGm9BC2sG\0D\0AE5uPhnEFtC+NiWYzKXZUmhH4J/qyP5Hgzg0b8zAarb8iXRvTvyUFTeGSGn+ZnzxEk8rUQElsgIfX\0D\0ABDrDMlI1Dlb4pd19xIsNER9Tyx6yF7Zod1rg1MvIB671Oi6ON7fQAUtDKXeMOZePglr4UeWJoBjn\0D\0AaH9dCi77o0cOPaYjesYBx4/IXr9tgFa+iiS6M+qf4TIRnvHST4D2G0CvOJ4RUHlzEhLN5mydLIhy\0D\0APDCBBpEi6lmt2hkuIsKNuYyH4Ga8cyNfIWRjgEj1oDwYPZTISEEdQLpe/v5WOaHIz16eGWRGENoX\0D\0AkbcFgKyLmZJ956LYBws2J+dIeWCKw9cTXPhyQN9Ky8+ZAAoACxGV2lZFA4gKn2fQ1XmxqI1AbQ3C\0D\0AekD6819kR5LLU7m7Wc5P/dAVUwHY3+vZ5nbv0CO7O6l5s9UCKc2Jo5YPSjXnTkLAdc0Hz+Ys63su\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AT\C3\9CRKTRUST Elektronik Sertifika Hizmet Sa\C4\9Flay\C4\B1c\C4\B1s\C4\B1 H5\0D\0A====================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEJzCCAw+gAwIBAgIHAI4X/iQggTANBgkqhkiG9w0BAQsFADCBsTELMAkGA1UEBhMCVFIxDzAN\0D\0ABgNVBAcMBkFua2FyYTFNMEsGA1UECgxEVMOcUktUUlVTVCBCaWxnaSDEsGxldGnFn2ltIHZlIEJp\0D\0AbGnFn2ltIEfDvHZlbmxpxJ9pIEhpem1ldGxlcmkgQS7Fni4xQjBABgNVBAMMOVTDnFJLVFJVU1Qg\0D\0ARWxla3Ryb25payBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnEsWPEsXPEsSBINTAeFw0xMzA0MzAw\0D\0AODA3MDFaFw0yMzA0MjgwODA3MDFaMIGxMQswCQYDVQQGEwJUUjEPMA0GA1UEBwwGQW5rYXJhMU0w\0D\0ASwYDVQQKDERUw5xSS1RSVVNUIEJpbGdpIMSwbGV0acWfaW0gdmUgQmlsacWfaW0gR8O8dmVubGnE\0D\0An2kgSGl6bWV0bGVyaSBBLsWeLjFCMEAGA1UEAww5VMOcUktUUlVTVCBFbGVrdHJvbmlrIFNlcnRp\0D\0AZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxIEg1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\0D\0ACgKCAQEApCUZ4WWe60ghUEoI5RHwWrom/4NZzkQqL/7hzmAD/I0Dpe3/a6i6zDQGn1k19uwsu537\0D\0AjVJp45wnEFPzpALFp/kRGml1bsMdi9GYjZOHp3GXDSHHmflS0yxjXVW86B8BSLlg/kJK9siArs1m\0D\0Aep5Fimh34khon6La8eHBEJ/rPCmBp+EyCNSgBbGM+42WAA4+Jd9ThiI7/PS98wl+d+yG6w8z5UNP\0D\0A9FR1bSmZLmZaQ9/LXMrI5Tjxfjs1nQ/0xVqhzPMggCTTV+wVunUlm+hkS7M0hO8EuPbJbKoCPrZV\0D\0A4jI3X/xml1/N1p7HIL9Nxqw/dV8c7TKcfGkAaZHjIxhT6QIDAQABo0IwQDAdBgNVHQ4EFgQUVpkH\0D\0AHtOsDGlktAxQR95DLL4gwPswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZI\0D\0AhvcNAQELBQADggEBAJ5FdnsXSDLyOIspve6WSk6BGLFRRyDN0GSxDsnZAdkJzsiZ3GglE9Rc8qPo\0D\0ABP5yCccLqh0lVX6Wmle3usURehnmp349hQ71+S4pL+f5bFgWV1Al9j4uPqrtd3GqqpmWRgqujuwq\0D\0AURawXs3qZwQcWDD1YIq9pr1N5Za0/EKJAWv2cMhQOQwt1WbZyNKzMrcbGW3LM/nfpeYVhDfwwvJl\0D\0AlpKQd/Ct9JDpEXjXk4nAPQu6KfTomZ1yju2dL+6SfaHx/126M2CFYv4HAqGEVka+lgqaE9chTLd8\0D\0AB59OTj+RdPsnnRHM3eaxynFNExc5JsUpISuTKWqW+qtB4Uu2NQvAmxU=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AT\C3\9CRKTRUST Elektronik Sertifika Hizmet Sa\C4\9Flay\C4\B1c\C4\B1s\C4\B1 H6\0D\0A====================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIEJjCCAw6gAwIBAgIGfaHyZeyKMA0GCSqGSIb3DQEBCwUAMIGxMQswCQYDVQQGEwJUUjEPMA0G\0D\0AA1UEBwwGQW5rYXJhMU0wSwYDVQQKDERUw5xSS1RSVVNUIEJpbGdpIMSwbGV0acWfaW0gdmUgQmls\0D\0AacWfaW0gR8O8dmVubGnEn2kgSGl6bWV0bGVyaSBBLsWeLjFCMEAGA1UEAww5VMOcUktUUlVTVCBF\0D\0AbGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxIEg2MB4XDTEzMTIxODA5\0D\0AMDQxMFoXDTIzMTIxNjA5MDQxMFowgbExCzAJBgNVBAYTAlRSMQ8wDQYDVQQHDAZBbmthcmExTTBL\0D\0ABgNVBAoMRFTDnFJLVFJVU1QgQmlsZ2kgxLBsZXRpxZ9pbSB2ZSBCaWxpxZ9pbSBHw7x2ZW5sacSf\0D\0AaSBIaXptZXRsZXJpIEEuxZ4uMUIwQAYDVQQDDDlUw5xSS1RSVVNUIEVsZWt0cm9uaWsgU2VydGlm\0D\0AaWthIEhpem1ldCBTYcSfbGF5xLFjxLFzxLEgSDYwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\0D\0AAoIBAQCdsGjW6L0UlqMACprx9MfMkU1xeHe59yEmFXNRFpQJRwXiM/VomjX/3EsvMsew7eKC5W/a\0D\0A2uqsxgbPJQ1BgfbBOCK9+bGlprMBvD9QFyv26WZV1DOzXPhDIHiTVRZwGTLmiddk671IUP320EED\0D\0AwnS3/faAz1vFq6TWlRKb55cTMgPp1KtDWxbtMyJkKbbSk60vbNg9tvYdDjTu0n2pVQ8g9P0pu5Fb\0D\0AHH3GQjhtQiht1AH7zYiXSX6484P4tZgvsycLSF5W506jM7NE1qXyGJTtHB6plVxiSvgNZ1GpryHV\0D\0A+DKdeboaX+UEVU0TRv/yz3THGmNtwx8XEsMeED5gCLMxAgMBAAGjQjBAMB0GA1UdDgQWBBTdVRcT\0D\0A9qzoSCHK77Wv0QAy7Z6MtTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG\0D\0A9w0BAQsFAAOCAQEAb1gNl0OqFlQ+v6nfkkU/hQu7VtMMUszIv3ZnXuaqs6fvuay0EBQNdH49ba3R\0D\0AfdCaqaXKGDsCQC4qnFAUi/5XfldcEQlLNkVS9z2sFP1E34uXI9TDwe7UU5X+LEr+DXCqu4svLcsy\0D\0Ao4LyVN/Y8t3XSHLuSqMplsNEzm61kod2pLv0kmzOLBQJZo6NrRa1xxsJYTvjIKIDgI6tflEATseW\0D\0AhvtDmHd9KMeP2Cpu54Rvl0EpABZeTeIT6lnAY2c6RPuY/ATTMHKm9ocJV612ph1jmv3XZch4gyt1\0D\0AO6VbuA1df74jrlZVlFjvH4GMKrLN5ptjnhi85WsGtAuYSyher4hYyw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertinomis - Root CA\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFkjCCA3qgAwIBAgIBATANBgkqhkiG9w0BAQsFADBaMQswCQYDVQQGEwJGUjETMBEGA1UEChMK\0D\0AQ2VydGlub21pczEXMBUGA1UECxMOMDAwMiA0MzM5OTg5MDMxHTAbBgNVBAMTFENlcnRpbm9taXMg\0D\0ALSBSb290IENBMB4XDTEzMTAyMTA5MTcxOFoXDTMzMTAyMTA5MTcxOFowWjELMAkGA1UEBhMCRlIx\0D\0AEzARBgNVBAoTCkNlcnRpbm9taXMxFzAVBgNVBAsTDjAwMDIgNDMzOTk4OTAzMR0wGwYDVQQDExRD\0D\0AZXJ0aW5vbWlzIC0gUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANTMCQos\0D\0AP5L2fxSeC5yaah1AMGT9qt8OHgZbn1CF6s2Nq0Nn3rD6foCWnoR4kkjW4znuzuRZWJflLieY6pOo\0D\0Ad5tK8O90gC3rMB+12ceAnGInkYjwSond3IjmFPnVAy//ldu9n+ws+hQVWZUKxkd8aRi5pwP5ynap\0D\0Az8dvtF4F/u7BUrJ1Mofs7SlmO/NKFoL21prbcpjp3vDFTKWrteoB4owuZH9kb/2jJZOLyKIOSY00\0D\0A8B/sWEUuNKqEUL3nskoTuLAPrjhdsKkb5nPJWqHZZkCqqU2mNAKthH6yI8H7KsZn9DS2sJVqM09x\0D\0ARLWtwHkziOC/7aOgFLScCbAK42C++PhmiM1b8XcF4LVzbsF9Ri6OSyemzTUK/eVNfaoqoynHWmgE\0D\0A6OXWk6RiwsXm9E/G+Z8ajYJJGYrKWUM66A0ywfRMEwNvbqY/kXPLynNvEiCL7sCCeN5LLsJJwx3t\0D\0AFvYk9CcbXFcx3FXuqB5vbKziRcxXV4p1VxngtViZSTYxPDMBbRZKzbgqg4SGm/lg0h9tkQPTYKbV\0D\0APZrdd5A9NaSfD171UkRpucC63M9933zZxKyGIjK8e2uR73r4F2iw4lNVYC2vPsKD2NkJK/DAZNuH\0D\0Ai5HMkesE/Xa0lZrmFAYb1TQdvtj/dBxThZngWVJKYe2InmtJiUZ+IFrZ50rlau7SZRFDAgMBAAGj\0D\0AYzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTvkUz1pcMw6C8I\0D\0A6tNxIqSSaHh02TAfBgNVHSMEGDAWgBTvkUz1pcMw6C8I6tNxIqSSaHh02TANBgkqhkiG9w0BAQsF\0D\0AAAOCAgEAfj1U2iJdGlg+O1QnurrMyOMaauo++RLrVl89UM7g6kgmJs95Vn6RHJk/0KGRHCwPT5iV\0D\0AWVO90CLYiF2cN/z7ZMF4jIuaYAnq1fohX9B0ZedQxb8uuQsLrbWwF6YSjNRieOpWauwK0kDDPAUw\0D\0APk2Ut59KA9N9J0u2/kTO+hkzGm2kQtHdzMjI1xZSg081lLMSVX3l4kLr5JyTCcBMWwerx20RoFAX\0D\0AlCOotQqSD7J6wWAsOMwaplv/8gzjqh8c3LigkyfeY+N/IZ865Z764BNqdeuWXGKRlI5nU7aJ+BIJ\0D\0Ay29SWwNyhlCVCNSNh4YVH5Uk2KRvms6knZtt0rJ2BobGVgjF6wnaNsIbW0G+YSrjcOa4pvi2WsS9\0D\0AIff/ql+hbHY5ZtbqTFXhADObE5hjyW/QASAJN1LnDE8+zbz1X5YnpyACleAu6AdBBR8Vbtaw5Bng\0D\0ADwKTACdyxYvRVB9dSsNAl35VpnzBMwQUAR1JIGkLGZOdblgi90AMRgwjY/M50n92Uaf0yKHxDHYi\0D\0AI0ZSKS3io0EHVmmY0gUJvGnHWmHNj4FgFU2A3ZDifcRQ8ow7bkrHxuaAKzyBvBGAFhAn1/DNP3nM\0D\0AcyrDflOR1m749fPH0FFNjkulW+YZFzvWgQncItzujrnEj1PhZ7szuIgVRs/taTX/dQ1G885x4cVr\0D\0AhkIGuUE=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AOISTE WISeKey Global Root GB CA\0D\0A===============================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDtTCCAp2gAwIBAgIQdrEgUnTwhYdGs/gjGvbCwDANBgkqhkiG9w0BAQsFADBtMQswCQYDVQQG\0D\0AEwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRvcnNl\0D\0AZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwgUm9vdCBHQiBDQTAeFw0xNDEyMDExNTAw\0D\0AMzJaFw0zOTEyMDExNTEwMzFaMG0xCzAJBgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNlS2V5MSIwIAYD\0D\0AVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5IEds\0D\0Ab2JhbCBSb290IEdCIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2Be3HEokKtaX\0D\0AscriHvt9OO+Y9bI5mE4nuBFde9IllIiCFSZqGzG7qFshISvYD06fWvGxWuR51jIjK+FTzJlFXHtP\0D\0Arby/h0oLS5daqPZI7H17Dc0hBt+eFf1Biki3IPShehtX1F1Q/7pn2COZH8g/497/b1t3sWtuuMlk\0D\0A9+HKQUYOKXHQuSP8yYFfTvdv37+ErXNku7dCjmn21HYdfp2nuFeKUWdy19SouJVUQHMD9ur06/4o\0D\0AQnc/nSMbsrY9gBQHTC5P99UKFg29ZkM3fiNDecNAhvVMKdqOmq0NpQSHiB6F4+lT1ZvIiwNjeOvg\0D\0AGUpuuy9rM2RYk61pv48b74JIxwIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB\0D\0A/zAdBgNVHQ4EFgQUNQ/INmNe4qPs+TtmFc5RUuORmj0wEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZI\0D\0AhvcNAQELBQADggEBAEBM+4eymYGQfp3FsLAmzYh7KzKNbrghcViXfa43FK8+5/ea4n32cZiZBKpD\0D\0AdHij40lhPnOMTZTg+XHEthYOU3gf1qKHLwI5gSk8rxWYITD+KJAAjNHhy/peyP34EEY7onhCkRd0\0D\0AVQreUGdNZtGn//3ZwLWoo4rOZvUPQ82nK1d7Y0Zqqi5S2PTt4W2tKZB4SLrhI6qjiey1q5bAtEui\0D\0AHZeeevJuQHHfaPFlTc58Bd9TZaml8LGXBHAVRgOY1NK/VLSgWH1Sb9pWJmLU2NuJMW8c8CLC02Ic\0D\0ANc1MaRVUGpCY3useX8p3x8uOPUNpnJpY0CQ73xtAln41rYHHTnG6iBM=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertification Authority of WoSign G2\0D\0A====================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDfDCCAmSgAwIBAgIQayXaioidfLwPBbOxemFFRDANBgkqhkiG9w0BAQsFADBYMQswCQYDVQQG\0D\0AEwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxLTArBgNVBAMTJENlcnRpZmljYXRpb24g\0D\0AQXV0aG9yaXR5IG9mIFdvU2lnbiBHMjAeFw0xNDExMDgwMDU4NThaFw00NDExMDgwMDU4NThaMFgx\0D\0ACzAJBgNVBAYTAkNOMRowGAYDVQQKExFXb1NpZ24gQ0EgTGltaXRlZDEtMCsGA1UEAxMkQ2VydGlm\0D\0AaWNhdGlvbiBBdXRob3JpdHkgb2YgV29TaWduIEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\0D\0ACgKCAQEAvsXEoCKASU+/2YcRxlPhuw+9YH+v9oIOH9ywjj2X4FA8jzrvZjtFB5sg+OPXJYY1kBai\0D\0AXW8wGQiHC38Gsp1ij96vkqVg1CuAmlI/9ZqD6TRay9nVYlzmDuDfBpgOgHzKtB0TiGsOqCR3A9Du\0D\0AW/PKaZE1OVbFbeP3PU9ekzgkyhjpJMuSA93MHD0JcOQg5PGurLtzaaNjOg9FD6FKmsLRY6zLEPg9\0D\0A5k4ot+vElbGs/V6r+kHLXZ1L3PR8du9nfwB6jdKgGlxNIuG12t12s9R23164i5jIFFTMaxeSt+BK\0D\0Av0mUYQs4kI9dJGwlezt52eJ+na2fmKEG/HgUYFf47oB3sQIDAQABo0IwQDAOBgNVHQ8BAf8EBAMC\0D\0AAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU+mCp62XF3RYUCE4MD42b4Pdkr2cwDQYJKoZI\0D\0AhvcNAQELBQADggEBAFfDejaCnI2Y4qtAqkePx6db7XznPWZaOzG73/MWM5H8fHulwqZm46qwtyeY\0D\0AP0nXYGdnPzZPSsvxFPpahygc7Y9BMsaV+X3avXtbwrAh449G3CE4Q3RM+zD4F3LBMvzIkRfEzFg3\0D\0ATgvMWvchNSiDbGAtROtSjFA9tWwS1/oJu2yySrHFieT801LYYRf+epSEj3m2M1m6D8QL4nCgS3gu\0D\0A+sif/a+RZQp4OBXllxcU3fngLDT4ONCEIgDAFFEYKwLcMFrw6AF8NTojrwjkr6qOKEJJLvD1mTS+\0D\0A7Q9LGOHSJDy7XUe3IfKN0QqZjuNuPq1w4I+5ysxugTH2e5x6eeRncRg=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACA WoSign ECC Root\0D\0A==================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICCTCCAY+gAwIBAgIQaEpYcIBr8I8C+vbe6LCQkDAKBggqhkjOPQQDAzBGMQswCQYDVQQGEwJD\0D\0ATjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxGzAZBgNVBAMTEkNBIFdvU2lnbiBFQ0MgUm9v\0D\0AdDAeFw0xNDExMDgwMDU4NThaFw00NDExMDgwMDU4NThaMEYxCzAJBgNVBAYTAkNOMRowGAYDVQQK\0D\0AExFXb1NpZ24gQ0EgTGltaXRlZDEbMBkGA1UEAxMSQ0EgV29TaWduIEVDQyBSb290MHYwEAYHKoZI\0D\0Azj0CAQYFK4EEACIDYgAE4f2OuEMkq5Z7hcK6C62N4DrjJLnSsb6IOsq/Srj57ywvr1FQPEd1bPiU\0D\0At5v8KB7FVMxjnRZLU8HnIKvNrCXSf4/CwVqCXjCLelTOA7WRf6qU0NGKSMyCBSah1VES1ns2o0Iw\0D\0AQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUqv3VWqP2h4syhf3R\0D\0AMluARZPzA7gwCgYIKoZIzj0EAwMDaAAwZQIxAOSkhLCB1T2wdKyUpOgOPQB0TKGXa/kNUTyh2Tv0\0D\0ADaupn75OcsqF1NnstTJFGG+rrQIwfcf3aWMvoeGY7xMQ0Xk/0f7qO3/eVvSQsRUR2LIiFdAvwyYu\0D\0Aa/GRspBl9JrmkO5K\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ASZAFIR ROOT CA2\0D\0A===============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDcjCCAlqgAwIBAgIUPopdB+xV0jLVt+O2XwHrLdzk1uQwDQYJKoZIhvcNAQELBQAwUTELMAkG\0D\0AA1UEBhMCUEwxKDAmBgNVBAoMH0tyYWpvd2EgSXpiYSBSb3psaWN6ZW5pb3dhIFMuQS4xGDAWBgNV\0D\0ABAMMD1NaQUZJUiBST09UIENBMjAeFw0xNTEwMTkwNzQzMzBaFw0zNTEwMTkwNzQzMzBaMFExCzAJ\0D\0ABgNVBAYTAlBMMSgwJgYDVQQKDB9LcmFqb3dhIEl6YmEgUm96bGljemVuaW93YSBTLkEuMRgwFgYD\0D\0AVQQDDA9TWkFGSVIgUk9PVCBDQTIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3vD5Q\0D\0AqEvNQLXOYeeWyrSh2gwisPq1e3YAd4wLz32ohswmUeQgPYUM1ljj5/QqGJ3a0a4m7utT3PSQ1hNK\0D\0ADJA8w/Ta0o4NkjrcsbH/ON7Dui1fgLkCvUqdGw+0w8LBZwPd3BucPbOw3gAeqDRHu5rr/gsUvTaE\0D\0A2g0gv/pby6kWIK05YO4vdbbnl5z5Pv1+TW9NL++IDWr63fE9biCloBK0TXC5ztdyO4mTp4CEHCdJ\0D\0Ackm1/zuVnsHMyAHs6A6KCpbns6aH5db5BSsNl0BwPLqsdVqc1U2dAgrSS5tmS0YHF2Wtn2yIANwi\0D\0AieDhZNRnvDF5YTy7ykHNXGoAyDw4jlivAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0P\0D\0AAQH/BAQDAgEGMB0GA1UdDgQWBBQuFqlKGLXLzPVvUPMjX/hd56zwyDANBgkqhkiG9w0BAQsFAAOC\0D\0AAQEAtXP4A9xZWx126aMqe5Aosk3AM0+qmrHUuOQn/6mWmc5G4G18TKI4pAZw8PRBEew/R40/cof5\0D\0AO/2kbytTAOD/OblqBw7rHRz2onKQy4I9EYKL0rufKq8h5mOGnXkZ7/e7DDWQw4rtTw/1zBLZpD67\0D\0AoPwglV9PJi8RI4NOdQcPv5vRtB3pEAT+ymCPoky4rc/hkA/NrgrHXXu3UNLUYfrVFdvXn4dRVOul\0D\0A4+vJhaAlIDf7js4MNIThPIGyd05DpYhfhmehPea0XGG2Ptv+tyjFogeutcrKjSoS75ftwjCkySp6\0D\0A+/NNIxuZMzSgLvWpCz/UXeHPhJ/iGcJfitYgHuNztw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertum Trusted Network CA 2\0D\0A===========================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIF0jCCA7qgAwIBAgIQIdbQSk8lD8kyN/yqXhKN6TANBgkqhkiG9w0BAQ0FADCBgDELMAkGA1UE\0D\0ABhMCUEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVzIFMuQS4xJzAlBgNVBAsTHkNlcnR1\0D\0AbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEkMCIGA1UEAxMbQ2VydHVtIFRydXN0ZWQgTmV0d29y\0D\0AayBDQSAyMCIYDzIwMTExMDA2MDgzOTU2WhgPMjA0NjEwMDYwODM5NTZaMIGAMQswCQYDVQQGEwJQ\0D\0ATDEiMCAGA1UEChMZVW5pemV0byBUZWNobm9sb2dpZXMgUy5BLjEnMCUGA1UECxMeQ2VydHVtIENl\0D\0AcnRpZmljYXRpb24gQXV0aG9yaXR5MSQwIgYDVQQDExtDZXJ0dW0gVHJ1c3RlZCBOZXR3b3JrIENB\0D\0AIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC9+Xj45tWADGSdhhuWZGc/IjoedQF9\0D\0A7/tcZ4zJzFxrqZHmuULlIEub2pt7uZld2ZuAS9eEQCsn0+i6MLs+CRqnSZXvK0AkwpfHp+6bJe+o\0D\0ACgCXhVqqndwpyeI1B+twTUrWwbNWuKFBOJvR+zF/j+Bf4bE/D44WSWDXBo0Y+aomEKsq09DRZ40b\0D\0ARr5HMNUuctHFY9rnY3lEfktjJImGLjQ/KUxSiyqnwOKRKIm5wFv5HdnnJ63/mgKXwcZQkpsCLL2p\0D\0AuTRZCr+ESv/f/rOf69me4Jgj7KZrdxYq28ytOxykh9xGc14ZYmhFV+SQgkK7QtbwYeDBoz1mo130\0D\0AGO6IyY0XRSmZMnUCMe4pJshrAua1YkV/NxVaI2iJ1D7eTiew8EAMvE0Xy02isx7QBlrd9pPPV3WZ\0D\0A9fqGGmd4s7+W/jTcvedSVuWz5XV710GRBdxdaeOVDUO5/IOWOZV7bIBaTxNyxtd9KXpEulKkKtVB\0D\0ARgkg/iKgtlswjbyJDNXXcPiHUv3a76xRLgezTv7QCdpw75j6VuZt27VXS9zlLCUVyJ4ueE742pye\0D\0AhizKV/Ma5ciSixqClnrDvFASadgOWkaLOusm+iPJtrCBvkIApPjW/jAux9JG9uWOdf3yzLnQh1vM\0D\0ABhBgu4M1t15n3kfsmUjxpKEV/q2MYo45VU85FrmxY53/twIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\0D\0AAQH/MB0GA1UdDgQWBBS2oVQ5AsOgP46KvPrU+Bym0ToO/TAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZI\0D\0AhvcNAQENBQADggIBAHGlDs7k6b8/ONWJWsQCYftMxRQXLYtPU2sQF/xlhMcQSZDe28cmk4gmb3DW\0D\0AAl45oPePq5a1pRNcgRRtDoGCERuKTsZPpd1iHkTfCVn0W3cLN+mLIMb4Ck4uWBzrM9DPhmDJ2vuA\0D\0AL55MYIR4PSFk1vtBHxgP58l1cb29XN40hz5BsA72udY/CROWFC/emh1auVbONTqwX3BNXuMp8SMo\0D\0Aclm2q8KMZiYcdywmdjWLKKdpoPk79SPdhRB0yZADVpHnr7pH1BKXESLjokmUbOe3lEu6LaTaM4tM\0D\0ApkT/WjzGHWTYtTHkpjx6qFcL2+1hGsvxznN3Y6SHb0xRONbkX8eftoEq5IVIeVheO/jbAoJnwTnb\0D\0Aw3RLPTYe+SmTiGhbqEQZIfCn6IENLOiTNrQ3ssqwGyZ6miUfmpqAnksqP/ujmv5zMnHCnsZy4Ypo\0D\0AJ/HkD7TETKVhk/iXEAcqMCWpuchxuO9ozC1+9eB+D4Kob7a6bINDd82Kkhehnlt4Fj1F4jNy3eFm\0D\0AypnTycUm/Q1oBEauttmbjL4ZvrHG8hnjXALKLNhvSgfZyTXaQHXyxKcZb55CEJh15pWLYLztxRLX\0D\0Ais7VmFxWlgPF7ncGNf/P5O4/E2Hu29othfDNrp2yGAlFw5Khchf8R7agCyzxxN5DaAhqXzvwdmP7\0D\0AzAYspsbiDrW5viSP\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AHellenic Academic and Research Institutions RootCA 2015\0D\0A=======================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIGCzCCA/OgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBpjELMAkGA1UEBhMCR1IxDzANBgNVBAcT\0D\0ABkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0\0D\0AaW9ucyBDZXJ0LiBBdXRob3JpdHkxQDA+BgNVBAMTN0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNl\0D\0AYXJjaCBJbnN0aXR1dGlvbnMgUm9vdENBIDIwMTUwHhcNMTUwNzA3MTAxMTIxWhcNNDAwNjMwMTAx\0D\0AMTIxWjCBpjELMAkGA1UEBhMCR1IxDzANBgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMg\0D\0AQWNhZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxQDA+BgNV\0D\0ABAMTN0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgUm9vdENBIDIw\0D\0AMTUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDC+Kk/G4n8PDwEXT2QNrCROnk8Zlrv\0D\0AbTkBSRq0t89/TSNTt5AA4xMqKKYx8ZEA4yjsriFBzh/a/X0SWwGDD7mwX5nh8hKDgE0GPt+sr+eh\0D\0AiGsxr/CL0BgzuNtFajT0AoAkKAoCFZVedioNmToUW/bLy1O8E00BiDeUJRtCvCLYjqOWXjrZMts+\0D\0A6PAQZe104S+nfK8nNLspfZu2zwnI5dMK/IhlZXQK3HMcXM1AsRzUtoSMTFDPaI6oWa7CJ06CojXd\0D\0AFPQf/7J31Ycvqm59JCfnxssm5uX+Zwdj2EUN3TpZZTlYepKZcj2chF6IIbjV9Cz82XBST3i4vTwr\0D\0Ai5WY9bPRaM8gFH5MXF/ni+X1NYEZN9cRCLdmvtNKzoNXADrDgfgXy5I2XdGj2HUb4Ysn6npIQf1F\0D\0AGQatJ5lOwXBH3bWfgVMS5bGMSF0xQxfjjMZ6Y5ZLKTBOhE5iGV48zpeQpX8B653g+IuJ3SWYPZK2\0D\0Afu/Z8VFRfS0myGlZYeCsargqNhEEelC9MoS+L9xy1dcdFkfkR2YgP/SWxa+OAXqlD3pk9Q0Yh9mu\0D\0AiNX6hME6wGkoLfINaFGq46V3xqSQDqE3izEjR8EJCOtu93ib14L8hCCZSRm2Ekax+0VVFqmjZayc\0D\0ABw/qa9wfLgZy7IaIEuQt218FL+TwA9MmM+eAws1CoRc0CwIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\0D\0AAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUcRVnyMjJvXVdctA4GGqd83EkVAswDQYJKoZI\0D\0AhvcNAQELBQADggIBAHW7bVRLqhBYRjTyYtcWNl0IXtVsyIe9tC5G8jH4fOpCtZMWVdyhDBKg2mF+\0D\0AD1hYc2Ryx+hFjtyp8iY/xnmMsVMIM4GwVhO+5lFc2JsKT0ucVlMC6U/2DWDqTUJV6HwbISHTGzrM\0D\0Ad/K4kPFox/la/vot9L/J9UUbzjgQKjeKeaO04wlshYaT/4mWJ3iBj2fjRnRUjtkNaeJK9E10A/+y\0D\0Ad+2VZ5fkscWrv2oj6NSU4kQoYsRL4vDY4ilrGnB+JGGTe08DMiUNRSQrlrRGar9KC/eaj8GsGsVn\0D\0A82800vpzY4zvFrCopEYq+OsS7HK07/grfoxSwIuEVPkvPuNVqNxmsdnhX9izjFk0WaSrT2y7Hxjb\0D\0AdavYy5LNlDhhDgcGH0tGEPEVvo2FXDtKK4F5D7Rpn0lQl033DlZdwJVqwjbDG2jJ9SrcR5q+ss7F\0D\0AJej6A7na+RZukYT1HCjI/CbM1xyQVqdfbzoEvM14iQuODy+jqk+iGxI9FghAD/FGTNeqewjBCvVt\0D\0AJ94Cj8rDtSvK6evIIVM4pcw72Hc3MKJP2W/R8kCtQXoXxdZKNYm3QdV8hn9VTYNKpXMgwDqvkPGa\0D\0AJI7ZjnHKe7iG2rKPmT4dEw0SEe7Uq/DpFXYC5ODfqiAeW2GFZECpkJcNrVPSWh2HagCXZWK0vm9q\0D\0Ap/UsQu0yrbYhnr68\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AHellenic Academic and Research Institutions ECC RootCA 2015\0D\0A===========================================================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICwzCCAkqgAwIBAgIBADAKBggqhkjOPQQDAjCBqjELMAkGA1UEBhMCR1IxDzANBgNVBAcTBkF0\0D\0AaGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0aW9u\0D\0AcyBDZXJ0LiBBdXRob3JpdHkxRDBCBgNVBAMTO0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJj\0D\0AaCBJbnN0aXR1dGlvbnMgRUNDIFJvb3RDQSAyMDE1MB4XDTE1MDcwNzEwMzcxMloXDTQwMDYzMDEw\0D\0AMzcxMlowgaoxCzAJBgNVBAYTAkdSMQ8wDQYDVQQHEwZBdGhlbnMxRDBCBgNVBAoTO0hlbGxlbmlj\0D\0AIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4gQXV0aG9yaXR5MUQwQgYD\0D\0AVQQDEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIEVDQyBSb290\0D\0AQ0EgMjAxNTB2MBAGByqGSM49AgEGBSuBBAAiA2IABJKgQehLgoRc4vgxEZmGZE4JJS+dQS8KrjVP\0D\0AdJWyUWRrjWvmP3CV8AVER6ZyOFB2lQJajq4onvktTpnvLEhvTCUp6NFxW98dwXU3tNf6e3pCnGoK\0D\0AVlp8aQuqgAkkbH7BRqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0O\0D\0ABBYEFLQiC4KZJAEOnLvkDv2/+5cgk5kqMAoGCCqGSM49BAMCA2cAMGQCMGfOFmI4oqxiRaeplSTA\0D\0AGiecMjvAwNW6qef4BENThe5SId6d9SWDPp5YSy/XZxMOIQIwBeF1Ad5o7SofTUwJCA3sS61kFyjn\0D\0Adc5FZXIhF8siQQ6ME5g4mlRtm8rifOoCWCKR\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertplus Root CA G1\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFazCCA1OgAwIBAgISESBVg+QtPlRWhS2DN7cs3EYRMA0GCSqGSIb3DQEBDQUAMD4xCzAJBgNV\0D\0ABAYTAkZSMREwDwYDVQQKDAhDZXJ0cGx1czEcMBoGA1UEAwwTQ2VydHBsdXMgUm9vdCBDQSBHMTAe\0D\0AFw0xNDA1MjYwMDAwMDBaFw0zODAxMTUwMDAwMDBaMD4xCzAJBgNVBAYTAkZSMREwDwYDVQQKDAhD\0D\0AZXJ0cGx1czEcMBoGA1UEAwwTQ2VydHBsdXMgUm9vdCBDQSBHMTCCAiIwDQYJKoZIhvcNAQEBBQAD\0D\0AggIPADCCAgoCggIBANpQh7bauKk+nWT6VjOaVj0W5QOVsjQcmm1iBdTYj+eJZJ+622SLZOZ5KmHN\0D\0Ar49aiZFluVj8tANfkT8tEBXgfs+8/H9DZ6itXjYj2JizTfNDnjl8KvzsiNWI7nC9hRYt6kuJPKNx\0D\0AQv4c/dMcLRC4hlTqQ7jbxofaqK6AJc96Jh2qkbBIb6613p7Y1/oA/caP0FG7Yn2ksYyy/yARujVj\0D\0ABYZHYEMzkPZHogNPlk2dT8Hq6pyi/jQu3rfKG3akt62f6ajUeD94/vI4CTYd0hYCyOwqaK/1jpTv\0D\0ALRN6HkJKHRUxrgwEV/xhc/MxVoYxgKDEEW4wduOU8F8ExKyHcomYxZ3MVwia9Az8fXoFOvpHgDm2\0D\0Az4QTd28n6v+WZxcIbekN1iNQMLAVdBM+5S//Ds3EC0pd8NgAM0lm66EYfFkuPSi5YXHLtaW6uOrc\0D\0A4nBvCGrch2c0798wct3zyT8j/zXhviEpIDCB5BmlIOklynMxdCm+4kLV87ImZsdo/Rmz5yCTmehd\0D\0A4F6H50boJZwKKSTUzViGUkAksnsPmBIgJPaQbEfIDbsYIC7Z/fyL8inqh3SV4EJQeIQEQWGw9CEj\0D\0Ajy3LKCHyamz0GqbFFLQ3ZU+V/YDI+HLlJWvEYLF7bY5KinPOWftwenMGE9nTdDckQQoRb5fc5+R+\0D\0Aob0V8rqHDz1oihYHAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0G\0D\0AA1UdDgQWBBSowcCbkahDFXxdBie0KlHYlwuBsTAfBgNVHSMEGDAWgBSowcCbkahDFXxdBie0KlHY\0D\0AlwuBsTANBgkqhkiG9w0BAQ0FAAOCAgEAnFZvAX7RvUz1isbwJh/k4DgYzDLDKTudQSk0YcbX8ACh\0D\0A66Ryj5QXvBMsdbRX7gp8CXrc1cqh0DQT+Hern+X+2B50ioUHj3/MeXrKls3N/U/7/SMNkPX0XtPG\0D\0AYX2eEeAC7gkE2Qfdpoq3DIMku4NQkv5gdRE+2J2winq14J2by5BSS7CTKtQ+FjPlnsZlFT5kOwQ/\0D\0A2wyPX1wdaR+v8+khjPPvl/aatxm2hHSco1S1cE5j2FddUyGbQJJD+tZ3VTNPZNX70Cxqjm0lpu+F\0D\0A6ALEUz65noe8zDUa3qHpimOHZR4RKttjd5cUvpoUmRGywO6wT/gUITJDT5+rosuoD6o7BlXGEilX\0D\0ACNQ314cnrUlZp5GrRHpejXDbl85IULFzk/bwg2D5zfHhMf1bfHEhYxQUqq/F3pN+aLHsIqKqkHWe\0D\0AtUNy6mSjhEv9DKgma3GX7lZjZuhCVPnHHd/Qj1vfyDBviP4NxDMcU6ij/UgQ8uQKTuEVV/xuZDDC\0D\0AVRHc6qnNSlSsKWNEz0pAoNZoWRsz+e86i9sgktxChL8Bq4fA1SCC28a5g4VCXA9DO2pJNdWY9BW/\0D\0A+mGBDAkgGNLQFwzLSABQ6XaCjGTXOqAHVcweMcDvOrRl++O/QmueD6i9a5jc2NvLi6Td11n0bt3+\0D\0AqsOR0C5CB8AMTVPNJLFMWx5R9N/pkvo=\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0ACertplus Root CA G2\0D\0A===================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICHDCCAaKgAwIBAgISESDZkc6uo+jF5//pAq/Pc7xVMAoGCCqGSM49BAMDMD4xCzAJBgNVBAYT\0D\0AAkZSMREwDwYDVQQKDAhDZXJ0cGx1czEcMBoGA1UEAwwTQ2VydHBsdXMgUm9vdCBDQSBHMjAeFw0x\0D\0ANDA1MjYwMDAwMDBaFw0zODAxMTUwMDAwMDBaMD4xCzAJBgNVBAYTAkZSMREwDwYDVQQKDAhDZXJ0\0D\0AcGx1czEcMBoGA1UEAwwTQ2VydHBsdXMgUm9vdCBDQSBHMjB2MBAGByqGSM49AgEGBSuBBAAiA2IA\0D\0ABM0PW1aC3/BFGtat93nwHcmsltaeTpwftEIRyoa/bfuFo8XlGVzX7qY/aWfYeOKmycTbLXku54uN\0D\0AAm8xIk0G42ByRZ0OQneezs/lf4WbGOT8zC5y0xaTTsqZY1yhBSpsBqNjMGEwDgYDVR0PAQH/BAQD\0D\0AAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNqDYwJ5jtpMxjwjFNiPwyCrKGBZMB8GA1Ud\0D\0AIwQYMBaAFNqDYwJ5jtpMxjwjFNiPwyCrKGBZMAoGCCqGSM49BAMDA2gAMGUCMHD+sAvZ94OX7PNV\0D\0AHdTcswYO/jOYnYs5kGuUIe22113WTNchp+e/IQ8rzfcq3IUHnQIxAIYUFuXcsGXCwI4Un78kFmjl\0D\0AvPl5adytRSv3tjFzzAalU5ORGpOucGpnutee5WEaXw==\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AOpenTrust Root CA G1\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFbzCCA1egAwIBAgISESCzkFU5fX82bWTCp59rY45nMA0GCSqGSIb3DQEBCwUAMEAxCzAJBgNV\0D\0ABAYTAkZSMRIwEAYDVQQKDAlPcGVuVHJ1c3QxHTAbBgNVBAMMFE9wZW5UcnVzdCBSb290IENBIEcx\0D\0AMB4XDTE0MDUyNjA4NDU1MFoXDTM4MDExNTAwMDAwMFowQDELMAkGA1UEBhMCRlIxEjAQBgNVBAoM\0D\0ACU9wZW5UcnVzdDEdMBsGA1UEAwwUT3BlblRydXN0IFJvb3QgQ0EgRzEwggIiMA0GCSqGSIb3DQEB\0D\0AAQUAA4ICDwAwggIKAoICAQD4eUbalsUwXopxAy1wpLuwxQjczeY1wICkES3d5oeuXT2R0odsN7fa\0D\0AYp6bwiTXj/HbpqbfRm9RpnHLPhsxZ2L3EVs0J9V5ToybWL0iEA1cJwzdMOWo010hOHQX/uMftk87\0D\0Aay3bfWAfjH1MBcLrARYVmBSO0ZB3Ij/swjm4eTrwSSTilZHcYTSSjFR077F9jAHiOH3BX2pfJLKO\0D\0AYheteSCtqx234LSWSE9mQxAGFiQD4eCcjsZGT44ameGPuY4zbGneWK2gDqdkVBFpRGZPTBKnjix9\0D\0AxNRbxQA0MMHZmf4yzgeEtE7NCv82TWLxp2NX5Ntqp66/K7nJ5rInieV+mhxNaMbBGN4zK1FGSxyO\0D\0A9z0M+Yo0FMT7MzUj8czxKselu7Cizv5Ta01BG2Yospb6p64KTrk5M0ScdMGTHPjgniQlQ/GbI4Kq\0D\0A3ywgsNw2TgOzfALU5nsaqocTvz6hdLubDuHAk5/XpGbKuxs74zD0M1mKB3IDVedzagMxbm+WG+Oi\0D\0An6+Sx+31QrclTDsTBM8clq8cIqPQqwWyTBIjUtz9GVsnnB47ev1CI9sjgBPwvFEVVJSmdz7QdFG9\0D\0AURQIOTfLHzSpMJ1ShC5VkLG631UAC9hWLbFJSXKAqWLXwPYYEQRVzXR7z2FwefR7LFxckvzluFqr\0D\0ATJOVoSfupb7PcSNCupt2LQIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\0D\0A/zAdBgNVHQ4EFgQUl0YhVyE12jZVx/PxN3DlCPaTKbYwHwYDVR0jBBgwFoAUl0YhVyE12jZVx/Px\0D\0AN3DlCPaTKbYwDQYJKoZIhvcNAQELBQADggIBAB3dAmB84DWn5ph76kTOZ0BP8pNuZtQ5iSas000E\0D\0APLuHIT839HEl2ku6q5aCgZG27dmxpGWX4m9kWaSW7mDKHyP7Rbr/jyTwyqkxf3kfgLMtMrpkZ2Cv\0D\0AuVnN35pJ06iCsfmYlIrM4LvgBBuZYLFGZdwIorJGnkSI6pN+VxbSFXJfLkur1J1juONI5f6ELlgK\0D\0An0Md/rcYkoZDSw6cMoYsYPXpSOqV7XAp8dUv/TW0V8/bhUiZucJvbI/NeJWsZCj9VrDDb8O+WVLh\0D\0AX4SPgPL0DTatdrOjteFkdjpY3H1PXlZs5VVZV6Xf8YpmMIzUUmI4d7S+KNfKNsSbBfD4Fdvb8e80\0D\0AnR14SohWZ25g/4/Ii+GOvUKpMwpZQhISKvqxnUOOBZuZ2mKtVzazHbYNeS2WuOvyDEsMpZTGMKcm\0D\0AGS3tTAZQMPH9WD25SxdfGbRqhFS0OE85og2WaMMolP3tLR9Ka0OWLpABEPs4poEL0L9109S5zvE/\0D\0Abw4cHjdx5RiHdRk/ULlepEU0rbDK5uUTdg8xFKmOLZTW1YVNcxVPS/KyPu1svf0OnWZzsD2097+o\0D\0A4BGkxK51CUpjAEggpsadCwmKtODmzj7HPiY46SvepghJAwSQiumPv+i2tCqjI40cHLI5kqiPAlxA\0D\0AOXXUc0ECd97N4EOH1uS6SsNsEn/+KuYj1oxx\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AOpenTrust Root CA G2\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFbzCCA1egAwIBAgISESChaRu/vbm9UpaPI+hIvyYRMA0GCSqGSIb3DQEBDQUAMEAxCzAJBgNV\0D\0ABAYTAkZSMRIwEAYDVQQKDAlPcGVuVHJ1c3QxHTAbBgNVBAMMFE9wZW5UcnVzdCBSb290IENBIEcy\0D\0AMB4XDTE0MDUyNjAwMDAwMFoXDTM4MDExNTAwMDAwMFowQDELMAkGA1UEBhMCRlIxEjAQBgNVBAoM\0D\0ACU9wZW5UcnVzdDEdMBsGA1UEAwwUT3BlblRydXN0IFJvb3QgQ0EgRzIwggIiMA0GCSqGSIb3DQEB\0D\0AAQUAA4ICDwAwggIKAoICAQDMtlelM5QQgTJT32F+D3Y5z1zCU3UdSXqWON2ic2rxb95eolq5cSG+\0D\0ANtmh/LzubKh8NBpxGuga2F8ORAbtp+Dz0mEL4DKiltE48MLaARf85KxP6O6JHnSrT78eCbY2albz\0D\0A4e6WiWYkBuTNQjpK3eCasMSCRbP+yatcfD7J6xcvDH1urqWPyKwlCm/61UWY0jUJ9gNDlP7ZvyCV\0D\0AeYCYitmJNbtRG6Q3ffyZO6v/v6wNj0OxmXsWEH4db0fEFY8ElggGQgT4hNYdvJGmQr5J1WqIP7wt\0D\0AUdGejeBSzFfdNTVY27SPJIjki9/ca1TSgSuyzpJLHB9G+h3Ykst2Z7UJmQnlrBcUVXDGPKBWCgOz\0D\0A3GIZ38i1MH/1PCZ1Eb3XG7OHngevZXHloM8apwkQHZOJZlvoPGIytbU6bumFAYueQ4xncyhZW+vj\0D\0A3CzMpSZyYhK05pyDRPZRpOLAeiRXyg6lPzq1O4vldu5w5pLeFlwoW5cZJ5L+epJUzpM5ChaHvGOz\0D\0A9bGTXOBut9Dq+WIyiET7vycotjCVXRIouZW+j1MY5aIYFuJWpLIsEPUdN6b4t/bQWVyJ98LVtZR0\0D\0A0dX+G7bw5tYee9I8y6jj9RjzIR9u701oBnstXW5DiabA+aC/gh7PU3+06yzbXfZqfUAkBXKJOAGT\0D\0Ay3HCOV0GEfZvePg3DTmEJwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\0D\0A/zAdBgNVHQ4EFgQUajn6QiL35okATV59M4PLuG53hq8wHwYDVR0jBBgwFoAUajn6QiL35okATV59\0D\0AM4PLuG53hq8wDQYJKoZIhvcNAQENBQADggIBAJjLq0A85TMCl38th6aP1F5Kr7ge57tx+4BkJamz\0D\0AGj5oXScmp7oq4fBXgwpkTx4idBvpkF/wrM//T2h6OKQQbA2xx6R3gBi2oihEdqc0nXGEL8pZ0keI\0D\0AmUEiyTCYYW49qKgFbdEfwFFEVn8nNQLdXpgKQuswv42hm1GqO+qTRmTFAHneIWv2V6CG1wZy7HBG\0D\0AS4tz3aAhdT7cHcCP009zHIXZ/n9iyJVvttN7jLpTwm+bREx50B1ws9efAvSyB7DH5fitIw6mVskp\0D\0AEndI2S9G/Tvw/HRwkqWOOAgfZDC2t0v7NqwQjqBSM2OdAzVWxWm9xiNaJ5T2pBL4LTM8oValX9YZ\0D\0A6e18CL13zSdkzJTaTkZQh+D5wVOAHrut+0dSixv9ovneDiK3PTNZbNTe9ZUGMg1RGUFcPk8G97kr\0D\0AgCf2o6p6fAbhQ8MTOWIaNr3gKC6UAuQpLmBVrkA9sHSSXvAgZJY/X0VdiLWK2gKgW0VU3jg9CcCo\0D\0ASmVGFvyqv1ROTVu+OEO3KMqLM6oaJbolXCkvW0pujOotnCr2BXbgd5eAiN1nE28daCSLT7d0geX0\0D\0AYJ96Vdc+N9oWaz53rK4YcJUIeSkDiv7BO7M/Gg+kO14fWKGVyasvc0rQLW6aWQ9VGHgtPFGml4vm\0D\0Au7JwqkwR3v98KzfUetF3NI/n+UL3PIEMS1IK\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AOpenTrust Root CA G3\0D\0A====================\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICITCCAaagAwIBAgISESDm+Ez8JLC+BUCs2oMbNGA/MAoGCCqGSM49BAMDMEAxCzAJBgNVBAYT\0D\0AAkZSMRIwEAYDVQQKDAlPcGVuVHJ1c3QxHTAbBgNVBAMMFE9wZW5UcnVzdCBSb290IENBIEczMB4X\0D\0ADTE0MDUyNjAwMDAwMFoXDTM4MDExNTAwMDAwMFowQDELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCU9w\0D\0AZW5UcnVzdDEdMBsGA1UEAwwUT3BlblRydXN0IFJvb3QgQ0EgRzMwdjAQBgcqhkjOPQIBBgUrgQQA\0D\0AIgNiAARK7liuTcpm3gY6oxH84Bjwbhy6LTAMidnW7ptzg6kjFYwvWYpa3RTqnVkrQ7cG7DK2uu5B\0D\0Ata1doYXM6h0UZqNnfkbilPPntlahFVmhTzeXuSIevRHr9LIfXsMUmuXZl5mjYzBhMA4GA1UdDwEB\0D\0A/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRHd8MUi2I5DMlv4VBN0BBY3JWIbTAf\0D\0ABgNVHSMEGDAWgBRHd8MUi2I5DMlv4VBN0BBY3JWIbTAKBggqhkjOPQQDAwNpADBmAjEAj6jcnboM\0D\0ABBf6Fek9LykBl7+BFjNAk2z8+e2AcG+qj9uEwov1NcoG3GRvaBbhj5G5AjEA2Euly8LQCGzpGPta\0D\0A3U1fJAuwACEl74+nBCZx4nxp5V2a+EEfOzmTk51V6s2N8fvB\0D\0A-----END CERTIFICATE-----\0D\0A\0D\0AISRG Root X1\0D\0A============\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAwTzELMAkGA1UE\0D\0ABhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2VhcmNoIEdyb3VwMRUwEwYDVQQD\0D\0AEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4WhcNMzUwNjA0MTEwNDM4WjBPMQswCQYDVQQG\0D\0AEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxFTATBgNVBAMT\0D\0ADElTUkcgUm9vdCBYMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK3oJHP0FDfzm54r\0D\0AVygch77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj/RQSa78f0uoxmyF+0TM8ukj1\0D\0A3Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7iS4+3mX6UA5/TR5d8mUgjU+g4rk8K\0D\0Ab4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sWT8KOEUt+zwvo/7V3LvSye0rgTBIlDHCN\0D\0AAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyHB5T0Y3HsLuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ\0D\0A4Q7e2RCOFvu396j3x+UCB5iPNgiV5+I3lg02dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf\0D\0A1b0SHzUvKBds0pjBqAlkd25HN7rOrFleaJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWnOlFu\0D\0AhjuefXKnEgV4We0+UXgVCwOPjdAvBbI+e0ocS3MFEvzG6uBQE3xDk3SzynTnjh8BCNAw1FtxNrQH\0D\0AusEwMFxIt4I7mKZ9YIqioymCzLq9gwQbooMDQaHWBfEbwrbwqHyGO0aoSCqI3Haadr8faqU9GY/r\0D\0AOPNk3sgrDQoo//fb4hVC1CLQJ13hef4Y53CIrU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4G\0D\0AA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY\0D\0A9umbbjANBgkqhkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZL\0D\0AubhzEFnTIZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ3BebYhtF8GaV\0D\0A0nxvwuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KKNFtY2PwByVS5uCbMiogziUwt\0D\0AhDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5ORAzI4JMPJ+GslWYHb4phowim57iaztXOoJw\0D\0ATdwJx4nLCgdNbOhdjsnvzqvHu7UrTkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIuvtd7u+Nx\0D\0Ae5AW0wdeRlN8NwdCjNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1NbdWhscdCb+ZA\0D\0AJzVcoyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4kqKOJ2qxq4RgqsahD\0D\0AYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPAmRGunUHBcnWEvgJBQl9n\0D\0AJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57demyPxgcYxn/eR44/KJ4EBs+lVDR3veyJ\0D\0Am+kXQ99b21/+jh5Xos1AnX5iItreGCc=\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 1
@.str.8.32 = private unnamed_addr constant [52 x i8] c"[%s] %s:%d:   mbedtls_x509_crt_parse returned -%#x\0A\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"[%s] %s:%d:   mbedtls_pk_parse_key returned -%#x\0A\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"[%s] %s:%d: connecting to %s:%s:%s...\0A\00", align 1
@.str.11.33 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.13 = private unnamed_addr constant [48 x i8] c"[%s] %s:%d:  mbedtls_net_connect returned -%#x\0A\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"[%s] %s:%d:  net_set_(non)block() returned -%#x\0A\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"[%s] %s:%d: Setting up the SSL/TLS structure...\0A\00", align 1
@.str.16.34 = private unnamed_addr constant [55 x i8] c"[%s] %s:%d: mbedtls_ssl_config_defaults returned -%#x\0A\00", align 1
@.str.17 = private unnamed_addr constant [46 x i8] c"  mbedtls_ssl_conf_max_frag_len returned %d\0A\0A\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"  mbedtls_ssl_conf_alpn_protocols returned %d\0A\0A\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"  mbedtls_ssl_conf_own_cert returned %d\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"  mbedtls_ssl_conf_psk returned %d\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"[%s] %s:%d: mbedtls_ssl_setup returned -%#x\0A\00", align 1
@.str.23 = private unnamed_addr constant [52 x i8] c"[%s] %s:%d: mbedtls_ssl_set_hostname returned %d\0A\0A\0A\00", align 1
@.str.24.35 = private unnamed_addr constant [46 x i8] c"[%s] %s:%d: Performing the SSL/TLS handshake\0A\00", align 1
@.str.25 = private unnamed_addr constant [49 x i8] c"[%s] %s:%d: mbedtls_ssl_handshake returned -%#x\0A\00", align 1
@.str.26 = private unnamed_addr constant [214 x i8] c"[%s] %s:%d: Unable to verify the server's certificate. Either it is invalid,or you didn't set ca_file or ca_path to an appropriate value.Alternatively, you may want to use auth_mode=optional for testing purposes.\0A\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"[%s] %s:%d: Hand shake succeeds: [%s, %s]\0A\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"[%s] %s:%d: Record expansion is [%d]\0A\00", align 1
@.str.29 = private unnamed_addr constant [57 x i8] c"[%s] %s:%d: Record expansion is [unknown (compression)]\0A\00", align 1
@.str.30 = private unnamed_addr constant [45 x i8] c"[%s] %s:%d: Maximum fragment length is [%u]\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"    [ Application Layer Protocol is %s ]\0A\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.33 = private unnamed_addr constant [45 x i8] c"[%s] %s:%d:   . Saving session for reuse...\0A\00", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"[%s] %s:%d: mbedtls_ssl_get_session returned -%#x\0A\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"[%s] %s:%d: ok\0A\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"[%s] %s:%d: Verifying peer X.509 certificate...\0A\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c" failed\0A\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"  ! \00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"[%s] %s:%d: X.509 Verifies\0A\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"[%s] %s:%d: Peer certificate information\0A\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"|-\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"  . Performing renegotiation...\00", align 1
@.str.44 = private unnamed_addr constant [40 x i8] c"  mbedtls_ssl_renegotiate returned %d\0A\0A\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c" ok\0A\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"GET %s\0D\0A\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"  mbedtls_ssl_write returned -%#x\00", align 1
@.str.50 = private unnamed_addr constant [34 x i8] c"  mbedtls_ssl_write returned %d\0A\0A\00", align 1
@.str.51 = private unnamed_addr constant [46 x i8] c"[%s] %s:%d: %d bytes written in %d fragments\0A\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"[%s] %s:%d: %s\0A\00", align 1
@.str.53 = private unnamed_addr constant [63 x i8] c"/home/yang/sgxTestcases/mbedtls-SGX/example/enclave/s_client.c\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"bytes written: \00", align 1
@.str.55 = private unnamed_addr constant [35 x i8] c" connection was closed gracefully\0A\00", align 1
@.str.56 = private unnamed_addr constant [31 x i8] c" connection was reset by peer\0A\00", align 1
@.str.57 = private unnamed_addr constant [34 x i8] c" mbedtls_ssl_read returned -0x%x\0A\00", align 1
@.str.58 = private unnamed_addr constant [41 x i8] c"[%s] %s:%d: get %d bytes ending with %x\0A\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"response\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c" timeout\0A\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c" %d bytes read\0A\0A%s\00", align 1
@.str.62 = private unnamed_addr constant [44 x i8] c"  . Restarting connection from same port...\00", align 1
@.str.63 = private unnamed_addr constant [42 x i8] c"  mbedtls_ssl_session_reset returned -%#x\00", align 1
@.str.64 = private unnamed_addr constant [38 x i8] c"  mbedtls_ssl_handshake returned -%#x\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"[%s] %s:%d: closed %s:%s\0A\00", align 1
@.str.66 = private unnamed_addr constant [39 x i8] c"  . Reconnecting with saved session...\00", align 1
@.str.67 = private unnamed_addr constant [41 x i8] c"  mbedtls_ssl_conf_session returned %d\0A\0A\00", align 1
@.str.68 = private unnamed_addr constant [36 x i8] c"  mbedtls_net_connect returned -%#x\00", align 1
@.str.69 = private unnamed_addr constant [37 x i8] c"  net_set_(non)block() returned -%#x\00", align 1
@.str.70 = private unnamed_addr constant [42 x i8] c"[%s] %s:%d: Last error was: -0x%X - %s\0A\0A\0A\00", align 1
@.str.71 = private unnamed_addr constant [2370 x i8] c"\0A usage: ssl_client2 param=<>...\0A\0A acceptable parameters:\0A    server_name=%%s      default: localhost\0A    server_addr=%%s      default: given by name\0A    server_port=%%d      default: 4433\0A    request_page=%%s     default: \22.\22\0A    request_size=%%d     default: about 34 (basic request)\0A                        (minimum: 0, max: 16384)\0A    debug_level=%%d      default: 0 (disabled)\0A    nbio=%%d             default: 0 (blocking I/O)\0A                        options: 1 (non-blocking), 2 (added delays)\0A    read_timeout=%%d     default: 0 ms (no timeout)\0A    max_resend=%%d       default: 0 (no resend on timeout)\0A\0A    dtls=%%d             default: 0 (TLS)\0A    hs_timeout=%%d-%%d    default: (library default: 1000-60000)\0A                        range of DTLS handshake timeouts in millisecs\0A\0A    auth_mode=%%s        default: (library default: none)\0A                        options: none, optional, required\0A    No file operations available (MBEDTLS_FS_IO not defined)\0A\0A    psk=%%s              default: \22\22 (in hex, without 0x)\0A    psk_identity=%%s     default: \22Client_identity\22\0A\0A    allow_legacy=%%d     default: (library default: no)\0A    renegotiation=%%d    default: 0 (disabled)\0A    renegotiate=%%d      default: 0 (disabled)\0A    exchanges=%%d        default: 1\0A    reconnect=%%d        default: 0 (disabled)\0A    reco_delay=%%d       default: 0 seconds\0A    reconnect_hard=%%d   default: 0 (disabled)\0A    tickets=%%d          default: 1 (enabled)\0A    max_frag_len=%%d     default: 16384 (tls default)\0A                        options: 512, 1024, 2048, 4096\0A    trunc_hmac=%%d       default: library default\0A    alpn=%%s             default: \22\22 (disabled)\0A                        example: spdy/1,http/1.1\0A    fallback=0/1        default: (library default: off)\0A    extended_ms=0/1     default: (library default: on)\0A    etm=0/1             default: (library default: on)\0A    recsplit=0/1        default: (library default: on)\0A    dhmlen=%%d           default: (library default: 1024 bits)\0A\0A    arc4=%%d             default: (library default: 0)\0A    min_version=%%s      default: (library default: tls1)\0A    max_version=%%s      default: (library default: tls1_2)\0A    force_version=%%s    default: \22\22 (none)\0A                        options: ssl3, tls1, tls1_1, tls1_2, dtls1, dtls1_2\0A\0A    force_ciphersuite=<name>    default: all enabled\0A acceptable ciphersuite names:\0A\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c" %-42s\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.75 = private unnamed_addr constant [35 x i8] c"\0AVerify requested for (Depth %d):\0A\00", align 1
@.str.76 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"  This certificate has no flags\0A\00", align 1
@.str.79 = private unnamed_addr constant [17 x i8] c"%s:%04d: |%d| %s\00", align 1
@my_send.first_try = internal global i32 1, align 4, !dbg !2328
@my_recv.first_try = internal global i32 1, align 4, !dbg !2414
@received_sigterm = internal global i32 0, align 4, !dbg !2417
@listen_fd = internal global %struct.mbedtls_net_context zeroinitializer, align 4, !dbg !2498
@client_fd = internal global %struct.mbedtls_net_context zeroinitializer, align 4, !dbg !2504
@.str.80 = private unnamed_addr constant [12 x i8] c"ssl_server2\00", align 1
@.str.1.81 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@opt = hidden global %struct.options.44 zeroinitializer, align 8, !dbg !2449
@.str.2.82 = private unnamed_addr constant [5 x i8] c"4433\00", align 1
@.str.3.83 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4.84 = private unnamed_addr constant [16 x i8] c"Client_identity\00", align 1
@.str.5.85 = private unnamed_addr constant [59 x i8] c"forced ciphersuite not allowed with this protocol version\0A\00", align 1
@.str.6.86 = private unnamed_addr constant [42 x i8] c"forced RC4 ciphersuite with RC4 disabled\0A\00", align 1
@.str.7.87 = private unnamed_addr constant [35 x i8] c"too few values for version_suites\0A\00", align 1
@.str.8.88 = private unnamed_addr constant [27 x i8] c"unknown ciphersuite: '%s'\0A\00", align 1
@.str.9.89 = private unnamed_addr constant [30 x i8] c"pre-shared key not valid hex\0A\00", align 1
@.str.10.90 = private unnamed_addr constant [17 x i8] c"psk_list invalid\00", align 1
@.str.11.91 = private unnamed_addr constant [44 x i8] c"\0A  . Seeding the random number generator...\00", align 1
@.str.12.92 = private unnamed_addr constant [50 x i8] c" failed\0A  ! mbedtls_ctr_drbg_seed returned -0x%x\0A\00", align 1
@.str.13.93 = private unnamed_addr constant [5 x i8] c" ok\0A\00", align 1
@.str.14.94 = private unnamed_addr constant [40 x i8] c"  . Loading the CA root certificate ...\00", align 1
@.str.15.95 = private unnamed_addr constant [53 x i8] c" failed\0A  !  mbedtls_x509_crt_parse returned -0x%x\0A\0A\00", align 1
@.str.16.96 = private unnamed_addr constant [18 x i8] c" ok (%d skipped)\0A\00", align 1
@log_run_level = hidden global i8 5, align 1, !dbg !2512
@.str.17.97 = private unnamed_addr constant [53 x i8] c"[%s] %s:%d:   . Loading the server cert. and key...\0A\00", align 1
@log_level_strings = hidden global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0)], align 16, !dbg !2517
@__FUNCTION__.ssl_server = private unnamed_addr constant [11 x i8] c"ssl_server\00", align 1
@.str.18.98 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.19.99 = private unnamed_addr constant [31 x i8] c"[%s] %s:%d: loading RSA certs\0A\00", align 1
@.str.20.100 = private unnamed_addr constant [51 x i8] c" failed\0A  !  mbedtls_pk_parse_key returned -0x%x\0A\0A\00", align 1
@.str.21.101 = private unnamed_addr constant [46 x i8] c" failed\0A  !  x509_crt_parse2 returned -0x%x\0A\0A\00", align 1
@.str.22.102 = private unnamed_addr constant [44 x i8] c" failed\0A  !  pk_parse_key2 returned -0x%x\0A\0A\00", align 1
@.str.23.106 = private unnamed_addr constant [28 x i8] c"  . Bind on %s://%s:%s/ ...\00", align 1
@.str.24.103 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str.25.104 = private unnamed_addr constant [4 x i8] c"udp\00", align 1
@.str.26.105 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.27.107 = private unnamed_addr constant [46 x i8] c" failed\0A  ! mbedtls_net_bind returned -0x%x\0A\0A\00", align 1
@.str.28.108 = private unnamed_addr constant [40 x i8] c"  . Setting up the SSL/TLS structure...\00", align 1
@.str.29.109 = private unnamed_addr constant [57 x i8] c" failed\0A  ! mbedtls_ssl_config_defaults returned -0x%x\0A\0A\00", align 1
@.str.30.110 = private unnamed_addr constant [56 x i8] c" failed\0A  ! mbedtls_ssl_conf_max_frag_len returned %d\0A\0A\00", align 1
@.str.31.111 = private unnamed_addr constant [58 x i8] c" failed\0A  ! mbedtls_ssl_conf_alpn_protocols returned %d\0A\0A\00", align 1
@.str.32.113 = private unnamed_addr constant [51 x i8] c" failed\0A  ! mbedtls_ssl_ticket_setup returned %d\0A\0A\00", align 1
@.str.33.114 = private unnamed_addr constant [51 x i8] c" failed\0A  ! mbedtls_ssl_cookie_setup returned %d\0A\0A\00", align 1
@.str.34.115 = private unnamed_addr constant [52 x i8] c" failed\0A  ! mbedtls_ssl_conf_own_cert returned %d\0A\0A\00", align 1
@.str.35.116 = private unnamed_addr constant [51 x i8] c"  failed\0A  mbedtls_ssl_conf_psk returned -0x%04X\0A\0A\00", align 1
@.str.36.117 = private unnamed_addr constant [56 x i8] c"  failed\0A  mbedtls_ssl_conf_dh_param returned -0x%04X\0A\0A\00", align 1
@.str.37.118 = private unnamed_addr constant [47 x i8] c" failed\0A  ! mbedtls_ssl_setup returned -0x%x\0A\0A\00", align 1
@.str.38.121 = private unnamed_addr constant [25 x i8] c" interrupted by SIGTERM\0A\00", align 1
@.str.39.122 = private unnamed_addr constant [50 x i8] c"  ! Client initiated reconnection from same port\0A\00", align 1
@.str.40.123 = private unnamed_addr constant [26 x i8] c"Last error was: %d - %s\0A\0A\00", align 1
@.str.41.124 = private unnamed_addr constant [40 x i8] c"  . Waiting for a remote connection ...\00", align 1
@.str.42.125 = private unnamed_addr constant [63 x i8] c" mbedtls_net_accept_ocall() returns invalid client ip length.\0A\00", align 1
@.str.43.126 = private unnamed_addr constant [24 x i8] c" interrupted by signal\0A\00", align 1
@.str.44.127 = private unnamed_addr constant [48 x i8] c" failed\0A  ! mbedtls_net_accept returned -0x%x\0A\0A\00", align 1
@.str.45.128 = private unnamed_addr constant [50 x i8] c" failed\0A  ! net_set_(non)block() returned -0x%x\0A\0A\00", align 1
@.str.46.129 = private unnamed_addr constant [67 x i8] c" failed\0A  ! mbedtls_ssl_set_client_transport_id() returned -0x%x\0A\0A\00", align 1
@.str.47.130 = private unnamed_addr constant [40 x i8] c"  . Performing the SSL/TLS handshake...\00", align 1
@.str.48.131 = private unnamed_addr constant [31 x i8] c" hello verification requested\0A\00", align 1
@.str.49.132 = private unnamed_addr constant [51 x i8] c" failed\0A  ! mbedtls_ssl_handshake returned -0x%x\0A\0A\00", align 1
@.str.50.133 = private unnamed_addr constant [5 x i8] c"  ! \00", align 1
@.str.51.134 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.52.135 = private unnamed_addr constant [54 x i8] c" ok\0A    [ Protocol is %s ]\0A    [ Ciphersuite is %s ]\0A\00", align 1
@.str.53.136 = private unnamed_addr constant [32 x i8] c"    [ Record expansion is %d ]\0A\00", align 1
@.str.54.137 = private unnamed_addr constant [51 x i8] c"    [ Record expansion is unknown (compression) ]\0A\00", align 1
@.str.55.138 = private unnamed_addr constant [39 x i8] c"    [ Maximum fragment length is %u ]\0A\00", align 1
@.str.56.140 = private unnamed_addr constant [42 x i8] c"    [ Application Layer Protocol is %s ]\0A\00", align 1
@.str.57.139 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.58.141 = private unnamed_addr constant [40 x i8] c"  . Verifying peer X.509 certificate...\00", align 1
@.str.59.142 = private unnamed_addr constant [9 x i8] c" failed\0A\00", align 1
@.str.60.143 = private unnamed_addr constant [41 x i8] c"  . Peer certificate information    ...\0A\00", align 1
@.str.61.144 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.62.145 = private unnamed_addr constant [22 x i8] c"  < Read from client:\00", align 1
@.str.63.146 = private unnamed_addr constant [35 x i8] c" connection was closed gracefully\0A\00", align 1
@.str.64.147 = private unnamed_addr constant [31 x i8] c" connection was reset by peer\0A\00", align 1
@.str.65.148 = private unnamed_addr constant [34 x i8] c" mbedtls_ssl_read returned -0x%x\0A\00", align 1
@.str.66.149 = private unnamed_addr constant [20 x i8] c" %d bytes read\0A\0A%s\0A\00", align 1
@.str.67.150 = private unnamed_addr constant [30 x i8] c"  ! memory allocation failed\0A\00", align 1
@.str.68.151 = private unnamed_addr constant [44 x i8] c"  ! mbedtls_ssl_read failed on cached data\0A\00", align 1
@.str.69.152 = private unnamed_addr constant [30 x i8] c" %u bytes read (%u + %u)\0A\0A%s\0A\00", align 1
@.str.70.153 = private unnamed_addr constant [19 x i8] c" %d bytes read\0A\0A%s\00", align 1
@.str.71.154 = private unnamed_addr constant [32 x i8] c"  . Requestion renegotiation...\00", align 1
@.str.72.155 = private unnamed_addr constant [50 x i8] c" failed\0A  ! mbedtls_ssl_renegotiate returned %d\0A\0A\00", align 1
@.str.73.156 = private unnamed_addr constant [21 x i8] c"  > Write to client:\00", align 1
@.str.74.157 = private unnamed_addr constant [116 x i8] c"HTTP/1.0 200 OK\0D\0AContent-Type: text/html\0D\0A\0D\0A<h2>mbed TLS Test Server</h2>\0D\0A<p>Successful connection using: %s</p>\0D\0A\00", align 1
@.str.75.158 = private unnamed_addr constant [41 x i8] c" failed\0A  ! peer closed the connection\0A\0A\00", align 1
@.str.76.159 = private unnamed_addr constant [44 x i8] c" failed\0A  ! mbedtls_ssl_write returned %d\0A\0A\00", align 1
@.str.77.160 = private unnamed_addr constant [39 x i8] c" %d bytes written in %d fragments\0A\0A%s\0A\00", align 1
@.str.78.161 = private unnamed_addr constant [30 x i8] c"  . Closing the connection...\00", align 1
@.str.79.162 = private unnamed_addr constant [7 x i8] c" done\0A\00", align 1
@.str.80.163 = private unnamed_addr constant [2376 x i8] c"\0A usage: ssl_server2 param=<>...\0A\0A acceptable parameters:\0A    server_addr=%%d      default: (all interfaces)\0A    server_port=%%d      default: 4433\0A    debug_level=%%d      default: 0 (disabled)\0A    nbio=%%d             default: 0 (blocking I/O)\0A                        options: 1 (non-blocking), 2 (added delays)\0A    read_timeout=%%d     default: 0 ms (no timeout)\0A\0A    dtls=%%d             default: 0 (TLS)\0A    hs_timeout=%%d-%%d    default: (library default: 1000-60000)\0A                        range of DTLS handshake timeouts in millisecs\0A    cookies=0/1/-1      default: 1 (enabled)\0A                        0: disabled, -1: library default (broken)\0A    anti_replay=0/1     default: (library default: enabled)\0A    badmac_limit=%%d     default: (library default: disabled)\0A\0A    auth_mode=%%s        default: (library default: none)\0A                        options: none, optional, required\0A\0A    No file operations available (MBEDTLS_FS_IO not defined)\0A\0A\0A    psk=%%s              default: \22\22 (in hex, without 0x)\0A    psk_identity=%%s     default: \22Client_identity\22\0A\0A    allow_legacy=%%d     default: (library default: no)\0A    renegotiation=%%d    default: 0 (disabled)\0A    renegotiate=%%d      default: 0 (disabled)\0A    renego_delay=%%d     default: -2 (library default)\0A    renego_period=%%d    default: (library default)\0A    exchanges=%%d        default: 1\0A\0A    tickets=%%d          default: 1 (enabled)\0A    ticket_timeout=%%d   default: 86400 (one day)\0A    max_frag_len=%%d     default: 16384 (tls default)\0A                        options: 512, 1024, 2048, 4096\0A    trunc_hmac=%%d       default: library default\0A    alpn=%%s             default: \22\22 (disabled)\0A                        example: spdy/1,http/1.1\0A    extended_ms=0/1     default: (library default: on)\0A    etm=0/1             default: (library default: on)\0A\0A    arc4=%%d             default: (library default: 0)\0A    min_version=%%s      default: (library default: tls1)\0A    max_version=%%s      default: (library default: tls1_2)\0A    force_version=%%s    default: \22\22 (none)\0A                        options: ssl3, tls1, tls1_1, tls1_2, dtls1, dtls1_2\0A\0A    version_suites=a,b,c,d      per-version ciphersuites\0A                                in order from ssl3 to tls1_2\0A                                default: all enabled\0A    force_ciphersuite=<name>    default: all enabled\0A acceptable ciphersuite names:\0A\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c" %-42s\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"Last error was: -0x%X - %s\0A\0A\00", align 1
@.str.85 = private unnamed_addr constant [19 x i8] c"  . Cleaning up...\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c" done.\0A\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"%s:%04d: |%d| %s\00", align 1
@my_send.first_try.165 = internal global i32 1, align 4, !dbg !2506
@my_recv.first_try.164 = internal global i32 1, align 4, !dbg !2509
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_ssl_conn_hdlr.cpp, i8* null }]
@.str.169 = private unnamed_addr constant [41 x i8] c"\0A  . Loading the server cert. and key...\00", align 1
@.str.1.170 = private unnamed_addr constant [50 x i8] c" failed\0A  !  mbedtls_x509_crt_parse returned %d\0A\0A\00", align 1
@.str.2.171 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTISt13runtime_error = external constant i8*
@.str.3.172 = private unnamed_addr constant [48 x i8] c" failed\0A  !  mbedtls_pk_parse_key returned %d\0A\0A\00", align 1
@.str.4.173 = private unnamed_addr constant [5 x i8] c" ok\0A\00", align 1
@.str.5.174 = private unnamed_addr constant [43 x i8] c"  . Seeding the random number generator...\00", align 1
@_ZN20TLSConnectionHandler4persE = hidden global %"class.std::__1::basic_string" zeroinitializer, align 8, !dbg !2521
@.str.6.175 = private unnamed_addr constant [49 x i8] c" failed: mbedtls_ctr_drbg_seed returned -0x%04x\0A\00", align 1
@.str.7.176 = private unnamed_addr constant [32 x i8] c"  . Setting up the SSL data....\00", align 1
@.str.8.177 = private unnamed_addr constant [55 x i8] c" failed: mbedtls_ssl_config_defaults returned -0x%04x\0A\00", align 1
@.str.9.178 = private unnamed_addr constant [52 x i8] c" failed\0A  ! mbedtls_ssl_conf_own_cert returned %d\0A\0A\00", align 1
@_ZN20TLSConnectionHandler5mutexE = hidden global %struct._sgx_thread_mutex_t { i64 0, i32 1, i32 0, i64 0, %struct._sgx_thread_queue_t zeroinitializer }, align 8, !dbg !2533
@.str.10.182 = private unnamed_addr constant [37 x i8] c"  [ #%ld ]  Setting up SSL/TLS data\0A\00", align 1
@.str.11.183 = private unnamed_addr constant [56 x i8] c"  [ #%ld ]  failed: mbedtls_ssl_setup returned -0x%04x\0A\00", align 1
@.str.12.184 = private unnamed_addr constant [17 x i8] c"client_fd is %d\0A\00", align 1
@.str.13.185 = private unnamed_addr constant [46 x i8] c"  [ #%ld ]  Performing the SSL/TLS handshake\0A\00", align 1
@.str.14.186 = private unnamed_addr constant [60 x i8] c"  [ #%ld ]  failed: mbedtls_ssl_handshake returned -0x%04x\0A\00", align 1
@.str.15.187 = private unnamed_addr constant [16 x i8] c"  [ #%ld ]  ok\0A\00", align 1
@.str.16.188 = private unnamed_addr constant [32 x i8] c"  [ #%ld ]  < Read from client\0A\00", align 1
@.str.17.189 = private unnamed_addr constant [46 x i8] c"  [ #%ld ]  connection was closed gracefully\0A\00", align 1
@.str.18.190 = private unnamed_addr constant [42 x i8] c"  [ #%ld ]  connection was reset by peer\0A\00", align 1
@.str.19.191 = private unnamed_addr constant [47 x i8] c"  [ #%ld ]  mbedtls_ssl_read returned -0x%04x\0A\00", align 1
@.str.20.192 = private unnamed_addr constant [42 x i8] c"  [ #%ld ]  %d bytes read\0A=====\0A%s\0A=====\0A\00", align 1
@.str.21.193 = private unnamed_addr constant [32 x i8] c"  [ #%ld ]  > Write to client:\0A\00", align 1
@.str.22.194 = private unnamed_addr constant [116 x i8] c"HTTP/1.0 200 OK\0D\0AContent-Type: text/html\0D\0A\0D\0A<h2>mbed TLS Test Server</h2>\0D\0A<p>Successful connection using: %s</p>\0D\0A\00", align 1
@.str.23.195 = private unnamed_addr constant [48 x i8] c"  [ #%ld ]  failed: peer closed the connection\0A\00", align 1
@.str.24.196 = private unnamed_addr constant [56 x i8] c"  [ #%ld ]  failed: mbedtls_ssl_write returned -0x%04x\0A\00", align 1
@.str.25.197 = private unnamed_addr constant [45 x i8] c"  [ #%ld ]  %d bytes written\0A=====\0A%s\0A=====\0A\00", align 1
@.str.26.198 = private unnamed_addr constant [40 x i8] c"  [ #%ld ]  . Closing the connection...\00", align 1
@.str.27.199 = private unnamed_addr constant [63 x i8] c"  [ #%ld ]  failed: mbedtls_ssl_close_notify returned -0x%04x\0A\00", align 1
@.str.28.200 = private unnamed_addr constant [43 x i8] c"  [ #%ld ]  Last error was: -0x%04x - %s\0A\0A\00", align 1
@.str.29.166 = private unnamed_addr constant [19 x i8] c"ssl_pthread_server\00", align 1
@__dso_handle = external hidden global i8
@.str.30.179 = private unnamed_addr constant [21 x i8] c"%s:%04d: [ #%ld ] %s\00", align 1
@.str.31.167 = private unnamed_addr constant [40 x i8] c"/opt/intel/sgxsdk/include/libcxx/string\00", align 1
@__func__._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2EPKc = private unnamed_addr constant [13 x i8] c"basic_string\00", align 1
@.str.32.168 = private unnamed_addr constant [15 x i8] c"__s != nullptr\00", align 1
@mbedtls_test_ca_crt_ec = hidden constant [883 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIICUjCCAdegAwIBAgIJAMFD4n5iQ8zoMAoGCCqGSM49BAMCMD4xCzAJBgNVBAYT\0D\0AAk5MMREwDwYDVQQKEwhQb2xhclNTTDEcMBoGA1UEAxMTUG9sYXJzc2wgVGVzdCBF\0D\0AQyBDQTAeFw0xMzA5MjQxNTQ5NDhaFw0yMzA5MjIxNTQ5NDhaMD4xCzAJBgNVBAYT\0D\0AAk5MMREwDwYDVQQKEwhQb2xhclNTTDEcMBoGA1UEAxMTUG9sYXJzc2wgVGVzdCBF\0D\0AQyBDQTB2MBAGByqGSM49AgEGBSuBBAAiA2IABMPaKzRBN1gvh1b+/Im6KUNLTuBu\0D\0Aww5XUzM5WNRStJGVOQsj318XJGJI/BqVKc4sLYfCiFKAr9ZqqyHduNMcbli4yuiy\0D\0AaY7zQa0pw7RfdadHb9UZKVVpmlM7ILRmFmAzHqOBoDCBnTAdBgNVHQ4EFgQUnW0g\0D\0AJEkBPyvLeLUZvH4kydv7NnwwbgYDVR0jBGcwZYAUnW0gJEkBPyvLeLUZvH4kydv7\0D\0ANnyhQqRAMD4xCzAJBgNVBAYTAk5MMREwDwYDVQQKEwhQb2xhclNTTDEcMBoGA1UE\0D\0AAxMTUG9sYXJzc2wgVGVzdCBFQyBDQYIJAMFD4n5iQ8zoMAwGA1UdEwQFMAMBAf8w\0D\0ACgYIKoZIzj0EAwIDaQAwZgIxAMO0YnNWKJUAfXgSJtJxexn4ipg+kv4znuR50v56\0D\0At4d0PCu412mUC6Nnd7izvtE2MgIxAP1nnJQjZ8BWukszFQDG48wxCCyci9qpdSMv\0D\0AuCjn8pwUOkABXK8Mss90fzCfCEOtIA==\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2691
@mbedtls_test_ca_crt_ec_len = hidden constant i64 883, align 8, !dbg !2696
@mbedtls_test_ca_key_ec = hidden constant [362 x i8] c"-----BEGIN EC PRIVATE KEY-----\0D\0AProc-Type: 4,ENCRYPTED\0D\0ADEK-Info: DES-EDE3-CBC,307EAB469933D64E\0D\0A\0D\0AIxbrRmKcAzctJqPdTQLA4SWyBYYGYJVkYEna+F7Pa5t5Yg/gKADrFKcm6B72e7DG\0D\0AihExtZI648s0zdYw6qSJ74vrPSuWDe5qm93BqsfVH9svtCzWHW0pm1p0KTBCFfUq\0D\0AUsuWTITwJImcnlAs1gaRZ3sAWm7cOUidL0fo2G0fYUFNcYoCSLffCFTEHBuPnagb\0D\0Aa77x/sY1Bvii8S9/XhDTb6pTMx06wzrm\0D\0A-----END EC PRIVATE KEY-----\0D\0A\00", align 16, !dbg !2700
@mbedtls_test_ca_key_ec_len = hidden constant i64 362, align 8, !dbg !2705
@mbedtls_test_ca_pwd_ec = hidden constant [13 x i8] c"PolarSSLTest\00", align 1, !dbg !2707
@mbedtls_test_ca_pwd_ec_len = hidden constant i64 12, align 8, !dbg !2712
@mbedtls_test_srv_crt_ec = hidden constant [813 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIICHzCCAaWgAwIBAgIBCTAKBggqhkjOPQQDAjA+MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxHDAaBgNVBAMTE1BvbGFyc3NsIFRlc3QgRUMgQ0EwHhcN\0D\0AMTMwOTI0MTU1MjA0WhcNMjMwOTIyMTU1MjA0WjA0MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxEjAQBgNVBAMTCWxvY2FsaG9zdDBZMBMGByqGSM49AgEG\0D\0ACCqGSM49AwEHA0IABDfMVtl2CR5acj7HWS3/IG7ufPkGkXTQrRS192giWWKSTuUA\0D\0A2CMR/+ov0jRdXRa9iojCa3cNVc2KKg76Aci07f+jgZ0wgZowCQYDVR0TBAIwADAd\0D\0ABgNVHQ4EFgQUUGGlj9QH2deCAQzlZX+MY0anE74wbgYDVR0jBGcwZYAUnW0gJEkB\0D\0APyvLeLUZvH4kydv7NnyhQqRAMD4xCzAJBgNVBAYTAk5MMREwDwYDVQQKEwhQb2xh\0D\0AclNTTDEcMBoGA1UEAxMTUG9sYXJzc2wgVGVzdCBFQyBDQYIJAMFD4n5iQ8zoMAoG\0D\0ACCqGSM49BAMCA2gAMGUCMQCaLFzXptui5WQN8LlO3ddh1hMxx6tzgLvT03MTVK2S\0D\0AC12r0Lz3ri/moSEpNZWqPjkCMCE2f53GXcYLqyfyJR078c/xNSUU5+Xxl7VZ414V\0D\0AfGa5kHvHARBPc8YAIVIqDvHH1Q==\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2714
@mbedtls_test_srv_crt_ec_len = hidden constant i64 813, align 8, !dbg !2719
@mbedtls_test_srv_key_ec = hidden constant [233 x i8] c"-----BEGIN EC PRIVATE KEY-----\0D\0AMHcCAQEEIPEqEyB2AnCoPL/9U/YDHvdqXYbIogTywwyp6/UfDw6noAoGCCqGSM49\0D\0AAwEHoUQDQgAEN8xW2XYJHlpyPsdZLf8gbu58+QaRdNCtFLX3aCJZYpJO5QDYIxH/\0D\0A6i/SNF1dFr2KiMJrdw1VzYoqDvoByLTt/w==\0D\0A-----END EC PRIVATE KEY-----\0D\0A\00", align 16, !dbg !2721
@mbedtls_test_srv_key_ec_len = hidden constant i64 233, align 8, !dbg !2726
@mbedtls_test_cli_crt_ec = hidden constant [829 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIICLDCCAbKgAwIBAgIBDTAKBggqhkjOPQQDAjA+MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxHDAaBgNVBAMTE1BvbGFyc3NsIFRlc3QgRUMgQ0EwHhcN\0D\0AMTMwOTI0MTU1MjA0WhcNMjMwOTIyMTU1MjA0WjBBMQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxHzAdBgNVBAMTFlBvbGFyU1NMIFRlc3QgQ2xpZW50IDIw\0D\0AWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARX5a6xc9/TrLuTuIH/Eq7u5lOszlVT\0D\0A9jQOzC7jYyUL35ji81xgNpbA1RgUcOV/n9VLRRjlsGzVXPiWj4dwo+THo4GdMIGa\0D\0AMAkGA1UdEwQCMAAwHQYDVR0OBBYEFHoAX4Zk/OBd5REQO7LmO8QmP8/iMG4GA1Ud\0D\0AIwRnMGWAFJ1tICRJAT8ry3i1Gbx+JMnb+zZ8oUKkQDA+MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UEChMIUG9sYXJTU0wxHDAaBgNVBAMTE1BvbGFyc3NsIFRlc3QgRUMgQ0GC\0D\0ACQDBQ+J+YkPM6DAKBggqhkjOPQQDAgNoADBlAjBKZQ17IIOimbmoD/yN7o89u3BM\0D\0AlgOsjnhw3fIOoLIWy2WOGsk/LGF++DzvrRzuNiACMQCd8iem1XS4JK7haj8xocpU\0D\0ALwjQje5PDGHfd3h9tP38Qknu5bJqws0md2KOKHyeV0U=\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2728
@mbedtls_test_cli_crt_ec_len = hidden constant i64 829, align 8, !dbg !2733
@mbedtls_test_cli_key_ec = hidden constant [233 x i8] c"-----BEGIN EC PRIVATE KEY-----\0D\0AMHcCAQEEIPb3hmTxZ3/mZI3vyk7p3U3wBf+WIop6hDhkFzJhmLcqoAoGCCqGSM49\0D\0AAwEHoUQDQgAEV+WusXPf06y7k7iB/xKu7uZTrM5VU/Y0Dswu42MlC9+Y4vNcYDaW\0D\0AwNUYFHDlf5/VS0UY5bBs1Vz4lo+HcKPkxw==\0D\0A-----END EC PRIVATE KEY-----\0D\0A\00", align 16, !dbg !2735
@mbedtls_test_cli_key_ec_len = hidden constant i64 233, align 8, !dbg !2737
@mbedtls_test_ca_crt_rsa = hidden constant [1307 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIIDhzCCAm+gAwIBAgIBADANBgkqhkiG9w0BAQsFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTcwNTA0MTY1NzAxWhcNMjcwNTA1MTY1NzAxWjA7MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA3zf8F7vglp0/ht6WMn1EpRagzSHx\0D\0AmdTs6st8GFgIlKXsm8WL3xoemTiZhx57wI053zhdcHgH057Zk+i5clHFzqMwUqny\0D\0A50BwFMtEonILwuVA+T7lpg6z+exKY8C4KQB0nFc7qKUEkHHxvYPZP9al4jwqj+8n\0D\0AYMPGn8u67GB9t+aEMr5P+1gmIgNb1LTV+/Xjli5wwOQuvfwu7uJBVcA0Ln0kcmnL\0D\0AR7EUQIN9Z/SG9jGr8XmksrUuEvmEF/Bibyc+E1ixVA0hmnM3oTDPb5Lc9un8rNsu\0D\0AKNF+AksjoBXyOGVkCeoMbo4bF6BxyLObyavpw/LPh5aPgAIynplYb6LVAgMBAAGj\0D\0AgZUwgZIwHQYDVR0OBBYEFLRa5KWz3tJS9rnVppUP6z68x/3/MGMGA1UdIwRcMFqA\0D\0AFLRa5KWz3tJS9rnVppUP6z68x/3/oT+kPTA7MQswCQYDVQQGEwJOTDERMA8GA1UE\0D\0ACgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0GCAQAwDAYDVR0T\0D\0ABAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAHK/HHrTZMnnVMpde1io+voAtql7j\0D\0A4sRhLrjD7o3THtwRbDa2diCvpq0Sq23Ng2LMYoXsOxoL/RQK3iN7UKxV3MKPEr0w\0D\0AXQS+kKQqiT2bsfrjnWMVHZtUOMpm6FNqcdGm/Rss3vKda2lcKl8kUnq/ylc1+QbB\0D\0AG6A6tUvQcr2ZyWfVg+mM5XkhTrOOXus2OLikb4WwEtJTJRNE0f+yPODSUz0/vT57\0D\0AApH0CnB80bYJshYHPHHymOtleAB8KSYtqm75g/YNobjnjB6cm4HkW3OZRVIl6fYY\0D\0An20NRVA1Vjs6GAROr4NqW4k/+LofY9y0LLDE+p0oIEKXIsIvhPr39swxSA==\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2739
@mbedtls_test_ca_crt_rsa_len = hidden constant i64 1307, align 8, !dbg !2744
@mbedtls_test_ca_key_rsa = hidden constant [1782 x i8] c"-----BEGIN RSA PRIVATE KEY-----\0D\0AProc-Type: 4,ENCRYPTED\0D\0ADEK-Info: DES-EDE3-CBC,A8A95B05D5B7206B\0D\0A\0D\0A9Qd9GeArejl1GDVh2lLV1bHt0cPtfbh5h/5zVpAVaFpqtSPMrElp50Rntn9et+JA\0D\0A7VOyboR+Iy2t/HU4WvA687k3Bppe9GwKHjHhtl//8xFKwZr3Xb5yO5JUP8AUctQq\0D\0ANb8CLlZyuUC+52REAAthdWgsX+7dJO4yabzUcQ22Tp9JSD0hiL43BlkWYUNK3dAo\0D\0APZlmiptjnzVTjg1MxsBSydZinWOLBV8/JQgxSPo2yD4uEfig28qbvQ2wNIn0pnAb\0D\0AGxnSAOazkongEGfvcjIIs+LZN9gXFhxcOh6kc4Q/c99B7QWETwLLkYgZ+z1a9VY9\0D\0AgEU7CwCxYCD+h9hY6FPmsK0/lC4O7aeRKpYq00rPPxs6i7phiexg6ax6yTMmArQq\0D\0AQmK3TAsJm8V/J5AWpLEV6jAFgRGymGGHnof0DXzVWZidrcZJWTNuGEX90nB3ee2w\0D\0APXJEFWKoD3K3aFcSLdHYr3mLGxP7H9ThQai9VsycxZKS5kwvBKQ//YMrmFfwPk8x\0D\0AvTeY4KZMaUrveEel5tWZC94RSMKgxR6cyE1nBXyTQnDOGbfpNNgBKxyKbINWoOJU\0D\0AWJZAwlsQn+QzCDwpri7+sV1mS3gBE6UY7aQmnmiiaC2V3Hbphxct/en5QsfDOt1X\0D\0AJczSfpRWLlbPznZg8OQh/VgCMA58N5DjOzTIK7sJJ5r+94ZBTCpgAMbF588f0NTR\0D\0AKCe4yrxGJR7X02M4nvD4IwOlpsQ8xQxZtOSgXv4LkxvdU9XJJKWZ/XNKJeWztxSe\0D\0AZ1vdTc2YfsDBA2SEv33vxHx2g1vqtw8SjDRT2RaQSS0QuSaMJimdOX6mTOCBKk1J\0D\0A9Q5mXTrER+/LnK0jEmXsBXWA5bqqVZIyahXSx4VYZ7l7w/PHiUDtDgyRhMMKi4n2\0D\0AiQvQcWSQTjrpnlJbca1/DkpRt3YwrvJwdqb8asZU2VrNETh5x0QVefDRLFiVpif/\0D\0AtUaeAe/P1F8OkS7OIZDs1SUbv/sD2vMbhNkUoCms3/PvNtdnvgL4F0zhaDpKCmlT\0D\0AP8vx49E7v5CyRNmED9zZg4o3wmMqrQO93PtTug3Eu9oVx1zPQM1NVMyBa2+f29DL\0D\0A1nuTCeXdo9+ni45xx+jAI4DCwrRdhJ9uzZyC6962H37H6D+5naNvClFR1s6li1Gb\0D\0AnqPoiy/OBsEx9CaDGcqQBp5Wme/3XW+6z1ISOx+igwNTVCT14mHdBMbya0eIKft5\0D\0AX+GnwtgEMyCYyyWuUct8g4RzErcY9+yW9Om5Hzpx4zOuW4NPZgPDTgK+t2RSL/Yq\0D\0ArE1njrgeGYcVeG3f+OftH4s6fPbq7t1A5ZgUscbLMBqr9tK+OqygR4EgKBPsH6Cz\0D\0AL6zlv/2RV0qAHvVuDJcIDIgwY5rJtINEm32rhOeFNJwZS5MNIC1czXZx5//ugX7l\0D\0AI4sy5nbVhwSjtAk8Xg5dZbdTZ6mIrb7xqH+fdakZor1khG7bC2uIwibD3cSl2XkR\0D\0AwN48lslbHnqqagr6Xm1nNOSVl8C/6kbJEsMpLhAezfRtGwvOucoaE+WbeUNolGde\0D\0AP/eQiddSf0brnpiLJRh7qZrl9XuqYdpUqnoEdMAfotDOID8OtV7gt8a48ad8VPW2\0D\0A-----END RSA PRIVATE KEY-----\0D\0A\00", align 16, !dbg !2746
@mbedtls_test_ca_key_rsa_len = hidden constant i64 1782, align 8, !dbg !2751
@mbedtls_test_ca_pwd_rsa = hidden constant [13 x i8] c"PolarSSLTest\00", align 1, !dbg !2753
@mbedtls_test_ca_pwd_rsa_len = hidden constant i64 12, align 8, !dbg !2755
@mbedtls_test_srv_crt_rsa = hidden constant [1197 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIIDNzCCAh+gAwIBAgIBAjANBgkqhkiG9w0BAQUFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTEwMjEyMTQ0NDA2WhcNMjEwMjEyMTQ0NDA2WjA0MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxEjAQBgNVBAMTCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcN\0D\0AAQEBBQADggEPADCCAQoCggEBAMFNo93nzR3RBNdJcriZrA545Do8Ss86ExbQWuTN\0D\0AowCIp+4ea5anUrSQ7y1yej4kmvy2NKwk9XfgJmSMnLAofaHa6ozmyRyWvP7BBFKz\0D\0ANtSj+uGxdtiQwWG0ZlI2oiZTqqt0Xgd9GYLbKtgfoNkNHC1JZvdbJXNG6AuKT2kM\0D\0AtQCQ4dqCEGZ9rlQri2V5kaHiYcPNQEkI7mgM8YuG0ka/0LiqEQMef1aoGh5EGA8P\0D\0AhYvai0Re4hjGYi/HZo36Xdh98yeJKQHFkA4/J/EwyEoO79bex8cna8cFPXrEAjya\0D\0AHT4P6DSYW8tzS1KW2BGiLICIaTla0w+w3lkvEcf36hIBMJcCAwEAAaNNMEswCQYD\0D\0AVR0TBAIwADAdBgNVHQ4EFgQUpQXoZLjc32APUBJNYKhkr02LQ5MwHwYDVR0jBBgw\0D\0AFoAUtFrkpbPe0lL2udWmlQ/rPrzH/f8wDQYJKoZIhvcNAQEFBQADggEBAJxnXClY\0D\0AoHkbp70cqBrsGXLybA74czbO5RdLEgFs7rHVS9r+c293luS/KdliLScZqAzYVylw\0D\0AUfRWvKMoWhHYKp3dEIS4xTXk6/5zXxhv9Rw8SGc8qn6vITHk1S1mPevtekgasY5Y\0D\0AiWQuM3h4YVlRH3HHEMAD1TnAexfXHHDFQGe+Bd1iAbz1/sH9H8l4StwX6egvTK3M\0D\0AwXRwkKkvjKaEDA9ATbZx0mI8LGsxSuCqe9r9dyjmttd47J1p1Rulz3CLzaRcVIuS\0D\0ARRQfaD8neM9c1S/iJ/amTVqJxA1KOdOS5780WhPfSArA+g4qAmSjelc3p4wWpha8\0D\0AzhuYwjVuX6JHG0c=\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2757
@mbedtls_test_srv_crt_rsa_len = hidden constant i64 1197, align 8, !dbg !2762
@mbedtls_test_srv_key_rsa = hidden constant [1707 x i8] c"-----BEGIN RSA PRIVATE KEY-----\0D\0AMIIEpAIBAAKCAQEAwU2j3efNHdEE10lyuJmsDnjkOjxKzzoTFtBa5M2jAIin7h5r\0D\0AlqdStJDvLXJ6PiSa/LY0rCT1d+AmZIycsCh9odrqjObJHJa8/sEEUrM21KP64bF2\0D\0A2JDBYbRmUjaiJlOqq3ReB30Zgtsq2B+g2Q0cLUlm91slc0boC4pPaQy1AJDh2oIQ\0D\0AZn2uVCuLZXmRoeJhw81ASQjuaAzxi4bSRr/QuKoRAx5/VqgaHkQYDw+Fi9qLRF7i\0D\0AGMZiL8dmjfpd2H3zJ4kpAcWQDj8n8TDISg7v1t7HxydrxwU9esQCPJodPg/oNJhb\0D\0Ay3NLUpbYEaIsgIhpOVrTD7DeWS8Rx/fqEgEwlwIDAQABAoIBAQCXR0S8EIHFGORZ\0D\0A++AtOg6eENxD+xVs0f1IeGz57Tjo3QnXX7VBZNdj+p1ECvhCE/G7XnkgU5hLZX+G\0D\0AZ0jkz/tqJOI0vRSdLBbipHnWouyBQ4e/A1yIJdlBtqXxJ1KE/ituHRbNc4j4kL8Z\0D\0A/r6pvwnTI0PSx2Eqs048YdS92LT6qAv4flbNDxMn2uY7s4ycS4Q8w1JXnCeaAnYm\0D\0AWYI5wxO+bvRELR2Mcz5DmVnL8jRyml6l6582bSv5oufReFIbyPZbQWlXgYnpu6He\0D\0AGTc7E1zKYQGG/9+DQUl/1vQuCPqQwny0tQoX2w5tdYpdMdVm+zkLtbajzdTviJJa\0D\0ATWzL6lt5AoGBAN86+SVeJDcmQJcv4Eq6UhtRr4QGMiQMz0Sod6ettYxYzMgxtw28\0D\0ACIrgpozCc+UaZJLo7UxvC6an85r1b2nKPCLQFaggJ0H4Q0J/sZOhBIXaoBzWxveK\0D\0AnupceKdVxGsFi8CDy86DBfiyFivfBj+47BbaQzPBj7C4rK7UlLjab2rDAoGBAN2u\0D\0AAM2gchoFiu4v1HFL8D7lweEpi6ZnMJjnEu/dEgGQJFjwdpLnPbsj4c75odQ4Gz8g\0D\0Asw9lao9VVzbusoRE/JGI4aTdO0pATXyG7eG1Qu+5Yc1YGXcCrliA2xM9xx+d7f+s\0D\0AmPzN+WIEg5GJDYZDjAzHG5BNvi/FfM1C9dOtjv2dAoGAF0t5KmwbjWHBhcVqO4Ic\0D\0ABVvN3BIlc1ue2YRXEDlxY5b0r8N4XceMgKmW18OHApZxfl8uPDauWZLXOgl4uepv\0D\0AwhZC3EuWrSyyICNhLY21Ah7hbIEBPF3L3ZsOwC+UErL+dXWLdB56Jgy3gZaBeW7b\0D\0AvDrEnocJbqCm7IukhXHOBK8CgYEAwqdHB0hqyNSzIOGY7v9abzB6pUdA3BZiQvEs\0D\0A3LjHVd4HPJ2x0N8CgrBIWOE0q8+0hSMmeE96WW/7jD3fPWwCR5zlXknxBQsfv0gP\0D\0A3BC5PR0Qdypz+d+9zfMf625kyit4T/hzwhDveZUzHnk1Cf+IG7Q+TOEnLnWAWBED\0D\0AISOWmrUCgYAFEmRxgwAc/u+D6t0syCwAYh6POtscq9Y0i9GyWk89NzgC4NdwwbBH\0D\0A4AgahOxIxXx2gxJnq3yfkJfIjwf0s2DyP0kY2y6Ua1OeomPeY9mrIS4tCuDQ6LrE\0D\0ATB6l9VGoxJL4fyHnZb8L5gGvnB1bbD8cL6YPaDiOhcRseC9vBiEuVg==\0D\0A-----END RSA PRIVATE KEY-----\0D\0A\00", align 16, !dbg !2764
@mbedtls_test_srv_key_rsa_len = hidden constant i64 1707, align 8, !dbg !2769
@mbedtls_test_cli_crt_rsa = hidden constant [1303 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIIDhTCCAm2gAwIBAgIBBDANBgkqhkiG9w0BAQsFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTcwNTA1MTMwNzU5WhcNMjcwNTA2MTMwNzU5WjA8MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UECgwIUG9sYXJTU0wxGjAYBgNVBAMMEVBvbGFyU1NMIENsaWVudCAyMIIBIjAN\0D\0ABgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyHTEzLn5tXnpRdkUYLB9u5Pyax6f\0D\0AM60Nj4o8VmXl3ETZzGaFB9X4J7BKNdBjngpuG7fa8H6r7gwQk4ZJGDTzqCrSV/Uu\0D\0A1C93KYRhTYJQj6eVSHD1bk2y1RPD0hrt5kPqQhTrdOrA7R/UV06p86jt0uDBMHEw\0D\0AMjDV0/YI0FZPRo7yX/k9Z5GIMC5Cst99++UMd//sMcB4j7/Cf8qtbCHWjdmLao5v\0D\0A4Jv4EFbMs44TFeY0BGbH7vk2DmqV9gmaBmf0ZXH4yqSxJeD+PIs1BGe64E92hfx/\0D\0A/DZrtenNLQNiTrM9AM+vdqBpVoNq0qjU51Bx5rU2BXcFbXvI5MT9TNUhXwIDAQAB\0D\0Ao4GSMIGPMB0GA1UdDgQWBBRxoQBzckAvVHZeM/xSj7zx3WtGITBjBgNVHSMEXDBa\0D\0AgBS0WuSls97SUva51aaVD+s+vMf9/6E/pD0wOzELMAkGA1UEBhMCTkwxETAPBgNV\0D\0ABAoMCFBvbGFyU1NMMRkwFwYDVQQDDBBQb2xhclNTTCBUZXN0IENBggEAMAkGA1Ud\0D\0AEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAC7yO786NvcHpK8UovKIG9cB32oSQQom\0D\0ALoR0eHDRzdqEkoq7yGZufHFiRAAzbMqJfogRtxlrWAeB4y/jGaMBV25IbFOIcH2W\0D\0AiCEaMMbG+VQLKNvuC63kmw/Zewc9ThM6Pa1Hcy0axT0faf1B/U01j0FIcw/6mTfK\0D\0AD8w48OIwc1yr0JtutCVjig5DC0yznGMt32RyseOLcUe+lfq005v2PAiCozr5X8rE\0D\0AofGZpiM2NqRPePgYy+Vc75Zk28xkRQq1ncprgQb3S4vTsZdScpM9hLf+eMlrgqlj\0D\0Ac5PLSkXBeLE5+fedkyfTaLxxQlgCpuoOhKBm04/R1pWNzUHyqagjO9Q=\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2771
@mbedtls_test_cli_crt_rsa_len = hidden constant i64 1303, align 8, !dbg !2776
@mbedtls_test_cli_key_rsa = hidden constant [1707 x i8] c"-----BEGIN RSA PRIVATE KEY-----\0D\0AMIIEpAIBAAKCAQEAyHTEzLn5tXnpRdkUYLB9u5Pyax6fM60Nj4o8VmXl3ETZzGaF\0D\0AB9X4J7BKNdBjngpuG7fa8H6r7gwQk4ZJGDTzqCrSV/Uu1C93KYRhTYJQj6eVSHD1\0D\0Abk2y1RPD0hrt5kPqQhTrdOrA7R/UV06p86jt0uDBMHEwMjDV0/YI0FZPRo7yX/k9\0D\0AZ5GIMC5Cst99++UMd//sMcB4j7/Cf8qtbCHWjdmLao5v4Jv4EFbMs44TFeY0BGbH\0D\0A7vk2DmqV9gmaBmf0ZXH4yqSxJeD+PIs1BGe64E92hfx//DZrtenNLQNiTrM9AM+v\0D\0AdqBpVoNq0qjU51Bx5rU2BXcFbXvI5MT9TNUhXwIDAQABAoIBAGdNtfYDiap6bzst\0D\0AyhCiI8m9TtrhZw4MisaEaN/ll3XSjaOG2dvV6xMZCMV+5TeXDHOAZnY18Yi18vzz\0D\0A4Ut2TnNFzizCECYNaA2fST3WgInnxUkV3YXAyP6CNxJaCmv2aA0yFr2kFVSeaKGt\0D\0AymvljNp2NVkvm7Th8fBQBO7I7AXhz43k0mR7XmPgewe8ApZOG3hstkOaMvbWAvWA\0D\0AzCZupdDjZYjOJqlA4eEA4H8/w7F83r5CugeBE8LgEREjLPiyejrU5H1fubEY+h0d\0D\0Al5HZBJ68ybTXfQ5U9o/QKA3dd0toBEhhdRUDGzWtjvwkEQfqF1reGWj/tod/gCpf\0D\0ADFi6X0ECgYEA4wOv/pjSC3ty6TuOvKX2rOUiBrLXXv2JSxZnMoMiWI5ipLQt+RYT\0D\0AVPafL/m7Dn6MbwjayOkcZhBwk5CNz5A6Q4lJ64Mq/lqHznRCQQ2Mc1G8eyDF/fYL\0D\0AZe2pLvwP9VD5jTc2miDfw+MnvJhywRRLcemDFP8k4hQVtm8PMp3ZmNECgYEA4gz7\0D\0AwzObR4gn8ibe617uQPZjWzUj9dUHYd+in1gwBCIrtNnaRn9I9U/Q6tegRYpii4ys\0D\0Ac176NmU+umy6XmuSKV5qD9bSpZWG2nLFnslrN15Lm3fhZxoeMNhBaEDTnLT26yoi\0D\0A33gp0mSSWy94ZEqipms+ULF6sY1ZtFW6tpGFoy8CgYAQHhnnvJflIs2ky4q10B60\0D\0AZcxFp3rtDpkp0JxhFLhiizFrujMtZSjYNm5U7KkgPVHhLELEUvCmOnKTt4ap/vZ0\0D\0ABxJNe1GZH3pW6SAvGDQpl9sG7uu/vTFP+lCxukmzxB0DrrDcvorEkKMom7ZCCRvW\0D\0AKZsZ6YeH2Z81BauRj218kQKBgQCUV/DgKP2985xDTT79N08jUo3hTP5MVYCCuj/+\0D\0AUeEw1TvZcx3LJby7P6Xad6a1/BqveaGyFKIfEFIaBUBItk801sDDpDaYc4gL00Xc\0D\0A7lFuBHOZkxJYlss5QrGpuOEl9ZwUt5IrFLBdYaKqNHzNVC1pCPfb/JyH6Dr2HUxq\0D\0AgxUwAQKBgQCcU6G2L8AG9d9c0UpOyL1tMvFe5Ttw0KjlQVdsh1MP6yigYo9DYuwu\0D\0AbHFVW2r0dBTqegP2/KTOxKzaHfC1qf0RGDsUoJCNJrd1cwoCLG8P2EF4w3OBrKqv\0D\0A8u4ytY0F+Vlanj5lm3TaoHSVF1+NWPyOTiwevIECGKwSxvlki4fDAA==\0D\0A-----END RSA PRIVATE KEY-----\0D\0A\00", align 16, !dbg !2778
@mbedtls_test_cli_key_rsa_len = hidden constant i64 1707, align 8, !dbg !2780
@mbedtls_test_cas_pem = hidden constant [3495 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIIDhzCCAm+gAwIBAgIBADANBgkqhkiG9w0BAQUFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTEwMjEyMTQ0NDAwWhcNMjEwMjEyMTQ0NDAwWjA7MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA3zf8F7vglp0/ht6WMn1EpRagzSHx\0D\0AmdTs6st8GFgIlKXsm8WL3xoemTiZhx57wI053zhdcHgH057Zk+i5clHFzqMwUqny\0D\0A50BwFMtEonILwuVA+T7lpg6z+exKY8C4KQB0nFc7qKUEkHHxvYPZP9al4jwqj+8n\0D\0AYMPGn8u67GB9t+aEMr5P+1gmIgNb1LTV+/Xjli5wwOQuvfwu7uJBVcA0Ln0kcmnL\0D\0AR7EUQIN9Z/SG9jGr8XmksrUuEvmEF/Bibyc+E1ixVA0hmnM3oTDPb5Lc9un8rNsu\0D\0AKNF+AksjoBXyOGVkCeoMbo4bF6BxyLObyavpw/LPh5aPgAIynplYb6LVAgMBAAGj\0D\0AgZUwgZIwDAYDVR0TBAUwAwEB/zAdBgNVHQ4EFgQUtFrkpbPe0lL2udWmlQ/rPrzH\0D\0A/f8wYwYDVR0jBFwwWoAUtFrkpbPe0lL2udWmlQ/rPrzH/f+hP6Q9MDsxCzAJBgNV\0D\0ABAYTAk5MMREwDwYDVQQKEwhQb2xhclNTTDEZMBcGA1UEAxMQUG9sYXJTU0wgVGVz\0D\0AdCBDQYIBADANBgkqhkiG9w0BAQUFAAOCAQEAuP1U2ABUkIslsCfdlc2i94QHHYeJ\0D\0ASsR4EdgHtdciUI5I62J6Mom+Y0dT/7a+8S6MVMCZP6C5NyNyXw1GWY/YR82XTJ8H\0D\0ADBJiCTok5DbZ6SzaONBzdWHXwWwmi5vg1dxn7YxrM9d0IjxM27WNKs4sDQhZBQkF\0D\0Apjmfs2cb4oPl4Y9T9meTx/lvdkRYEug61Jfn6cA+qHpyPYdTH+UshITnmp5/Ztkf\0D\0Am/UTSLBNFNHesiTZeH31NcxYGdHSme9Nc/gfidRa0FLOCfWxRlFqAI47zG9jAQCZ\0D\0A7Z2mCGDNMhjQc+BYcdnl0lPXjdDK6V0qCg1dVewhUBcW5gZKzV7e9+DpVA==\0D\0A-----END CERTIFICATE-----\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIIDhzCCAm+gAwIBAgIBADANBgkqhkiG9w0BAQsFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTcwNTA0MTY1NzAxWhcNMjcwNTA1MTY1NzAxWjA7MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA3zf8F7vglp0/ht6WMn1EpRagzSHx\0D\0AmdTs6st8GFgIlKXsm8WL3xoemTiZhx57wI053zhdcHgH057Zk+i5clHFzqMwUqny\0D\0A50BwFMtEonILwuVA+T7lpg6z+exKY8C4KQB0nFc7qKUEkHHxvYPZP9al4jwqj+8n\0D\0AYMPGn8u67GB9t+aEMr5P+1gmIgNb1LTV+/Xjli5wwOQuvfwu7uJBVcA0Ln0kcmnL\0D\0AR7EUQIN9Z/SG9jGr8XmksrUuEvmEF/Bibyc+E1ixVA0hmnM3oTDPb5Lc9un8rNsu\0D\0AKNF+AksjoBXyOGVkCeoMbo4bF6BxyLObyavpw/LPh5aPgAIynplYb6LVAgMBAAGj\0D\0AgZUwgZIwHQYDVR0OBBYEFLRa5KWz3tJS9rnVppUP6z68x/3/MGMGA1UdIwRcMFqA\0D\0AFLRa5KWz3tJS9rnVppUP6z68x/3/oT+kPTA7MQswCQYDVQQGEwJOTDERMA8GA1UE\0D\0ACgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0GCAQAwDAYDVR0T\0D\0ABAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAHK/HHrTZMnnVMpde1io+voAtql7j\0D\0A4sRhLrjD7o3THtwRbDa2diCvpq0Sq23Ng2LMYoXsOxoL/RQK3iN7UKxV3MKPEr0w\0D\0AXQS+kKQqiT2bsfrjnWMVHZtUOMpm6FNqcdGm/Rss3vKda2lcKl8kUnq/ylc1+QbB\0D\0AG6A6tUvQcr2ZyWfVg+mM5XkhTrOOXus2OLikb4WwEtJTJRNE0f+yPODSUz0/vT57\0D\0AApH0CnB80bYJshYHPHHymOtleAB8KSYtqm75g/YNobjnjB6cm4HkW3OZRVIl6fYY\0D\0An20NRVA1Vjs6GAROr4NqW4k/+LofY9y0LLDE+p0oIEKXIsIvhPr39swxSA==\0D\0A-----END CERTIFICATE-----\0D\0A-----BEGIN CERTIFICATE-----\0D\0AMIICUjCCAdegAwIBAgIJAMFD4n5iQ8zoMAoGCCqGSM49BAMCMD4xCzAJBgNVBAYT\0D\0AAk5MMREwDwYDVQQKEwhQb2xhclNTTDEcMBoGA1UEAxMTUG9sYXJzc2wgVGVzdCBF\0D\0AQyBDQTAeFw0xMzA5MjQxNTQ5NDhaFw0yMzA5MjIxNTQ5NDhaMD4xCzAJBgNVBAYT\0D\0AAk5MMREwDwYDVQQKEwhQb2xhclNTTDEcMBoGA1UEAxMTUG9sYXJzc2wgVGVzdCBF\0D\0AQyBDQTB2MBAGByqGSM49AgEGBSuBBAAiA2IABMPaKzRBN1gvh1b+/Im6KUNLTuBu\0D\0Aww5XUzM5WNRStJGVOQsj318XJGJI/BqVKc4sLYfCiFKAr9ZqqyHduNMcbli4yuiy\0D\0AaY7zQa0pw7RfdadHb9UZKVVpmlM7ILRmFmAzHqOBoDCBnTAdBgNVHQ4EFgQUnW0g\0D\0AJEkBPyvLeLUZvH4kydv7NnwwbgYDVR0jBGcwZYAUnW0gJEkBPyvLeLUZvH4kydv7\0D\0ANnyhQqRAMD4xCzAJBgNVBAYTAk5MMREwDwYDVQQKEwhQb2xhclNTTDEcMBoGA1UE\0D\0AAxMTUG9sYXJzc2wgVGVzdCBFQyBDQYIJAMFD4n5iQ8zoMAwGA1UdEwQFMAMBAf8w\0D\0ACgYIKoZIzj0EAwIDaQAwZgIxAMO0YnNWKJUAfXgSJtJxexn4ipg+kv4znuR50v56\0D\0At4d0PCu412mUC6Nnd7izvtE2MgIxAP1nnJQjZ8BWukszFQDG48wxCCyci9qpdSMv\0D\0AuCjn8pwUOkABXK8Mss90fzCfCEOtIA==\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2782
@mbedtls_test_cas_pem_len = hidden constant i64 3495, align 8, !dbg !2787
@mbedtls_test_ca_crt_rsa_sha1 = internal constant [1307 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIIDhzCCAm+gAwIBAgIBADANBgkqhkiG9w0BAQUFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTEwMjEyMTQ0NDAwWhcNMjEwMjEyMTQ0NDAwWjA7MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA3zf8F7vglp0/ht6WMn1EpRagzSHx\0D\0AmdTs6st8GFgIlKXsm8WL3xoemTiZhx57wI053zhdcHgH057Zk+i5clHFzqMwUqny\0D\0A50BwFMtEonILwuVA+T7lpg6z+exKY8C4KQB0nFc7qKUEkHHxvYPZP9al4jwqj+8n\0D\0AYMPGn8u67GB9t+aEMr5P+1gmIgNb1LTV+/Xjli5wwOQuvfwu7uJBVcA0Ln0kcmnL\0D\0AR7EUQIN9Z/SG9jGr8XmksrUuEvmEF/Bibyc+E1ixVA0hmnM3oTDPb5Lc9un8rNsu\0D\0AKNF+AksjoBXyOGVkCeoMbo4bF6BxyLObyavpw/LPh5aPgAIynplYb6LVAgMBAAGj\0D\0AgZUwgZIwDAYDVR0TBAUwAwEB/zAdBgNVHQ4EFgQUtFrkpbPe0lL2udWmlQ/rPrzH\0D\0A/f8wYwYDVR0jBFwwWoAUtFrkpbPe0lL2udWmlQ/rPrzH/f+hP6Q9MDsxCzAJBgNV\0D\0ABAYTAk5MMREwDwYDVQQKEwhQb2xhclNTTDEZMBcGA1UEAxMQUG9sYXJTU0wgVGVz\0D\0AdCBDQYIBADANBgkqhkiG9w0BAQUFAAOCAQEAuP1U2ABUkIslsCfdlc2i94QHHYeJ\0D\0ASsR4EdgHtdciUI5I62J6Mom+Y0dT/7a+8S6MVMCZP6C5NyNyXw1GWY/YR82XTJ8H\0D\0ADBJiCTok5DbZ6SzaONBzdWHXwWwmi5vg1dxn7YxrM9d0IjxM27WNKs4sDQhZBQkF\0D\0Apjmfs2cb4oPl4Y9T9meTx/lvdkRYEug61Jfn6cA+qHpyPYdTH+UshITnmp5/Ztkf\0D\0Am/UTSLBNFNHesiTZeH31NcxYGdHSme9Nc/gfidRa0FLOCfWxRlFqAI47zG9jAQCZ\0D\0A7Z2mCGDNMhjQc+BYcdnl0lPXjdDK6V0qCg1dVewhUBcW5gZKzV7e9+DpVA==\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2823
@mbedtls_test_ca_crt_rsa_sha256 = internal constant [1307 x i8] c"-----BEGIN CERTIFICATE-----\0D\0AMIIDhzCCAm+gAwIBAgIBADANBgkqhkiG9w0BAQsFADA7MQswCQYDVQQGEwJOTDER\0D\0AMA8GA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\0D\0AMTcwNTA0MTY1NzAxWhcNMjcwNTA1MTY1NzAxWjA7MQswCQYDVQQGEwJOTDERMA8G\0D\0AA1UECgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0EwggEiMA0G\0D\0ACSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA3zf8F7vglp0/ht6WMn1EpRagzSHx\0D\0AmdTs6st8GFgIlKXsm8WL3xoemTiZhx57wI053zhdcHgH057Zk+i5clHFzqMwUqny\0D\0A50BwFMtEonILwuVA+T7lpg6z+exKY8C4KQB0nFc7qKUEkHHxvYPZP9al4jwqj+8n\0D\0AYMPGn8u67GB9t+aEMr5P+1gmIgNb1LTV+/Xjli5wwOQuvfwu7uJBVcA0Ln0kcmnL\0D\0AR7EUQIN9Z/SG9jGr8XmksrUuEvmEF/Bibyc+E1ixVA0hmnM3oTDPb5Lc9un8rNsu\0D\0AKNF+AksjoBXyOGVkCeoMbo4bF6BxyLObyavpw/LPh5aPgAIynplYb6LVAgMBAAGj\0D\0AgZUwgZIwHQYDVR0OBBYEFLRa5KWz3tJS9rnVppUP6z68x/3/MGMGA1UdIwRcMFqA\0D\0AFLRa5KWz3tJS9rnVppUP6z68x/3/oT+kPTA7MQswCQYDVQQGEwJOTDERMA8GA1UE\0D\0ACgwIUG9sYXJTU0wxGTAXBgNVBAMMEFBvbGFyU1NMIFRlc3QgQ0GCAQAwDAYDVR0T\0D\0ABAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAHK/HHrTZMnnVMpde1io+voAtql7j\0D\0A4sRhLrjD7o3THtwRbDa2diCvpq0Sq23Ng2LMYoXsOxoL/RQK3iN7UKxV3MKPEr0w\0D\0AXQS+kKQqiT2bsfrjnWMVHZtUOMpm6FNqcdGm/Rss3vKda2lcKl8kUnq/ylc1+QbB\0D\0AG6A6tUvQcr2ZyWfVg+mM5XkhTrOOXus2OLikb4WwEtJTJRNE0f+yPODSUz0/vT57\0D\0AApH0CnB80bYJshYHPHHymOtleAB8KSYtqm75g/YNobjnjB6cm4HkW3OZRVIl6fYY\0D\0An20NRVA1Vjs6GAROr4NqW4k/+LofY9y0LLDE+p0oIEKXIsIvhPr39swxSA==\0D\0A-----END CERTIFICATE-----\0D\0A\00", align 16, !dbg !2825
@mbedtls_test_cas = hidden global [4 x i8*] [i8* getelementptr inbounds ([1307 x i8], [1307 x i8]* @mbedtls_test_ca_crt_rsa_sha1, i32 0, i32 0), i8* getelementptr inbounds ([1307 x i8], [1307 x i8]* @mbedtls_test_ca_crt_rsa_sha256, i32 0, i32 0), i8* getelementptr inbounds ([883 x i8], [883 x i8]* @mbedtls_test_ca_crt_ec, i32 0, i32 0), i8* null], align 16, !dbg !2789
@mbedtls_test_cas_len = hidden constant [4 x i64] [i64 1307, i64 1307, i64 883, i64 0], align 16, !dbg !2792
@mbedtls_test_ca_key = hidden global i8* getelementptr inbounds ([1782 x i8], [1782 x i8]* @mbedtls_test_ca_key_rsa, i32 0, i32 0), align 8, !dbg !2797
@mbedtls_test_ca_pwd = hidden global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @mbedtls_test_ca_pwd_rsa, i32 0, i32 0), align 8, !dbg !2799
@mbedtls_test_srv_crt = hidden global i8* getelementptr inbounds ([1197 x i8], [1197 x i8]* @mbedtls_test_srv_crt_rsa, i32 0, i32 0), align 8, !dbg !2801
@mbedtls_test_srv_key = hidden global i8* getelementptr inbounds ([1707 x i8], [1707 x i8]* @mbedtls_test_srv_key_rsa, i32 0, i32 0), align 8, !dbg !2803
@mbedtls_test_cli_key = hidden global i8* getelementptr inbounds ([1707 x i8], [1707 x i8]* @mbedtls_test_cli_key_rsa, i32 0, i32 0), align 8, !dbg !2807
@mbedtls_test_ca_key_len = hidden constant i64 1782, align 8, !dbg !2811
@mbedtls_test_ca_pwd_len = hidden constant i64 12, align 8, !dbg !2813
@mbedtls_test_srv_crt_len = hidden constant i64 1197, align 8, !dbg !2815
@mbedtls_test_srv_key_len = hidden constant i64 1707, align 8, !dbg !2817
@mbedtls_test_cli_key_len = hidden constant i64 1707, align 8, !dbg !2821
@.str.245 = private unnamed_addr constant [26 x i8] c"  CTR_DRBG (PR = TRUE) : \00", align 1
@test_offset = internal global i64 0, align 8, !dbg !2830
@entropy_source_pr = internal constant [96 x i8] c"\C1\80\81\A6]D\02\16\19\B3\F1\80\B1\C9 \02jTo\0Cp\81I\8Bn\A6bRmQ\B1\CBX;\FA\D57_\FB\C9\FFF\D2\19\C7\22>\95E\9D\82\E1\E7\22\9Fc1i\D2kWGO\A37\C9\98\1C\0B\FB\911MU\B9\E9\1CZ^\E4\93\92\CF\C5#\12\D5V,Jn\FF\DC\10\D0h", align 16, !dbg !2856
@nonce_pers_pr = internal constant [16 x i8] c"\D2T\FC\FF\02\1Ei\D2)\C9\CF\AD\85\FAHl", align 16, !dbg !2862
@.str.1.246 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@result_pr = internal constant [16 x i8] c"4\01\16V\B4)\00\8F5c\EC\B5\F2Y\07#", align 16, !dbg !2865
@.str.2.247 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.3.248 = private unnamed_addr constant [26 x i8] c"  CTR_DRBG (PR = FALSE): \00", align 1
@entropy_source_nopr = internal constant [64 x i8] c"Z\19M^+1X\14T\DE\F6u\FByX\FE\C7\DB\87>V\89\FC\9D\03!|h\D8\038 \F9\E6^\04\D8V\F3\A9\C4JL\BD\C1\D0\08F\F5\98=w\1C\1B\13~N\0F\9D\8E\F4\09\F9.", align 16, !dbg !2867
@nonce_pers_nopr = internal constant [16 x i8] c"\1BT\B8\FF\06B\BF\F5!\F1\\\1C\0Bf_?", align 16, !dbg !2872
@result_nopr = internal constant [16 x i8] c"\A0T0=\8A~\A9\88\9D\90>\07|o!\8F", align 16, !dbg !2874
@.str.4.249 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@debug_threshold = internal global i32 0, align 4, !dbg !2876
@.str.252 = private unnamed_addr constant [28 x i8] c"%s() returned %d (-0x%04x)\0A\00", align 1
@.str.1.255 = private unnamed_addr constant [25 x i8] c"dumping '%s' (%u bytes)\0A\00", align 1
@.str.2.256 = private unnamed_addr constant [6 x i8] c"  %s\0A\00", align 1
@.str.3.257 = private unnamed_addr constant [7 x i8] c"%04x: \00", align 1
@.str.4.258 = private unnamed_addr constant [6 x i8] c" %02x\00", align 1
@.str.5.259 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.6.260 = private unnamed_addr constant [6 x i8] c"%s(X)\00", align 1
@.str.7.261 = private unnamed_addr constant [6 x i8] c"%s(Y)\00", align 1
@.str.8.262 = private unnamed_addr constant [29 x i8] c"value of '%s' (%d bits) is:\0A\00", align 1
@.str.9.263 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.10.264 = private unnamed_addr constant [4 x i8] c" 00\00", align 1
@.str.11.265 = private unnamed_addr constant [9 x i8] c"%s #%d:\0A\00", align 1
@.str.12.266 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13.267 = private unnamed_addr constant [6 x i8] c"crt->\00", align 1
@.str.14.268 = private unnamed_addr constant [20 x i8] c"invalid PK context\0A\00", align 1
@.str.15.269 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.16.270 = private unnamed_addr constant [19 x i8] c"should not happen\0A\00", align 1
@.str.278 = private unnamed_addr constant [22 x i8] c"  ENTROPY_BIAS test: \00", align 1
@.str.1.279 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.2.280 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.3.281 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.282 = private unnamed_addr constant [17 x i8] c"  ENTROPY test: \00", align 1
@.str.285 = private unnamed_addr constant [47 x i8] c"CIPHER - The selected feature is not available\00", align 1
@.str.1.286 = private unnamed_addr constant [42 x i8] c"CIPHER - Bad input parameters to function\00", align 1
@.str.2.287 = private unnamed_addr constant [35 x i8] c"CIPHER - Failed to allocate memory\00", align 1
@.str.3.288 = private unnamed_addr constant [61 x i8] c"CIPHER - Input data contains invalid padding and is rejected\00", align 1
@.str.4.289 = private unnamed_addr constant [51 x i8] c"CIPHER - Decryption of block requires a full block\00", align 1
@.str.5.290 = private unnamed_addr constant [48 x i8] c"CIPHER - Authentication failed (for AEAD modes)\00", align 1
@.str.6.291 = private unnamed_addr constant [60 x i8] c"CIPHER - The context is invalid, eg because it was free()ed\00", align 1
@.str.7.292 = private unnamed_addr constant [39 x i8] c"DHM - Bad input parameters to function\00", align 1
@.str.8.293 = private unnamed_addr constant [43 x i8] c"DHM - Reading of the DHM parameters failed\00", align 1
@.str.9.294 = private unnamed_addr constant [42 x i8] c"DHM - Making of the DHM parameters failed\00", align 1
@.str.10.295 = private unnamed_addr constant [42 x i8] c"DHM - Reading of the public values failed\00", align 1
@.str.11.296 = private unnamed_addr constant [40 x i8] c"DHM - Making of the public value failed\00", align 1
@.str.12.297 = private unnamed_addr constant [43 x i8] c"DHM - Calculation of the DHM secret failed\00", align 1
@.str.13.298 = private unnamed_addr constant [48 x i8] c"DHM - The ASN.1 data is not formatted correctly\00", align 1
@.str.14.299 = private unnamed_addr constant [34 x i8] c"DHM - Allocation of memory failed\00", align 1
@.str.15.300 = private unnamed_addr constant [32 x i8] c"DHM - Read/write of file failed\00", align 1
@.str.16.301 = private unnamed_addr constant [39 x i8] c"ECP - Bad input parameters to function\00", align 1
@.str.17.302 = private unnamed_addr constant [42 x i8] c"ECP - The buffer is too small to write to\00", align 1
@.str.18.303 = private unnamed_addr constant [36 x i8] c"ECP - Requested curve not available\00", align 1
@.str.19.304 = private unnamed_addr constant [33 x i8] c"ECP - The signature is not valid\00", align 1
@.str.20.305 = private unnamed_addr constant [31 x i8] c"ECP - Memory allocation failed\00", align 1
@.str.21.306 = private unnamed_addr constant [66 x i8] c"ECP - Generation of random value, such as (ephemeral) key, failed\00", align 1
@.str.22.307 = private unnamed_addr constant [36 x i8] c"ECP - Invalid private or public key\00", align 1
@.str.23.308 = private unnamed_addr constant [67 x i8] c"ECP - Signature is valid but shorter than the user-supplied length\00", align 1
@.str.24.309 = private unnamed_addr constant [43 x i8] c"MD - The selected feature is not available\00", align 1
@.str.25.310 = private unnamed_addr constant [38 x i8] c"MD - Bad input parameters to function\00", align 1
@.str.26.311 = private unnamed_addr constant [31 x i8] c"MD - Failed to allocate memory\00", align 1
@.str.27.312 = private unnamed_addr constant [39 x i8] c"MD - Opening or reading of file failed\00", align 1
@.str.28.313 = private unnamed_addr constant [36 x i8] c"PEM - No PEM header or footer found\00", align 1
@.str.29.314 = private unnamed_addr constant [36 x i8] c"PEM - PEM string is not as expected\00", align 1
@.str.30.315 = private unnamed_addr constant [32 x i8] c"PEM - Failed to allocate memory\00", align 1
@.str.31.316 = private unnamed_addr constant [34 x i8] c"PEM - RSA IV is not in hex-format\00", align 1
@.str.32.317 = private unnamed_addr constant [43 x i8] c"PEM - Unsupported key encryption algorithm\00", align 1
@.str.33.318 = private unnamed_addr constant [42 x i8] c"PEM - Private key password can't be empty\00", align 1
@.str.34.319 = private unnamed_addr constant [71 x i8] c"PEM - Given private key password does not allow for correct decryption\00", align 1
@.str.35.320 = private unnamed_addr constant [63 x i8] c"PEM - Unavailable feature, e.g. hashing/encryption combination\00", align 1
@.str.36.321 = private unnamed_addr constant [39 x i8] c"PEM - Bad input parameters to function\00", align 1
@.str.37.322 = private unnamed_addr constant [30 x i8] c"PK - Memory allocation failed\00", align 1
@.str.38.323 = private unnamed_addr constant [60 x i8] c"PK - Type mismatch, eg attempt to encrypt with an ECDSA key\00", align 1
@.str.39.324 = private unnamed_addr constant [38 x i8] c"PK - Bad input parameters to function\00", align 1
@.str.40.325 = private unnamed_addr constant [31 x i8] c"PK - Read/write of file failed\00", align 1
@.str.41.326 = private unnamed_addr constant [29 x i8] c"PK - Unsupported key version\00", align 1
@.str.42.327 = private unnamed_addr constant [30 x i8] c"PK - Invalid key tag or value\00", align 1
@.str.43.328 = private unnamed_addr constant [66 x i8] c"PK - Key algorithm is unsupported (only RSA and EC are supported)\00", align 1
@.str.44.329 = private unnamed_addr constant [41 x i8] c"PK - Private key password can't be empty\00", align 1
@.str.45.330 = private unnamed_addr constant [70 x i8] c"PK - Given private key password does not allow for correct decryption\00", align 1
@.str.46.331 = private unnamed_addr constant [72 x i8] c"PK - The pubkey tag or value is invalid (only RSA and EC are supported)\00", align 1
@.str.47.332 = private unnamed_addr constant [43 x i8] c"PK - The algorithm tag or value is invalid\00", align 1
@.str.48.333 = private unnamed_addr constant [68 x i8] c"PK - Elliptic curve is unsupported (only NIST curves are supported)\00", align 1
@.str.49.334 = private unnamed_addr constant [56 x i8] c"PK - Unavailable feature, e.g. RSA disabled for RSA key\00", align 1
@.str.50.335 = private unnamed_addr constant [65 x i8] c"PK - The signature is valid but its length is less than expected\00", align 1
@.str.51.336 = private unnamed_addr constant [42 x i8] c"PKCS12 - Bad input parameters to function\00", align 1
@.str.52.337 = private unnamed_addr constant [67 x i8] c"PKCS12 - Feature not available, e.g. unsupported encryption scheme\00", align 1
@.str.53.338 = private unnamed_addr constant [40 x i8] c"PKCS12 - PBE ASN.1 data not as expected\00", align 1
@.str.54.339 = private unnamed_addr constant [74 x i8] c"PKCS12 - Given private key password does not allow for correct decryption\00", align 1
@.str.55.340 = private unnamed_addr constant [41 x i8] c"PKCS5 - Bad input parameters to function\00", align 1
@.str.56.341 = private unnamed_addr constant [30 x i8] c"PKCS5 - Unexpected ASN.1 data\00", align 1
@.str.57.342 = private unnamed_addr constant [57 x i8] c"PKCS5 - Requested encryption or digest alg not available\00", align 1
@.str.58.343 = private unnamed_addr constant [73 x i8] c"PKCS5 - Given private key password does not allow for correct decryption\00", align 1
@.str.59.344 = private unnamed_addr constant [39 x i8] c"RSA - Bad input parameters to function\00", align 1
@.str.60.345 = private unnamed_addr constant [58 x i8] c"RSA - Input data contains invalid padding and is rejected\00", align 1
@.str.61.346 = private unnamed_addr constant [50 x i8] c"RSA - Something failed during generation of a key\00", align 1
@.str.62.347 = private unnamed_addr constant [54 x i8] c"RSA - Key failed to pass the library's validity check\00", align 1
@.str.63.348 = private unnamed_addr constant [38 x i8] c"RSA - The public key operation failed\00", align 1
@.str.64.349 = private unnamed_addr constant [39 x i8] c"RSA - The private key operation failed\00", align 1
@.str.65.350 = private unnamed_addr constant [37 x i8] c"RSA - The PKCS#1 verification failed\00", align 1
@.str.66.351 = private unnamed_addr constant [59 x i8] c"RSA - The output buffer for decryption is not large enough\00", align 1
@.str.67.352 = private unnamed_addr constant [56 x i8] c"RSA - The random generator failed to generate non-zeros\00", align 1
@.str.68.353 = private unnamed_addr constant [45 x i8] c"SSL - The requested feature is not available\00", align 1
@.str.69.354 = private unnamed_addr constant [39 x i8] c"SSL - Bad input parameters to function\00", align 1
@.str.70.355 = private unnamed_addr constant [45 x i8] c"SSL - Verification of the message MAC failed\00", align 1
@.str.71.356 = private unnamed_addr constant [41 x i8] c"SSL - An invalid SSL record was received\00", align 1
@.str.72.357 = private unnamed_addr constant [38 x i8] c"SSL - The connection indicated an EOF\00", align 1
@.str.73.358 = private unnamed_addr constant [37 x i8] c"SSL - An unknown cipher was received\00", align 1
@.str.74.359 = private unnamed_addr constant [63 x i8] c"SSL - The server has no ciphersuites in common with the client\00", align 1
@.str.75.360 = private unnamed_addr constant [44 x i8] c"SSL - No RNG was provided to the SSL module\00", align 1
@.str.76.361 = private unnamed_addr constant [96 x i8] c"SSL - No client certification received from the client, but required by the authentication mode\00", align 1
@.str.77.362 = private unnamed_addr constant [72 x i8] c"SSL - Our own certificate(s) is/are too large to send in an SSL message\00", align 1
@.str.78.363 = private unnamed_addr constant [63 x i8] c"SSL - The own certificate is not set, but needed by the server\00", align 1
@.str.79.364 = private unnamed_addr constant [67 x i8] c"SSL - The own private key or pre-shared key is not set, but needed\00", align 1
@.str.80.365 = private unnamed_addr constant [50 x i8] c"SSL - No CA Chain is set, but required to operate\00", align 1
@.str.81.366 = private unnamed_addr constant [55 x i8] c"SSL - An unexpected message was received from our peer\00", align 1
@.str.82.367 = private unnamed_addr constant [55 x i8] c"SSL - A fatal alert message was received from our peer\00", align 1
@.str.83.368 = private unnamed_addr constant [38 x i8] c"SSL - Verification of our peer failed\00", align 1
@.str.84.369 = private unnamed_addr constant [69 x i8] c"SSL - The peer notified us that the connection is going to be closed\00", align 1
@.str.85.370 = private unnamed_addr constant [61 x i8] c"SSL - Processing of the ClientHello handshake message failed\00", align 1
@.str.86.371 = private unnamed_addr constant [61 x i8] c"SSL - Processing of the ServerHello handshake message failed\00", align 1
@.str.87.372 = private unnamed_addr constant [61 x i8] c"SSL - Processing of the Certificate handshake message failed\00", align 1
@.str.88 = private unnamed_addr constant [68 x i8] c"SSL - Processing of the CertificateRequest handshake message failed\00", align 1
@.str.89 = private unnamed_addr constant [67 x i8] c"SSL - Processing of the ServerKeyExchange handshake message failed\00", align 1
@.str.90 = private unnamed_addr constant [65 x i8] c"SSL - Processing of the ServerHelloDone handshake message failed\00", align 1
@.str.91 = private unnamed_addr constant [67 x i8] c"SSL - Processing of the ClientKeyExchange handshake message failed\00", align 1
@.str.92 = private unnamed_addr constant [93 x i8] c"SSL - Processing of the ClientKeyExchange handshake message failed in DHM / ECDH Read Public\00", align 1
@.str.93 = private unnamed_addr constant [98 x i8] c"SSL - Processing of the ClientKeyExchange handshake message failed in DHM / ECDH Calculate Secret\00", align 1
@.str.94 = private unnamed_addr constant [67 x i8] c"SSL - Processing of the CertificateVerify handshake message failed\00", align 1
@.str.95 = private unnamed_addr constant [66 x i8] c"SSL - Processing of the ChangeCipherSpec handshake message failed\00", align 1
@.str.96 = private unnamed_addr constant [58 x i8] c"SSL - Processing of the Finished handshake message failed\00", align 1
@.str.97 = private unnamed_addr constant [31 x i8] c"SSL - Memory allocation failed\00", align 1
@.str.98 = private unnamed_addr constant [57 x i8] c"SSL - Hardware acceleration function returned with error\00", align 1
@.str.99 = private unnamed_addr constant [63 x i8] c"SSL - Hardware acceleration function skipped / left alone data\00", align 1
@.str.100 = private unnamed_addr constant [59 x i8] c"SSL - Processing of the compression / decompression failed\00", align 1
@.str.101 = private unnamed_addr constant [55 x i8] c"SSL - Handshake protocol not within min/max boundaries\00", align 1
@.str.102 = private unnamed_addr constant [66 x i8] c"SSL - Processing of the NewSessionTicket handshake message failed\00", align 1
@.str.103 = private unnamed_addr constant [33 x i8] c"SSL - Session ticket has expired\00", align 1
@.str.104 = private unnamed_addr constant [85 x i8] c"SSL - Public key type mismatch (eg, asked for RSA key exchange and presented EC key)\00", align 1
@.str.105 = private unnamed_addr constant [51 x i8] c"SSL - Unknown identity received (eg, PSK identity)\00", align 1
@.str.106 = private unnamed_addr constant [68 x i8] c"SSL - Internal error (eg, unexpected failure in lower-level module)\00", align 1
@.str.107 = private unnamed_addr constant [61 x i8] c"SSL - A counter would wrap (eg, too many messages exchanged)\00", align 1
@.str.108 = private unnamed_addr constant [57 x i8] c"SSL - Unexpected message at ServerHello in renegotiation\00", align 1
@.str.109 = private unnamed_addr constant [52 x i8] c"SSL - DTLS client must retry for hello verification\00", align 1
@.str.110 = private unnamed_addr constant [58 x i8] c"SSL - A buffer is too small to receive or write a message\00", align 1
@.str.111 = private unnamed_addr constant [98 x i8] c"SSL - None of the common ciphersuites is usable (eg, no suitable certificate, see debug messages)\00", align 1
@.str.112 = private unnamed_addr constant [38 x i8] c"SSL - Connection requires a read call\00", align 1
@.str.113 = private unnamed_addr constant [39 x i8] c"SSL - Connection requires a write call\00", align 1
@.str.114 = private unnamed_addr constant [30 x i8] c"SSL - The operation timed out\00", align 1
@.str.115 = private unnamed_addr constant [58 x i8] c"SSL - The client initiated a reconnect from the same port\00", align 1
@.str.116 = private unnamed_addr constant [52 x i8] c"SSL - Record header looks valid but is not expected\00", align 1
@.str.117 = private unnamed_addr constant [61 x i8] c"SSL - The alert message received indicates a non-fatal error\00", align 1
@.str.118 = private unnamed_addr constant [60 x i8] c"SSL - Couldn't set the hash for verifying CertificateVerify\00", align 1
@.str.119 = private unnamed_addr constant [68 x i8] c"X509 - Unavailable feature, e.g. RSA hashing/encryption combination\00", align 1
@.str.120 = private unnamed_addr constant [32 x i8] c"X509 - Requested OID is unknown\00", align 1
@.str.121 = private unnamed_addr constant [71 x i8] c"X509 - The CRT/CRL/CSR format is invalid, e.g. different type expected\00", align 1
@.str.122 = private unnamed_addr constant [50 x i8] c"X509 - The CRT/CRL/CSR version element is invalid\00", align 1
@.str.123 = private unnamed_addr constant [42 x i8] c"X509 - The serial tag or value is invalid\00", align 1
@.str.124 = private unnamed_addr constant [45 x i8] c"X509 - The algorithm tag or value is invalid\00", align 1
@.str.125 = private unnamed_addr constant [40 x i8] c"X509 - The name tag or value is invalid\00", align 1
@.str.126 = private unnamed_addr constant [40 x i8] c"X509 - The date tag or value is invalid\00", align 1
@.str.127 = private unnamed_addr constant [42 x i8] c"X509 - The signature tag or value invalid\00", align 1
@.str.128 = private unnamed_addr constant [45 x i8] c"X509 - The extension tag or value is invalid\00", align 1
@.str.129 = private unnamed_addr constant [53 x i8] c"X509 - CRT/CRL/CSR has an unsupported version number\00", align 1
@.str.130 = private unnamed_addr constant [48 x i8] c"X509 - Signature algorithm (oid) is unsupported\00", align 1
@.str.131 = private unnamed_addr constant [78 x i8] c"X509 - Signature algorithms do not match. (see \\c ::mbedtls_x509_crt sig_oid)\00", align 1
@.str.132 = private unnamed_addr constant [79 x i8] c"X509 - Certificate verification failed, e.g. CRL, CA or signature check failed\00", align 1
@.str.133 = private unnamed_addr constant [43 x i8] c"X509 - Format not recognized as DER or PEM\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"X509 - Input invalid\00", align 1
@.str.135 = private unnamed_addr constant [35 x i8] c"X509 - Allocation of memory failed\00", align 1
@.str.136 = private unnamed_addr constant [33 x i8] c"X509 - Read/write of file failed\00", align 1
@.str.137 = private unnamed_addr constant [39 x i8] c"X509 - Destination buffer is too small\00", align 1
@.str.138 = private unnamed_addr constant [83 x i8] c"X509 - A fatal error occured, eg the chain is too long or the vrfy callback failed\00", align 1
@.str.139 = private unnamed_addr constant [26 x i8] c"UNKNOWN ERROR CODE (%04X)\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.141 = private unnamed_addr constant [25 x i8] c"AES - Invalid key length\00", align 1
@.str.142 = private unnamed_addr constant [32 x i8] c"AES - Invalid data input length\00", align 1
@.str.143 = private unnamed_addr constant [55 x i8] c"ASN1 - Out of data when parsing an ASN1 data structure\00", align 1
@.str.144 = private unnamed_addr constant [43 x i8] c"ASN1 - ASN1 tag was of an unexpected value\00", align 1
@.str.145 = private unnamed_addr constant [67 x i8] c"ASN1 - Error when trying to determine the length or invalid length\00", align 1
@.str.146 = private unnamed_addr constant [50 x i8] c"ASN1 - Actual length differs from expected length\00", align 1
@.str.147 = private unnamed_addr constant [35 x i8] c"ASN1 - Data is invalid. (not used)\00", align 1
@.str.148 = private unnamed_addr constant [32 x i8] c"ASN1 - Memory allocation failed\00", align 1
@.str.149 = private unnamed_addr constant [58 x i8] c"ASN1 - Buffer too small when writing ASN.1 data structure\00", align 1
@.str.150 = private unnamed_addr constant [33 x i8] c"BASE64 - Output buffer too small\00", align 1
@.str.151 = private unnamed_addr constant [36 x i8] c"BASE64 - Invalid character in input\00", align 1
@.str.152 = private unnamed_addr constant [67 x i8] c"BIGNUM - An error occurred while reading from or writing to a file\00", align 1
@.str.153 = private unnamed_addr constant [42 x i8] c"BIGNUM - Bad input parameters to function\00", align 1
@.str.154 = private unnamed_addr constant [59 x i8] c"BIGNUM - There is an invalid character in the digit string\00", align 1
@.str.155 = private unnamed_addr constant [45 x i8] c"BIGNUM - The buffer is too small to write to\00", align 1
@.str.156 = private unnamed_addr constant [70 x i8] c"BIGNUM - The input arguments are negative or result in illegal output\00", align 1
@.str.157 = private unnamed_addr constant [71 x i8] c"BIGNUM - The input argument for division is zero, which is not allowed\00", align 1
@.str.158 = private unnamed_addr constant [48 x i8] c"BIGNUM - The input arguments are not acceptable\00", align 1
@.str.159 = private unnamed_addr constant [34 x i8] c"BIGNUM - Memory allocation failed\00", align 1
@.str.160 = private unnamed_addr constant [30 x i8] c"BLOWFISH - Invalid key length\00", align 1
@.str.161 = private unnamed_addr constant [37 x i8] c"BLOWFISH - Invalid data input length\00", align 1
@.str.162 = private unnamed_addr constant [30 x i8] c"CAMELLIA - Invalid key length\00", align 1
@.str.163 = private unnamed_addr constant [37 x i8] c"CAMELLIA - Invalid data input length\00", align 1
@.str.164 = private unnamed_addr constant [39 x i8] c"CCM - Bad input parameters to function\00", align 1
@.str.165 = private unnamed_addr constant [38 x i8] c"CCM - Authenticated decryption failed\00", align 1
@.str.166 = private unnamed_addr constant [37 x i8] c"CTR_DRBG - The entropy source failed\00", align 1
@.str.167 = private unnamed_addr constant [52 x i8] c"CTR_DRBG - Too many random requested in single call\00", align 1
@.str.168 = private unnamed_addr constant [50 x i8] c"CTR_DRBG - Input too large (Entropy + additional)\00", align 1
@.str.169.373 = private unnamed_addr constant [36 x i8] c"CTR_DRBG - Read/write error in file\00", align 1
@.str.170 = private unnamed_addr constant [43 x i8] c"DES - The data input has an invalid length\00", align 1
@.str.171 = private unnamed_addr constant [42 x i8] c"ENTROPY - Critical entropy source failure\00", align 1
@.str.172 = private unnamed_addr constant [39 x i8] c"ENTROPY - No more sources can be added\00", align 1
@.str.173 = private unnamed_addr constant [45 x i8] c"ENTROPY - No sources have been added to poll\00", align 1
@.str.174 = private unnamed_addr constant [52 x i8] c"ENTROPY - No strong sources have been added to poll\00", align 1
@.str.175 = private unnamed_addr constant [35 x i8] c"ENTROPY - Read/write error in file\00", align 1
@.str.176 = private unnamed_addr constant [38 x i8] c"GCM - Authenticated decryption failed\00", align 1
@.str.177 = private unnamed_addr constant [39 x i8] c"GCM - Bad input parameters to function\00", align 1
@.str.178 = private unnamed_addr constant [53 x i8] c"HMAC_DRBG - Too many random requested in single call\00", align 1
@.str.179 = private unnamed_addr constant [51 x i8] c"HMAC_DRBG - Input too large (Entropy + additional)\00", align 1
@.str.180 = private unnamed_addr constant [37 x i8] c"HMAC_DRBG - Read/write error in file\00", align 1
@.str.181 = private unnamed_addr constant [38 x i8] c"HMAC_DRBG - The entropy source failed\00", align 1
@.str.182 = private unnamed_addr constant [23 x i8] c"OID - OID is not found\00", align 1
@.str.183 = private unnamed_addr constant [33 x i8] c"OID - output buffer is too small\00", align 1
@.str.184 = private unnamed_addr constant [39 x i8] c"PADLOCK - Input data should be aligned\00", align 1
@.str.185 = private unnamed_addr constant [44 x i8] c"XTEA - The data input has an invalid length\00", align 1
@.str.381 = private unnamed_addr constant [11 x i8] c"invalid PK\00", align 1
@.str.384 = private unnamed_addr constant [4 x i8] c"RSA\00", align 1
@mbedtls_rsa_info = hidden constant %struct.mbedtls_pk_info_t { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.384, i32 0, i32 0), i64 (i8*)* @rsa_get_bitlen, i32 (i32)* @rsa_can_do, i32 (i8*, i32, i8*, i64, i8*, i64)* @rsa_verify_wrap, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)* @rsa_sign_wrap, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* @rsa_decrypt_wrap, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* @rsa_encrypt_wrap, i32 (i8*, i8*)* @rsa_check_pair_wrap, i8* ()* @rsa_alloc_wrap, void (i8*)* @rsa_free_wrap, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* @rsa_debug }, align 8, !dbg !2895
@.str.1.389 = private unnamed_addr constant [3 x i8] c"EC\00", align 1
@mbedtls_eckey_info = hidden constant %struct.mbedtls_pk_info_t { i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.389, i32 0, i32 0), i64 (i8*)* @eckey_get_bitlen, i32 (i32)* @eckey_can_do, i32 (i8*, i32, i8*, i64, i8*, i64)* @eckey_verify_wrap, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)* @eckey_sign_wrap, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*)* @eckey_check_pair, i8* ()* @eckey_alloc_wrap, void (i8*)* @eckey_free_wrap, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* @eckey_debug }, align 8, !dbg !3004
@.str.2.393 = private unnamed_addr constant [6 x i8] c"EC_DH\00", align 1
@mbedtls_eckeydh_info = hidden constant %struct.mbedtls_pk_info_t { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.393, i32 0, i32 0), i64 (i8*)* @eckey_get_bitlen, i32 (i32)* @eckeydh_can_do, i32 (i8*, i32, i8*, i64, i8*, i64)* null, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*)* @eckey_check_pair, i8* ()* @eckey_alloc_wrap, void (i8*)* @eckey_free_wrap, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* @eckey_debug }, align 8, !dbg !3054
@.str.3.396 = private unnamed_addr constant [6 x i8] c"ECDSA\00", align 1
@mbedtls_ecdsa_info = hidden constant %struct.mbedtls_pk_info_t { i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.396, i32 0, i32 0), i64 (i8*)* @eckey_get_bitlen, i32 (i32)* @ecdsa_can_do, i32 (i8*, i32, i8*, i64, i8*, i64)* @ecdsa_verify_wrap, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)* @ecdsa_sign_wrap, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*)* @eckey_check_pair, i8* ()* @ecdsa_alloc_wrap, void (i8*)* @ecdsa_free_wrap, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* @eckey_debug }, align 8, !dbg !3056
@.str.4.399 = private unnamed_addr constant [8 x i8] c"RSA-alt\00", align 1
@mbedtls_rsa_alt_info = hidden constant %struct.mbedtls_pk_info_t { i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.399, i32 0, i32 0), i64 (i8*)* @rsa_alt_get_bitlen, i32 (i32)* @rsa_alt_can_do, i32 (i8*, i32, i8*, i64, i8*, i64)* null, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)* @rsa_alt_sign_wrap, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* @rsa_alt_decrypt_wrap, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* null, i32 (i8*, i8*)* @rsa_alt_check_pair, i8* ()* @rsa_alt_alloc_wrap, void (i8*)* @rsa_alt_free_wrap, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* null }, align 8, !dbg !3058
@.str.5.385 = private unnamed_addr constant [6 x i8] c"rsa.N\00", align 1
@.str.6.386 = private unnamed_addr constant [6 x i8] c"rsa.E\00", align 1
@.str.7.390 = private unnamed_addr constant [8 x i8] c"eckey.Q\00", align 1
@.str.405 = private unnamed_addr constant [32 x i8] c"-----BEGIN RSA PRIVATE KEY-----\00", align 1
@.str.1.406 = private unnamed_addr constant [30 x i8] c"-----END RSA PRIVATE KEY-----\00", align 1
@.str.2.407 = private unnamed_addr constant [31 x i8] c"-----BEGIN EC PRIVATE KEY-----\00", align 1
@.str.3.408 = private unnamed_addr constant [29 x i8] c"-----END EC PRIVATE KEY-----\00", align 1
@.str.4.409 = private unnamed_addr constant [28 x i8] c"-----BEGIN PRIVATE KEY-----\00", align 1
@.str.5.410 = private unnamed_addr constant [26 x i8] c"-----END PRIVATE KEY-----\00", align 1
@.str.6.411 = private unnamed_addr constant [38 x i8] c"-----BEGIN ENCRYPTED PRIVATE KEY-----\00", align 1
@.str.7.412 = private unnamed_addr constant [36 x i8] c"-----END ENCRYPTED PRIVATE KEY-----\00", align 1
@.str.8.415 = private unnamed_addr constant [27 x i8] c"-----BEGIN PUBLIC KEY-----\00", align 1
@.str.9.416 = private unnamed_addr constant [25 x i8] c"-----END PUBLIC KEY-----\00", align 1
@.str.10.402 = private unnamed_addr constant [8 x i8] c"*\86H\CE=\01\01\00", align 1
@.str.11.413 = private unnamed_addr constant [11 x i8] c"*\86H\86\F7\0D\01\0C\01\01\00", align 1
@.str.12.414 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\05\0D\00", align 1
@K = internal constant [80 x i64] [i64 4794697086780616226, i64 8158064640168781261, i64 -5349999486874862801, i64 -1606136188198331460, i64 4131703408338449720, i64 6480981068601479193, i64 -7908458776815382629, i64 -6116909921290321640, i64 -2880145864133508542, i64 1334009975649890238, i64 2608012711638119052, i64 6128411473006802146, i64 8268148722764581231, i64 -9160688886553864527, i64 -7215885187991268811, i64 -4495734319001033068, i64 -1973867731355612462, i64 -1171420211273849373, i64 1135362057144423861, i64 2597628984639134821, i64 3308224258029322869, i64 5365058923640841347, i64 6679025012923562964, i64 8573033837759648693, i64 -7476448914759557205, i64 -6327057829258317296, i64 -5763719355590565569, i64 -4658551843659510044, i64 -4116276920077217854, i64 -3051310485924567259, i64 489312712824947311, i64 1452737877330783856, i64 2861767655752347644, i64 3322285676063803686, i64 5560940570517711597, i64 5996557281743188959, i64 7280758554555802590, i64 8532644243296465576, i64 -9096487096722542874, i64 -7894198246740708037, i64 -6719396339535248540, i64 -6333637450476146687, i64 -4446306890439682159, i64 -4076793802049405392, i64 -3345356375505022440, i64 -2983346525034927856, i64 -860691631967231958, i64 1182934255886127544, i64 1847814050463011016, i64 2177327727835720531, i64 2830643537854262169, i64 3796741975233480872, i64 4115178125766777443, i64 5681478168544905931, i64 6601373596472566643, i64 7507060721942968483, i64 8399075790359081724, i64 8693463985226723168, i64 -8878714635349349518, i64 -8302665154208450068, i64 -8016688836872298968, i64 -6606660893046293015, i64 -4685533653050689259, i64 -4147400797238176981, i64 -3880063495543823972, i64 -3348786107499101689, i64 -1523767162380948706, i64 -757361751448694408, i64 500013540394364858, i64 748580250866718886, i64 1242879168328830382, i64 1977374033974150939, i64 2944078676154940804, i64 3659926193048069267, i64 4368137639120453308, i64 4836135668995329356, i64 5532061633213252278, i64 6448918945643986474, i64 6902733635092675308, i64 7801388544844847127], align 16, !dbg !3060
@.str.447 = private unnamed_addr constant [26 x i8] c"Buffer allocation failed\0A\00", align 1
@.str.1.448 = private unnamed_addr constant [20 x i8] c"  SHA-%d test #%d: \00", align 1
@sha512_test_buf = internal constant [3 x [113 x i8]] [[113 x i8] c"abc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [113 x i8] c"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu\00", [113 x i8] zeroinitializer], align 16, !dbg !3070
@sha512_test_buflen = internal constant [3 x i32] [i32 3, i32 112, i32 1000], align 4, !dbg !3075
@.str.2.449 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.3.450 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.4.451 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@sha512_padding = internal constant <{ i8, [127 x i8] }> <{ i8 -128, [127 x i8] zeroinitializer }>, align 16, !dbg !3066
@sha512_test_sum = internal constant <{ <{ [48 x i8], [16 x i8] }>, <{ [48 x i8], [16 x i8] }>, <{ [48 x i8], [16 x i8] }>, [64 x i8], [64 x i8], [64 x i8] }> <{ <{ [48 x i8], [16 x i8] }> <{ [48 x i8] c"\CB\00u?E\A3^\8B\B5\A0=i\9A\C6P\07',2\AB\0E\DE\D1c\1A\8B`ZC\FF[\ED\80\86\07+\A1\E7\CC#X\BA\EC\A14\C8%\A7", [16 x i8] zeroinitializer }>, <{ [48 x i8], [16 x i8] }> <{ [48 x i8] c"\093\0C3\F7\11G\E8=\19/\C7\82\CD\1BGS\11\1B\17;;\05\D2/\A0\80\86\E3\B0\F7\12\FC\C7\C7\1AU~-\B9f\C3\E9\FA\91t`9", [16 x i8] zeroinitializer }>, <{ [48 x i8], [16 x i8] }> <{ [48 x i8] c"\9D\0E\18\09qdt\CB\08n\83N1\0AJ\1C\ED\14\9E\9C\00\F2HRyr\CE\C5pL*[\07\B8\B3\DC8\EC\C4\EB\AE\97\DD\D8\7F=\89\85", [16 x i8] zeroinitializer }>, [64 x i8] c"\DD\AF5\A1\93az\BA\CCAsI\AE A1\12\E6\FAN\89\A9~\A2\0A\9E\EE\E6KU\D3\9A!\92\99*'O\C1\A86\BA<#\A3\FE\EB\BDEMD#d<\E8\0E*\9A\C9O\A5L\A4\9F", [64 x i8] c"\8E\95\9Bu\DA\E3\13\DA\8C\F4\F7(\14\FC\14?\8Fwy\C6\EB\9F\7F\A1r\99\AE\AD\B6\88\90\18P\1D(\9EI\00\F7\E43\1B\99\DE\C4\B5C:\C7\D3)\EE\B6\DD&T^\96\E5[\87K\E9\09", [64 x i8] c"\E7\18H=\0C\E7idN.B\C7\BC\15\B4c\8E\1F\98\B1; D(V2\A8\03\AF\A9s\EB\DE\0F\F2D\87~\A6\0AL\B0C,\E5w\C3\1B\EB\00\9C\\,I\AA.N\AD\B2\17\AD\8C\C0\9B" }>, align 16, !dbg !3078
@supported_init = internal global i32 0, align 4, !dbg !3086
@ciphersuite_preference = internal constant [163 x i32] [i32 49196, i32 49200, i32 159, i32 49325, i32 49311, i32 49188, i32 49192, i32 107, i32 49162, i32 49172, i32 57, i32 49327, i32 49315, i32 49287, i32 49291, i32 49277, i32 49267, i32 49271, i32 196, i32 136, i32 49195, i32 49199, i32 158, i32 49324, i32 49310, i32 49187, i32 49191, i32 103, i32 49161, i32 49171, i32 51, i32 49326, i32 49314, i32 49286, i32 49290, i32 49276, i32 49266, i32 49270, i32 190, i32 69, i32 49160, i32 49170, i32 22, i32 171, i32 49319, i32 49208, i32 179, i32 49206, i32 145, i32 49297, i32 49307, i32 49303, i32 49323, i32 170, i32 49318, i32 49207, i32 178, i32 49205, i32 144, i32 49296, i32 49302, i32 49306, i32 49322, i32 49204, i32 143, i32 49407, i32 157, i32 49309, i32 61, i32 53, i32 49202, i32 49194, i32 49167, i32 49198, i32 49190, i32 49157, i32 49313, i32 49275, i32 192, i32 132, i32 49293, i32 49273, i32 49289, i32 49269, i32 156, i32 49308, i32 60, i32 47, i32 49201, i32 49193, i32 49166, i32 49197, i32 49189, i32 49156, i32 49312, i32 49274, i32 186, i32 65, i32 49292, i32 49272, i32 49288, i32 49268, i32 10, i32 49165, i32 49155, i32 173, i32 183, i32 149, i32 49299, i32 49305, i32 172, i32 182, i32 148, i32 49298, i32 49304, i32 147, i32 169, i32 49317, i32 175, i32 141, i32 49295, i32 49301, i32 49321, i32 168, i32 49316, i32 174, i32 140, i32 49294, i32 49300, i32 49320, i32 139, i32 49159, i32 49169, i32 49203, i32 142, i32 5, i32 4, i32 49164, i32 49154, i32 146, i32 138, i32 21, i32 9, i32 49158, i32 49168, i32 49211, i32 49210, i32 49209, i32 181, i32 180, i32 45, i32 59, i32 2, i32 1, i32 49163, i32 49153, i32 185, i32 184, i32 46, i32 177, i32 176, i32 44, i32 0], align 16, !dbg !3102
@supported_ciphersuites = internal global [141 x i32] zeroinitializer, align 16, !dbg !3096
@ciphersuite_definitions = internal constant [141 x %struct.mbedtls_ssl_ciphersuite_t] [%struct.mbedtls_ssl_ciphersuite_t { i32 49161, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.456, i32 0, i32 0), i32 5, i32 4, i32 4, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49162, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.457, i32 0, i32 0), i32 7, i32 4, i32 4, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49187, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.458, i32 0, i32 0), i32 5, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49195, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.459, i32 0, i32 0), i32 14, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49188, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.460, i32 0, i32 0), i32 7, i32 7, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49196, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.461, i32 0, i32 0), i32 16, i32 7, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49325, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.462, i32 0, i32 0), i32 45, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49327, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.463, i32 0, i32 0), i32 45, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49324, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.464, i32 0, i32 0), i32 43, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49326, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10.465, i32 0, i32 0), i32 43, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49266, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11.466, i32 0, i32 0), i32 20, i32 6, i32 4, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49267, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12.467, i32 0, i32 0), i32 22, i32 7, i32 4, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49286, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13.468, i32 0, i32 0), i32 29, i32 6, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49287, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14.469, i32 0, i32 0), i32 31, i32 7, i32 4, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49160, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.470, i32 0, i32 0), i32 37, i32 4, i32 4, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49159, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16.471, i32 0, i32 0), i32 42, i32 4, i32 4, i32 3, i32 1, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49171, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17.472, i32 0, i32 0), i32 5, i32 4, i32 3, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49172, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18.473, i32 0, i32 0), i32 7, i32 4, i32 3, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49191, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19.474, i32 0, i32 0), i32 5, i32 6, i32 3, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49199, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.475, i32 0, i32 0), i32 14, i32 6, i32 3, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49192, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21.476, i32 0, i32 0), i32 7, i32 7, i32 3, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49200, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22.477, i32 0, i32 0), i32 16, i32 7, i32 3, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49270, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23.478, i32 0, i32 0), i32 20, i32 6, i32 3, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49271, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24.479, i32 0, i32 0), i32 22, i32 7, i32 3, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49290, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25.480, i32 0, i32 0), i32 29, i32 6, i32 3, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49291, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26.481, i32 0, i32 0), i32 31, i32 7, i32 3, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49170, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27.482, i32 0, i32 0), i32 37, i32 4, i32 3, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49169, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28.483, i32 0, i32 0), i32 42, i32 4, i32 3, i32 3, i32 1, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 159, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29.484, i32 0, i32 0), i32 16, i32 7, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 158, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30.485, i32 0, i32 0), i32 14, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 103, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31.486, i32 0, i32 0), i32 5, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 107, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32.487, i32 0, i32 0), i32 7, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 51, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33.488, i32 0, i32 0), i32 5, i32 4, i32 2, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 57, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34.489, i32 0, i32 0), i32 7, i32 4, i32 2, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49311, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35.490, i32 0, i32 0), i32 45, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49315, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36.491, i32 0, i32 0), i32 45, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49310, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37.492, i32 0, i32 0), i32 43, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49314, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38.493, i32 0, i32 0), i32 43, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 190, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39.494, i32 0, i32 0), i32 20, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 196, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40.495, i32 0, i32 0), i32 22, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 69, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41.496, i32 0, i32 0), i32 20, i32 4, i32 2, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 136, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42.497, i32 0, i32 0), i32 22, i32 4, i32 2, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49276, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43.498, i32 0, i32 0), i32 29, i32 6, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49277, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44.499, i32 0, i32 0), i32 31, i32 7, i32 2, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 22, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45.500, i32 0, i32 0), i32 37, i32 4, i32 2, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 157, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.46.501, i32 0, i32 0), i32 16, i32 7, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 156, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47.502, i32 0, i32 0), i32 14, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 60, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48.503, i32 0, i32 0), i32 5, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 61, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.49.504, i32 0, i32 0), i32 7, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 47, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50.505, i32 0, i32 0), i32 5, i32 4, i32 1, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 53, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.51.506, i32 0, i32 0), i32 7, i32 4, i32 1, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49309, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52.507, i32 0, i32 0), i32 45, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49313, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.53.508, i32 0, i32 0), i32 45, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49308, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54.509, i32 0, i32 0), i32 43, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49312, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55.510, i32 0, i32 0), i32 43, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 186, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.56.511, i32 0, i32 0), i32 20, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 192, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57.512, i32 0, i32 0), i32 22, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 65, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58.513, i32 0, i32 0), i32 20, i32 4, i32 1, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 132, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.59.514, i32 0, i32 0), i32 22, i32 4, i32 1, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49274, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60.515, i32 0, i32 0), i32 29, i32 6, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49275, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.61.516, i32 0, i32 0), i32 31, i32 7, i32 1, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.62.517, i32 0, i32 0), i32 37, i32 4, i32 1, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63.518, i32 0, i32 0), i32 42, i32 3, i32 1, i32 3, i32 0, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.64.519, i32 0, i32 0), i32 42, i32 4, i32 1, i32 3, i32 0, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49166, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65.520, i32 0, i32 0), i32 5, i32 4, i32 9, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49167, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.66.521, i32 0, i32 0), i32 7, i32 4, i32 9, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49193, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67.522, i32 0, i32 0), i32 5, i32 6, i32 9, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49201, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68.523, i32 0, i32 0), i32 14, i32 6, i32 9, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49194, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69.524, i32 0, i32 0), i32 7, i32 7, i32 9, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49202, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70.525, i32 0, i32 0), i32 16, i32 7, i32 9, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49272, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.71.526, i32 0, i32 0), i32 20, i32 6, i32 9, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49273, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.72.527, i32 0, i32 0), i32 22, i32 7, i32 9, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49292, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.73.528, i32 0, i32 0), i32 29, i32 6, i32 9, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49293, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.74.529, i32 0, i32 0), i32 31, i32 7, i32 9, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49165, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75.530, i32 0, i32 0), i32 37, i32 4, i32 9, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49164, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.76.531, i32 0, i32 0), i32 42, i32 4, i32 9, i32 3, i32 1, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49156, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.77.532, i32 0, i32 0), i32 5, i32 4, i32 10, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49157, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.78.533, i32 0, i32 0), i32 7, i32 4, i32 10, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49189, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.79.534, i32 0, i32 0), i32 5, i32 6, i32 10, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49197, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.80.535, i32 0, i32 0), i32 14, i32 6, i32 10, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49190, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.81.536, i32 0, i32 0), i32 7, i32 7, i32 10, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49198, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.82.537, i32 0, i32 0), i32 16, i32 7, i32 10, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49268, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83.538, i32 0, i32 0), i32 20, i32 6, i32 10, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49269, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.84.539, i32 0, i32 0), i32 22, i32 7, i32 10, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49288, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.85.540, i32 0, i32 0), i32 29, i32 6, i32 10, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49289, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.86.541, i32 0, i32 0), i32 31, i32 7, i32 10, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49155, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.87.542, i32 0, i32 0), i32 37, i32 4, i32 10, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49154, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.88.543, i32 0, i32 0), i32 42, i32 4, i32 10, i32 3, i32 1, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 168, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.89.544, i32 0, i32 0), i32 14, i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 169, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.90.545, i32 0, i32 0), i32 16, i32 7, i32 5, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 174, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.91.546, i32 0, i32 0), i32 5, i32 6, i32 5, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 175, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92.547, i32 0, i32 0), i32 7, i32 7, i32 5, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 140, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93.548, i32 0, i32 0), i32 5, i32 4, i32 5, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 141, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94.549, i32 0, i32 0), i32 7, i32 4, i32 5, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49317, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.95.550, i32 0, i32 0), i32 45, i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49321, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.96.551, i32 0, i32 0), i32 45, i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49316, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97.552, i32 0, i32 0), i32 43, i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49320, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.98.553, i32 0, i32 0), i32 43, i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49300, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99.554, i32 0, i32 0), i32 20, i32 6, i32 5, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49301, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.100.555, i32 0, i32 0), i32 22, i32 7, i32 5, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49294, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.101.556, i32 0, i32 0), i32 29, i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49295, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.102.557, i32 0, i32 0), i32 31, i32 7, i32 5, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 139, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103.558, i32 0, i32 0), i32 37, i32 4, i32 5, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 138, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104.559, i32 0, i32 0), i32 42, i32 4, i32 5, i32 3, i32 0, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 170, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.105.560, i32 0, i32 0), i32 14, i32 6, i32 6, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 171, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.106.561, i32 0, i32 0), i32 16, i32 7, i32 6, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 178, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.107.562, i32 0, i32 0), i32 5, i32 6, i32 6, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 179, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.108.563, i32 0, i32 0), i32 7, i32 7, i32 6, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 144, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.109.564, i32 0, i32 0), i32 5, i32 4, i32 6, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 145, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.110.565, i32 0, i32 0), i32 7, i32 4, i32 6, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49319, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111.566, i32 0, i32 0), i32 45, i32 6, i32 6, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49323, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.112.567, i32 0, i32 0), i32 45, i32 6, i32 6, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49318, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113.568, i32 0, i32 0), i32 43, i32 6, i32 6, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49322, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.114.569, i32 0, i32 0), i32 43, i32 6, i32 6, i32 3, i32 3, i32 3, i32 3, i8 2 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49302, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.115.570, i32 0, i32 0), i32 20, i32 6, i32 6, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49303, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.116.571, i32 0, i32 0), i32 22, i32 7, i32 6, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49296, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.117.572, i32 0, i32 0), i32 29, i32 6, i32 6, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49297, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.118.573, i32 0, i32 0), i32 31, i32 7, i32 6, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 143, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.119.574, i32 0, i32 0), i32 37, i32 4, i32 6, i32 3, i32 0, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 142, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120.575, i32 0, i32 0), i32 42, i32 4, i32 6, i32 3, i32 0, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49207, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.121.576, i32 0, i32 0), i32 5, i32 6, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49208, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.122.577, i32 0, i32 0), i32 7, i32 7, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49205, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.123.578, i32 0, i32 0), i32 5, i32 4, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49206, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.124.579, i32 0, i32 0), i32 7, i32 4, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49306, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.125.580, i32 0, i32 0), i32 20, i32 6, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49307, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.126.581, i32 0, i32 0), i32 22, i32 7, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49204, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.127.582, i32 0, i32 0), i32 37, i32 4, i32 8, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49203, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.128.583, i32 0, i32 0), i32 42, i32 4, i32 8, i32 3, i32 1, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 172, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.129.584, i32 0, i32 0), i32 14, i32 6, i32 7, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 173, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.130.585, i32 0, i32 0), i32 16, i32 7, i32 7, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 182, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.131.586, i32 0, i32 0), i32 5, i32 6, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 183, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.132.587, i32 0, i32 0), i32 7, i32 7, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 148, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.133.588, i32 0, i32 0), i32 5, i32 4, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 149, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.134.589, i32 0, i32 0), i32 7, i32 4, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49304, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.135.590, i32 0, i32 0), i32 20, i32 6, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49305, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.136.591, i32 0, i32 0), i32 22, i32 7, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49298, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.137.592, i32 0, i32 0), i32 29, i32 6, i32 7, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 49299, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.138.593, i32 0, i32 0), i32 31, i32 7, i32 7, i32 3, i32 3, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 147, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.139.594, i32 0, i32 0), i32 37, i32 4, i32 7, i32 3, i32 1, i32 3, i32 3, i8 0 }, %struct.mbedtls_ssl_ciphersuite_t { i32 146, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140.595, i32 0, i32 0), i32 42, i32 4, i32 7, i32 3, i32 1, i32 3, i32 3, i8 4 }, %struct.mbedtls_ssl_ciphersuite_t { i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.141.596, i32 0, i32 0), i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0 }], align 16, !dbg !3107
@.str.599 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.1.456 = private unnamed_addr constant [37 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA\00", align 1
@.str.2.457 = private unnamed_addr constant [37 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA\00", align 1
@.str.3.458 = private unnamed_addr constant [40 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256\00", align 1
@.str.4.459 = private unnamed_addr constant [40 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256\00", align 1
@.str.5.460 = private unnamed_addr constant [40 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384\00", align 1
@.str.6.461 = private unnamed_addr constant [40 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384\00", align 1
@.str.7.462 = private unnamed_addr constant [33 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-256-CCM\00", align 1
@.str.8.463 = private unnamed_addr constant [35 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-256-CCM-8\00", align 1
@.str.9.464 = private unnamed_addr constant [33 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-128-CCM\00", align 1
@.str.10.465 = private unnamed_addr constant [35 x i8] c"TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8\00", align 1
@.str.11.466 = private unnamed_addr constant [45 x i8] c"TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.12.467 = private unnamed_addr constant [45 x i8] c"TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.13.468 = private unnamed_addr constant [45 x i8] c"TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.14.469 = private unnamed_addr constant [45 x i8] c"TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.15.470 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-ECDSA-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.16.471 = private unnamed_addr constant [33 x i8] c"TLS-ECDHE-ECDSA-WITH-RC4-128-SHA\00", align 1
@.str.17.472 = private unnamed_addr constant [35 x i8] c"TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA\00", align 1
@.str.18.473 = private unnamed_addr constant [35 x i8] c"TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA\00", align 1
@.str.19.474 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256\00", align 1
@.str.20.475 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256\00", align 1
@.str.21.476 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384\00", align 1
@.str.22.477 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384\00", align 1
@.str.23.478 = private unnamed_addr constant [43 x i8] c"TLS-ECDHE-RSA-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.24.479 = private unnamed_addr constant [43 x i8] c"TLS-ECDHE-RSA-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.25.480 = private unnamed_addr constant [43 x i8] c"TLS-ECDHE-RSA-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.26.481 = private unnamed_addr constant [43 x i8] c"TLS-ECDHE-RSA-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.27.482 = private unnamed_addr constant [36 x i8] c"TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.28.483 = private unnamed_addr constant [31 x i8] c"TLS-ECDHE-RSA-WITH-RC4-128-SHA\00", align 1
@.str.29.484 = private unnamed_addr constant [36 x i8] c"TLS-DHE-RSA-WITH-AES-256-GCM-SHA384\00", align 1
@.str.30.485 = private unnamed_addr constant [36 x i8] c"TLS-DHE-RSA-WITH-AES-128-GCM-SHA256\00", align 1
@.str.31.486 = private unnamed_addr constant [36 x i8] c"TLS-DHE-RSA-WITH-AES-128-CBC-SHA256\00", align 1
@.str.32.487 = private unnamed_addr constant [36 x i8] c"TLS-DHE-RSA-WITH-AES-256-CBC-SHA256\00", align 1
@.str.33.488 = private unnamed_addr constant [33 x i8] c"TLS-DHE-RSA-WITH-AES-128-CBC-SHA\00", align 1
@.str.34.489 = private unnamed_addr constant [33 x i8] c"TLS-DHE-RSA-WITH-AES-256-CBC-SHA\00", align 1
@.str.35.490 = private unnamed_addr constant [29 x i8] c"TLS-DHE-RSA-WITH-AES-256-CCM\00", align 1
@.str.36.491 = private unnamed_addr constant [31 x i8] c"TLS-DHE-RSA-WITH-AES-256-CCM-8\00", align 1
@.str.37.492 = private unnamed_addr constant [29 x i8] c"TLS-DHE-RSA-WITH-AES-128-CCM\00", align 1
@.str.38.493 = private unnamed_addr constant [31 x i8] c"TLS-DHE-RSA-WITH-AES-128-CCM-8\00", align 1
@.str.39.494 = private unnamed_addr constant [41 x i8] c"TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.40.495 = private unnamed_addr constant [41 x i8] c"TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256\00", align 1
@.str.41.496 = private unnamed_addr constant [38 x i8] c"TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA\00", align 1
@.str.42.497 = private unnamed_addr constant [38 x i8] c"TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA\00", align 1
@.str.43.498 = private unnamed_addr constant [41 x i8] c"TLS-DHE-RSA-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.44.499 = private unnamed_addr constant [41 x i8] c"TLS-DHE-RSA-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.45.500 = private unnamed_addr constant [34 x i8] c"TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.46.501 = private unnamed_addr constant [32 x i8] c"TLS-RSA-WITH-AES-256-GCM-SHA384\00", align 1
@.str.47.502 = private unnamed_addr constant [32 x i8] c"TLS-RSA-WITH-AES-128-GCM-SHA256\00", align 1
@.str.48.503 = private unnamed_addr constant [32 x i8] c"TLS-RSA-WITH-AES-128-CBC-SHA256\00", align 1
@.str.49.504 = private unnamed_addr constant [32 x i8] c"TLS-RSA-WITH-AES-256-CBC-SHA256\00", align 1
@.str.50.505 = private unnamed_addr constant [29 x i8] c"TLS-RSA-WITH-AES-128-CBC-SHA\00", align 1
@.str.51.506 = private unnamed_addr constant [29 x i8] c"TLS-RSA-WITH-AES-256-CBC-SHA\00", align 1
@.str.52.507 = private unnamed_addr constant [25 x i8] c"TLS-RSA-WITH-AES-256-CCM\00", align 1
@.str.53.508 = private unnamed_addr constant [27 x i8] c"TLS-RSA-WITH-AES-256-CCM-8\00", align 1
@.str.54.509 = private unnamed_addr constant [25 x i8] c"TLS-RSA-WITH-AES-128-CCM\00", align 1
@.str.55.510 = private unnamed_addr constant [27 x i8] c"TLS-RSA-WITH-AES-128-CCM-8\00", align 1
@.str.56.511 = private unnamed_addr constant [37 x i8] c"TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.57.512 = private unnamed_addr constant [37 x i8] c"TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256\00", align 1
@.str.58.513 = private unnamed_addr constant [34 x i8] c"TLS-RSA-WITH-CAMELLIA-128-CBC-SHA\00", align 1
@.str.59.514 = private unnamed_addr constant [34 x i8] c"TLS-RSA-WITH-CAMELLIA-256-CBC-SHA\00", align 1
@.str.60.515 = private unnamed_addr constant [37 x i8] c"TLS-RSA-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.61.516 = private unnamed_addr constant [37 x i8] c"TLS-RSA-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.62.517 = private unnamed_addr constant [30 x i8] c"TLS-RSA-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.63.518 = private unnamed_addr constant [25 x i8] c"TLS-RSA-WITH-RC4-128-MD5\00", align 1
@.str.64.519 = private unnamed_addr constant [25 x i8] c"TLS-RSA-WITH-RC4-128-SHA\00", align 1
@.str.65.520 = private unnamed_addr constant [34 x i8] c"TLS-ECDH-RSA-WITH-AES-128-CBC-SHA\00", align 1
@.str.66.521 = private unnamed_addr constant [34 x i8] c"TLS-ECDH-RSA-WITH-AES-256-CBC-SHA\00", align 1
@.str.67.522 = private unnamed_addr constant [37 x i8] c"TLS-ECDH-RSA-WITH-AES-128-CBC-SHA256\00", align 1
@.str.68.523 = private unnamed_addr constant [37 x i8] c"TLS-ECDH-RSA-WITH-AES-128-GCM-SHA256\00", align 1
@.str.69.524 = private unnamed_addr constant [37 x i8] c"TLS-ECDH-RSA-WITH-AES-256-CBC-SHA384\00", align 1
@.str.70.525 = private unnamed_addr constant [37 x i8] c"TLS-ECDH-RSA-WITH-AES-256-GCM-SHA384\00", align 1
@.str.71.526 = private unnamed_addr constant [42 x i8] c"TLS-ECDH-RSA-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.72.527 = private unnamed_addr constant [42 x i8] c"TLS-ECDH-RSA-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.73.528 = private unnamed_addr constant [42 x i8] c"TLS-ECDH-RSA-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.74.529 = private unnamed_addr constant [42 x i8] c"TLS-ECDH-RSA-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.75.530 = private unnamed_addr constant [35 x i8] c"TLS-ECDH-RSA-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.76.531 = private unnamed_addr constant [30 x i8] c"TLS-ECDH-RSA-WITH-RC4-128-SHA\00", align 1
@.str.77.532 = private unnamed_addr constant [36 x i8] c"TLS-ECDH-ECDSA-WITH-AES-128-CBC-SHA\00", align 1
@.str.78.533 = private unnamed_addr constant [36 x i8] c"TLS-ECDH-ECDSA-WITH-AES-256-CBC-SHA\00", align 1
@.str.79.534 = private unnamed_addr constant [39 x i8] c"TLS-ECDH-ECDSA-WITH-AES-128-CBC-SHA256\00", align 1
@.str.80.535 = private unnamed_addr constant [39 x i8] c"TLS-ECDH-ECDSA-WITH-AES-128-GCM-SHA256\00", align 1
@.str.81.536 = private unnamed_addr constant [39 x i8] c"TLS-ECDH-ECDSA-WITH-AES-256-CBC-SHA384\00", align 1
@.str.82.537 = private unnamed_addr constant [39 x i8] c"TLS-ECDH-ECDSA-WITH-AES-256-GCM-SHA384\00", align 1
@.str.83.538 = private unnamed_addr constant [44 x i8] c"TLS-ECDH-ECDSA-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.84.539 = private unnamed_addr constant [44 x i8] c"TLS-ECDH-ECDSA-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.85.540 = private unnamed_addr constant [44 x i8] c"TLS-ECDH-ECDSA-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.86.541 = private unnamed_addr constant [44 x i8] c"TLS-ECDH-ECDSA-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.87.542 = private unnamed_addr constant [37 x i8] c"TLS-ECDH-ECDSA-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.88.543 = private unnamed_addr constant [32 x i8] c"TLS-ECDH-ECDSA-WITH-RC4-128-SHA\00", align 1
@.str.89.544 = private unnamed_addr constant [32 x i8] c"TLS-PSK-WITH-AES-128-GCM-SHA256\00", align 1
@.str.90.545 = private unnamed_addr constant [32 x i8] c"TLS-PSK-WITH-AES-256-GCM-SHA384\00", align 1
@.str.91.546 = private unnamed_addr constant [32 x i8] c"TLS-PSK-WITH-AES-128-CBC-SHA256\00", align 1
@.str.92.547 = private unnamed_addr constant [32 x i8] c"TLS-PSK-WITH-AES-256-CBC-SHA384\00", align 1
@.str.93.548 = private unnamed_addr constant [29 x i8] c"TLS-PSK-WITH-AES-128-CBC-SHA\00", align 1
@.str.94.549 = private unnamed_addr constant [29 x i8] c"TLS-PSK-WITH-AES-256-CBC-SHA\00", align 1
@.str.95.550 = private unnamed_addr constant [25 x i8] c"TLS-PSK-WITH-AES-256-CCM\00", align 1
@.str.96.551 = private unnamed_addr constant [27 x i8] c"TLS-PSK-WITH-AES-256-CCM-8\00", align 1
@.str.97.552 = private unnamed_addr constant [25 x i8] c"TLS-PSK-WITH-AES-128-CCM\00", align 1
@.str.98.553 = private unnamed_addr constant [27 x i8] c"TLS-PSK-WITH-AES-128-CCM-8\00", align 1
@.str.99.554 = private unnamed_addr constant [37 x i8] c"TLS-PSK-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.100.555 = private unnamed_addr constant [37 x i8] c"TLS-PSK-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.101.556 = private unnamed_addr constant [37 x i8] c"TLS-PSK-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.102.557 = private unnamed_addr constant [37 x i8] c"TLS-PSK-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.103.558 = private unnamed_addr constant [30 x i8] c"TLS-PSK-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.104.559 = private unnamed_addr constant [25 x i8] c"TLS-PSK-WITH-RC4-128-SHA\00", align 1
@.str.105.560 = private unnamed_addr constant [36 x i8] c"TLS-DHE-PSK-WITH-AES-128-GCM-SHA256\00", align 1
@.str.106.561 = private unnamed_addr constant [36 x i8] c"TLS-DHE-PSK-WITH-AES-256-GCM-SHA384\00", align 1
@.str.107.562 = private unnamed_addr constant [36 x i8] c"TLS-DHE-PSK-WITH-AES-128-CBC-SHA256\00", align 1
@.str.108.563 = private unnamed_addr constant [36 x i8] c"TLS-DHE-PSK-WITH-AES-256-CBC-SHA384\00", align 1
@.str.109.564 = private unnamed_addr constant [33 x i8] c"TLS-DHE-PSK-WITH-AES-128-CBC-SHA\00", align 1
@.str.110.565 = private unnamed_addr constant [33 x i8] c"TLS-DHE-PSK-WITH-AES-256-CBC-SHA\00", align 1
@.str.111.566 = private unnamed_addr constant [29 x i8] c"TLS-DHE-PSK-WITH-AES-256-CCM\00", align 1
@.str.112.567 = private unnamed_addr constant [31 x i8] c"TLS-DHE-PSK-WITH-AES-256-CCM-8\00", align 1
@.str.113.568 = private unnamed_addr constant [29 x i8] c"TLS-DHE-PSK-WITH-AES-128-CCM\00", align 1
@.str.114.569 = private unnamed_addr constant [31 x i8] c"TLS-DHE-PSK-WITH-AES-128-CCM-8\00", align 1
@.str.115.570 = private unnamed_addr constant [41 x i8] c"TLS-DHE-PSK-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.116.571 = private unnamed_addr constant [41 x i8] c"TLS-DHE-PSK-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.117.572 = private unnamed_addr constant [41 x i8] c"TLS-DHE-PSK-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.118.573 = private unnamed_addr constant [41 x i8] c"TLS-DHE-PSK-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.119.574 = private unnamed_addr constant [34 x i8] c"TLS-DHE-PSK-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.120.575 = private unnamed_addr constant [29 x i8] c"TLS-DHE-PSK-WITH-RC4-128-SHA\00", align 1
@.str.121.576 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-PSK-WITH-AES-128-CBC-SHA256\00", align 1
@.str.122.577 = private unnamed_addr constant [38 x i8] c"TLS-ECDHE-PSK-WITH-AES-256-CBC-SHA384\00", align 1
@.str.123.578 = private unnamed_addr constant [35 x i8] c"TLS-ECDHE-PSK-WITH-AES-128-CBC-SHA\00", align 1
@.str.124.579 = private unnamed_addr constant [35 x i8] c"TLS-ECDHE-PSK-WITH-AES-256-CBC-SHA\00", align 1
@.str.125.580 = private unnamed_addr constant [43 x i8] c"TLS-ECDHE-PSK-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.126.581 = private unnamed_addr constant [43 x i8] c"TLS-ECDHE-PSK-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.127.582 = private unnamed_addr constant [36 x i8] c"TLS-ECDHE-PSK-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.128.583 = private unnamed_addr constant [31 x i8] c"TLS-ECDHE-PSK-WITH-RC4-128-SHA\00", align 1
@.str.129.584 = private unnamed_addr constant [36 x i8] c"TLS-RSA-PSK-WITH-AES-128-GCM-SHA256\00", align 1
@.str.130.585 = private unnamed_addr constant [36 x i8] c"TLS-RSA-PSK-WITH-AES-256-GCM-SHA384\00", align 1
@.str.131.586 = private unnamed_addr constant [36 x i8] c"TLS-RSA-PSK-WITH-AES-128-CBC-SHA256\00", align 1
@.str.132.587 = private unnamed_addr constant [36 x i8] c"TLS-RSA-PSK-WITH-AES-256-CBC-SHA384\00", align 1
@.str.133.588 = private unnamed_addr constant [33 x i8] c"TLS-RSA-PSK-WITH-AES-128-CBC-SHA\00", align 1
@.str.134.589 = private unnamed_addr constant [33 x i8] c"TLS-RSA-PSK-WITH-AES-256-CBC-SHA\00", align 1
@.str.135.590 = private unnamed_addr constant [41 x i8] c"TLS-RSA-PSK-WITH-CAMELLIA-128-CBC-SHA256\00", align 1
@.str.136.591 = private unnamed_addr constant [41 x i8] c"TLS-RSA-PSK-WITH-CAMELLIA-256-CBC-SHA384\00", align 1
@.str.137.592 = private unnamed_addr constant [41 x i8] c"TLS-RSA-PSK-WITH-CAMELLIA-128-GCM-SHA256\00", align 1
@.str.138.593 = private unnamed_addr constant [41 x i8] c"TLS-RSA-PSK-WITH-CAMELLIA-256-GCM-SHA384\00", align 1
@.str.139.594 = private unnamed_addr constant [34 x i8] c"TLS-RSA-PSK-WITH-3DES-EDE-CBC-SHA\00", align 1
@.str.140.595 = private unnamed_addr constant [29 x i8] c"TLS-RSA-PSK-WITH-RC4-128-SHA\00", align 1
@.str.141.596 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.617 = private unnamed_addr constant [76 x i8] c"/home/yang/sgxTestcases/mbedtls-SGX/trusted/mbedtls-2.6.0/library/ssl_srv.c\00", align 1
@.str.1.618 = private unnamed_addr constant [17 x i8] c"server state: %d\00", align 1
@.str.2.619 = private unnamed_addr constant [16 x i8] c"handshake: done\00", align 1
@.str.3.620 = private unnamed_addr constant [17 x i8] c"invalid state %d\00", align 1
@.str.4.719 = private unnamed_addr constant [22 x i8] c"=> parse client hello\00", align 1
@.str.5.720 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_fetch_input\00", align 1
@.str.6.721 = private unnamed_addr constant [14 x i8] c"record header\00", align 1
@.str.7.722 = private unnamed_addr constant [34 x i8] c"client hello v3, message type: %d\00", align 1
@.str.8.723 = private unnamed_addr constant [25 x i8] c"bad client hello message\00", align 1
@.str.9.724 = private unnamed_addr constant [34 x i8] c"client hello v3, message len.: %d\00", align 1
@.str.10.725 = private unnamed_addr constant [43 x i8] c"client hello v3, protocol version: [%d:%d]\00", align 1
@.str.11.726 = private unnamed_addr constant [28 x i8] c"replayed record, discarding\00", align 1
@.str.12.727 = private unnamed_addr constant [16 x i8] c"record contents\00", align 1
@.str.13.728 = private unnamed_addr constant [36 x i8] c"client hello v3, handshake type: %d\00", align 1
@.str.14.729 = private unnamed_addr constant [36 x i8] c"client hello v3, handshake len.: %d\00", align 1
@.str.15.730 = private unnamed_addr constant [47 x i8] c"bad client hello message_seq: %d (expected %d)\00", align 1
@.str.16.731 = private unnamed_addr constant [40 x i8] c"ClientHello fragmentation not supported\00", align 1
@.str.17.732 = private unnamed_addr constant [22 x i8] c"client hello, version\00", align 1
@.str.18.733 = private unnamed_addr constant [64 x i8] c"client only supports ssl smaller than minimum [%d:%d] < [%d:%d]\00", align 1
@.str.19.734 = private unnamed_addr constant [27 x i8] c"client hello, random bytes\00", align 1
@.str.20.735 = private unnamed_addr constant [25 x i8] c"client hello, session id\00", align 1
@.str.21.736 = private unnamed_addr constant [21 x i8] c"client hello, cookie\00", align 1
@.str.22.737 = private unnamed_addr constant [27 x i8] c"cookie verification failed\00", align 1
@.str.23.738 = private unnamed_addr constant [27 x i8] c"cookie verification passed\00", align 1
@.str.24.739 = private unnamed_addr constant [28 x i8] c"cookie verification skipped\00", align 1
@.str.25.740 = private unnamed_addr constant [30 x i8] c"client hello, ciphersuitelist\00", align 1
@.str.26.741 = private unnamed_addr constant [26 x i8] c"client hello, compression\00", align 1
@.str.27.742 = private unnamed_addr constant [24 x i8] c"client hello extensions\00", align 1
@.str.28.743 = private unnamed_addr constant [27 x i8] c"found ServerName extension\00", align 1
@.str.29.744 = private unnamed_addr constant [30 x i8] c"found renegotiation extension\00", align 1
@.str.30.745 = private unnamed_addr constant [37 x i8] c"found signature_algorithms extension\00", align 1
@.str.31.746 = private unnamed_addr constant [42 x i8] c"found supported elliptic curves extension\00", align 1
@.str.32.747 = private unnamed_addr constant [40 x i8] c"found supported point formats extension\00", align 1
@.str.33.748 = private unnamed_addr constant [36 x i8] c"found max fragment length extension\00", align 1
@.str.34.749 = private unnamed_addr constant [31 x i8] c"found truncated hmac extension\00", align 1
@.str.35.750 = private unnamed_addr constant [33 x i8] c"found encrypt then mac extension\00", align 1
@.str.36.751 = private unnamed_addr constant [39 x i8] c"found extended master secret extension\00", align 1
@.str.37.752 = private unnamed_addr constant [31 x i8] c"found session ticket extension\00", align 1
@.str.38.753 = private unnamed_addr constant [21 x i8] c"found alpn extension\00", align 1
@.str.39.754 = private unnamed_addr constant [39 x i8] c"unknown extension found: %d (ignoring)\00", align 1
@.str.40.755 = private unnamed_addr constant [23 x i8] c"received FALLBACK_SCSV\00", align 1
@.str.41.756 = private unnamed_addr constant [22 x i8] c"inapropriate fallback\00", align 1
@.str.42.757 = private unnamed_addr constant [39 x i8] c"received TLS_EMPTY_RENEGOTIATION_INFO \00", align 1
@.str.43.758 = private unnamed_addr constant [49 x i8] c"received RENEGOTIATION SCSV during renegotiation\00", align 1
@.str.44.759 = private unnamed_addr constant [45 x i8] c"legacy renegotiation, breaking off handshake\00", align 1
@.str.45.760 = private unnamed_addr constant [46 x i8] c"renegotiation_info extension missing (secure)\00", align 1
@.str.46.761 = private unnamed_addr constant [33 x i8] c"legacy renegotiation not allowed\00", align 1
@.str.47.762 = private unnamed_addr constant [46 x i8] c"renegotiation_info extension present (legacy)\00", align 1
@.str.48.763 = private unnamed_addr constant [52 x i8] c"got ciphersuites in common, but none of them usable\00", align 1
@.str.49.764 = private unnamed_addr constant [30 x i8] c"got no ciphersuites in common\00", align 1
@.str.50.765 = private unnamed_addr constant [25 x i8] c"selected ciphersuite: %s\00", align 1
@.str.51.766 = private unnamed_addr constant [45 x i8] c"client hello v3, signature_algorithm ext: %d\00", align 1
@.str.52.767 = private unnamed_addr constant [65 x i8] c"no hash algorithm for signature algorithm %d - should not happen\00", align 1
@.str.53.768 = private unnamed_addr constant [22 x i8] c"<= parse client hello\00", align 1
@.str.54.798 = private unnamed_addr constant [27 x i8] c"parse ServerName extension\00", align 1
@.str.55.799 = private unnamed_addr constant [16 x i8] c"ssl_sni_wrapper\00", align 1
@.str.56.796 = private unnamed_addr constant [32 x i8] c"non-matching renegotiation info\00", align 1
@.str.57.797 = private unnamed_addr constant [35 x i8] c"non-zero length renegotiation info\00", align 1
@.str.58.792 = private unnamed_addr constant [69 x i8] c"client hello v3, signature_algorithm ext unknown sig alg encoding %d\00", align 1
@.str.59.793 = private unnamed_addr constant [71 x i8] c"client hello v3, signature_algorithm ext: unknown hash alg encoding %d\00", align 1
@.str.60.794 = private unnamed_addr constant [67 x i8] c"client hello v3, signature_algorithm ext: match sig %d and hash %d\00", align 1
@.str.61.795 = private unnamed_addr constant [68 x i8] c"client hello v3, signature_algorithm ext: hash alg %d not supported\00", align 1
@.str.62.791 = private unnamed_addr constant [26 x i8] c"point format selected: %d\00", align 1
@.str.63.784 = private unnamed_addr constant [18 x i8] c"ticket length: %d\00", align 1
@.str.64.785 = private unnamed_addr constant [31 x i8] c"ticket rejected: renegotiating\00", align 1
@.str.65.786 = private unnamed_addr constant [24 x i8] c"ticket is not authentic\00", align 1
@.str.66.787 = private unnamed_addr constant [18 x i8] c"ticket is expired\00", align 1
@.str.67.788 = private unnamed_addr constant [25 x i8] c"mbedtls_ssl_ticket_parse\00", align 1
@.str.68.790 = private unnamed_addr constant [42 x i8] c"session successfully restored from ticket\00", align 1
@.str.69.632 = private unnamed_addr constant [20 x i8] c"should never happen\00", align 1
@.str.70.769 = private unnamed_addr constant [23 x i8] c"trying ciphersuite: %s\00", align 1
@.str.71.770 = private unnamed_addr constant [30 x i8] c"ciphersuite mismatch: version\00", align 1
@.str.72.771 = private unnamed_addr constant [26 x i8] c"ciphersuite mismatch: rc4\00", align 1
@.str.73.772 = private unnamed_addr constant [47 x i8] c"ciphersuite mismatch: no common elliptic curve\00", align 1
@.str.74.773 = private unnamed_addr constant [40 x i8] c"ciphersuite mismatch: no pre-shared key\00", align 1
@.str.75.774 = private unnamed_addr constant [76 x i8] c"ciphersuite mismatch: no suitable hash algorithm for signature algorithm %d\00", align 1
@.str.76.775 = private unnamed_addr constant [46 x i8] c"ciphersuite mismatch: no suitable certificate\00", align 1
@.str.77.776 = private unnamed_addr constant [33 x i8] c"ciphersuite requires certificate\00", align 1
@.str.78.777 = private unnamed_addr constant [26 x i8] c"server has no certificate\00", align 1
@.str.79.778 = private unnamed_addr constant [41 x i8] c"candidate certificate chain, certificate\00", align 1
@.str.80.779 = private unnamed_addr constant [31 x i8] c"certificate mismatch: key type\00", align 1
@.str.81.780 = private unnamed_addr constant [53 x i8] c"certificate mismatch: (extended) key usage extension\00", align 1
@.str.82.781 = private unnamed_addr constant [37 x i8] c"certificate mismatch: elliptic curve\00", align 1
@.str.83.782 = private unnamed_addr constant [57 x i8] c"certificate not preferred: sha-2 with pre-TLS 1.2 client\00", align 1
@.str.84.783 = private unnamed_addr constant [40 x i8] c"selected certificate chain, certificate\00", align 1
@.str.85.690 = private unnamed_addr constant [22 x i8] c"=> write server hello\00", align 1
@.str.86.691 = private unnamed_addr constant [35 x i8] c"client hello was not authenticated\00", align 1
@.str.87.692 = private unnamed_addr constant [22 x i8] c"<= write server hello\00", align 1
@.str.88.693 = private unnamed_addr constant [16 x i8] c"no RNG provided\00", align 1
@.str.89.694 = private unnamed_addr constant [38 x i8] c"server hello, chosen version: [%d:%d]\00", align 1
@.str.90.695 = private unnamed_addr constant [27 x i8] c"server hello, random bytes\00", align 1
@.str.91.696 = private unnamed_addr constant [41 x i8] c"session successfully restored from cache\00", align 1
@.str.92.650 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_derive_keys\00", align 1
@.str.93.697 = private unnamed_addr constant [34 x i8] c"server hello, session id len.: %d\00", align 1
@.str.94.698 = private unnamed_addr constant [25 x i8] c"server hello, session id\00", align 1
@.str.95.701 = private unnamed_addr constant [28 x i8] c"%s session has been resumed\00", align 1
@.str.96.699 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.97.700 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.98.702 = private unnamed_addr constant [37 x i8] c"server hello, chosen ciphersuite: %s\00", align 1
@.str.99.703 = private unnamed_addr constant [36 x i8] c"server hello, compress alg.: 0x%02X\00", align 1
@.str.100.704 = private unnamed_addr constant [41 x i8] c"server hello, total extension length: %d\00", align 1
@.str.101.713 = private unnamed_addr constant [30 x i8] c"=> write hello verify request\00", align 1
@.str.102.714 = private unnamed_addr constant [15 x i8] c"server version\00", align 1
@.str.103.715 = private unnamed_addr constant [30 x i8] c"inconsistent cookie callbacks\00", align 1
@.str.104.716 = private unnamed_addr constant [15 x i8] c"f_cookie_write\00", align 1
@.str.105.717 = private unnamed_addr constant [12 x i8] c"cookie sent\00", align 1
@.str.106.623 = private unnamed_addr constant [25 x i8] c"mbedtls_ssl_write_record\00", align 1
@.str.107.718 = private unnamed_addr constant [30 x i8] c"<= write hello verify request\00", align 1
@.str.108.712 = private unnamed_addr constant [45 x i8] c"server hello, secure renegotiation extension\00", align 1
@.str.109.711 = private unnamed_addr constant [44 x i8] c"server hello, max_fragment_length extension\00", align 1
@.str.110.710 = private unnamed_addr constant [46 x i8] c"server hello, adding truncated hmac extension\00", align 1
@.str.111.709 = private unnamed_addr constant [48 x i8] c"server hello, adding encrypt then mac extension\00", align 1
@.str.112.708 = private unnamed_addr constant [54 x i8] c"server hello, adding extended master secret extension\00", align 1
@.str.113.707 = private unnamed_addr constant [46 x i8] c"server hello, adding session ticket extension\00", align 1
@.str.114.706 = private unnamed_addr constant [48 x i8] c"server hello, supported_point_formats extension\00", align 1
@.str.115.705 = private unnamed_addr constant [36 x i8] c"server hello, adding alpn extension\00", align 1
@.str.116.666 = private unnamed_addr constant [29 x i8] c"=> write server key exchange\00", align 1
@.str.117.667 = private unnamed_addr constant [34 x i8] c"<= skip write server key exchange\00", align 1
@.str.118.668 = private unnamed_addr constant [21 x i8] c"no DH parameters set\00", align 1
@.str.119.669 = private unnamed_addr constant [17 x i8] c"mbedtls_mpi_copy\00", align 1
@.str.120.670 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_make_params\00", align 1
@.str.121.671 = private unnamed_addr constant [8 x i8] c"DHM: X \00", align 1
@.str.122.672 = private unnamed_addr constant [8 x i8] c"DHM: P \00", align 1
@.str.123.673 = private unnamed_addr constant [8 x i8] c"DHM: G \00", align 1
@.str.124.674 = private unnamed_addr constant [8 x i8] c"DHM: GX\00", align 1
@.str.125.675 = private unnamed_addr constant [28 x i8] c"no matching curve for ECDHE\00", align 1
@.str.126.676 = private unnamed_addr constant [16 x i8] c"ECDHE curve: %s\00", align 1
@.str.127.677 = private unnamed_addr constant [23 x i8] c"mbedtls_ecp_group_load\00", align 1
@.str.128.678 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_make_params\00", align 1
@.str.129.679 = private unnamed_addr constant [9 x i8] c"ECDH: Q \00", align 1
@.str.130.680 = private unnamed_addr constant [35 x i8] c"pick hash algorithm %d for signing\00", align 1
@.str.131.681 = private unnamed_addr constant [17 x i8] c"mbedtls_md_setup\00", align 1
@.str.132.682 = private unnamed_addr constant [16 x i8] c"parameters hash\00", align 1
@.str.133.683 = private unnamed_addr constant [19 x i8] c"got no private key\00", align 1
@.str.134.684 = private unnamed_addr constant [16 x i8] c"mbedtls_pk_sign\00", align 1
@.str.135.685 = private unnamed_addr constant [13 x i8] c"my signature\00", align 1
@.str.136.686 = private unnamed_addr constant [29 x i8] c"<= write server key exchange\00", align 1
@.str.137.687 = private unnamed_addr constant [28 x i8] c"server key not ECDH capable\00", align 1
@.str.138.689 = private unnamed_addr constant [24 x i8] c"mbedtls_ecdh_get_params\00", align 1
@.str.139.661 = private unnamed_addr constant [29 x i8] c"=> write certificate request\00", align 1
@.str.140.662 = private unnamed_addr constant [34 x i8] c"<= skip write certificate request\00", align 1
@.str.141.663 = private unnamed_addr constant [31 x i8] c"skipping CAs: buffer too short\00", align 1
@.str.142.664 = private unnamed_addr constant [13 x i8] c"requested DN\00", align 1
@.str.143.665 = private unnamed_addr constant [29 x i8] c"<= write certificate request\00", align 1
@.str.144.659 = private unnamed_addr constant [27 x i8] c"=> write server hello done\00", align 1
@.str.145.660 = private unnamed_addr constant [27 x i8] c"<= write server hello done\00", align 1
@.str.146.635 = private unnamed_addr constant [29 x i8] c"=> parse client key exchange\00", align 1
@.str.147.636 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_read_record\00", align 1
@.str.148.637 = private unnamed_addr constant [32 x i8] c"bad client key exchange message\00", align 1
@.str.149.638 = private unnamed_addr constant [27 x i8] c"ssl_parse_client_dh_public\00", align 1
@.str.150.639 = private unnamed_addr constant [24 x i8] c"bad client key exchange\00", align 1
@.str.151.640 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_calc_secret\00", align 1
@.str.152.641 = private unnamed_addr constant [8 x i8] c"DHM: K \00", align 1
@.str.153.642 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_read_public\00", align 1
@.str.154.643 = private unnamed_addr constant [10 x i8] c"ECDH: Qp \00", align 1
@.str.155.644 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_calc_secret\00", align 1
@.str.156.645 = private unnamed_addr constant [10 x i8] c"ECDH: z  \00", align 1
@.str.157.646 = private unnamed_addr constant [30 x i8] c"ssl_parse_client_psk_identity\00", align 1
@.str.158.647 = private unnamed_addr constant [33 x i8] c"mbedtls_ssl_psk_derive_premaster\00", align 1
@.str.159.648 = private unnamed_addr constant [24 x i8] c"ssl_parse_encrypted_pms\00", align 1
@.str.160.649 = private unnamed_addr constant [37 x i8] c"ssl_parse_parse_encrypted_pms_secret\00", align 1
@.str.161.651 = private unnamed_addr constant [29 x i8] c"<= parse client key exchange\00", align 1
@.str.162.657 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_read_public\00", align 1
@.str.163.658 = private unnamed_addr constant [8 x i8] c"DHM: GY\00", align 1
@.str.164.654 = private unnamed_addr constant [22 x i8] c"got no pre-shared key\00", align 1
@.str.165.656 = private unnamed_addr constant [21 x i8] c"Unknown PSK identity\00", align 1
@.str.166.653 = private unnamed_addr constant [23 x i8] c"got no RSA private key\00", align 1
@.str.167.625 = private unnamed_addr constant [28 x i8] c"=> parse certificate verify\00", align 1
@.str.168.626 = private unnamed_addr constant [33 x i8] c"<= skip parse certificate verify\00", align 1
@.str.169.627 = private unnamed_addr constant [30 x i8] c"mbedtls_ssl_read_record_layer\00", align 1
@.str.170.628 = private unnamed_addr constant [32 x i8] c"mbedtls_ssl_handle_message_type\00", align 1
@.str.171.629 = private unnamed_addr constant [31 x i8] c"bad certificate verify message\00", align 1
@.str.172.630 = private unnamed_addr constant [58 x i8] c"peer not adhering to requested sig_alg for verify message\00", align 1
@.str.173.631 = private unnamed_addr constant [31 x i8] c"sig_alg doesn't match cert key\00", align 1
@.str.174.633 = private unnamed_addr constant [18 x i8] c"mbedtls_pk_verify\00", align 1
@.str.175.634 = private unnamed_addr constant [28 x i8] c"<= parse certificate verify\00", align 1
@.str.176.621 = private unnamed_addr constant [28 x i8] c"=> write new session ticket\00", align 1
@.str.177.622 = private unnamed_addr constant [25 x i8] c"mbedtls_ssl_ticket_write\00", align 1
@.str.178.624 = private unnamed_addr constant [28 x i8] c"<= write new session ticket\00", align 1
@.str.813 = private unnamed_addr constant [76 x i8] c"/home/yang/sgxTestcases/mbedtls-SGX/trusted/mbedtls-2.6.0/library/ssl_tls.c\00", align 1
@.str.1.814 = private unnamed_addr constant [15 x i8] c"=> derive keys\00", align 1
@.str.2.815 = private unnamed_addr constant [29 x i8] c"cipher info for %d not found\00", align 1
@.str.3.816 = private unnamed_addr constant [33 x i8] c"mbedtls_md info for %d not found\00", align 1
@.str.4.817 = private unnamed_addr constant [20 x i8] c"should never happen\00", align 1
@.str.5.818 = private unnamed_addr constant [17 x i8] c"premaster secret\00", align 1
@.str.6.819 = private unnamed_addr constant [29 x i8] c"using extended master secret\00", align 1
@.str.7.820 = private unnamed_addr constant [13 x i8] c"session hash\00", align 1
@.str.8.821 = private unnamed_addr constant [23 x i8] c"extended master secret\00", align 1
@.str.9.822 = private unnamed_addr constant [4 x i8] c"prf\00", align 1
@.str.10.823 = private unnamed_addr constant [14 x i8] c"master secret\00", align 1
@.str.11.825 = private unnamed_addr constant [31 x i8] c"no premaster (session resumed)\00", align 1
@.str.12.826 = private unnamed_addr constant [14 x i8] c"key expansion\00", align 1
@.str.13.827 = private unnamed_addr constant [17 x i8] c"ciphersuite = %s\00", align 1
@.str.14.828 = private unnamed_addr constant [13 x i8] c"random bytes\00", align 1
@.str.15.829 = private unnamed_addr constant [10 x i8] c"key block\00", align 1
@.str.16.830 = private unnamed_addr constant [17 x i8] c"mbedtls_md_setup\00", align 1
@.str.17.831 = private unnamed_addr constant [46 x i8] c"keylen: %d, minlen: %d, ivlen: %d, maclen: %d\00", align 1
@.str.18.832 = private unnamed_addr constant [21 x i8] c"mbedtls_cipher_setup\00", align 1
@.str.19.833 = private unnamed_addr constant [22 x i8] c"mbedtls_cipher_setkey\00", align 1
@.str.20.834 = private unnamed_addr constant [32 x i8] c"mbedtls_cipher_set_padding_mode\00", align 1
@.str.21.835 = private unnamed_addr constant [15 x i8] c"<= derive keys\00", align 1
@.str.22.844 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_calc_secret\00", align 1
@.str.23.845 = private unnamed_addr constant [8 x i8] c"DHM: K \00", align 1
@.str.24.846 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_calc_secret\00", align 1
@.str.25.847 = private unnamed_addr constant [8 x i8] c"ECDH: z\00", align 1
@.str.26.850 = private unnamed_addr constant [15 x i8] c"=> fetch input\00", align 1
@.str.27.851 = private unnamed_addr constant [60 x i8] c"Bad usage of mbedtls_ssl_set_bio() or mbedtls_ssl_set_bio()\00", align 1
@.str.28.852 = private unnamed_addr constant [31 x i8] c"requesting more data than fits\00", align 1
@.str.29.853 = private unnamed_addr constant [49 x i8] c"You must use mbedtls_ssl_set_timer_cb() for DTLS\00", align 1
@.str.30.854 = private unnamed_addr constant [41 x i8] c"next record in same datagram, offset: %d\00", align 1
@.str.31.855 = private unnamed_addr constant [25 x i8] c"in_left: %d, nb_want: %d\00", align 1
@.str.32.856 = private unnamed_addr constant [15 x i8] c"<= fetch input\00", align 1
@.str.33.857 = private unnamed_addr constant [22 x i8] c"f_recv_timeout: %u ms\00", align 1
@.str.34.858 = private unnamed_addr constant [22 x i8] c"ssl->f_recv(_timeout)\00", align 1
@.str.35.859 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.36.860 = private unnamed_addr constant [18 x i8] c"handshake timeout\00", align 1
@.str.37.863 = private unnamed_addr constant [19 x i8] c"mbedtls_ssl_resend\00", align 1
@.str.38.864 = private unnamed_addr constant [25 x i8] c"ssl_resend_hello_request\00", align 1
@.str.39.881 = private unnamed_addr constant [16 x i8] c"=> flush output\00", align 1
@.str.40.882 = private unnamed_addr constant [16 x i8] c"<= flush output\00", align 1
@.str.41.883 = private unnamed_addr constant [33 x i8] c"message length: %d, out_left: %d\00", align 1
@.str.42.884 = private unnamed_addr constant [12 x i8] c"ssl->f_send\00", align 1
@.str.43.885 = private unnamed_addr constant [54 x i8] c"f_send returned %d bytes but only %lu bytes were sent\00", align 1
@.str.44.886 = private unnamed_addr constant [36 x i8] c"outgoing message counter would wrap\00", align 1
@.str.45.901 = private unnamed_addr constant [22 x i8] c"=> mbedtls_ssl_resend\00", align 1
@.str.46.902 = private unnamed_addr constant [21 x i8] c"initialise resending\00", align 1
@.str.47.903 = private unnamed_addr constant [32 x i8] c"resent handshake message header\00", align 1
@.str.48.868 = private unnamed_addr constant [25 x i8] c"mbedtls_ssl_write_record\00", align 1
@.str.49.904 = private unnamed_addr constant [22 x i8] c"<= mbedtls_ssl_resend\00", align 1
@.str.50.869 = private unnamed_addr constant [16 x i8] c"=> write record\00", align 1
@.str.51.870 = private unnamed_addr constant [18 x i8] c"ssl_flight_append\00", align 1
@.str.52.873 = private unnamed_addr constant [16 x i8] c"ssl_encrypt_buf\00", align 1
@.str.53.875 = private unnamed_addr constant [60 x i8] c"output record: msgtype = %d, version = [%d:%d], msglen = %d\00", align 1
@.str.54.876 = private unnamed_addr constant [30 x i8] c"output record sent to network\00", align 1
@.str.55.879 = private unnamed_addr constant [25 x i8] c"mbedtls_ssl_flush_output\00", align 1
@.str.56.880 = private unnamed_addr constant [16 x i8] c"<= write record\00", align 1
@.str.57.915 = private unnamed_addr constant [32 x i8] c"handshake message too short: %d\00", align 1
@.str.58.916 = private unnamed_addr constant [54 x i8] c"handshake message: msglen = %d, type = %d, hslen = %d\00", align 1
@.str.59.917 = private unnamed_addr constant [74 x i8] c"received message from last flight, message_seq = %d, start_of_flight = %d\00", align 1
@.str.60.918 = private unnamed_addr constant [66 x i8] c"dropping out-of-sequence message: message_seq = %d, expected = %d\00", align 1
@.str.61.919 = private unnamed_addr constant [4 x i8] zeroinitializer, align 1
@.str.62.920 = private unnamed_addr constant [40 x i8] c"found fragmented DTLS handshake message\00", align 1
@.str.63.921 = private unnamed_addr constant [30 x i8] c"ssl_reassemble_dtls_handshake\00", align 1
@.str.64.922 = private unnamed_addr constant [42 x i8] c"TLS handshake fragmentation not supported\00", align 1
@.str.65.934 = private unnamed_addr constant [15 x i8] c"=> read record\00", align 1
@.str.66.937 = private unnamed_addr constant [30 x i8] c"mbedtls_ssl_read_record_layer\00", align 1
@.str.67.940 = private unnamed_addr constant [33 x i8] c"<= reuse previously read message\00", align 1
@.str.68.941 = private unnamed_addr constant [15 x i8] c"<= read record\00", align 1
@.str.69.946 = private unnamed_addr constant [28 x i8] c"remaining content in record\00", align 1
@.str.70.947 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_fetch_input\00", align 1
@.str.71.948 = private unnamed_addr constant [38 x i8] c"discarding unexpected record (header)\00", align 1
@.str.72.949 = private unnamed_addr constant [35 x i8] c"discarding invalid record (header)\00", align 1
@.str.73.952 = private unnamed_addr constant [30 x i8] c"too many records with bad MAC\00", align 1
@.str.74.953 = private unnamed_addr constant [32 x i8] c"discarding invalid record (mac)\00", align 1
@.str.75.954 = private unnamed_addr constant [35 x i8] c"received retransmit of last flight\00", align 1
@.str.76.942 = private unnamed_addr constant [36 x i8] c"got an alert message, type: [%d:%d]\00", align 1
@.str.77.943 = private unnamed_addr constant [34 x i8] c"is a fatal alert message (msg %d)\00", align 1
@.str.78.944 = private unnamed_addr constant [26 x i8] c"is a close notify message\00", align 1
@.str.79.945 = private unnamed_addr constant [19 x i8] c"is a SSLv3 no_cert\00", align 1
@.str.80.955 = private unnamed_addr constant [22 x i8] c"=> send alert message\00", align 1
@.str.81.956 = private unnamed_addr constant [31 x i8] c"send alert level=%u message=%u\00", align 1
@.str.82.957 = private unnamed_addr constant [22 x i8] c"<= send alert message\00", align 1
@.str.83.969 = private unnamed_addr constant [21 x i8] c"=> write certificate\00", align 1
@.str.84.970 = private unnamed_addr constant [26 x i8] c"<= skip write certificate\00", align 1
@.str.85.971 = private unnamed_addr constant [27 x i8] c"got no certificate to send\00", align 1
@.str.86.972 = private unnamed_addr constant [16 x i8] c"own certificate\00", align 1
@.str.87.973 = private unnamed_addr constant [31 x i8] c"certificate too large, %d > %d\00", align 1
@.str.88.974 = private unnamed_addr constant [21 x i8] c"<= write certificate\00", align 1
@.str.89.977 = private unnamed_addr constant [21 x i8] c"=> parse certificate\00", align 1
@.str.90.978 = private unnamed_addr constant [26 x i8] c"<= skip parse certificate\00", align 1
@.str.91.979 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_read_record\00", align 1
@.str.92.980 = private unnamed_addr constant [32 x i8] c"SSLv3 client has no certificate\00", align 1
@.str.93.981 = private unnamed_addr constant [32 x i8] c"TLSv1 client has no certificate\00", align 1
@.str.94.982 = private unnamed_addr constant [24 x i8] c"bad certificate message\00", align 1
@.str.95.983 = private unnamed_addr constant [23 x i8] c"alloc(%d bytes) failed\00", align 1
@.str.96.984 = private unnamed_addr constant [28 x i8] c" mbedtls_x509_crt_parse_der\00", align 1
@.str.97.985 = private unnamed_addr constant [17 x i8] c"peer certificate\00", align 1
@.str.98.986 = private unnamed_addr constant [37 x i8] c"new server cert during renegotiation\00", align 1
@.str.99.987 = private unnamed_addr constant [41 x i8] c"server cert changed during renegotiation\00", align 1
@.str.100.988 = private unnamed_addr constant [17 x i8] c"x509_verify_cert\00", align 1
@.str.101.990 = private unnamed_addr constant [31 x i8] c"bad certificate (EC key curve)\00", align 1
@.str.102.993 = private unnamed_addr constant [35 x i8] c"bad certificate (usage extensions)\00", align 1
@.str.103.994 = private unnamed_addr constant [16 x i8] c"got no CA chain\00", align 1
@.str.104.995 = private unnamed_addr constant [36 x i8] c"! Certificate verification flags %x\00", align 1
@.str.105.996 = private unnamed_addr constant [37 x i8] c"Certificate verification flags clear\00", align 1
@.str.106.997 = private unnamed_addr constant [21 x i8] c"<= parse certificate\00", align 1
@.str.107.1002 = private unnamed_addr constant [28 x i8] c"=> write change cipher spec\00", align 1
@.str.108.1003 = private unnamed_addr constant [28 x i8] c"<= write change cipher spec\00", align 1
@.str.109.1006 = private unnamed_addr constant [28 x i8] c"=> parse change cipher spec\00", align 1
@.str.110.1007 = private unnamed_addr constant [31 x i8] c"bad change cipher spec message\00", align 1
@.str.111.1008 = private unnamed_addr constant [49 x i8] c"switching to new transform spec for inbound data\00", align 1
@.str.112.1009 = private unnamed_addr constant [22 x i8] c"DTLS epoch would wrap\00", align 1
@.str.113.1010 = private unnamed_addr constant [28 x i8] c"<= parse change cipher spec\00", align 1
@.str.114.1013 = private unnamed_addr constant [20 x i8] c"=> handshake wrapup\00", align 1
@.str.115.1014 = private unnamed_addr constant [28 x i8] c"cache did not store session\00", align 1
@.str.116.1015 = private unnamed_addr constant [37 x i8] c"skip freeing handshake and transform\00", align 1
@.str.117.1016 = private unnamed_addr constant [20 x i8] c"<= handshake wrapup\00", align 1
@.str.118.1019 = private unnamed_addr constant [18 x i8] c"=> write finished\00", align 1
@.str.119.1020 = private unnamed_addr constant [50 x i8] c"switching to new transform spec for outbound data\00", align 1
@.str.120.1021 = private unnamed_addr constant [18 x i8] c"<= write finished\00", align 1
@.str.121.1024 = private unnamed_addr constant [18 x i8] c"=> parse finished\00", align 1
@.str.122.1025 = private unnamed_addr constant [21 x i8] c"bad finished message\00", align 1
@.str.123.1026 = private unnamed_addr constant [18 x i8] c"<= parse finished\00", align 1
@mfl_code_to_length = internal global [5 x i32] [i32 16384, i32 512, i32 1024, i32 2048, i32 4096], align 16, !dbg !3126
@.str.124.1113 = private unnamed_addr constant [9 x i8] c"DTLSv1.0\00", align 1
@.str.125.1114 = private unnamed_addr constant [9 x i8] c"DTLSv1.2\00", align 1
@.str.126.1115 = private unnamed_addr constant [15 x i8] c"unknown (DTLS)\00", align 1
@.str.127.1116 = private unnamed_addr constant [8 x i8] c"SSLv3.0\00", align 1
@.str.128.1117 = private unnamed_addr constant [8 x i8] c"TLSv1.0\00", align 1
@.str.129.1118 = private unnamed_addr constant [8 x i8] c"TLSv1.1\00", align 1
@.str.130.1119 = private unnamed_addr constant [8 x i8] c"TLSv1.2\00", align 1
@.str.131.1120 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.132.1131 = private unnamed_addr constant [13 x i8] c"=> handshake\00", align 1
@.str.133.1132 = private unnamed_addr constant [13 x i8] c"<= handshake\00", align 1
@.str.134.1135 = private unnamed_addr constant [24 x i8] c"ssl_start_renegotiation\00", align 1
@.str.135.1136 = private unnamed_addr constant [22 x i8] c"mbedtls_ssl_handshake\00", align 1
@.str.136.1140 = private unnamed_addr constant [8 x i8] c"=> read\00", align 1
@.str.137.1141 = private unnamed_addr constant [26 x i8] c"ssl_check_ctr_renegotiate\00", align 1
@.str.138.1142 = private unnamed_addr constant [27 x i8] c"received handshake message\00", align 1
@.str.139.1143 = private unnamed_addr constant [38 x i8] c"handshake received (not HelloRequest)\00", align 1
@.str.140.1144 = private unnamed_addr constant [37 x i8] c"handshake received (not ClientHello)\00", align 1
@.str.141.1145 = private unnamed_addr constant [38 x i8] c"refusing renegotiation, sending alert\00", align 1
@.str.142.1146 = private unnamed_addr constant [51 x i8] c"renegotiation requested, but not honored by client\00", align 1
@.str.143.1147 = private unnamed_addr constant [37 x i8] c"ignoring non-fatal non-closure alert\00", align 1
@.str.144.1148 = private unnamed_addr constant [29 x i8] c"bad application data message\00", align 1
@.str.145.1149 = private unnamed_addr constant [8 x i8] c"<= read\00", align 1
@.str.146.1152 = private unnamed_addr constant [9 x i8] c"=> write\00", align 1
@.str.147.1153 = private unnamed_addr constant [9 x i8] c"<= write\00", align 1
@.str.148.1156 = private unnamed_addr constant [22 x i8] c"=> write close notify\00", align 1
@.str.149.1157 = private unnamed_addr constant [31 x i8] c"mbedtls_ssl_send_alert_message\00", align 1
@.str.150.1158 = private unnamed_addr constant [22 x i8] c"<= write close notify\00", align 1
@.str.151.1161 = private unnamed_addr constant [8 x i8] c"=> free\00", align 1
@.str.152.1162 = private unnamed_addr constant [8 x i8] c"<= free\00", align 1
@.str.153.1167 = private unnamed_addr constant [513 x i8] c"AD107E1E9123A9D0D660FAA79559C51FA20D64E5683B9FD1B54B1597B61D0A75E6FA141DF95A56DBAF9A3C407BA1DF15EB3D688A309C180E1DE6B85A1274A0A66D3F8152AD6AC2129037C9EDEFDA4DF8D91E8FEF55B7394B7AD5B7D0B6C12207C9F98D11ED34DBF6C6BA0B2C8BBC27BE6A00E0A0B9C49708B3BF8A317091883681286130BC8985DB1602E714415D9330278273C7DE31EFDC7310F7121FD5A07415987D9ADC0A486DCDF93ACC44328387315D75E198C641A480CD86A1B9E587E8BE60E69CC928B2B9C52172E413042E9B23F10B0E16E79763C9B53DCF4BA80A29E3FB73C16B8E75B97EF363E2FFA31F71CF9DE5384E71B81C0AC4DFFE0C10E64F\00", align 1
@.str.154.1168 = private unnamed_addr constant [513 x i8] c"AC4032EF4F2D9AE39DF30B5C8FFDAC506CDEBE7B89998CAF74866A08CFE4FFE3A6824A4E10B9A6F0DD921F01A70C4AFAAB739D7700C29F52C57DB17C620A8652BE5E9001A8D66AD7C17669101999024AF4D027275AC1348BB8A762D0521BC98AE247150422EA1ED409939D54DA7460CDB5F6C6B250717CBEF180EB34118E98D119529A45D6F834566E3025E316A330EFBB77A86F0C1AB15B051AE3D428C8F8ACB70A8137150B8EEB10E183EDD19963DDD9E263E4770589EF6AA21E7F5F2FF381B539CCE3409D13CD566AFBB48D6C019181E1BCFE94B30269EDFE72FE9B6AA4BD7B5A0F1C71CFFF4C19C418E1F6EC017981BC087F2A7065B384B890D3191F2BFA\00", align 1
@ssl_preset_suiteb_ciphersuites = internal global [3 x i32] [i32 49195, i32 49196, i32 0], align 4, !dbg !3209
@ssl_preset_suiteb_hashes = internal global [3 x i32] [i32 6, i32 7, i32 0], align 4, !dbg !3213
@ssl_preset_suiteb_curves = internal global [3 x i32] [i32 3, i32 4, i32 0], align 4, !dbg !3215
@ssl_preset_default_hashes = internal global [5 x i32] [i32 8, i32 7, i32 6, i32 5, i32 0], align 16, !dbg !3218
@.str.155.998 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\01\00", align 1
@.str.156.999 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\02\00", align 1
@.str.157.841 = private unnamed_addr constant [19 x i8] c"=> calc verify ssl\00", align 1
@.str.158.837 = private unnamed_addr constant [25 x i8] c"calculated verify result\00", align 1
@.str.159.838 = private unnamed_addr constant [15 x i8] c"<= calc verify\00", align 1
@.str.160.840 = private unnamed_addr constant [19 x i8] c"=> calc verify tls\00", align 1
@.str.161.836 = private unnamed_addr constant [22 x i8] c"=> calc verify sha256\00", align 1
@.str.162.839 = private unnamed_addr constant [22 x i8] c"=> calc verify sha384\00", align 1
@.str.163.909 = private unnamed_addr constant [14 x i8] c"timer expired\00", align 1
@.str.164.908 = private unnamed_addr constant [19 x i8] c"set_timer to %d ms\00", align 1
@.str.165.907 = private unnamed_addr constant [37 x i8] c"update timeout value to %d millisecs\00", align 1
@.str.166.865 = private unnamed_addr constant [39 x i8] c"no longer retransmitting hello request\00", align 1
@.str.167.905 = private unnamed_addr constant [17 x i8] c"skip swap epochs\00", align 1
@.str.168.906 = private unnamed_addr constant [12 x i8] c"swap epochs\00", align 1
@.str.169.900 = private unnamed_addr constant [22 x i8] c"alloc %d bytes failed\00", align 1
@.str.170.887 = private unnamed_addr constant [15 x i8] c"=> encrypt buf\00", align 1
@.str.171.888 = private unnamed_addr constant [31 x i8] c"before encrypt: output payload\00", align 1
@.str.172.889 = private unnamed_addr constant [13 x i8] c"computed mac\00", align 1
@.str.173.890 = private unnamed_addr constant [59 x i8] c"before encrypt: msglen = %d, including %d bytes of padding\00", align 1
@.str.174.891 = private unnamed_addr constant [21 x i8] c"mbedtls_cipher_crypt\00", align 1
@.str.175.892 = private unnamed_addr constant [30 x i8] c"additional data used for AEAD\00", align 1
@.str.176.893 = private unnamed_addr constant [8 x i8] c"IV used\00", align 1
@.str.177.894 = private unnamed_addr constant [28 x i8] c"mbedtls_cipher_auth_encrypt\00", align 1
@.str.178.895 = private unnamed_addr constant [19 x i8] c"after encrypt: tag\00", align 1
@.str.179.896 = private unnamed_addr constant [78 x i8] c"before encrypt: msglen = %d, including %d bytes of IV and %d bytes of padding\00", align 1
@.str.180.897 = private unnamed_addr constant [23 x i8] c"using encrypt then mac\00", align 1
@.str.181.898 = private unnamed_addr constant [16 x i8] c"MAC'd meta-data\00", align 1
@.str.182.899 = private unnamed_addr constant [15 x i8] c"<= encrypt buf\00", align 1
@.str.183.923 = private unnamed_addr constant [42 x i8] c"not supported outside handshake (for now)\00", align 1
@.str.184.924 = private unnamed_addr constant [41 x i8] c"initialize reassembly, total length = %d\00", align 1
@.str.185.925 = private unnamed_addr constant [28 x i8] c"handshake message too large\00", align 1
@.str.186 = private unnamed_addr constant [24 x i8] c"alloc failed (%d bytes)\00", align 1
@.str.187 = private unnamed_addr constant [25 x i8] c"fragment header mismatch\00", align 1
@.str.188 = private unnamed_addr constant [42 x i8] c"invalid fragment offset/len: %d + %d > %d\00", align 1
@.str.189 = private unnamed_addr constant [38 x i8] c"invalid fragment length: %d + 12 > %d\00", align 1
@.str.190 = private unnamed_addr constant [42 x i8] c"adding fragment, offset = %d, length = %d\00", align 1
@.str.191 = private unnamed_addr constant [28 x i8] c"message is not complete yet\00", align 1
@.str.192 = private unnamed_addr constant [28 x i8] c"handshake message completed\00", align 1
@.str.193 = private unnamed_addr constant [38 x i8] c"last fragment not alone in its record\00", align 1
@.str.194 = private unnamed_addr constant [41 x i8] c"reassembled message too large for buffer\00", align 1
@.str.195 = private unnamed_addr constant [30 x i8] c"reassembled handshake message\00", align 1
@.str.196 = private unnamed_addr constant [20 x i8] c"input record header\00", align 1
@.str.197 = private unnamed_addr constant [59 x i8] c"input record: msgtype = %d, version = [%d:%d], msglen = %d\00", align 1
@.str.198 = private unnamed_addr constant [20 x i8] c"unknown record type\00", align 1
@.str.199 = private unnamed_addr constant [23 x i8] c"major version mismatch\00", align 1
@.str.200 = private unnamed_addr constant [23 x i8] c"minor version mismatch\00", align 1
@.str.201 = private unnamed_addr constant [19 x i8] c"bad message length\00", align 1
@.str.202 = private unnamed_addr constant [37 x i8] c"dropping unexpected ChangeCipherSpec\00", align 1
@.str.203 = private unnamed_addr constant [36 x i8] c"dropping unexpected ApplicationData\00", align 1
@.str.204 = private unnamed_addr constant [52 x i8] c"record from another epoch: expected %d, received %d\00", align 1
@.str.205 = private unnamed_addr constant [45 x i8] c"possible client reconnect from the same port\00", align 1
@.str.206 = private unnamed_addr constant [16 x i8] c"replayed record\00", align 1
@.str.207 = private unnamed_addr constant [29 x i8] c"ssl_check_dtls_clihlo_cookie\00", align 1
@.str.208 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.209 = private unnamed_addr constant [26 x i8] c"input record from network\00", align 1
@.str.210 = private unnamed_addr constant [16 x i8] c"ssl_decrypt_buf\00", align 1
@.str.211 = private unnamed_addr constant [28 x i8] c"input payload after decrypt\00", align 1
@.str.212 = private unnamed_addr constant [15 x i8] c"=> decrypt buf\00", align 1
@.str.213 = private unnamed_addr constant [29 x i8] c"in_msglen (%d) < minlen (%d)\00", align 1
@.str.214 = private unnamed_addr constant [49 x i8] c"msglen (%d) < explicit_iv_len (%d) + taglen (%d)\00", align 1
@.str.215 = private unnamed_addr constant [9 x i8] c"TAG used\00", align 1
@.str.216 = private unnamed_addr constant [28 x i8] c"mbedtls_cipher_auth_decrypt\00", align 1
@.str.217 = private unnamed_addr constant [62 x i8] c"msglen (%d) < max( ivlen(%d), maclen (%d) + 1 ) ( + expl IV )\00", align 1
@.str.218 = private unnamed_addr constant [13 x i8] c"message  mac\00", align 1
@.str.219 = private unnamed_addr constant [27 x i8] c"message mac does not match\00", align 1
@.str.220 = private unnamed_addr constant [31 x i8] c"msglen (%d) %% ivlen (%d) != 0\00", align 1
@.str.221 = private unnamed_addr constant [28 x i8] c"raw buffer after decryption\00", align 1
@.str.222 = private unnamed_addr constant [62 x i8] c"received four consecutive empty messages, possible DoS attack\00", align 1
@.str.223 = private unnamed_addr constant [36 x i8] c"incoming message counter would wrap\00", align 1
@.str.224 = private unnamed_addr constant [15 x i8] c"<= decrypt buf\00", align 1
@.str.225 = private unnamed_addr constant [22 x i8] c"=> calc  finished ssl\00", align 1
@.str.226 = private unnamed_addr constant [20 x i8] c"finished  md5 state\00", align 1
@.str.227 = private unnamed_addr constant [20 x i8] c"finished sha1 state\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"CLNT\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"SRVR\00", align 1
@.str.230 = private unnamed_addr constant [21 x i8] c"calc finished result\00", align 1
@.str.231 = private unnamed_addr constant [18 x i8] c"<= calc  finished\00", align 1
@.str.232 = private unnamed_addr constant [22 x i8] c"=> calc  finished tls\00", align 1
@.str.233 = private unnamed_addr constant [16 x i8] c"client finished\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"server finished\00", align 1
@.str.235 = private unnamed_addr constant [29 x i8] c"=> calc  finished tls sha256\00", align 1
@.str.236 = private unnamed_addr constant [20 x i8] c"finished sha2 state\00", align 1
@.str.237 = private unnamed_addr constant [29 x i8] c"=> calc  finished tls sha384\00", align 1
@.str.238 = private unnamed_addr constant [22 x i8] c"finished sha512 state\00", align 1
@.str.239 = private unnamed_addr constant [32 x i8] c"=> handshake wrapup: final free\00", align 1
@.str.240 = private unnamed_addr constant [32 x i8] c"<= handshake wrapup: final free\00", align 1
@.str.241 = private unnamed_addr constant [35 x i8] c"alloc() of ssl sub-contexts failed\00", align 1
@.str.242 = private unnamed_addr constant [23 x i8] c"=> write hello request\00", align 1
@.str.243 = private unnamed_addr constant [23 x i8] c"<= write hello request\00", align 1
@.str.244 = private unnamed_addr constant [15 x i8] c"=> renegotiate\00", align 1
@.str.245.1137 = private unnamed_addr constant [15 x i8] c"<= renegotiate\00", align 1
@.str.246 = private unnamed_addr constant [42 x i8] c"record counter limit reached: renegotiate\00", align 1
@.str.247 = private unnamed_addr constant [71 x i8] c"fragment larger than the (negotiated) maximum fragment length: %d > %d\00", align 1
@mbedtls_x509_crt_profile_default = hidden constant %struct.mbedtls_x509_crt_profile { i32 240, i32 268435455, i32 268435455, i32 2048 }, align 4, !dbg !3224
@mbedtls_x509_crt_profile_next = hidden constant %struct.mbedtls_x509_crt_profile { i32 224, i32 268435455, i32 2300, i32 2048 }, align 4, !dbg !3276
@mbedtls_x509_crt_profile_suiteb = hidden constant %struct.mbedtls_x509_crt_profile { i32 96, i32 8, i32 12, i32 0 }, align 4, !dbg !3288
@.str.1200 = private unnamed_addr constant [28 x i8] c"-----BEGIN CERTIFICATE-----\00", align 1
@.str.1.1201 = private unnamed_addr constant [26 x i8] c"-----END CERTIFICATE-----\00", align 1
@.str.2.1204 = private unnamed_addr constant [32 x i8] c"\0ACertificate is uninitialised!\0A\00", align 1
@.str.3.1205 = private unnamed_addr constant [26 x i8] c"%scert. version     : %d\0A\00", align 1
@.str.4.1206 = private unnamed_addr constant [23 x i8] c"%sserial number     : \00", align 1
@.str.5.1207 = private unnamed_addr constant [24 x i8] c"\0A%sissuer name       : \00", align 1
@.str.6.1208 = private unnamed_addr constant [24 x i8] c"\0A%ssubject name      : \00", align 1
@.str.7.1209 = private unnamed_addr constant [53 x i8] c"\0A%sissued  on        : %04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.8.1210 = private unnamed_addr constant [53 x i8] c"\0A%sexpires on        : %04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.9.1211 = private unnamed_addr constant [24 x i8] c"\0A%ssigned using      : \00", align 1
@.str.10.1212 = private unnamed_addr constant [18 x i8] c"\0A%s%-18s: %d bits\00", align 1
@.str.11.1215 = private unnamed_addr constant [29 x i8] c"\0A%sbasic constraints : CA=%s\00", align 1
@.str.12.1213 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.13.1214 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.14.1216 = private unnamed_addr constant [17 x i8] c", max_pathlen=%d\00", align 1
@.str.15.1217 = private unnamed_addr constant [24 x i8] c"\0A%ssubject alt name  : \00", align 1
@.str.16.1218 = private unnamed_addr constant [24 x i8] c"\0A%scert. type        : \00", align 1
@.str.17.1219 = private unnamed_addr constant [24 x i8] c"\0A%skey usage         : \00", align 1
@.str.18.1220 = private unnamed_addr constant [24 x i8] c"\0A%sext key usage     : \00", align 1
@.str.19.1221 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@x509_crt_verify_strings = internal constant [21 x %struct.ms_ocall_print_string_t] [%struct.ms_ocall_print_string_t { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.46.1247, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.47.1248, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.48.1249, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 8, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.49.1250, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.50.1251, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51.1252, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 64, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52.1253, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 128, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.53.1254, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 256, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.54.1255, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 512, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.55.1256, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 1024, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56.1257, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 2048, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.57.1258, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 4096, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.58.1259, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 8192, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.59.1260, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 16384, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.60.1261, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 32768, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.61.1262, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 65536, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.62.1263, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 131072, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.63.1264, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 262144, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.64.1265, i32 0, i32 0) }, %struct.ms_ocall_print_string_t { i32 524288, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.65.1266, i32 0, i32 0) }, %struct.ms_ocall_print_string_t zeroinitializer], align 16, !dbg !3290
@.str.20.1245 = private unnamed_addr constant [6 x i8] c"%s%s\0A\00", align 1
@.str.21.1246 = private unnamed_addr constant [43 x i8] c"%sUnknown reason (this should not happen)\0A\00", align 1
@.str.22.1271 = private unnamed_addr constant [5 x i8] c"U\1D%\00\00", align 1
@.str.23.1274 = private unnamed_addr constant [3 x i8] c"*.\00", align 1
@.str.24.1275 = private unnamed_addr constant [4 x i8] c"U\04\03\00", align 1
@.str.25.1222 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.26.1225 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.27.1235 = private unnamed_addr constant [13 x i8] c"%sSSL Client\00", align 1
@.str.28.1236 = private unnamed_addr constant [13 x i8] c"%sSSL Server\00", align 1
@.str.29.1237 = private unnamed_addr constant [8 x i8] c"%sEmail\00", align 1
@.str.30.1238 = private unnamed_addr constant [17 x i8] c"%sObject Signing\00", align 1
@.str.31.1239 = private unnamed_addr constant [11 x i8] c"%sReserved\00", align 1
@.str.32.1240 = private unnamed_addr constant [9 x i8] c"%sSSL CA\00", align 1
@.str.33.1241 = private unnamed_addr constant [11 x i8] c"%sEmail CA\00", align 1
@.str.34.1242 = private unnamed_addr constant [20 x i8] c"%sObject Signing CA\00", align 1
@.str.35.1226 = private unnamed_addr constant [20 x i8] c"%sDigital Signature\00", align 1
@.str.36.1227 = private unnamed_addr constant [18 x i8] c"%sNon Repudiation\00", align 1
@.str.37.1228 = private unnamed_addr constant [19 x i8] c"%sKey Encipherment\00", align 1
@.str.38.1229 = private unnamed_addr constant [20 x i8] c"%sData Encipherment\00", align 1
@.str.39.1230 = private unnamed_addr constant [16 x i8] c"%sKey Agreement\00", align 1
@.str.40.1231 = private unnamed_addr constant [16 x i8] c"%sKey Cert Sign\00", align 1
@.str.41.1232 = private unnamed_addr constant [11 x i8] c"%sCRL Sign\00", align 1
@.str.42.1233 = private unnamed_addr constant [16 x i8] c"%sEncipher Only\00", align 1
@.str.43.1234 = private unnamed_addr constant [16 x i8] c"%sDecipher Only\00", align 1
@.str.44.1223 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.45.1224 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.46.1247 = private unnamed_addr constant [37 x i8] c"The certificate validity has expired\00", align 1
@.str.47.1248 = private unnamed_addr constant [47 x i8] c"The certificate has been revoked (is on a CRL)\00", align 1
@.str.48.1249 = private unnamed_addr constant [69 x i8] c"The certificate Common Name (CN) does not match with the expected CN\00", align 1
@.str.49.1250 = private unnamed_addr constant [58 x i8] c"The certificate is not correctly signed by the trusted CA\00", align 1
@.str.50.1251 = private unnamed_addr constant [50 x i8] c"The CRL is not correctly signed by the trusted CA\00", align 1
@.str.51.1252 = private unnamed_addr constant [19 x i8] c"The CRL is expired\00", align 1
@.str.52.1253 = private unnamed_addr constant [24 x i8] c"Certificate was missing\00", align 1
@.str.53.1254 = private unnamed_addr constant [37 x i8] c"Certificate verification was skipped\00", align 1
@.str.54.1255 = private unnamed_addr constant [46 x i8] c"Other reason (can be used by verify callback)\00", align 1
@.str.55.1256 = private unnamed_addr constant [46 x i8] c"The certificate validity starts in the future\00", align 1
@.str.56.1257 = private unnamed_addr constant [27 x i8] c"The CRL is from the future\00", align 1
@.str.57.1258 = private unnamed_addr constant [44 x i8] c"Usage does not match the keyUsage extension\00", align 1
@.str.58.1259 = private unnamed_addr constant [52 x i8] c"Usage does not match the extendedKeyUsage extension\00", align 1
@.str.59.1260 = private unnamed_addr constant [46 x i8] c"Usage does not match the nsCertType extension\00", align 1
@.str.60.1261 = private unnamed_addr constant [53 x i8] c"The certificate is signed with an unacceptable hash.\00", align 1
@.str.61.1262 = private unnamed_addr constant [73 x i8] c"The certificate is signed with an unacceptable PK alg (eg RSA vs ECDSA).\00", align 1
@.str.62.1263 = private unnamed_addr constant [82 x i8] c"The certificate is signed with an unacceptable key (eg bad curve, RSA too short).\00", align 1
@.str.63.1264 = private unnamed_addr constant [45 x i8] c"The CRL is signed with an unacceptable hash.\00", align 1
@.str.64.1265 = private unnamed_addr constant [65 x i8] c"The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA).\00", align 1
@.str.65.1266 = private unnamed_addr constant [74 x i8] c"The CRL is signed with an unacceptable key (eg bad curve, RSA too short).\00", align 1
@.str.1281 = private unnamed_addr constant [29 x i8] c"hardware_poll fails with %d\0A\00", align 1
@.str.1.1282 = private unnamed_addr constant [31 x i8] c"mbedtls_sgx_drbg receives NULL\00", align 1
@.str.2.1283 = private unnamed_addr constant [32 x i8] c"mbedtls_sgx_drbg fails with %d\0A\00", align 1
@.str.1300 = private unnamed_addr constant [37 x i8] c"ocall_mbedtls_net_recv returned %#x\0A\00", align 1
@.str.1.1307 = private unnamed_addr constant [36 x i8] c"Error: mbedtls_net_free returned %d\00", align 1
@aes_init_done = internal global i32 0, align 4, !dbg !3300
@RCON = internal global [10 x i32] zeroinitializer, align 16, !dbg !3331
@FSb = internal global [256 x i8] zeroinitializer, align 16, !dbg !3306
@RT0 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3323
@RT1 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3325
@RT2 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3327
@RT3 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3329
@FT0 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3312
@FT1 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3315
@FT2 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3317
@FT3 = internal global [256 x i32] zeroinitializer, align 16, !dbg !3319
@RSb = internal global [256 x i8] zeroinitializer, align 16, !dbg !3321
@.str.1319 = private unnamed_addr constant [21 x i8] c"  AES-ECB-%3d (%s): \00", align 1
@.str.1.1317 = private unnamed_addr constant [4 x i8] c"dec\00", align 1
@.str.2.1318 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@aes_test_ecb_dec = internal constant [3 x [16 x i8]] [[16 x i8] c"DAj\C2\D1\F5<X3\03\91~k\E9\EB\E0", [16 x i8] c"H\E3\1E\9E%g\18\F2\92)1\9C\19\F1[\A4", [16 x i8] c"\05\8C\CF\FD\BB\CB8-\1FoVX]\8AJ\DE"], align 16, !dbg !3336
@.str.3.1320 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@aes_test_ecb_enc = internal constant [3 x [16 x i8]] [[16 x i8] c"\C3L\05,\C0\DA\8DsE\1A\FE_\03\BE)\7F", [16 x i8] c"\F3\F6u*\E8\D7\83\118\F0AV\061\B1\14", [16 x i8] c"\8By\EE\CC\93\A0\EE]\FF0\B4\EA!cm\A4"], align 16, !dbg !3340
@.str.4.1321 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.5.1322 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6.1323 = private unnamed_addr constant [21 x i8] c"  AES-CBC-%3d (%s): \00", align 1
@aes_test_cbc_dec = internal constant [3 x [16 x i8]] [[16 x i8] c"\FA\CA7\E0\B0\C8Ss\DFpns\F7\C9\AF\86", [16 x i8] c"]\F6x\DD\17\BANu\B6\17h\C6\AD\EF|{", [16 x i8] c"H\04\E1\81\8F\E6)u\19\A3\E8\8CW1\04\13"], align 16, !dbg !3342
@aes_test_cbc_enc = internal constant [3 x [16 x i8]] [[16 x i8] c"\8A\05\FC^\09Z\F4\84\8A\08\D3(\D3h\8E=", [16 x i8] c"{\D9f\D5:\D8\C1\BB\85\D2\AD\FA\E8{\B1\04", [16 x i8] c"\FE<Se>/E\B5o\CD\88\B2\CC\89\8F\F0"], align 16, !dbg !3344
@.str.7.1324 = private unnamed_addr constant [24 x i8] c"  AES-CFB128-%3d (%s): \00", align 1
@aes_test_cfb128_iv = internal constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 16, !dbg !3346
@aes_test_cfb128_ct = internal constant [3 x [64 x i8]] [[64 x i8] c";?\D9.\B7-\AD 34I\F8\E8<\FBJ\C8\A6E7\A0\B3\A9?\CD\E3\CD\AD\9F\1C\E5\8B&u\1Fg\A3\CB\B1@\B1\80\8C\F1\87\A4\F4\DF\C0K\055|]\1C\0E\EA\C4\C6o\9F\F7\F2\E6", [64 x i8] c"\CD\C8\0Do\DD\F1\8C\AB4\C2Y\09\C9\9AAtg\CE\7F\7F\81\176!\96\1A+p\17\1D=z.\1E\8A\1D\D5\9B\88\B1\C8\E6\0F\ED\1E\FA\C4\C9\C0_\9F\9C\A9\83O\A0B\AE\8F\BAXK\09\FF", [64 x i8] c"\DC~\84\BF\DAy\16K~\CD\84\86\98]8`9\FF\ED\14;(\B1\C82\11<c1\E5@{\DF\10\13$\15\E5K\92\A1>\D0\A8&z\E2\F9u\A3\85t\1A\B9\CE\F8 1b=U\B1\E4q"], align 16, !dbg !3352
@aes_test_cfb128_pt = internal constant [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 16, !dbg !3356
@.str.8.1325 = private unnamed_addr constant [21 x i8] c"  AES-CTR-128 (%s): \00", align 1
@aes_test_ctr_nonce_counter = internal constant [3 x [16 x i8]] [[16 x i8] c"\00\00\000\00\00\00\00\00\00\00\00\00\00\00\01", [16 x i8] c"\00l\B6\DB\C0T;Y\DAH\D9\0B\00\00\00\01", [16 x i8] c"\00\E0\01{'w\7F?J\17\86\F0\00\00\00\01"], align 16, !dbg !3358
@aes_test_ctr_key = internal constant [3 x [16 x i8]] [[16 x i8] c"\AEhR\F8\12\10g\CCK\F7\A5vUw\F3\9E", [16 x i8] c"~$\06x\17\FA\E0\D7C\D6\CE\1F2S\91c", [16 x i8] c"v\91\BE\03^P \A8\ACna\85)\F9\A0\DC"], align 16, !dbg !3360
@aes_test_ctr_len = internal constant [3 x i32] [i32 16, i32 32, i32 36], align 4, !dbg !3362
@aes_test_cfb128_key = internal constant <{ <{ [16 x i8], [16 x i8] }>, <{ [24 x i8], [8 x i8] }>, [32 x i8] }> <{ <{ [16 x i8], [16 x i8] }> <{ [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", [16 x i8] zeroinitializer }>, <{ [24 x i8], [8 x i8] }> <{ [24 x i8] c"\8Es\B0\F7\DA\0EdR\C8\10\F3+\80\90y\E5b\F8\EA\D2R,k{", [8 x i8] zeroinitializer }>, [32 x i8] c"`=\EB\10\15\CAq\BE+s\AE\F0\85}w\81\1F5,\07;a\08\D7-\98\10\A3\09\14\DF\F4" }>, align 16, !dbg !3348
@aes_test_ctr_ct = internal constant <{ <{ [16 x i8], [32 x i8] }>, <{ [32 x i8], [16 x i8] }>, <{ [36 x i8], [12 x i8] }> }> <{ <{ [16 x i8], [32 x i8] }> <{ [16 x i8] c"\E4\09]O\B7\A7\B3y-au\A3&\13\11\B8", [32 x i8] zeroinitializer }>, <{ [32 x i8], [16 x i8] }> <{ [32 x i8] c"Q\04\A1\06\16\8Ar\D9y\0DA\EE\8E\DA\D3\88\EB.\1E\FCF\DAW\C8\FC\E60\DF\91A\BE(", [16 x i8] zeroinitializer }>, <{ [36 x i8], [12 x i8] }> <{ [36 x i8] c"\C1\CFH\A8\9F/\FD\D9\CFFR\E9\EF\DBr\D7E@\A4+\DEmx6\D5\9A\\\EA\AE\F3\10S%\B2\07/", [12 x i8] zeroinitializer }> }>, align 16, !dbg !3364
@aes_test_ctr_pt = internal constant <{ <{ [16 x i8], [32 x i8] }>, <{ [32 x i8], [16 x i8] }>, <{ [36 x i8], [12 x i8] }> }> <{ <{ [16 x i8], [32 x i8] }> <{ [16 x i8] c"Single block msg", [32 x i8] zeroinitializer }>, <{ [32 x i8], [16 x i8] }> <{ [32 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F", [16 x i8] zeroinitializer }>, <{ [36 x i8], [12 x i8] }> <{ [36 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#", [12 x i8] zeroinitializer }> }>, align 16, !dbg !3368
@.str.1371 = private unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 1
@.str.1.1394 = private unnamed_addr constant [129 x i8] c"EFE021C2645FD1DC586E69184AF4A31ED5F53E93B5F123FA41680867BA110131944FE7952E2517337780CB0DB80E61AAE7C8DDC6C5C6AADEB34EB38A2F40D5E6\00", align 1
@.str.2.1395 = private unnamed_addr constant [129 x i8] c"B2E7EFD37075B9F03FF989C7C5051C2034D2A323810251127E7BF8625A4F49A5F3E27F4DA8BD59C47D6DAABA4C8127BD5B5C25763222FEFCCFC38B832366C29E\00", align 1
@.str.3.1396 = private unnamed_addr constant [97 x i8] c"0066A198186C18C10B2F5ED9B522752A9830B69916E535C8F047518A889A43A594B6BED27A168D31D4A52F88925AA8F5\00", align 1
@.str.4.1397 = private unnamed_addr constant [223 x i8] c"602AB7ECA597A3D6B56FF9829A5E8B859E857EA95A03512E2BAE7391688D264AA5663B0341DB9CCFD2C4C5F421FEC8148001B72E848A38CAE1C65F78E56ABDEFE12D3C039B8A02D6BE593F0BBBDA56F1ECF677152EF804370C1A305CAF3B5BF130879B56C61DE584A0F53A2447A51E\00", align 1
@.str.5.1398 = private unnamed_addr constant [26 x i8] c"  MPI test #1 (mul_mpi): \00", align 1
@.str.6.1399 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.7.1400 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.8.1401 = private unnamed_addr constant [36 x i8] c"256567336059E52CAE22925474705F39A94\00", align 1
@.str.9.1402 = private unnamed_addr constant [95 x i8] c"6613F26162223DF488E9CD48CC132C7A0AC93C701B001B092E4E5B9F73BCD27B9EE50D0657C77F374E903CDFA4C642\00", align 1
@.str.10.1403 = private unnamed_addr constant [26 x i8] c"  MPI test #2 (div_mpi): \00", align 1
@.str.11.1404 = private unnamed_addr constant [95 x i8] c"36E139AEA55215609D2816998ED020BBBD96C37890F65171D948E9BC7CBAA4D9325D24D6A3C12710F10A09FA08AB87\00", align 1
@.str.12.1405 = private unnamed_addr constant [26 x i8] c"  MPI test #3 (exp_mod): \00", align 1
@.str.13.1406 = private unnamed_addr constant [97 x i8] c"003A0AAEDD7E784FC07D8F9EC6E3BFD5C3DBA76456363A10869622EAC2DD84ECC5B8A74DAC4D09E03B5E0BE779F2DF61\00", align 1
@.str.14.1407 = private unnamed_addr constant [26 x i8] c"  MPI test #4 (inv_mod): \00", align 1
@.str.15.1408 = private unnamed_addr constant [29 x i8] c"  MPI test #5 (simple gcd): \00", align 1
@gcd_pairs = internal constant [3 x [3 x i32]] [[3 x i32] [i32 693, i32 609, i32 21], [3 x i32] [i32 1764, i32 868, i32 28], [3 x i32] [i32 768454923, i32 542167814, i32 1]], align 16, !dbg !3370
@.str.16.1409 = private unnamed_addr constant [14 x i8] c"failed at %d\0A\00", align 1
@.str.17.1410 = private unnamed_addr constant [38 x i8] c"Unexpected error, return code = %08X\0A\00", align 1
@.str.18.1411 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@small_prime = internal constant [168 x i32] [i32 3, i32 5, i32 7, i32 11, i32 13, i32 17, i32 19, i32 23, i32 29, i32 31, i32 37, i32 41, i32 43, i32 47, i32 53, i32 59, i32 61, i32 67, i32 71, i32 73, i32 79, i32 83, i32 89, i32 97, i32 101, i32 103, i32 107, i32 109, i32 113, i32 127, i32 131, i32 137, i32 139, i32 149, i32 151, i32 157, i32 163, i32 167, i32 173, i32 179, i32 181, i32 191, i32 193, i32 197, i32 199, i32 211, i32 223, i32 227, i32 229, i32 233, i32 239, i32 241, i32 251, i32 257, i32 263, i32 269, i32 271, i32 277, i32 281, i32 283, i32 293, i32 307, i32 311, i32 313, i32 317, i32 331, i32 337, i32 347, i32 349, i32 353, i32 359, i32 367, i32 373, i32 379, i32 383, i32 389, i32 397, i32 401, i32 409, i32 419, i32 421, i32 431, i32 433, i32 439, i32 443, i32 449, i32 457, i32 461, i32 463, i32 467, i32 479, i32 487, i32 491, i32 499, i32 503, i32 509, i32 521, i32 523, i32 541, i32 547, i32 557, i32 563, i32 569, i32 571, i32 577, i32 587, i32 593, i32 599, i32 601, i32 607, i32 613, i32 617, i32 619, i32 631, i32 641, i32 643, i32 647, i32 653, i32 659, i32 661, i32 673, i32 677, i32 683, i32 691, i32 701, i32 709, i32 719, i32 727, i32 733, i32 739, i32 743, i32 751, i32 757, i32 761, i32 769, i32 773, i32 787, i32 797, i32 809, i32 811, i32 821, i32 823, i32 827, i32 829, i32 839, i32 853, i32 857, i32 859, i32 863, i32 877, i32 881, i32 883, i32 887, i32 907, i32 911, i32 919, i32 929, i32 937, i32 941, i32 947, i32 953, i32 967, i32 971, i32 977, i32 983, i32 991, i32 997, i32 -103], align 16, !dbg !3378
@supported_init.1412 = internal global i32 0, align 4, !dbg !3386
@aes_128_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 2, i32 1, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1481, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3488
@aes_192_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 3, i32 1, i32 192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1480, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3617
@aes_256_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 4, i32 1, i32 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.1479, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3619
@aes_128_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 5, i32 2, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.1478, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3621
@aes_192_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 6, i32 2, i32 192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1477, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3623
@aes_256_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 7, i32 2, i32 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.1476, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3625
@aes_128_cfb128_info = internal constant %struct.mbedtls_cipher_info_t { i32 8, i32 3, i32 128, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.1475, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3627
@aes_192_cfb128_info = internal constant %struct.mbedtls_cipher_info_t { i32 9, i32 3, i32 192, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.1474, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3629
@aes_256_cfb128_info = internal constant %struct.mbedtls_cipher_info_t { i32 10, i32 3, i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.1473, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3631
@aes_128_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 11, i32 5, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.1472, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3633
@aes_192_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 12, i32 5, i32 192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.1471, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3635
@aes_256_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 13, i32 5, i32 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.1470, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @aes_info }, align 8, !dbg !3637
@aes_128_gcm_info = internal constant %struct.mbedtls_cipher_info_t { i32 14, i32 6, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.1469, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @gcm_aes_info }, align 8, !dbg !3639
@aes_192_gcm_info = internal constant %struct.mbedtls_cipher_info_t { i32 15, i32 6, i32 192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.1468, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @gcm_aes_info }, align 8, !dbg !3643
@aes_256_gcm_info = internal constant %struct.mbedtls_cipher_info_t { i32 16, i32 6, i32 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14.1467, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @gcm_aes_info }, align 8, !dbg !3645
@aes_128_ccm_info = internal constant %struct.mbedtls_cipher_info_t { i32 43, i32 8, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.1466, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @ccm_aes_info }, align 8, !dbg !3647
@aes_192_ccm_info = internal constant %struct.mbedtls_cipher_info_t { i32 44, i32 8, i32 192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16.1465, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @ccm_aes_info }, align 8, !dbg !3651
@aes_256_ccm_info = internal constant %struct.mbedtls_cipher_info_t { i32 45, i32 8, i32 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17.1464, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @ccm_aes_info }, align 8, !dbg !3653
@arc4_128_info = internal constant %struct.mbedtls_cipher_info_t { i32 42, i32 7, i32 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18.1463, i32 0, i32 0), i32 0, i32 0, i32 1, %struct.mbedtls_cipher_base_t* @arc4_base_info }, align 8, !dbg !3655
@blowfish_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 38, i32 1, i32 128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19.1462, i32 0, i32 0), i32 8, i32 2, i32 8, %struct.mbedtls_cipher_base_t* @blowfish_info }, align 8, !dbg !3659
@blowfish_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 39, i32 2, i32 128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.1461, i32 0, i32 0), i32 8, i32 2, i32 8, %struct.mbedtls_cipher_base_t* @blowfish_info }, align 8, !dbg !3663
@blowfish_cfb64_info = internal constant %struct.mbedtls_cipher_info_t { i32 40, i32 3, i32 128, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21.1460, i32 0, i32 0), i32 8, i32 2, i32 8, %struct.mbedtls_cipher_base_t* @blowfish_info }, align 8, !dbg !3665
@blowfish_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 41, i32 5, i32 128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22.1459, i32 0, i32 0), i32 8, i32 2, i32 8, %struct.mbedtls_cipher_base_t* @blowfish_info }, align 8, !dbg !3667
@camellia_128_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 17, i32 1, i32 128, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.1458, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3669
@camellia_192_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 18, i32 1, i32 192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.1457, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3673
@camellia_256_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 19, i32 1, i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25.1456, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3675
@camellia_128_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 20, i32 2, i32 128, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26.1455, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3677
@camellia_192_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 21, i32 2, i32 192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27.1454, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3679
@camellia_256_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 22, i32 2, i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28.1453, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3681
@camellia_128_cfb128_info = internal constant %struct.mbedtls_cipher_info_t { i32 23, i32 3, i32 128, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29.1452, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3683
@camellia_192_cfb128_info = internal constant %struct.mbedtls_cipher_info_t { i32 24, i32 3, i32 192, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30.1451, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3685
@camellia_256_cfb128_info = internal constant %struct.mbedtls_cipher_info_t { i32 25, i32 3, i32 256, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31.1450, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3687
@camellia_128_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 26, i32 5, i32 128, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32.1449, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3689
@camellia_192_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 27, i32 5, i32 192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33.1448, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3691
@camellia_256_ctr_info = internal constant %struct.mbedtls_cipher_info_t { i32 28, i32 5, i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34.1447, i32 0, i32 0), i32 16, i32 0, i32 16, %struct.mbedtls_cipher_base_t* @camellia_info }, align 8, !dbg !3693
@camellia_128_gcm_info = internal constant %struct.mbedtls_cipher_info_t { i32 29, i32 6, i32 128, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35.1446, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @gcm_camellia_info }, align 8, !dbg !3695
@camellia_192_gcm_info = internal constant %struct.mbedtls_cipher_info_t { i32 30, i32 6, i32 192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36.1445, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @gcm_camellia_info }, align 8, !dbg !3699
@camellia_256_gcm_info = internal constant %struct.mbedtls_cipher_info_t { i32 31, i32 6, i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37.1444, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @gcm_camellia_info }, align 8, !dbg !3701
@camellia_128_ccm_info = internal constant %struct.mbedtls_cipher_info_t { i32 46, i32 8, i32 128, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38.1443, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @ccm_camellia_info }, align 8, !dbg !3703
@camellia_192_ccm_info = internal constant %struct.mbedtls_cipher_info_t { i32 47, i32 8, i32 192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39.1442, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @ccm_camellia_info }, align 8, !dbg !3707
@camellia_256_ccm_info = internal constant %struct.mbedtls_cipher_info_t { i32 48, i32 8, i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40.1441, i32 0, i32 0), i32 12, i32 1, i32 16, %struct.mbedtls_cipher_base_t* @ccm_camellia_info }, align 8, !dbg !3709
@des_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 32, i32 1, i32 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41.1440, i32 0, i32 0), i32 8, i32 0, i32 8, %struct.mbedtls_cipher_base_t* @des_info }, align 8, !dbg !3711
@des_ede_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 34, i32 1, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42.1439, i32 0, i32 0), i32 8, i32 0, i32 8, %struct.mbedtls_cipher_base_t* @des_ede_info }, align 8, !dbg !3715
@des_ede3_ecb_info = internal constant %struct.mbedtls_cipher_info_t { i32 36, i32 1, i32 192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43.1438, i32 0, i32 0), i32 8, i32 0, i32 8, %struct.mbedtls_cipher_base_t* @des_ede3_info }, align 8, !dbg !3719
@des_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 33, i32 2, i32 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44.1437, i32 0, i32 0), i32 8, i32 0, i32 8, %struct.mbedtls_cipher_base_t* @des_info }, align 8, !dbg !3723
@des_ede_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 35, i32 2, i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45.1436, i32 0, i32 0), i32 8, i32 0, i32 8, %struct.mbedtls_cipher_base_t* @des_ede_info }, align 8, !dbg !3725
@des_ede3_cbc_info = internal constant %struct.mbedtls_cipher_info_t { i32 37, i32 2, i32 192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46.1435, i32 0, i32 0), i32 8, i32 0, i32 8, %struct.mbedtls_cipher_base_t* @des_ede3_info }, align 8, !dbg !3727
@mbedtls_cipher_definitions = hidden constant [48 x %struct.mbedtls_cipher_definition_t] [%struct.mbedtls_cipher_definition_t { i32 2, %struct.mbedtls_cipher_info_t* @aes_128_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 3, %struct.mbedtls_cipher_info_t* @aes_192_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 4, %struct.mbedtls_cipher_info_t* @aes_256_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 5, %struct.mbedtls_cipher_info_t* @aes_128_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 6, %struct.mbedtls_cipher_info_t* @aes_192_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 7, %struct.mbedtls_cipher_info_t* @aes_256_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 8, %struct.mbedtls_cipher_info_t* @aes_128_cfb128_info }, %struct.mbedtls_cipher_definition_t { i32 9, %struct.mbedtls_cipher_info_t* @aes_192_cfb128_info }, %struct.mbedtls_cipher_definition_t { i32 10, %struct.mbedtls_cipher_info_t* @aes_256_cfb128_info }, %struct.mbedtls_cipher_definition_t { i32 11, %struct.mbedtls_cipher_info_t* @aes_128_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 12, %struct.mbedtls_cipher_info_t* @aes_192_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 13, %struct.mbedtls_cipher_info_t* @aes_256_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 14, %struct.mbedtls_cipher_info_t* @aes_128_gcm_info }, %struct.mbedtls_cipher_definition_t { i32 15, %struct.mbedtls_cipher_info_t* @aes_192_gcm_info }, %struct.mbedtls_cipher_definition_t { i32 16, %struct.mbedtls_cipher_info_t* @aes_256_gcm_info }, %struct.mbedtls_cipher_definition_t { i32 43, %struct.mbedtls_cipher_info_t* @aes_128_ccm_info }, %struct.mbedtls_cipher_definition_t { i32 44, %struct.mbedtls_cipher_info_t* @aes_192_ccm_info }, %struct.mbedtls_cipher_definition_t { i32 45, %struct.mbedtls_cipher_info_t* @aes_256_ccm_info }, %struct.mbedtls_cipher_definition_t { i32 42, %struct.mbedtls_cipher_info_t* @arc4_128_info }, %struct.mbedtls_cipher_definition_t { i32 38, %struct.mbedtls_cipher_info_t* @blowfish_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 39, %struct.mbedtls_cipher_info_t* @blowfish_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 40, %struct.mbedtls_cipher_info_t* @blowfish_cfb64_info }, %struct.mbedtls_cipher_definition_t { i32 41, %struct.mbedtls_cipher_info_t* @blowfish_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 17, %struct.mbedtls_cipher_info_t* @camellia_128_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 18, %struct.mbedtls_cipher_info_t* @camellia_192_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 19, %struct.mbedtls_cipher_info_t* @camellia_256_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 20, %struct.mbedtls_cipher_info_t* @camellia_128_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 21, %struct.mbedtls_cipher_info_t* @camellia_192_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 22, %struct.mbedtls_cipher_info_t* @camellia_256_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 23, %struct.mbedtls_cipher_info_t* @camellia_128_cfb128_info }, %struct.mbedtls_cipher_definition_t { i32 24, %struct.mbedtls_cipher_info_t* @camellia_192_cfb128_info }, %struct.mbedtls_cipher_definition_t { i32 25, %struct.mbedtls_cipher_info_t* @camellia_256_cfb128_info }, %struct.mbedtls_cipher_definition_t { i32 26, %struct.mbedtls_cipher_info_t* @camellia_128_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 27, %struct.mbedtls_cipher_info_t* @camellia_192_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 28, %struct.mbedtls_cipher_info_t* @camellia_256_ctr_info }, %struct.mbedtls_cipher_definition_t { i32 29, %struct.mbedtls_cipher_info_t* @camellia_128_gcm_info }, %struct.mbedtls_cipher_definition_t { i32 30, %struct.mbedtls_cipher_info_t* @camellia_192_gcm_info }, %struct.mbedtls_cipher_definition_t { i32 31, %struct.mbedtls_cipher_info_t* @camellia_256_gcm_info }, %struct.mbedtls_cipher_definition_t { i32 46, %struct.mbedtls_cipher_info_t* @camellia_128_ccm_info }, %struct.mbedtls_cipher_definition_t { i32 47, %struct.mbedtls_cipher_info_t* @camellia_192_ccm_info }, %struct.mbedtls_cipher_definition_t { i32 48, %struct.mbedtls_cipher_info_t* @camellia_256_ccm_info }, %struct.mbedtls_cipher_definition_t { i32 32, %struct.mbedtls_cipher_info_t* @des_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 34, %struct.mbedtls_cipher_info_t* @des_ede_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 36, %struct.mbedtls_cipher_info_t* @des_ede3_ecb_info }, %struct.mbedtls_cipher_definition_t { i32 33, %struct.mbedtls_cipher_info_t* @des_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 35, %struct.mbedtls_cipher_info_t* @des_ede_cbc_info }, %struct.mbedtls_cipher_definition_t { i32 37, %struct.mbedtls_cipher_info_t* @des_ede3_cbc_info }, %struct.mbedtls_cipher_definition_t zeroinitializer], align 16, !dbg !3602
@mbedtls_cipher_supported = hidden global [48 x i32] zeroinitializer, align 16, !dbg !3612
@.str.1481 = private unnamed_addr constant [12 x i8] c"AES-128-ECB\00", align 1
@aes_info = internal constant %struct.mbedtls_cipher_base_t { i32 2, i32 (i8*, i32, i8*, i8*)* @aes_crypt_ecb_wrap, i32 (i8*, i32, i64, i8*, i8*, i8*)* @aes_crypt_cbc_wrap, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* @aes_crypt_cfb128_wrap, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* @aes_crypt_ctr_wrap, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @aes_setkey_enc_wrap, i32 (i8*, i8*, i32)* @aes_setkey_dec_wrap, i8* ()* @aes_ctx_alloc, void (i8*)* @aes_ctx_free }, align 8, !dbg !3615
@.str.1.1480 = private unnamed_addr constant [12 x i8] c"AES-192-ECB\00", align 1
@.str.2.1479 = private unnamed_addr constant [12 x i8] c"AES-256-ECB\00", align 1
@.str.3.1478 = private unnamed_addr constant [12 x i8] c"AES-128-CBC\00", align 1
@.str.4.1477 = private unnamed_addr constant [12 x i8] c"AES-192-CBC\00", align 1
@.str.5.1476 = private unnamed_addr constant [12 x i8] c"AES-256-CBC\00", align 1
@.str.6.1475 = private unnamed_addr constant [15 x i8] c"AES-128-CFB128\00", align 1
@.str.7.1474 = private unnamed_addr constant [15 x i8] c"AES-192-CFB128\00", align 1
@.str.8.1473 = private unnamed_addr constant [15 x i8] c"AES-256-CFB128\00", align 1
@.str.9.1472 = private unnamed_addr constant [12 x i8] c"AES-128-CTR\00", align 1
@.str.10.1471 = private unnamed_addr constant [12 x i8] c"AES-192-CTR\00", align 1
@.str.11.1470 = private unnamed_addr constant [12 x i8] c"AES-256-CTR\00", align 1
@.str.12.1469 = private unnamed_addr constant [12 x i8] c"AES-128-GCM\00", align 1
@gcm_aes_info = internal constant %struct.mbedtls_cipher_base_t { i32 2, i32 (i8*, i32, i8*, i8*)* null, i32 (i8*, i32, i64, i8*, i8*, i8*)* null, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @gcm_aes_setkey_wrap, i32 (i8*, i8*, i32)* @gcm_aes_setkey_wrap, i8* ()* @gcm_ctx_alloc, void (i8*)* @gcm_ctx_free }, align 8, !dbg !3641
@.str.13.1468 = private unnamed_addr constant [12 x i8] c"AES-192-GCM\00", align 1
@.str.14.1467 = private unnamed_addr constant [12 x i8] c"AES-256-GCM\00", align 1
@.str.15.1466 = private unnamed_addr constant [12 x i8] c"AES-128-CCM\00", align 1
@ccm_aes_info = internal constant %struct.mbedtls_cipher_base_t { i32 2, i32 (i8*, i32, i8*, i8*)* null, i32 (i8*, i32, i64, i8*, i8*, i8*)* null, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @ccm_aes_setkey_wrap, i32 (i8*, i8*, i32)* @ccm_aes_setkey_wrap, i8* ()* @ccm_ctx_alloc, void (i8*)* @ccm_ctx_free }, align 8, !dbg !3649
@.str.16.1465 = private unnamed_addr constant [12 x i8] c"AES-192-CCM\00", align 1
@.str.17.1464 = private unnamed_addr constant [12 x i8] c"AES-256-CCM\00", align 1
@.str.18.1463 = private unnamed_addr constant [9 x i8] c"ARC4-128\00", align 1
@arc4_base_info = internal constant %struct.mbedtls_cipher_base_t { i32 7, i32 (i8*, i32, i8*, i8*)* null, i32 (i8*, i32, i64, i8*, i8*, i8*)* null, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* @arc4_crypt_stream_wrap, i32 (i8*, i8*, i32)* @arc4_setkey_wrap, i32 (i8*, i8*, i32)* @arc4_setkey_wrap, i8* ()* @arc4_ctx_alloc, void (i8*)* @arc4_ctx_free }, align 8, !dbg !3657
@.str.19.1462 = private unnamed_addr constant [13 x i8] c"BLOWFISH-ECB\00", align 1
@blowfish_info = internal constant %struct.mbedtls_cipher_base_t { i32 6, i32 (i8*, i32, i8*, i8*)* @blowfish_crypt_ecb_wrap, i32 (i8*, i32, i64, i8*, i8*, i8*)* @blowfish_crypt_cbc_wrap, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* @blowfish_crypt_cfb64_wrap, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* @blowfish_crypt_ctr_wrap, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @blowfish_setkey_wrap, i32 (i8*, i8*, i32)* @blowfish_setkey_wrap, i8* ()* @blowfish_ctx_alloc, void (i8*)* @blowfish_ctx_free }, align 8, !dbg !3661
@.str.20.1461 = private unnamed_addr constant [13 x i8] c"BLOWFISH-CBC\00", align 1
@.str.21.1460 = private unnamed_addr constant [15 x i8] c"BLOWFISH-CFB64\00", align 1
@.str.22.1459 = private unnamed_addr constant [13 x i8] c"BLOWFISH-CTR\00", align 1
@.str.23.1458 = private unnamed_addr constant [17 x i8] c"CAMELLIA-128-ECB\00", align 1
@camellia_info = internal constant %struct.mbedtls_cipher_base_t { i32 5, i32 (i8*, i32, i8*, i8*)* @camellia_crypt_ecb_wrap, i32 (i8*, i32, i64, i8*, i8*, i8*)* @camellia_crypt_cbc_wrap, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* @camellia_crypt_cfb128_wrap, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* @camellia_crypt_ctr_wrap, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @camellia_setkey_enc_wrap, i32 (i8*, i8*, i32)* @camellia_setkey_dec_wrap, i8* ()* @camellia_ctx_alloc, void (i8*)* @camellia_ctx_free }, align 8, !dbg !3671
@.str.24.1457 = private unnamed_addr constant [17 x i8] c"CAMELLIA-192-ECB\00", align 1
@.str.25.1456 = private unnamed_addr constant [17 x i8] c"CAMELLIA-256-ECB\00", align 1
@.str.26.1455 = private unnamed_addr constant [17 x i8] c"CAMELLIA-128-CBC\00", align 1
@.str.27.1454 = private unnamed_addr constant [17 x i8] c"CAMELLIA-192-CBC\00", align 1
@.str.28.1453 = private unnamed_addr constant [17 x i8] c"CAMELLIA-256-CBC\00", align 1
@.str.29.1452 = private unnamed_addr constant [20 x i8] c"CAMELLIA-128-CFB128\00", align 1
@.str.30.1451 = private unnamed_addr constant [20 x i8] c"CAMELLIA-192-CFB128\00", align 1
@.str.31.1450 = private unnamed_addr constant [20 x i8] c"CAMELLIA-256-CFB128\00", align 1
@.str.32.1449 = private unnamed_addr constant [17 x i8] c"CAMELLIA-128-CTR\00", align 1
@.str.33.1448 = private unnamed_addr constant [17 x i8] c"CAMELLIA-192-CTR\00", align 1
@.str.34.1447 = private unnamed_addr constant [17 x i8] c"CAMELLIA-256-CTR\00", align 1
@.str.35.1446 = private unnamed_addr constant [17 x i8] c"CAMELLIA-128-GCM\00", align 1
@gcm_camellia_info = internal constant %struct.mbedtls_cipher_base_t { i32 5, i32 (i8*, i32, i8*, i8*)* null, i32 (i8*, i32, i64, i8*, i8*, i8*)* null, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @gcm_camellia_setkey_wrap, i32 (i8*, i8*, i32)* @gcm_camellia_setkey_wrap, i8* ()* @gcm_ctx_alloc, void (i8*)* @gcm_ctx_free }, align 8, !dbg !3697
@.str.36.1445 = private unnamed_addr constant [17 x i8] c"CAMELLIA-192-GCM\00", align 1
@.str.37.1444 = private unnamed_addr constant [17 x i8] c"CAMELLIA-256-GCM\00", align 1
@.str.38.1443 = private unnamed_addr constant [17 x i8] c"CAMELLIA-128-CCM\00", align 1
@ccm_camellia_info = internal constant %struct.mbedtls_cipher_base_t { i32 5, i32 (i8*, i32, i8*, i8*)* null, i32 (i8*, i32, i64, i8*, i8*, i8*)* null, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @ccm_camellia_setkey_wrap, i32 (i8*, i8*, i32)* @ccm_camellia_setkey_wrap, i8* ()* @ccm_ctx_alloc, void (i8*)* @ccm_ctx_free }, align 8, !dbg !3705
@.str.39.1442 = private unnamed_addr constant [17 x i8] c"CAMELLIA-192-CCM\00", align 1
@.str.40.1441 = private unnamed_addr constant [17 x i8] c"CAMELLIA-256-CCM\00", align 1
@.str.41.1440 = private unnamed_addr constant [8 x i8] c"DES-ECB\00", align 1
@des_info = internal constant %struct.mbedtls_cipher_base_t { i32 3, i32 (i8*, i32, i8*, i8*)* @des_crypt_ecb_wrap, i32 (i8*, i32, i64, i8*, i8*, i8*)* @des_crypt_cbc_wrap, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @des_setkey_enc_wrap, i32 (i8*, i8*, i32)* @des_setkey_dec_wrap, i8* ()* @des_ctx_alloc, void (i8*)* @des_ctx_free }, align 8, !dbg !3713
@.str.42.1439 = private unnamed_addr constant [12 x i8] c"DES-EDE-ECB\00", align 1
@des_ede_info = internal constant %struct.mbedtls_cipher_base_t { i32 3, i32 (i8*, i32, i8*, i8*)* @des3_crypt_ecb_wrap, i32 (i8*, i32, i64, i8*, i8*, i8*)* @des3_crypt_cbc_wrap, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @des3_set2key_enc_wrap, i32 (i8*, i8*, i32)* @des3_set2key_dec_wrap, i8* ()* @des3_ctx_alloc, void (i8*)* @des3_ctx_free }, align 8, !dbg !3717
@.str.43.1438 = private unnamed_addr constant [13 x i8] c"DES-EDE3-ECB\00", align 1
@des_ede3_info = internal constant %struct.mbedtls_cipher_base_t { i32 4, i32 (i8*, i32, i8*, i8*)* @des3_crypt_ecb_wrap, i32 (i8*, i32, i64, i8*, i8*, i8*)* @des3_crypt_cbc_wrap, i32 (i8*, i32, i64, i64*, i8*, i8*, i8*)* null, i32 (i8*, i64, i64*, i8*, i8*, i8*, i8*)* null, i32 (i8*, i64, i8*, i8*)* null, i32 (i8*, i8*, i32)* @des3_set3key_enc_wrap, i32 (i8*, i8*, i32)* @des3_set3key_dec_wrap, i8* ()* @des3_ctx_alloc, void (i8*)* @des3_ctx_free }, align 8, !dbg !3721
@.str.44.1437 = private unnamed_addr constant [8 x i8] c"DES-CBC\00", align 1
@.str.45.1436 = private unnamed_addr constant [12 x i8] c"DES-EDE-CBC\00", align 1
@.str.46.1435 = private unnamed_addr constant [13 x i8] c"DES-EDE3-CBC\00", align 1
@odd_parity_table = internal constant [128 x i8] c"\01\02\04\07\08\0B\0D\0E\10\13\15\16\19\1A\1C\1F #%&)*,/12478;=>@CEFIJLOQRTWX[]^abdghkmnpsuvyz|\7F\80\83\85\86\89\8A\8C\8F\91\92\94\97\98\9B\9D\9E\A1\A2\A4\A7\A8\AB\AD\AE\B0\B3\B5\B6\B9\BA\BC\BF\C1\C2\C4\C7\C8\CB\CD\CE\D0\D3\D5\D6\D9\DA\DC\DF\E0\E3\E5\E6\E9\EA\EC\EF\F1\F2\F4\F7\F8\FB\FD\FE", align 16, !dbg !3729
@weak_key_table = internal constant [16 x [8 x i8]] [[8 x i8] c"\01\01\01\01\01\01\01\01", [8 x i8] c"\FE\FE\FE\FE\FE\FE\FE\FE", [8 x i8] c"\1F\1F\1F\1F\0E\0E\0E\0E", [8 x i8] c"\E0\E0\E0\E0\F1\F1\F1\F1", [8 x i8] c"\01\1F\01\1F\01\0E\01\0E", [8 x i8] c"\1F\01\1F\01\0E\01\0E\01", [8 x i8] c"\01\E0\01\E0\01\F1\01\F1", [8 x i8] c"\E0\01\E0\01\F1\01\F1\01", [8 x i8] c"\01\FE\01\FE\01\FE\01\FE", [8 x i8] c"\FE\01\FE\01\FE\01\FE\01", [8 x i8] c"\1F\E0\1F\E0\0E\F1\0E\F1", [8 x i8] c"\E0\1F\E0\1F\F1\0E\F1\0E", [8 x i8] c"\1F\FE\1F\FE\0E\FE\0E\FE", [8 x i8] c"\FE\1F\FE\1F\FE\0E\FE\0E", [8 x i8] c"\E0\FE\E0\FE\F1\FE\F1\FE", [8 x i8] c"\FE\E0\FE\E0\FE\F1\FE\F1"], align 16, !dbg !3734
@LHs = internal constant [16 x i32] [i32 0, i32 1, i32 256, i32 257, i32 65536, i32 65537, i32 65792, i32 65793, i32 16777216, i32 16777217, i32 16777472, i32 16777473, i32 16842752, i32 16842753, i32 16843008, i32 16843009], align 16, !dbg !3739
@RHs = internal constant [16 x i32] [i32 0, i32 16777216, i32 65536, i32 16842752, i32 256, i32 16777472, i32 65792, i32 16843008, i32 1, i32 16777217, i32 65537, i32 16842753, i32 257, i32 16777473, i32 65793, i32 16843009], align 16, !dbg !3743
@SB8 = internal constant [64 x i32] [i32 268439616, i32 4096, i32 262144, i32 268701760, i32 268435456, i32 268439616, i32 64, i32 268435456, i32 262208, i32 268697600, i32 268701760, i32 266240, i32 268701696, i32 266304, i32 4096, i32 64, i32 268697600, i32 268435520, i32 268439552, i32 4160, i32 266240, i32 262208, i32 268697664, i32 268701696, i32 4160, i32 0, i32 0, i32 268697664, i32 268435520, i32 268439552, i32 266304, i32 262144, i32 266304, i32 262144, i32 268701696, i32 4096, i32 64, i32 268697664, i32 4096, i32 266304, i32 268439552, i32 64, i32 268435520, i32 268697600, i32 268697664, i32 268435456, i32 262144, i32 268439616, i32 0, i32 268701760, i32 262208, i32 268435520, i32 268697600, i32 268439552, i32 268439616, i32 0, i32 268701760, i32 266240, i32 266240, i32 4160, i32 4160, i32 262208, i32 268435456, i32 268701696], align 16, !dbg !3745
@SB6 = internal constant [64 x i32] [i32 536870928, i32 541065216, i32 16384, i32 541081616, i32 541065216, i32 16, i32 541081616, i32 4194304, i32 536887296, i32 4210704, i32 4194304, i32 536870928, i32 4194320, i32 536887296, i32 536870912, i32 16400, i32 0, i32 4194320, i32 536887312, i32 16384, i32 4210688, i32 536887312, i32 16, i32 541065232, i32 541065232, i32 0, i32 4210704, i32 541081600, i32 16400, i32 4210688, i32 541081600, i32 536870912, i32 536887296, i32 16, i32 541065232, i32 4210688, i32 541081616, i32 4194304, i32 16400, i32 536870928, i32 4194304, i32 536887296, i32 536870912, i32 16400, i32 536870928, i32 541081616, i32 4210688, i32 541065216, i32 4210704, i32 541081600, i32 0, i32 541065232, i32 16, i32 16384, i32 541065216, i32 4210704, i32 16384, i32 4194320, i32 536887312, i32 0, i32 541081600, i32 536870912, i32 4194320, i32 536887312], align 16, !dbg !3748
@SB4 = internal constant [64 x i32] [i32 8396801, i32 8321, i32 8321, i32 128, i32 8396928, i32 8388737, i32 8388609, i32 8193, i32 0, i32 8396800, i32 8396800, i32 8396929, i32 129, i32 0, i32 8388736, i32 8388609, i32 1, i32 8192, i32 8388608, i32 8396801, i32 128, i32 8388608, i32 8193, i32 8320, i32 8388737, i32 1, i32 8320, i32 8388736, i32 8192, i32 8396928, i32 8396929, i32 129, i32 8388736, i32 8388609, i32 8396800, i32 8396929, i32 129, i32 0, i32 0, i32 8396800, i32 8320, i32 8388736, i32 8388737, i32 1, i32 8396801, i32 8321, i32 8321, i32 128, i32 8396929, i32 129, i32 1, i32 8192, i32 8388609, i32 8193, i32 8396928, i32 8388737, i32 8193, i32 8320, i32 8388608, i32 8396801, i32 128, i32 8388608, i32 8192, i32 8396928], align 16, !dbg !3750
@SB2 = internal constant [64 x i32] [i32 -2146402272, i32 -2147450880, i32 32768, i32 1081376, i32 1048576, i32 32, i32 -2146435040, i32 -2147450848, i32 -2147483616, i32 -2146402272, i32 -2146402304, i32 -2147483648, i32 -2147450880, i32 1048576, i32 32, i32 -2146435040, i32 1081344, i32 1048608, i32 -2147450848, i32 0, i32 -2147483648, i32 32768, i32 1081376, i32 -2146435072, i32 1048608, i32 -2147483616, i32 0, i32 1081344, i32 32800, i32 -2146402304, i32 -2146435072, i32 32800, i32 0, i32 1081376, i32 -2146435040, i32 1048576, i32 -2147450848, i32 -2146435072, i32 -2146402304, i32 32768, i32 -2146435072, i32 -2147450880, i32 32, i32 -2146402272, i32 1081376, i32 32, i32 32768, i32 -2147483648, i32 32800, i32 -2146402304, i32 1048576, i32 -2147483616, i32 1048608, i32 -2147450848, i32 -2147483616, i32 1048608, i32 1081344, i32 0, i32 -2147450880, i32 32800, i32 -2147483648, i32 -2146435040, i32 -2146402272, i32 1081344], align 16, !dbg !3752
@SB7 = internal constant [64 x i32] [i32 2097152, i32 69206018, i32 67110914, i32 0, i32 2048, i32 67110914, i32 2099202, i32 69208064, i32 69208066, i32 2097152, i32 0, i32 67108866, i32 2, i32 67108864, i32 69206018, i32 2050, i32 67110912, i32 2099202, i32 2097154, i32 67110912, i32 67108866, i32 69206016, i32 69208064, i32 2097154, i32 69206016, i32 2048, i32 2050, i32 69208066, i32 2099200, i32 2, i32 67108864, i32 2099200, i32 67108864, i32 2099200, i32 2097152, i32 67110914, i32 67110914, i32 69206018, i32 69206018, i32 2, i32 2097154, i32 67108864, i32 67110912, i32 2097152, i32 69208064, i32 2050, i32 2099202, i32 69208064, i32 2050, i32 67108866, i32 69208066, i32 69206016, i32 2099200, i32 0, i32 2, i32 69208066, i32 0, i32 2099202, i32 69206016, i32 2048, i32 67108866, i32 67110912, i32 2048, i32 2097154], align 16, !dbg !3754
@SB5 = internal constant [64 x i32] [i32 256, i32 34078976, i32 34078720, i32 1107296512, i32 524288, i32 256, i32 1073741824, i32 34078720, i32 1074266368, i32 524288, i32 33554688, i32 1074266368, i32 1107296512, i32 1107820544, i32 524544, i32 1073741824, i32 33554432, i32 1074266112, i32 1074266112, i32 0, i32 1073742080, i32 1107820800, i32 1107820800, i32 33554688, i32 1107820544, i32 1073742080, i32 0, i32 1107296256, i32 34078976, i32 33554432, i32 1107296256, i32 524544, i32 524288, i32 1107296512, i32 256, i32 33554432, i32 1073741824, i32 34078720, i32 1107296512, i32 1074266368, i32 33554688, i32 1073741824, i32 1107820544, i32 34078976, i32 1074266368, i32 256, i32 33554432, i32 1107820544, i32 1107820800, i32 524544, i32 1107296256, i32 1107820800, i32 34078720, i32 0, i32 1074266112, i32 1107296256, i32 524544, i32 33554688, i32 1073742080, i32 524288, i32 0, i32 1074266112, i32 34078976, i32 1073742080], align 16, !dbg !3756
@SB3 = internal constant [64 x i32] [i32 520, i32 134349312, i32 0, i32 134348808, i32 134218240, i32 0, i32 131592, i32 134218240, i32 131080, i32 134217736, i32 134217736, i32 131072, i32 134349320, i32 131080, i32 134348800, i32 520, i32 134217728, i32 8, i32 134349312, i32 512, i32 131584, i32 134348800, i32 134348808, i32 131592, i32 134218248, i32 131584, i32 131072, i32 134218248, i32 8, i32 134349320, i32 512, i32 134217728, i32 134349312, i32 134217728, i32 131080, i32 520, i32 131072, i32 134349312, i32 134218240, i32 0, i32 512, i32 131080, i32 134349320, i32 134218240, i32 134217736, i32 512, i32 0, i32 134348808, i32 134218248, i32 131072, i32 134217728, i32 134349320, i32 8, i32 131592, i32 131584, i32 134217736, i32 134348800, i32 134218248, i32 520, i32 134348800, i32 131592, i32 8, i32 134348808, i32 131584], align 16, !dbg !3758
@SB1 = internal constant [64 x i32] [i32 16843776, i32 0, i32 65536, i32 16843780, i32 16842756, i32 66564, i32 4, i32 65536, i32 1024, i32 16843776, i32 16843780, i32 1024, i32 16778244, i32 16842756, i32 16777216, i32 4, i32 1028, i32 16778240, i32 16778240, i32 66560, i32 66560, i32 16842752, i32 16842752, i32 16778244, i32 65540, i32 16777220, i32 16777220, i32 65540, i32 0, i32 1028, i32 66564, i32 16777216, i32 65536, i32 16843780, i32 4, i32 16842752, i32 16843776, i32 16777216, i32 16777216, i32 1024, i32 16842756, i32 65536, i32 66560, i32 16777220, i32 1024, i32 4, i32 16778244, i32 66564, i32 16843780, i32 65540, i32 16842752, i32 16778244, i32 16777220, i32 1028, i32 66564, i32 16843776, i32 1028, i32 16778240, i32 16778240, i32 0, i32 65540, i32 66560, i32 0, i32 16842756], align 16, !dbg !3760
@.str.1515 = private unnamed_addr constant [23 x i8] c"  DES%c-ECB-%3d (%s): \00", align 1
@.str.1.1513 = private unnamed_addr constant [4 x i8] c"dec\00", align 1
@.str.2.1514 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@des3_test_buf = internal constant [8 x i8] c"Now is t", align 1, !dbg !3762
@des3_test_keys = internal constant [24 x i8] c"\01#Eg\89\AB\CD\EF#Eg\89\AB\CD\EF\01Eg\89\AB\CD\EF\01#", align 16, !dbg !3765
@des3_test_ecb_dec = internal constant [3 x [8 x i8]] [[8 x i8] c"\CD\D6O/\94'\C1]", [8 x i8] c"i\96\C8\FAG\A2\AB\EB", [8 x i8] c"\83%9vD\09\1A\0A"], align 16, !dbg !3770
@des3_test_ecb_enc = internal constant [3 x [8 x i8]] [[8 x i8] c"j*\19\F4\1E\CA\85K", [8 x i8] c"\03\E6\9F[\FAX\EBB", [8 x i8] c"\DD\17\E8\B8\B47\D22"], align 16, !dbg !3774
@.str.3.1516 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.4.1517 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.5.1518 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6.1519 = private unnamed_addr constant [23 x i8] c"  DES%c-CBC-%3d (%s): \00", align 1
@des3_test_iv = internal constant [8 x i8] c"\124Vx\90\AB\CD\EF", align 1, !dbg !3776
@des3_test_cbc_dec = internal constant [3 x [8 x i8]] [[8 x i8] c"\12\9F@\B9\D2\00V\B3", [8 x i8] c"G\0E\FC\9Ak\8E\E3\93", [8 x i8] c"\C5\CE\CFc\EC\ECQL"], align 16, !dbg !3778
@des3_test_cbc_enc = internal constant [3 x [8 x i8]] [[8 x i8] c"T\F1Z\F6\EB\E3\A4\B4", [8 x i8] c"5v\11V_\A1\8EM", [8 x i8] c"\CB\19\1F\85\D1\ED\849"], align 16, !dbg !3780
@.str.1531 = private unnamed_addr constant [30 x i8] c"-----BEGIN DH PARAMETERS-----\00", align 1
@.str.1.1532 = private unnamed_addr constant [28 x i8] c"-----END DH PARAMETERS-----\00", align 1
@.str.2.1533 = private unnamed_addr constant [23 x i8] c"  DHM parameter load: \00", align 1
@mbedtls_test_dhm_params = internal constant [251 x i8] c"-----BEGIN DH PARAMETERS-----\0D\0AMIGHAoGBAJ419DBEOgmQTzo5qXl5fQcN9TN455wkOL7052HzxxRVMyhYmwQcgJvh\0D\0A1sa18fyfR9OiVEMYglOpkqVoGLN7qd5aQNNi5W7/C+VBdHTBJcGZJyyP5B3qcz32\0D\0A9mLJKudlVudV0Qxk5qUJaPZ/xupz0NyoVpviuiBOI1gNi8ovSXWzAgEC\0D\0A-----END DH PARAMETERS-----\0D\0A\00", align 16, !dbg !3782
@.str.3.1534 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.4.1535 = private unnamed_addr constant [9 x i8] c"passed\0A\0A\00", align 1
@ecp_supported_curves = internal constant [12 x %struct.mbedtls_ecp_curve_info] [%struct.mbedtls_ecp_curve_info { i32 5, i16 25, i16 521, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12.1558, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 8, i16 28, i16 512, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.1559, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 4, i16 24, i16 384, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.1560, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 7, i16 27, i16 384, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.1561, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 3, i16 23, i16 256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.1562, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 12, i16 22, i16 256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17.1563, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 6, i16 26, i16 256, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18.1564, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 2, i16 21, i16 224, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.1565, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 11, i16 20, i16 224, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20.1566, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 1, i16 19, i16 192, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.1567, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info { i32 10, i16 18, i16 192, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22.1568, i32 0, i32 0) }, %struct.mbedtls_ecp_curve_info zeroinitializer], align 16, !dbg !3794
@mbedtls_ecp_grp_id_list.init_done = internal global i32 0, align 4, !dbg !3807
@ecp_supported_grp_id = internal global [12 x i32] zeroinitializer, align 16, !dbg !3820
@.str.1614 = private unnamed_addr constant [49 x i8] c"000000000000000000000000000000000000000000000001\00", align 1
@.str.1.1615 = private unnamed_addr constant [49 x i8] c"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22830\00", align 1
@.str.2.1616 = private unnamed_addr constant [49 x i8] c"5EA6F389A38B8BC81E767753B15AA5569E1782E30ABE7D25\00", align 1
@.str.3.1617 = private unnamed_addr constant [49 x i8] c"400000000000000000000000000000000000000000000000\00", align 1
@.str.4.1618 = private unnamed_addr constant [49 x i8] c"7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\00", align 1
@.str.5.1619 = private unnamed_addr constant [49 x i8] c"555555555555555555555555555555555555555555555555\00", align 1
@.str.6.1620 = private unnamed_addr constant [50 x i8] c"  ECP test #1 (constant op_count, base point G): \00", align 1
@add_count = internal global i64 0, align 8, !dbg !3814
@dbl_count = internal global i64 0, align 8, !dbg !3816
@mul_count = internal global i64 0, align 8, !dbg !3818
@.str.7.1621 = private unnamed_addr constant [13 x i8] c"failed (%u)\0A\00", align 1
@.str.8.1622 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.9.1623 = private unnamed_addr constant [49 x i8] c"  ECP test #2 (constant op_count, other point): \00", align 1
@.str.10.1624 = private unnamed_addr constant [38 x i8] c"Unexpected error, return code = %08X\0A\00", align 1
@.str.11.1625 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.12.1558 = private unnamed_addr constant [10 x i8] c"secp521r1\00", align 1
@.str.13.1559 = private unnamed_addr constant [16 x i8] c"brainpoolP512r1\00", align 1
@.str.14.1560 = private unnamed_addr constant [10 x i8] c"secp384r1\00", align 1
@.str.15.1561 = private unnamed_addr constant [16 x i8] c"brainpoolP384r1\00", align 1
@.str.16.1562 = private unnamed_addr constant [10 x i8] c"secp256r1\00", align 1
@.str.17.1563 = private unnamed_addr constant [10 x i8] c"secp256k1\00", align 1
@.str.18.1564 = private unnamed_addr constant [16 x i8] c"brainpoolP256r1\00", align 1
@.str.19.1565 = private unnamed_addr constant [10 x i8] c"secp224r1\00", align 1
@.str.20.1566 = private unnamed_addr constant [10 x i8] c"secp224k1\00", align 1
@.str.21.1567 = private unnamed_addr constant [10 x i8] c"secp192r1\00", align 1
@.str.22.1568 = private unnamed_addr constant [10 x i8] c"secp192k1\00", align 1
@secp192r1_p = internal constant [3 x i64] [i64 -1, i64 -2, i64 -1], align 16, !dbg !3834
@secp192r1_b = internal constant [3 x i64] [i64 -92078683924809295, i64 1128127154243252297, i64 7215053686808805607], align 16, !dbg !3857
@secp192r1_gx = internal constant [3 x i64] [i64 -792902925453160430, i64 8988939576078862336, i64 1769255009665454326], align 16, !dbg !3861
@secp192r1_gy = internal constant [3 x i64] [i64 8356842117447370769, i64 7138225120784731605, i64 511487955924736632], align 16, !dbg !3863
@secp192r1_n = internal constant [3 x i64] [i64 1471491468346665009, i64 -1713440714, i64 -1], align 16, !dbg !3865
@secp224r1_p = internal constant [4 x i64] [i64 1, i64 -4294967296, i64 -1, i64 4294967295], align 16, !dbg !3867
@secp224r1_b = internal constant [4 x i64] [i64 2813405352741437364, i64 5783942125095737530, i64 866014579497448022, i64 3020229253], align 16, !dbg !3870
@secp224r1_gx = internal constant [4 x i64] [i64 3761210295710391585, i64 5333319497174618402, i64 7761038610888102073, i64 3071151293], align 16, !dbg !3872
@secp224r1_gy = internal constant [4 x i64] [i64 4960013060979850804, i64 -3655949140929067164, i64 -5334755671375945754, i64 3174523784], align 16, !dbg !3874
@secp224r1_n = internal constant [4 x i64] [i64 1431345634452711997, i64 -256586165981122, i64 -1, i64 4294967295], align 16, !dbg !3876
@secp256r1_p = internal constant [4 x i64] [i64 -1, i64 4294967295, i64 0, i64 -4294967295], align 16, !dbg !3878
@secp256r1_b = internal constant [4 x i64] [i64 4309448131093880907, i64 7285987128567378166, i64 -5482079946633869636, i64 6540974713487397863], align 16, !dbg !3880
@secp256r1_gx = internal constant [4 x i64] [i64 -819310685055303018, i64 8575836109218198432, i64 -523289583788211982, i64 7716867327612699207], align 16, !dbg !3882
@secp256r1_gy = internal constant [4 x i64] [i64 -3767753221892779531, i64 3156516839386865358, i64 -8149286295562117610, i64 5756518291402817435], align 16, !dbg !3884
@secp256r1_n = internal constant [4 x i64] [i64 -884452912994769583, i64 -4834901526196019580, i64 -1, i64 -4294967296], align 16, !dbg !3886
@secp384r1_p = internal constant [6 x i64] [i64 4294967295, i64 -4294967296, i64 -2, i64 -1, i64 -1, i64 -1], align 16, !dbg !3888
@secp384r1_b = internal constant [6 x i64] [i64 3064076045283764975, i64 -4155070326131207779, i64 221811693264799578, i64 1737717031765098770, i64 -7454014372307260135, i64 -5534590068959811612], align 16, !dbg !3891
@secp384r1_gx = internal constant [6 x i64] [i64 4203087948775033527, i64 6125724927633205612, i64 6482722621138151992, i64 7934563412932533144, i64 -8164525713704047244, i64 -6158731714831383241], align 16, !dbg !3893
@secp384r1_gy = internal constant [6 x i64] [i64 8809917716911230559, i64 747793036959711645, i64 -1595909157222827840, i64 -507748159718812548, i64 6745997240412855337, i64 3897828414440483951], align 16, !dbg !3895
@secp384r1_n = internal constant [6 x i64] [i64 -1374695839762142861, i64 6348401684107011962, i64 -4079331616924160545, i64 -1, i64 -1, i64 -1], align 16, !dbg !3897
@secp521r1_p = internal constant [9 x i64] [i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 511], align 16, !dbg !3899
@secp521r1_b = internal constant [9 x i64] [i64 -1205522328057790720, i64 3851667882566759665, i64 1608559935907544839, i64 6204052985702421371, i64 -5137330016661468703, i64 -6711926556896061965, i64 -7882951223617961746, i64 -7692507284855023073, i64 81], align 16, !dbg !3904
@secp521r1_gx = internal constant [9 x i64] [i64 -468798559011619482, i64 3695401138005885595, i64 -135740037768697634, i64 -6824256941130819288, i64 -565008924583051846, i64 -7177469824220547807, i64 -7043969127616760766, i64 -8823107236856010291, i64 198], align 16, !dbg !3906
@secp521r1_gy = internal constant [9 x i64] [i64 -8593267801767975344, i64 3836064706166178368, i64 -4228676635086485663, i64 -7498930326476675520, i64 1706790690937005612, i64 -7424953328857299864, i64 6668247425720589273, i64 4118940400423256068, i64 280], align 16, !dbg !3908
@secp521r1_n = internal constant [9 x i64] [i64 -4940528924288850935, i64 4302566813442262958, i64 9208736750959699408, i64 5874531763869423211, i64 -6, i64 -1, i64 -1, i64 -1, i64 511], align 16, !dbg !3910
@secp192k1_p = internal constant [3 x i64] [i64 -4294971849, i64 -1, i64 -1], align 16, !dbg !3912
@secp192k1_a = internal constant [1 x i64] zeroinitializer, align 8, !dbg !3914
@secp192k1_b = internal constant [1 x i64] [i64 3], align 8, !dbg !3917
@secp192k1_gx = internal constant [3 x i64] [i64 2136344160337161341, i64 2787865619045282868, i64 -2643629410584368722], align 16, !dbg !3919
@secp192k1_gy = internal constant [3 x i64] [i64 4648465270138875805, i64 -8916736041847716300, i64 -7264535526104487769], align 16, !dbg !3921
@secp192k1_n = internal constant [3 x i64] [i64 1110496206164786573, i64 -7936476137, i64 -1], align 16, !dbg !3923
@secp224k1_p = internal constant [4 x i64] [i64 -4294974099, i64 -1, i64 -1, i64 4294967295], align 16, !dbg !3925
@secp224k1_a = internal constant [1 x i64] zeroinitializer, align 8, !dbg !3927
@secp224k1_b = internal constant [1 x i64] [i64 5], align 8, !dbg !3929
@secp224k1_gx = internal constant [4 x i64] [i64 1116440871503897692, i64 7612323524420597161, i64 5616157919209597089, i64 2705677107], align 16, !dbg !3931
@secp224k1_gy = internal constant [4 x i64] [i64 -2104786470439132763, i64 -584594974747607719, i64 9203726248751856598, i64 2114494445], align 16, !dbg !3933
@secp224k1_n = internal constant [4 x i64] [i64 -3823369778850975241, i64 524367505940868, i64 0, i64 4294967296], align 16, !dbg !3935
@secp256k1_p = internal constant [4 x i64] [i64 -4294968273, i64 -1, i64 -1, i64 -1], align 16, !dbg !3937
@secp256k1_a = internal constant [1 x i64] zeroinitializer, align 8, !dbg !3939
@secp256k1_b = internal constant [1 x i64] [i64 7], align 8, !dbg !3941
@secp256k1_gx = internal constant [4 x i64] [i64 6481385041966929816, i64 188021827762530521, i64 6170039885052185351, i64 8772561819708210092], align 16, !dbg !3943
@secp256k1_gy = internal constant [4 x i64] [i64 -7185545363635252040, i64 -209500633525038055, i64 6747795201694173352, i64 5204712524664259685], align 16, !dbg !3945
@secp256k1_n = internal constant [4 x i64] [i64 -4624529908474429119, i64 -4994812053365940165, i64 -2, i64 -1], align 16, !dbg !3947
@brainpoolP256r1_p = internal constant [4 x i64] [i64 2311270323689771895, i64 7943213001558335528, i64 4496292894210231666, i64 -6198263861319128644], align 16, !dbg !3949
@brainpoolP256r1_a = internal constant [4 x i64] [i64 -1636412755085838887, i64 -324164885101650836, i64 -1227664998294421529, i64 9032542404991529047], align 16, !dbg !3951
@brainpoolP256r1_b = internal constant [4 x i64] [i64 7767825457231955894, i64 -7672983498223263282, i64 -923037976846959425, i64 2800214691157789508], align 16, !dbg !3953
@brainpoolP256r1_gx = internal constant [4 x i64] [i64 4198572826427273826, i64 -5053557880721169470, i64 3191724131859150767, i64 -8371436644322093109], align 16, !dbg !3955
@brainpoolP256r1_gy = internal constant [4 x i64] [i64 6637554640278022551, i64 -4433999359445725612, i64 -7496164501933187639, i64 6088576656054338813], align 16, !dbg !3957
@brainpoolP256r1_n = internal constant [4 x i64] [i64 -8061990328899971417, i64 -8342501991185799433, i64 4496292894210231665, i64 -6198263861319128644], align 16, !dbg !3959
@brainpoolP384r1_p = internal constant [6 x i64] [i64 -8698984072815842221, i64 -5993262882146674063, i64 1347097566612230435, i64 1526563086152259252, i64 1107163671716839903, i64 -8306574491275203288], align 16, !dbg !3961
@brainpoolP384r1_a = internal constant [6 x i64] [i64 335737924824737830, i64 -8456210569144642325, i64 1410020238645393679, i64 -4413911852670376057, i64 4355552632119865248, i64 8918115475071440140], align 16, !dbg !3963
@brainpoolP384r1_b = internal constant [6 x i64] [i64 4230998357940653073, i64 8985869839777909140, i64 3352946025465340629, i64 3438355245973688998, i64 -8414495055998335876, i64 335737924824737830], align 16, !dbg !3965
@brainpoolP384r1_gx = internal constant [6 x i64] [i64 -1186783291851362530, i64 -1718439692932331862, i64 -2630160464876859160, i64 -8626746346542379037, i64 -6726624664623169685, i64 2097662510161151487], align 16, !dbg !3967
@brainpoolP384r1_gy = internal constant [6 x i64] [i64 4792396531824874261, i64 1028586674454626577, i64 -2189869477761308376, i64 7113166411453454436, i64 6679378719998465362, i64 -8449283461998853468], align 16, !dbg !3969
@brainpoolP384r1_n = internal constant [6 x i64] [i64 4289733633151100261, i64 -3514295694670183664, i64 2240099277684876711, i64 1526563086152259251, i64 1107163671716839903, i64 -8306574491275203288], align 16, !dbg !3971
@brainpoolP512r1_p = internal constant [8 x i64] [i64 2930260431521597683, i64 2918894611604883077, i64 -5850843135254232858, i64 9029043254863489090, i64 -2998380533618898831, i64 -3805385882173058546, i64 4599554755319692295, i64 -6134573700119673717], align 16, !dbg !3973
@brainpoolP512r1_a = internal constant [8 x i64] [i64 -1746925731717540662, i64 9156125524185237433, i64 733789637240866997, i64 3309403945136634529, i64 -6326359236773649476, i64 -7724837137124092400, i64 -2147529528247628603, i64 8660601516620528521], align 16, !dbg !3976
@brainpoolP512r1_b = internal constant [8 x i64] [i64 2885045271355914019, i64 -7475886632936479267, i64 8645948983640342119, i64 3166813089265986637, i64 -8387170674177665113, i64 -6330589237864369719, i64 -1542373212498862758, i64 4465624766311842250], align 16, !dbg !3978
@brainpoolP512r1_gx = internal constant [8 x i64] [i64 -8415782903455549406, i64 8965910700118138472, i64 5823550673135435103, i64 -55415966350125939, i64 -5459661344807581298, i64 -8796199190748653887, i64 6494527313417104019, i64 -9102086292842292892], align 16, !dbg !3980
@brainpoolP512r1_gy = internal constant [8 x i64] [i64 8704646705537616018, i64 -3329801490789280762, i64 6614182396149851054, i64 -5558323433720297378, i64 -6917312030724620015, i64 -1006001461753709798, i64 -4545610137825959171, i64 9069748673103213292], align 16, !dbg !3982
@brainpoolP512r1_n = internal constant [8 x i64] [i64 -5366154943270420375, i64 2139723849122306781, i64 4721568021488603207, i64 6142448377308718617, i64 -2998380533618898832, i64 -3805385882173058546, i64 4599554755319692295, i64 -6134573700119673717], align 16, !dbg !3984
@ecp_mpi_set1.one = internal global [1 x i64] [i64 1], align 8, !dbg !3841
@.str.1628 = private unnamed_addr constant [7 x i8] c"01DB42\00", align 1
@ecp_mod_p192k1.Rp = internal global [1 x i64] [i64 4294971849], align 8, !dbg !3986
@ecp_mod_p224k1.Rp = internal global [1 x i64] [i64 4294974099], align 8, !dbg !3991
@ecp_mod_p256k1.Rp = internal global [1 x i64] [i64 4294968273], align 8, !dbg !3994
@.str.1646 = private unnamed_addr constant [25 x i8] c"  AES-GCM-%3d #%d (%s): \00", align 1
@.str.1.1647 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@key = internal constant [6 x [32 x i8]] [[32 x i8] zeroinitializer, [32 x i8] c"\FE\FF\E9\92\86es\1Cmj\8F\94g0\83\08\FE\FF\E9\92\86es\1Cmj\8F\94g0\83\08", [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [32 x i8] zeroinitializer], align 16, !dbg !3997
@key_index = internal constant [6 x i32] [i32 0, i32 0, i32 1, i32 1, i32 1, i32 1], align 16, !dbg !4008
@pt_len = internal constant [6 x i64] [i64 0, i64 16, i64 64, i64 60, i64 60, i64 60], align 16, !dbg !4011
@iv_index = internal constant [6 x i32] [i32 0, i32 0, i32 1, i32 1, i32 1, i32 2], align 16, !dbg !4016
@iv_len = internal constant [6 x i64] [i64 12, i64 12, i64 12, i64 12, i64 8, i64 60], align 16, !dbg !4018
@add_index = internal constant [6 x i32] [i32 0, i32 0, i32 0, i32 1, i32 1, i32 1], align 16, !dbg !4022
@add_len = internal constant [6 x i64] [i64 0, i64 0, i64 0, i64 20, i64 20, i64 20], align 16, !dbg !4024
@pt = internal constant [6 x [64 x i8]] [[64 x i8] zeroinitializer, [64 x i8] c"\D912%\F8\84\06\E5\A5Y\09\C5\AF\F5&\9A\86\A7\A9S\154\F7\DA.L0=\8A1\8Ar\1C<\0C\95\95h\09S/\CF\0E$I\A6\B5%\B1j\ED\F5\AA\0D\E6W\BAc{9\1A\AF\D2U", [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer], align 16, !dbg !4026
@pt_index = internal constant [6 x i32] [i32 0, i32 0, i32 1, i32 1, i32 1, i32 1], align 16, !dbg !4028
@tag = internal constant [18 x [16 x i8]] [[16 x i8] c"X\E2\FC\CE\FA~0a6\7F\1DW\A4\E7EZ", [16 x i8] c"\ABnG\D4,\EC\13\BD\F5:g\B2\12W\BD\DF", [16 x i8] c"M\\*\F3'\CDd\A6,\F3Z\BD+\A6\FA\B4", [16 x i8] c"[\C9O\BC2!\A5\DB\94\FA\E9Z\E7\12\1AG", [16 x i8] c"6\12\D2\E7\9E;\07\85V\1B\E1J\AC\A2\FC\CB", [16 x i8] c"a\9C\C5\AE\FF\FE\0B\FAF*\F4<\16\99\D0P", [16 x i8] c"\CD3\B2\8A\C7s\F7K\A0\0E\D1\F3\12W$5", [16 x i8] c"/\F5\8D\80\039'\AB\8E\F4\D4Xu\14\F0\FB", [16 x i8] c"\99$\A7\C8Xs6\BF\B1\18\02M\B8gJ\14", [16 x i8] c"%\19I\8E\80\F1G\8F7\BAU\BDm'a\8C", [16 x i8] c"e\DC\C5\7F\CFb:$\09O\CC\A4\0D53\F8", [16 x i8] c"\DC\F5f\FF)\1C%\BB\B8V\8F\C3\D3v\A6\D9", [16 x i8] c"S\0F\8A\FB\C7E6\B9\A9c\B4\F1\C4\CBs\8B", [16 x i8] c"\D0\D1\C8\A7\99\99k\F0&[\98\B5\D4\8A\B9\19", [16 x i8] c"\B0\94\DA\C5\D94q\BD\EC\1AP\22p\E3\CCl", [16 x i8] c"v\FCn\CE\0FN\17h\CD\DF\88S\BB-U\1B", [16 x i8] c":3}\BFF\A7\92\C4^EI\13\FE.\A8\F2", [16 x i8] c"\A4J\82f\EE\1C\8E\B0\C8\B5\D4\CFZ\E9\F1\9A"], align 16, !dbg !4034
@.str.2.1648 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.3.1649 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.4.1650 = private unnamed_addr constant [4 x i8] c"dec\00", align 1
@.str.5.1651 = private unnamed_addr constant [31 x i8] c"  AES-GCM-%3d #%d split (%s): \00", align 1
@.str.6.1652 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@last4 = internal constant [16 x i64] [i64 0, i64 7200, i64 14400, i64 9312, i64 28800, i64 27808, i64 18624, i64 21728, i64 57600, i64 64800, i64 55616, i64 50528, i64 37248, i64 36256, i64 43456, i64 46560], align 16, !dbg !4004
@iv = internal constant <{ [64 x i8], <{ [12 x i8], [52 x i8] }>, [64 x i8], [64 x i8], [64 x i8], [64 x i8] }> <{ [64 x i8] zeroinitializer, <{ [12 x i8], [52 x i8] }> <{ [12 x i8] c"\CA\FE\BA\BE\FA\CE\DB\AD\DE\CA\F8\88", [52 x i8] zeroinitializer }>, [64 x i8] c"\93\13\22]\F8\84\06\E5U\90\9CZ\FFRi\AAjz\958SO}\A1\E4\C3\03\D2\A3\18\A7(\C3\C0\C9QV\80\959\FC\F0\E2B\9AkRT\16\AE\DB\F5\A0\DEjW\A67\B3\9B\00\00\00\00", [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer }>, align 16, !dbg !4014
@additional = internal constant <{ [64 x i8], <{ [20 x i8], [44 x i8] }>, [64 x i8], [64 x i8], [64 x i8], [64 x i8] }> <{ [64 x i8] zeroinitializer, <{ [20 x i8], [44 x i8] }> <{ [20 x i8] c"\FE\ED\FA\CE\DE\AD\BE\EF\FE\ED\FA\CE\DE\AD\BE\EF\AB\AD\DA\D2", [44 x i8] zeroinitializer }>, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer }>, align 16, !dbg !4020
@ct = internal constant <{ [64 x i8], <{ [16 x i8], [48 x i8] }>, [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], <{ [15 x i8], [49 x i8] }>, [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], <{ [16 x i8], [48 x i8] }>, [64 x i8], [64 x i8], [64 x i8], [64 x i8] }> <{ [64 x i8] zeroinitializer, <{ [16 x i8], [48 x i8] }> <{ [16 x i8] c"\03\88\DA\CE`\B6\A3\92\F3(\C2\B9q\B2\FEx", [48 x i8] zeroinitializer }>, [64 x i8] c"B\83\1E\C2!wt$Kr!\B7\84\D0\D4\9C\E3\AA!/,\02\A4\E05\C1~#)\AC\A1.!\D5\14\B2Tf\93\1C}\8FjZ\AC\84\AA\05\1B\A3\0B9j\0A\AC\97=X\E0\91G?Y\85", [64 x i8] c"B\83\1E\C2!wt$Kr!\B7\84\D0\D4\9C\E3\AA!/,\02\A4\E05\C1~#)\AC\A1.!\D5\14\B2Tf\93\1C}\8FjZ\AC\84\AA\05\1B\A3\0B9j\0A\AC\97=X\E0\91\00\00\00\00", [64 x i8] c"a5;L(\06\93Jw\7F\F5\1F\A2*GUi\9B*qO\CD\C6\F87f\E5\F9{lt#s\80i\00\E4\9F$\B2+\09uD\D4\89kBI\89\B5\E1\EB\AC\0F\07\C2?E\98\00\00\00\00", [64 x i8] c"\8C\E2I\98bV\15\B6\03\A03\AC\A1?\B8\94\BE\91\12\A5\C3\A2\11\A8\BA&*<\CA~,\A7\01\E4\A9\A4\FB\A4<\90\CC\DC\B2\81\D4\8C|o\D6(u\D2\AC\A4\17\03L4\AE\E5\00\00\00\00", [64 x i8] zeroinitializer, <{ [15 x i8], [49 x i8] }> <{ [15 x i8] c"\98\E7$|\07\F0\FEA\1C&~C\84\B0\F6", [49 x i8] zeroinitializer }>, [64 x i8] c"9\80\CA\0B<\00\E8A\EB\06\FA\C4\87*'W\85\9E\1C\EA\A6\EF\D9\84b\85\93\B4\0C\A1\E1\9C}w=\00\C1D\C5%\ACa\9D\18\C8J?G\18\E2D\8B/\E3$\D9\CC\DA'\10\AC\AD\E2V", [64 x i8] c"9\80\CA\0B<\00\E8A\EB\06\FA\C4\87*'W\85\9E\1C\EA\A6\EF\D9\84b\85\93\B4\0C\A1\E1\9C}w=\00\C1D\C5%\ACa\9D\18\C8J?G\18\E2D\8B/\E3$\D9\CC\DA'\10\00\00\00\00", [64 x i8] c"\0F\10\F5\99\AE\14\A1T\ED$\B3n%2M\B8\C5fc.\F2\BB\B3O\83G(\0F\C4PpW\FD\DC)\DF\9AG\1Fu\C6eA\D4\D4\DA\D1\C9\E9:\19\A5\8E\8BG?\A0\F0b\F7\00\00\00\00", [64 x i8] c"\D2~\88h\1C\E3$<H0\16Z\8F\DC\F9\FF\1D\E9\A1\D8\E6\B4G\EFn\F7\B7\98(fnE\81\E7\90\12\AF4\DD\D9\E2\F07X\9B)-\B3\E6|\03gE\FA\22\E7\E9\B77;\00\00\00\00", [64 x i8] zeroinitializer, <{ [16 x i8], [48 x i8] }> <{ [16 x i8] c"\CE\A7@=M`kn\07N\C5\D3\BA\F3\9D\18", [48 x i8] zeroinitializer }>, [64 x i8] c"R-\C1\F0\99V}\07\F4\7F7\A3*\84B}d:\8C\DC\BF\E5\C0\C9u\98\A2\BD%U\D1\AA\8C\B0\8EHY\0D\BB=\A7\B0\8B\10V\82\888\C5\F6\1Ec\93\BAz\0A\BC\C9\F6b\89\80\15\AD", [64 x i8] c"R-\C1\F0\99V}\07\F4\7F7\A3*\84B}d:\8C\DC\BF\E5\C0\C9u\98\A2\BD%U\D1\AA\8C\B0\8EHY\0D\BB=\A7\B0\8B\10V\82\888\C5\F6\1Ec\93\BAz\0A\BC\C9\F6b\00\00\00\00", [64 x i8] c"\C3v-\F1\CAx}2\AEG\C1;\F1\98D\CB\AF\1A\E1M\0B\97j\FA\C5/\F7\D7\9B\BA\9D\E0\FE\B5\82\D394\A4\F0\95L\C26;\C7?xb\ACC\0Ed\AB\E4\99\F4|\9B\1F\00\00\00\00", [64 x i8] c"Z\8D\EF/\0C\9ES\F1\F7]xSe\9E* \EE\B2\B2*\AF\DEd\19\A0X\ABOotk\F4\0F\C0\C3\B7\80\F2DE-\A3\EB\F1\C5\D8,\DE\A2A\89\97 \0E\F8.D\AE~?\00\00\00\00" }>, align 16, !dbg !4030
@supported_digests = internal constant [8 x i32] [i32 8, i32 7, i32 6, i32 5, i32 4, i32 9, i32 3, i32 0], align 16, !dbg !4040
@.str.1653 = private unnamed_addr constant [4 x i8] c"MD5\00", align 1
@.str.1.1656 = private unnamed_addr constant [10 x i8] c"RIPEMD160\00", align 1
@.str.2.1657 = private unnamed_addr constant [5 x i8] c"SHA1\00", align 1
@.str.3.1658 = private unnamed_addr constant [4 x i8] c"SHA\00", align 1
@.str.4.1659 = private unnamed_addr constant [7 x i8] c"SHA224\00", align 1
@.str.5.1660 = private unnamed_addr constant [7 x i8] c"SHA256\00", align 1
@.str.6.1661 = private unnamed_addr constant [7 x i8] c"SHA384\00", align 1
@.str.7.1662 = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@.str.1705 = private unnamed_addr constant [17 x i8] c"  MD5 test #%d: \00", align 1
@md5_test_buf = internal constant [7 x [81 x i8]] [[81 x i8] zeroinitializer, [81 x i8] c"a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [81 x i8] c"abc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [81 x i8] c"message digest\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [81 x i8] c"abcdefghijklmnopqrstuvwxyz\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [81 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [81 x i8] c"12345678901234567890123456789012345678901234567890123456789012345678901234567890\00"], align 16, !dbg !4049
@md5_test_buflen = internal constant [7 x i32] [i32 0, i32 1, i32 3, i32 14, i32 26, i32 62, i32 80], align 16, !dbg !4058
@md5_test_sum = internal constant [7 x [16 x i8]] [[16 x i8] c"\D4\1D\8C\D9\8F\00\B2\04\E9\80\09\98\EC\F8B~", [16 x i8] c"\0C\C1u\B9\C0\F1\B6\A81\C3\99\E2iw&a", [16 x i8] c"\90\01P\98<\D2O\B0\D6\96?}(\E1\7Fr", [16 x i8] c"\F9ki}|\B7\93\8DRZ/1\AA\F1a\D0", [16 x i8] c"\C3\FC\D3\D7a\92\E4\00}\FBIl\CAg\E1;", [16 x i8] c"\D1t\AB\98\D2w\D9\F5\A5a\1C,\9FA\9D\9F", [16 x i8] c"W\ED\F4\A2+\E3\C9U\ACI\DA.!\07\B6z"], align 16, !dbg !4063
@.str.1.1706 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.2.1707 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.3.1708 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@md5_padding = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16, !dbg !4055
@.str.1711 = private unnamed_addr constant [4 x i8] c"MD5\00", align 1
@mbedtls_md5_info = hidden constant %struct.mbedtls_md_info_t { i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1711, i32 0, i32 0), i32 16, i32 64, void (i8*)* @md5_starts_wrap, void (i8*, i8*, i64)* @md5_update_wrap, void (i8*, i8*)* @md5_finish_wrap, void (i8*, i64, i8*)* @mbedtls_md5, i8* ()* @md5_ctx_alloc, void (i8*)* @md5_ctx_free, void (i8*, i8*)* @md5_clone_wrap, void (i8*, i8*)* @md5_process_wrap }, align 8, !dbg !4070
@.str.1.1714 = private unnamed_addr constant [10 x i8] c"RIPEMD160\00", align 1
@mbedtls_ripemd160_info = hidden constant %struct.mbedtls_md_info_t { i32 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.1714, i32 0, i32 0), i32 20, i32 64, void (i8*)* @ripemd160_starts_wrap, void (i8*, i8*, i64)* @ripemd160_update_wrap, void (i8*, i8*)* @ripemd160_finish_wrap, void (i8*, i64, i8*)* @mbedtls_ripemd160, i8* ()* @ripemd160_ctx_alloc, void (i8*)* @ripemd160_ctx_free, void (i8*, i8*)* @ripemd160_clone_wrap, void (i8*, i8*)* @ripemd160_process_wrap }, align 8, !dbg !4133
@.str.2.1717 = private unnamed_addr constant [5 x i8] c"SHA1\00", align 1
@mbedtls_sha1_info = hidden constant %struct.mbedtls_md_info_t { i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1717, i32 0, i32 0), i32 20, i32 64, void (i8*)* @sha1_starts_wrap, void (i8*, i8*, i64)* @sha1_update_wrap, void (i8*, i8*)* @sha1_finish_wrap, void (i8*, i64, i8*)* @mbedtls_sha1, i8* ()* @sha1_ctx_alloc, void (i8*)* @sha1_ctx_free, void (i8*, i8*)* @sha1_clone_wrap, void (i8*, i8*)* @sha1_process_wrap }, align 8, !dbg !4168
@.str.3.1720 = private unnamed_addr constant [7 x i8] c"SHA224\00", align 1
@mbedtls_sha224_info = hidden constant %struct.mbedtls_md_info_t { i32 5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.1720, i32 0, i32 0), i32 28, i32 64, void (i8*)* @sha224_starts_wrap, void (i8*, i8*, i64)* @sha224_update_wrap, void (i8*, i8*)* @sha224_finish_wrap, void (i8*, i64, i8*)* @sha224_wrap, i8* ()* @sha224_ctx_alloc, void (i8*)* @sha224_ctx_free, void (i8*, i8*)* @sha224_clone_wrap, void (i8*, i8*)* @sha224_process_wrap }, align 8, !dbg !4170
@.str.4.1723 = private unnamed_addr constant [7 x i8] c"SHA256\00", align 1
@mbedtls_sha256_info = hidden constant %struct.mbedtls_md_info_t { i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.1723, i32 0, i32 0), i32 32, i32 64, void (i8*)* @sha256_starts_wrap, void (i8*, i8*, i64)* @sha224_update_wrap, void (i8*, i8*)* @sha224_finish_wrap, void (i8*, i64, i8*)* @sha256_wrap, i8* ()* @sha224_ctx_alloc, void (i8*)* @sha224_ctx_free, void (i8*, i8*)* @sha224_clone_wrap, void (i8*, i8*)* @sha224_process_wrap }, align 8, !dbg !4172
@.str.5.1726 = private unnamed_addr constant [7 x i8] c"SHA384\00", align 1
@mbedtls_sha384_info = hidden constant %struct.mbedtls_md_info_t { i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.1726, i32 0, i32 0), i32 48, i32 128, void (i8*)* @sha384_starts_wrap, void (i8*, i8*, i64)* @sha384_update_wrap, void (i8*, i8*)* @sha384_finish_wrap, void (i8*, i64, i8*)* @sha384_wrap, i8* ()* @sha384_ctx_alloc, void (i8*)* @sha384_ctx_free, void (i8*, i8*)* @sha384_clone_wrap, void (i8*, i8*)* @sha384_process_wrap }, align 8, !dbg !4174
@.str.6.1729 = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@mbedtls_sha512_info = hidden constant %struct.mbedtls_md_info_t { i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.1729, i32 0, i32 0), i32 64, i32 128, void (i8*)* @sha512_starts_wrap, void (i8*, i8*, i64)* @sha384_update_wrap, void (i8*, i8*)* @sha384_finish_wrap, void (i8*, i64, i8*)* @sha512_wrap, i8* ()* @sha384_ctx_alloc, void (i8*)* @sha384_ctx_free, void (i8*, i8*)* @sha384_clone_wrap, void (i8*, i8*)* @sha384_process_wrap }, align 8, !dbg !4176
@oid_sig_alg = internal constant [14 x %struct.oid_sig_alg_t] [%struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110.1842, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111.1843, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112.1844, i32 0, i32 0) }, i32 3, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113.1845, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114.1846, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115.1847, i32 0, i32 0) }, i32 4, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.116.1848, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.117.1849, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.118.1850, i32 0, i32 0) }, i32 5, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.119.1851, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120.1852, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121.1853, i32 0, i32 0) }, i32 6, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.122.1854, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.123.1855, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124.1856, i32 0, i32 0) }, i32 7, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.125.1857, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.126.1858, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.127.1859, i32 0, i32 0) }, i32 8, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128.1860, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114.1846, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115.1847, i32 0, i32 0) }, i32 4, i32 1 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129.1861, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.130.1862, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.131.1863, i32 0, i32 0) }, i32 4, i32 4 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132.1864, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133.1865, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.134.1866, i32 0, i32 0) }, i32 5, i32 4 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135.1867, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.136.1868, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.137.1869, i32 0, i32 0) }, i32 6, i32 4 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138.1870, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139.1871, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140.1872, i32 0, i32 0) }, i32 7, i32 4 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.141.1873, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.142.1874, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.143.1875, i32 0, i32 0) }, i32 8, i32 4 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144.1876, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145.1877, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145.1877, i32 0, i32 0) }, i32 0, i32 6 }, %struct.oid_sig_alg_t zeroinitializer], align 16, !dbg !4178
@oid_pk_alg = internal constant [4 x %struct.oid_x509_ext_t] [%struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146.1880, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147.1881, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148.1882, i32 0, i32 0) }, i32 1 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149.1883, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150.1884, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151.1885, i32 0, i32 0) }, i32 2 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152.1886, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153.1887, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154.1888, i32 0, i32 0) }, i32 3 }, %struct.oid_x509_ext_t zeroinitializer], align 16, !dbg !4217
@oid_ecp_grp = internal constant [12 x %struct.oid_x509_ext_t] [%struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155.1891, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156.1892, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156.1892, i32 0, i32 0) }, i32 1 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157.1893, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158.1894, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158.1894, i32 0, i32 0) }, i32 2 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159.1895, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160.1896, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160.1896, i32 0, i32 0) }, i32 3 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.161.1897, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.162.1898, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.162.1898, i32 0, i32 0) }, i32 4 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.163.1899, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164.1900, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164.1900, i32 0, i32 0) }, i32 5 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165.1901, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166.1902, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166.1902, i32 0, i32 0) }, i32 10 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167.1903, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168.1904, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168.1904, i32 0, i32 0) }, i32 11 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169.1905, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170.1906, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170.1906, i32 0, i32 0) }, i32 12 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171.1907, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.172.1908, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173.1909, i32 0, i32 0) }, i32 6 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.174.1910, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.175.1911, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.176.1912, i32 0, i32 0) }, i32 7 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.177.1913, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.178.1914, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.179.1915, i32 0, i32 0) }, i32 8 }, %struct.oid_x509_ext_t zeroinitializer], align 16, !dbg !4226
@oid_md_alg = internal constant [7 x %struct.oid_x509_ext_t] [%struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.186.1924, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.187.1925, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.188.1926, i32 0, i32 0) }, i32 3 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.189.1927, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.190.1928, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.191.1929, i32 0, i32 0) }, i32 4 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192.1930, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193.1931, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.194.1932, i32 0, i32 0) }, i32 5 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.195.1933, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196.1934, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197.1935, i32 0, i32 0) }, i32 6 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.198.1936, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199.1937, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.200.1938, i32 0, i32 0) }, i32 7 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.201.1939, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202.1940, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203.1941, i32 0, i32 0) }, i32 8 }, %struct.oid_x509_ext_t zeroinitializer], align 16, !dbg !4244
@.str.1952 = private unnamed_addr constant [6 x i8] c"%d.%d\00", align 1
@.str.1.1953 = private unnamed_addr constant [4 x i8] c".%d\00", align 1
@oid_x520_attr_type = internal constant [20 x %struct.oid_x520_attr_t] [%struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.1730, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.1731, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1732, i32 0, i32 0) }, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.1733, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.1734, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.1735, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.1736, i32 0, i32 0) }, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.1737, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.1738, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.1739, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.1740, i32 0, i32 0) }, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13.1741, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.1742, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.1743, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.1744, i32 0, i32 0) }, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.1745, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.1746, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19.1747, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.1748, i32 0, i32 0) }, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.1749, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22.1750, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23.1751, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.1752, i32 0, i32 0) }, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.1753, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26.1754, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27.1755, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.1756, i32 0, i32 0) }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27.1755, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29.1757, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.1758, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31.1759, i32 0, i32 0) }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32.1760, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33.1761, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34.1762, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.1763, i32 0, i32 0) }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36.1764, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37.1765, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38.1766, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39.1767, i32 0, i32 0) }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40.1768, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.1769, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42.1770, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43.1771, i32 0, i32 0) }, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.1772, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45.1773, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46.1774, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47.1775, i32 0, i32 0) }, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48.1776, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49.1777, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50.1778, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51.1779, i32 0, i32 0) }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52.1780, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53.1781, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54.1782, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55.1783, i32 0, i32 0) }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56.1784, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57.1785, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58.1786, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59.1787, i32 0, i32 0) }, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60.1788, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61.1789, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62.1790, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63.1791, i32 0, i32 0) }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64.1792, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65.1793, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66.1794, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67.1795, i32 0, i32 0) }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68.1796, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69.1797, i32 0, i32 0), i64 10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70.1798, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71.1799, i32 0, i32 0) }, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72.1800, i32 0, i32 0) }, %struct.oid_x520_attr_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73.1801, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74.1802, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75.1803, i32 0, i32 0) }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76.1804, i32 0, i32 0) }, %struct.oid_x520_attr_t zeroinitializer], align 16, !dbg !4195
@.str.2.1730 = private unnamed_addr constant [4 x i8] c"U\04\03\00", align 1
@.str.3.1731 = private unnamed_addr constant [17 x i8] c"id-at-commonName\00", align 1
@.str.4.1732 = private unnamed_addr constant [12 x i8] c"Common Name\00", align 1
@.str.5.1733 = private unnamed_addr constant [3 x i8] c"CN\00", align 1
@.str.6.1734 = private unnamed_addr constant [4 x i8] c"U\04\06\00", align 1
@.str.7.1735 = private unnamed_addr constant [18 x i8] c"id-at-countryName\00", align 1
@.str.8.1736 = private unnamed_addr constant [8 x i8] c"Country\00", align 1
@.str.9.1737 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.10.1738 = private unnamed_addr constant [4 x i8] c"U\04\07\00", align 1
@.str.11.1739 = private unnamed_addr constant [15 x i8] c"id-at-locality\00", align 1
@.str.12.1740 = private unnamed_addr constant [9 x i8] c"Locality\00", align 1
@.str.13.1741 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.14.1742 = private unnamed_addr constant [4 x i8] c"U\04\08\00", align 1
@.str.15.1743 = private unnamed_addr constant [12 x i8] c"id-at-state\00", align 1
@.str.16.1744 = private unnamed_addr constant [6 x i8] c"State\00", align 1
@.str.17.1745 = private unnamed_addr constant [3 x i8] c"ST\00", align 1
@.str.18.1746 = private unnamed_addr constant [4 x i8] c"U\04\0A\00", align 1
@.str.19.1747 = private unnamed_addr constant [23 x i8] c"id-at-organizationName\00", align 1
@.str.20.1748 = private unnamed_addr constant [13 x i8] c"Organization\00", align 1
@.str.21.1749 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.22.1750 = private unnamed_addr constant [4 x i8] c"U\04\0B\00", align 1
@.str.23.1751 = private unnamed_addr constant [29 x i8] c"id-at-organizationalUnitName\00", align 1
@.str.24.1752 = private unnamed_addr constant [9 x i8] c"Org Unit\00", align 1
@.str.25.1753 = private unnamed_addr constant [3 x i8] c"OU\00", align 1
@.str.26.1754 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\09\01\00", align 1
@.str.27.1755 = private unnamed_addr constant [13 x i8] c"emailAddress\00", align 1
@.str.28.1756 = private unnamed_addr constant [15 x i8] c"E-mail address\00", align 1
@.str.29.1757 = private unnamed_addr constant [4 x i8] c"U\04\05\00", align 1
@.str.30.1758 = private unnamed_addr constant [19 x i8] c"id-at-serialNumber\00", align 1
@.str.31.1759 = private unnamed_addr constant [14 x i8] c"Serial number\00", align 1
@.str.32.1760 = private unnamed_addr constant [13 x i8] c"serialNumber\00", align 1
@.str.33.1761 = private unnamed_addr constant [4 x i8] c"U\04\10\00", align 1
@.str.34.1762 = private unnamed_addr constant [20 x i8] c"id-at-postalAddress\00", align 1
@.str.35.1763 = private unnamed_addr constant [15 x i8] c"Postal address\00", align 1
@.str.36.1764 = private unnamed_addr constant [14 x i8] c"postalAddress\00", align 1
@.str.37.1765 = private unnamed_addr constant [4 x i8] c"U\04\11\00", align 1
@.str.38.1766 = private unnamed_addr constant [17 x i8] c"id-at-postalCode\00", align 1
@.str.39.1767 = private unnamed_addr constant [12 x i8] c"Postal code\00", align 1
@.str.40.1768 = private unnamed_addr constant [11 x i8] c"postalCode\00", align 1
@.str.41.1769 = private unnamed_addr constant [4 x i8] c"U\04\04\00", align 1
@.str.42.1770 = private unnamed_addr constant [14 x i8] c"id-at-surName\00", align 1
@.str.43.1771 = private unnamed_addr constant [8 x i8] c"Surname\00", align 1
@.str.44.1772 = private unnamed_addr constant [3 x i8] c"SN\00", align 1
@.str.45.1773 = private unnamed_addr constant [4 x i8] c"U\04*\00", align 1
@.str.46.1774 = private unnamed_addr constant [16 x i8] c"id-at-givenName\00", align 1
@.str.47.1775 = private unnamed_addr constant [11 x i8] c"Given name\00", align 1
@.str.48.1776 = private unnamed_addr constant [3 x i8] c"GN\00", align 1
@.str.49.1777 = private unnamed_addr constant [4 x i8] c"U\04+\00", align 1
@.str.50.1778 = private unnamed_addr constant [15 x i8] c"id-at-initials\00", align 1
@.str.51.1779 = private unnamed_addr constant [9 x i8] c"Initials\00", align 1
@.str.52.1780 = private unnamed_addr constant [9 x i8] c"initials\00", align 1
@.str.53.1781 = private unnamed_addr constant [4 x i8] c"U\04,\00", align 1
@.str.54.1782 = private unnamed_addr constant [26 x i8] c"id-at-generationQualifier\00", align 1
@.str.55.1783 = private unnamed_addr constant [21 x i8] c"Generation qualifier\00", align 1
@.str.56.1784 = private unnamed_addr constant [20 x i8] c"generationQualifier\00", align 1
@.str.57.1785 = private unnamed_addr constant [4 x i8] c"U\04\0C\00", align 1
@.str.58.1786 = private unnamed_addr constant [12 x i8] c"id-at-title\00", align 1
@.str.59.1787 = private unnamed_addr constant [6 x i8] c"Title\00", align 1
@.str.60.1788 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.61.1789 = private unnamed_addr constant [4 x i8] c"U\04.\00", align 1
@.str.62.1790 = private unnamed_addr constant [18 x i8] c"id-at-dnQualifier\00", align 1
@.str.63.1791 = private unnamed_addr constant [29 x i8] c"Distinguished Name qualifier\00", align 1
@.str.64.1792 = private unnamed_addr constant [12 x i8] c"dnQualifier\00", align 1
@.str.65.1793 = private unnamed_addr constant [4 x i8] c"U\04A\00", align 1
@.str.66.1794 = private unnamed_addr constant [16 x i8] c"id-at-pseudonym\00", align 1
@.str.67.1795 = private unnamed_addr constant [10 x i8] c"Pseudonym\00", align 1
@.str.68.1796 = private unnamed_addr constant [10 x i8] c"pseudonym\00", align 1
@.str.69.1797 = private unnamed_addr constant [11 x i8] c"\09\92&\89\93\F2,d\01\19\00", align 1
@.str.70.1798 = private unnamed_addr constant [19 x i8] c"id-domainComponent\00", align 1
@.str.71.1799 = private unnamed_addr constant [17 x i8] c"Domain component\00", align 1
@.str.72.1800 = private unnamed_addr constant [3 x i8] c"DC\00", align 1
@.str.73.1801 = private unnamed_addr constant [4 x i8] c"U\04-\00", align 1
@.str.74.1802 = private unnamed_addr constant [23 x i8] c"id-at-uniqueIdentifier\00", align 1
@.str.75.1803 = private unnamed_addr constant [18 x i8] c"Unique Identifier\00", align 1
@.str.76.1804 = private unnamed_addr constant [17 x i8] c"uniqueIdentifier\00", align 1
@oid_x509_ext = internal constant [6 x %struct.oid_x509_ext_t] [%struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.1807, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78.1808, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79.1809, i32 0, i32 0) }, i32 256 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80.1810, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81.1811, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82.1812, i32 0, i32 0) }, i32 4 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83.1813, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.84.1814, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.85.1815, i32 0, i32 0) }, i32 2048 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86.1816, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87.1817, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88.1818, i32 0, i32 0) }, i32 32 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.89.1819, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90.1820, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.91.1821, i32 0, i32 0) }, i32 65536 }, %struct.oid_x509_ext_t zeroinitializer], align 16, !dbg !4205
@.str.77.1807 = private unnamed_addr constant [4 x i8] c"U\1D\13\00", align 1
@.str.78.1808 = private unnamed_addr constant [23 x i8] c"id-ce-basicConstraints\00", align 1
@.str.79.1809 = private unnamed_addr constant [18 x i8] c"Basic Constraints\00", align 1
@.str.80.1810 = private unnamed_addr constant [4 x i8] c"U\1D\0F\00", align 1
@.str.81.1811 = private unnamed_addr constant [15 x i8] c"id-ce-keyUsage\00", align 1
@.str.82.1812 = private unnamed_addr constant [10 x i8] c"Key Usage\00", align 1
@.str.83.1813 = private unnamed_addr constant [4 x i8] c"U\1D%\00", align 1
@.str.84.1814 = private unnamed_addr constant [18 x i8] c"id-ce-extKeyUsage\00", align 1
@.str.85.1815 = private unnamed_addr constant [19 x i8] c"Extended Key Usage\00", align 1
@.str.86.1816 = private unnamed_addr constant [4 x i8] c"U\1D\11\00", align 1
@.str.87.1817 = private unnamed_addr constant [21 x i8] c"id-ce-subjectAltName\00", align 1
@.str.88.1818 = private unnamed_addr constant [17 x i8] c"Subject Alt Name\00", align 1
@.str.89.1819 = private unnamed_addr constant [10 x i8] c"`\86H\01\86\F8B\01\01\00", align 1
@.str.90.1820 = private unnamed_addr constant [21 x i8] c"id-netscape-certtype\00", align 1
@.str.91.1821 = private unnamed_addr constant [26 x i8] c"Netscape Certificate Type\00", align 1
@oid_ext_key_usage = internal constant [7 x %struct.mbedtls_oid_descriptor_t] [%struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.92.1824, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93.1825, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94.1826, i32 0, i32 0) }, %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95.1827, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.96.1828, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.97.1829, i32 0, i32 0) }, %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98.1830, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99.1831, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100.1832, i32 0, i32 0) }, %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.101.1833, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.102.1834, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.103.1835, i32 0, i32 0) }, %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104.1836, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105.1837, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106.1838, i32 0, i32 0) }, %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107.1839, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.108.1840, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109.1841, i32 0, i32 0) }, %struct.mbedtls_oid_descriptor_t zeroinitializer], align 16, !dbg !4214
@.str.92.1824 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\01\00", align 1
@.str.93.1825 = private unnamed_addr constant [17 x i8] c"id-kp-serverAuth\00", align 1
@.str.94.1826 = private unnamed_addr constant [30 x i8] c"TLS Web Server Authentication\00", align 1
@.str.95.1827 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\02\00", align 1
@.str.96.1828 = private unnamed_addr constant [17 x i8] c"id-kp-clientAuth\00", align 1
@.str.97.1829 = private unnamed_addr constant [30 x i8] c"TLS Web Client Authentication\00", align 1
@.str.98.1830 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\03\00", align 1
@.str.99.1831 = private unnamed_addr constant [18 x i8] c"id-kp-codeSigning\00", align 1
@.str.100.1832 = private unnamed_addr constant [13 x i8] c"Code Signing\00", align 1
@.str.101.1833 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\04\00", align 1
@.str.102.1834 = private unnamed_addr constant [22 x i8] c"id-kp-emailProtection\00", align 1
@.str.103.1835 = private unnamed_addr constant [18 x i8] c"E-mail Protection\00", align 1
@.str.104.1836 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\08\00", align 1
@.str.105.1837 = private unnamed_addr constant [19 x i8] c"id-kp-timeStamping\00", align 1
@.str.106.1838 = private unnamed_addr constant [14 x i8] c"Time Stamping\00", align 1
@.str.107.1839 = private unnamed_addr constant [9 x i8] c"+\06\01\05\05\07\03\09\00", align 1
@.str.108.1840 = private unnamed_addr constant [18 x i8] c"id-kp-OCSPSigning\00", align 1
@.str.109.1841 = private unnamed_addr constant [13 x i8] c"OCSP Signing\00", align 1
@.str.110.1842 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\04\00", align 1
@.str.111.1843 = private unnamed_addr constant [21 x i8] c"md5WithRSAEncryption\00", align 1
@.str.112.1844 = private unnamed_addr constant [13 x i8] c"RSA with MD5\00", align 1
@.str.113.1845 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\05\00", align 1
@.str.114.1846 = private unnamed_addr constant [23 x i8] c"sha-1WithRSAEncryption\00", align 1
@.str.115.1847 = private unnamed_addr constant [14 x i8] c"RSA with SHA1\00", align 1
@.str.116.1848 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\0E\00", align 1
@.str.117.1849 = private unnamed_addr constant [24 x i8] c"sha224WithRSAEncryption\00", align 1
@.str.118.1850 = private unnamed_addr constant [17 x i8] c"RSA with SHA-224\00", align 1
@.str.119.1851 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\0B\00", align 1
@.str.120.1852 = private unnamed_addr constant [24 x i8] c"sha256WithRSAEncryption\00", align 1
@.str.121.1853 = private unnamed_addr constant [17 x i8] c"RSA with SHA-256\00", align 1
@.str.122.1854 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\0C\00", align 1
@.str.123.1855 = private unnamed_addr constant [24 x i8] c"sha384WithRSAEncryption\00", align 1
@.str.124.1856 = private unnamed_addr constant [17 x i8] c"RSA with SHA-384\00", align 1
@.str.125.1857 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\0D\00", align 1
@.str.126.1858 = private unnamed_addr constant [24 x i8] c"sha512WithRSAEncryption\00", align 1
@.str.127.1859 = private unnamed_addr constant [17 x i8] c"RSA with SHA-512\00", align 1
@.str.128.1860 = private unnamed_addr constant [6 x i8] c"+\0E\03\02\1D\00", align 1
@.str.129.1861 = private unnamed_addr constant [8 x i8] c"*\86H\CE=\04\01\00", align 1
@.str.130.1862 = private unnamed_addr constant [16 x i8] c"ecdsa-with-SHA1\00", align 1
@.str.131.1863 = private unnamed_addr constant [16 x i8] c"ECDSA with SHA1\00", align 1
@.str.132.1864 = private unnamed_addr constant [9 x i8] c"*\86H\CE=\04\03\01\00", align 1
@.str.133.1865 = private unnamed_addr constant [18 x i8] c"ecdsa-with-SHA224\00", align 1
@.str.134.1866 = private unnamed_addr constant [18 x i8] c"ECDSA with SHA224\00", align 1
@.str.135.1867 = private unnamed_addr constant [9 x i8] c"*\86H\CE=\04\03\02\00", align 1
@.str.136.1868 = private unnamed_addr constant [18 x i8] c"ecdsa-with-SHA256\00", align 1
@.str.137.1869 = private unnamed_addr constant [18 x i8] c"ECDSA with SHA256\00", align 1
@.str.138.1870 = private unnamed_addr constant [9 x i8] c"*\86H\CE=\04\03\03\00", align 1
@.str.139.1871 = private unnamed_addr constant [18 x i8] c"ecdsa-with-SHA384\00", align 1
@.str.140.1872 = private unnamed_addr constant [18 x i8] c"ECDSA with SHA384\00", align 1
@.str.141.1873 = private unnamed_addr constant [9 x i8] c"*\86H\CE=\04\03\04\00", align 1
@.str.142.1874 = private unnamed_addr constant [18 x i8] c"ecdsa-with-SHA512\00", align 1
@.str.143.1875 = private unnamed_addr constant [18 x i8] c"ECDSA with SHA512\00", align 1
@.str.144.1876 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\0A\00", align 1
@.str.145.1877 = private unnamed_addr constant [11 x i8] c"RSASSA-PSS\00", align 1
@.str.146.1880 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\01\00", align 1
@.str.147.1881 = private unnamed_addr constant [14 x i8] c"rsaEncryption\00", align 1
@.str.148.1882 = private unnamed_addr constant [4 x i8] c"RSA\00", align 1
@.str.149.1883 = private unnamed_addr constant [8 x i8] c"*\86H\CE=\02\01\00", align 1
@.str.150.1884 = private unnamed_addr constant [15 x i8] c"id-ecPublicKey\00", align 1
@.str.151.1885 = private unnamed_addr constant [15 x i8] c"Generic EC key\00", align 1
@.str.152.1886 = private unnamed_addr constant [6 x i8] c"+\81\04\01\0C\00", align 1
@.str.153.1887 = private unnamed_addr constant [8 x i8] c"id-ecDH\00", align 1
@.str.154.1888 = private unnamed_addr constant [16 x i8] c"EC key for ECDH\00", align 1
@.str.155.1891 = private unnamed_addr constant [9 x i8] c"*\86H\CE=\03\01\01\00", align 1
@.str.156.1892 = private unnamed_addr constant [10 x i8] c"secp192r1\00", align 1
@.str.157.1893 = private unnamed_addr constant [6 x i8] c"+\81\04\00!\00", align 1
@.str.158.1894 = private unnamed_addr constant [10 x i8] c"secp224r1\00", align 1
@.str.159.1895 = private unnamed_addr constant [9 x i8] c"*\86H\CE=\03\01\07\00", align 1
@.str.160.1896 = private unnamed_addr constant [10 x i8] c"secp256r1\00", align 1
@.str.161.1897 = private unnamed_addr constant [6 x i8] c"+\81\04\00\22\00", align 1
@.str.162.1898 = private unnamed_addr constant [10 x i8] c"secp384r1\00", align 1
@.str.163.1899 = private unnamed_addr constant [6 x i8] c"+\81\04\00#\00", align 1
@.str.164.1900 = private unnamed_addr constant [10 x i8] c"secp521r1\00", align 1
@.str.165.1901 = private unnamed_addr constant [6 x i8] c"+\81\04\00\1F\00", align 1
@.str.166.1902 = private unnamed_addr constant [10 x i8] c"secp192k1\00", align 1
@.str.167.1903 = private unnamed_addr constant [6 x i8] c"+\81\04\00 \00", align 1
@.str.168.1904 = private unnamed_addr constant [10 x i8] c"secp224k1\00", align 1
@.str.169.1905 = private unnamed_addr constant [6 x i8] c"+\81\04\00\0A\00", align 1
@.str.170.1906 = private unnamed_addr constant [10 x i8] c"secp256k1\00", align 1
@.str.171.1907 = private unnamed_addr constant [10 x i8] c"+$\03\03\02\08\01\01\07\00", align 1
@.str.172.1908 = private unnamed_addr constant [16 x i8] c"brainpoolP256r1\00", align 1
@.str.173.1909 = private unnamed_addr constant [15 x i8] c"brainpool256r1\00", align 1
@.str.174.1910 = private unnamed_addr constant [10 x i8] c"+$\03\03\02\08\01\01\0B\00", align 1
@.str.175.1911 = private unnamed_addr constant [16 x i8] c"brainpoolP384r1\00", align 1
@.str.176.1912 = private unnamed_addr constant [15 x i8] c"brainpool384r1\00", align 1
@.str.177.1913 = private unnamed_addr constant [10 x i8] c"+$\03\03\02\08\01\01\0D\00", align 1
@.str.178.1914 = private unnamed_addr constant [16 x i8] c"brainpoolP512r1\00", align 1
@.str.179.1915 = private unnamed_addr constant [15 x i8] c"brainpool512r1\00", align 1
@oid_cipher_alg = internal constant [3 x %struct.oid_x509_ext_t] [%struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180.1916, i32 0, i32 0), i64 5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.181.1917, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.182.1918, i32 0, i32 0) }, i32 33 }, %struct.oid_x509_ext_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.183.1919, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.184.1920, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.185.1921, i32 0, i32 0) }, i32 37 }, %struct.oid_x509_ext_t zeroinitializer], align 16, !dbg !4235
@.str.180.1916 = private unnamed_addr constant [6 x i8] c"+\0E\03\02\07\00", align 1
@.str.181.1917 = private unnamed_addr constant [7 x i8] c"desCBC\00", align 1
@.str.182.1918 = private unnamed_addr constant [8 x i8] c"DES-CBC\00", align 1
@.str.183.1919 = private unnamed_addr constant [9 x i8] c"*\86H\86\F7\0D\03\07\00", align 1
@.str.184.1920 = private unnamed_addr constant [13 x i8] c"des-ede3-cbc\00", align 1
@.str.185.1921 = private unnamed_addr constant [13 x i8] c"DES-EDE3-CBC\00", align 1
@.str.186.1924 = private unnamed_addr constant [9 x i8] c"*\86H\86\F7\0D\02\05\00", align 1
@.str.187.1925 = private unnamed_addr constant [7 x i8] c"id-md5\00", align 1
@.str.188.1926 = private unnamed_addr constant [4 x i8] c"MD5\00", align 1
@.str.189.1927 = private unnamed_addr constant [6 x i8] c"+\0E\03\02\1A\00", align 1
@.str.190.1928 = private unnamed_addr constant [8 x i8] c"id-sha1\00", align 1
@.str.191.1929 = private unnamed_addr constant [6 x i8] c"SHA-1\00", align 1
@.str.192.1930 = private unnamed_addr constant [10 x i8] c"`\86H\01e\03\04\02\04\00", align 1
@.str.193.1931 = private unnamed_addr constant [10 x i8] c"id-sha224\00", align 1
@.str.194.1932 = private unnamed_addr constant [8 x i8] c"SHA-224\00", align 1
@.str.195.1933 = private unnamed_addr constant [10 x i8] c"`\86H\01e\03\04\02\01\00", align 1
@.str.196.1934 = private unnamed_addr constant [10 x i8] c"id-sha256\00", align 1
@.str.197.1935 = private unnamed_addr constant [8 x i8] c"SHA-256\00", align 1
@.str.198.1936 = private unnamed_addr constant [10 x i8] c"`\86H\01e\03\04\02\02\00", align 1
@.str.199.1937 = private unnamed_addr constant [10 x i8] c"id-sha384\00", align 1
@.str.200.1938 = private unnamed_addr constant [8 x i8] c"SHA-384\00", align 1
@.str.201.1939 = private unnamed_addr constant [10 x i8] c"`\86H\01e\03\04\02\03\00", align 1
@.str.202.1940 = private unnamed_addr constant [10 x i8] c"id-sha512\00", align 1
@.str.203.1941 = private unnamed_addr constant [8 x i8] c"SHA-512\00", align 1
@oid_pkcs12_pbe_alg = internal constant [3 x %struct.oid_sig_alg_t] [%struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.204.1946, i32 0, i32 0), i64 10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.205.1947, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.206.1948, i32 0, i32 0) }, i32 4, i32 37 }, %struct.oid_sig_alg_t { %struct.mbedtls_oid_descriptor_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207.1949, i32 0, i32 0), i64 10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.208.1950, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.209.1951, i32 0, i32 0) }, i32 4, i32 35 }, %struct.oid_sig_alg_t zeroinitializer], align 16, !dbg !4253
@.str.204.1946 = private unnamed_addr constant [11 x i8] c"*\86H\86\F7\0D\01\0C\01\03\00", align 1
@.str.205.1947 = private unnamed_addr constant [32 x i8] c"pbeWithSHAAnd3-KeyTripleDES-CBC\00", align 1
@.str.206.1948 = private unnamed_addr constant [29 x i8] c"PBE with SHA1 and 3-Key 3DES\00", align 1
@.str.207.1949 = private unnamed_addr constant [11 x i8] c"*\86H\86\F7\0D\01\0C\01\04\00", align 1
@.str.208.1950 = private unnamed_addr constant [32 x i8] c"pbeWithSHAAnd2-KeyTripleDES-CBC\00", align 1
@.str.209.1951 = private unnamed_addr constant [29 x i8] c"PBE with SHA1 and 2-Key 3DES\00", align 1
@.str.1958 = private unnamed_addr constant [23 x i8] c"Proc-Type: 4,ENCRYPTED\00", align 1
@.str.1.1959 = private unnamed_addr constant [24 x i8] c"DEK-Info: DES-EDE3-CBC,\00", align 1
@.str.2.1960 = private unnamed_addr constant [19 x i8] c"DEK-Info: DES-CBC,\00", align 1
@.str.3.1961 = private unnamed_addr constant [15 x i8] c"DEK-Info: AES-\00", align 1
@.str.4.1962 = private unnamed_addr constant [23 x i8] c"DEK-Info: AES-128-CBC,\00", align 1
@.str.5.1963 = private unnamed_addr constant [23 x i8] c"DEK-Info: AES-192-CBC,\00", align 1
@.str.6.1964 = private unnamed_addr constant [23 x i8] c"DEK-Info: AES-256-CBC,\00", align 1
@.str.1975 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\05\0C\00", align 1
@.str.1.1977 = private unnamed_addr constant [22 x i8] c"  PBKDF2 (SHA1) #%d: \00", align 1
@password = internal constant [6 x [32 x i8]] [[32 x i8] c"password\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"password\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"password\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"passwordPASSWORDpassword\00\00\00\00\00\00\00\00", [32 x i8] c"pass\00word\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] zeroinitializer], align 16, !dbg !4273
@plen = internal constant [6 x i64] [i64 8, i64 8, i64 8, i64 24, i64 9, i64 0], align 16, !dbg !4280
@salt = internal constant [6 x [40 x i8]] [[40 x i8] c"salt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [40 x i8] c"salt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [40 x i8] c"salt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [40 x i8] c"saltSALTsaltSALTsaltSALTsaltSALTsalt\00\00\00\00", [40 x i8] c"sa\00lt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [40 x i8] zeroinitializer], align 16, !dbg !4283
@slen = internal constant [6 x i64] [i64 4, i64 4, i64 4, i64 36, i64 5, i64 0], align 16, !dbg !4288
@it_cnt = internal constant [6 x i32] [i32 1, i32 2, i32 4096, i32 4096, i32 4096, i32 0], align 16, !dbg !4290
@key_len = internal constant [6 x i32] [i32 20, i32 20, i32 20, i32 25, i32 16, i32 0], align 16, !dbg !4293
@.str.2.1978 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.3.1979 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.4.1980 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5.1976 = private unnamed_addr constant [9 x i8] c"*\86H\86\F7\0D\02\07\00", align 1
@result_key = internal constant <{ <{ [20 x i8], [12 x i8] }>, <{ [20 x i8], [12 x i8] }>, <{ [20 x i8], [12 x i8] }>, [32 x i8], <{ [16 x i8], [16 x i8] }>, [32 x i8] }> <{ <{ [20 x i8], [12 x i8] }> <{ [20 x i8] c"\0C`\C8\0F\96\1F\0Eq\F3\A9\B5$\AF`\12\06/\E07\A6", [12 x i8] zeroinitializer }>, <{ [20 x i8], [12 x i8] }> <{ [20 x i8] c"\EAl\01M\C7-o\8C\CD\1E\D9*\CE\1DA\F0\D8\DE\89W", [12 x i8] zeroinitializer }>, <{ [20 x i8], [12 x i8] }> <{ [20 x i8] c"K\00y\01\B7eH\9A\BE\ADI\D9&\F7!\D0e\A4)\C1", [12 x i8] zeroinitializer }>, [32 x i8] c"=.\ECO\E4\1C\84\9B\80\C8\D86b\C0\E4J\8B)\1A\96L\F2\F0p8\00\00\00\00\00\00\00", <{ [16 x i8], [16 x i8] }> <{ [16 x i8] c"V\FAj\A7UH\09\9D\CC7\D7\F04%\E0\C3", [16 x i8] zeroinitializer }>, [32 x i8] zeroinitializer }>, align 16, !dbg !4295
@.str.1998 = private unnamed_addr constant [24 x i8] c"  RIPEMD-160 test #%d: \00", align 1
@ripemd160_test_input = internal global [8 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5.2002, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.2003, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.2004, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.2005, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.2006, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.10.2007, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11.2008, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.12.2009, i32 0, i32 0)], align 16, !dbg !4297
@ripemd160_test_md = internal constant [8 x [20 x i8]] [[20 x i8] c"\9C\11\85\A5\C5\E9\FCTa(\08\97~\E8\F5H\B2%\8D1", [20 x i8] c"\0B\DC\9D-%k>\E9\DA\AE4{\E6\F4\DC\83ZF\7F\FE", [20 x i8] c"\8E\B2\08\F7\E0]\98z\9B\04J\8E\98\C6\B0\87\F1Z\0B\FC", [20 x i8] c"]\06\89\EFI\D2\FA\E5r\B8\81\B1#\A8_\FA!Y_6", [20 x i8] c"\F7\1C'\10\9Ci,\1BV\BB\DC\EB[\9D(e\B3p\8D\BC", [20 x i8] c"\12\A0S8J\9C\0C\88\E4\05\A0l'\DC\F4\9A\DAb\EB+", [20 x i8] c"\B0\E2\0Bn1\16d\02\86\ED:\87\A5q0y\B2\1FQ\89", [20 x i8] c"\9Bu.EW=K9\F4\DB\D32<\AB\82\BFc2k\FB"], align 16, !dbg !4306
@.str.1.1999 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.2.2000 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.3.2001 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@ripemd160_padding = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16, !dbg !4303
@.str.5.2002 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6.2003 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.7.2004 = private unnamed_addr constant [4 x i8] c"abc\00", align 1
@.str.8.2005 = private unnamed_addr constant [15 x i8] c"message digest\00", align 1
@.str.9.2006 = private unnamed_addr constant [27 x i8] c"abcdefghijklmnopqrstuvwxyz\00", align 1
@.str.10.2007 = private unnamed_addr constant [57 x i8] c"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\00", align 1
@.str.11.2008 = private unnamed_addr constant [63 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\00", align 1
@.str.12.2009 = private unnamed_addr constant [81 x i8] c"12345678901234567890123456789012345678901234567890123456789012345678901234567890\00", align 1
@.str.2027 = private unnamed_addr constant [19 x i8] c"  SHA-1 test #%d: \00", align 1
@sha1_test_buf = internal constant [3 x [57 x i8]] [[57 x i8] c"abc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [57 x i8] c"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\00", [57 x i8] zeroinitializer], align 16, !dbg !4311
@sha1_test_buflen = internal constant [3 x i32] [i32 3, i32 56, i32 1000], align 4, !dbg !4319
@sha1_test_sum = internal constant [3 x [20 x i8]] [[20 x i8] c"\A9\99>6G\06\81j\BA>%qxP\C2l\9C\D0\D8\9D", [20 x i8] c"\84\98>D\1C;\D2n\BA\AEJ\A1\F9Q)\E5\E5Fp\F1", [20 x i8] c"4\AA\97<\D4\C4\DA\A4\F6\1E\EB+\DB\AD'1e4\01o"], align 16, !dbg !4321
@.str.1.2028 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.2.2029 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.3.2030 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@sha1_padding = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16, !dbg !4316
@K.2042 = internal constant [64 x i32] [i32 1116352408, i32 1899447441, i32 -1245643825, i32 -373957723, i32 961987163, i32 1508970993, i32 -1841331548, i32 -1424204075, i32 -670586216, i32 310598401, i32 607225278, i32 1426881987, i32 1925078388, i32 -2132889090, i32 -1680079193, i32 -1046744716, i32 -459576895, i32 -272742522, i32 264347078, i32 604807628, i32 770255983, i32 1249150122, i32 1555081692, i32 1996064986, i32 -1740746414, i32 -1473132947, i32 -1341970488, i32 -1084653625, i32 -958395405, i32 -710438585, i32 113926993, i32 338241895, i32 666307205, i32 773529912, i32 1294757372, i32 1396182291, i32 1695183700, i32 1986661051, i32 -2117940946, i32 -1838011259, i32 -1564481375, i32 -1474664885, i32 -1035236496, i32 -949202525, i32 -778901479, i32 -694614492, i32 -200395387, i32 275423344, i32 430227734, i32 506948616, i32 659060556, i32 883997877, i32 958139571, i32 1322822218, i32 1537002063, i32 1747873779, i32 1955562222, i32 2024104815, i32 -2067236844, i32 -1933114872, i32 -1866530822, i32 -1538233109, i32 -1090935817, i32 -965641998], align 16, !dbg !4328
@.str.2049 = private unnamed_addr constant [26 x i8] c"Buffer allocation failed\0A\00", align 1
@.str.1.2050 = private unnamed_addr constant [20 x i8] c"  SHA-%d test #%d: \00", align 1
@sha256_test_buf = internal constant [3 x [57 x i8]] [[57 x i8] c"abc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [57 x i8] c"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\00", [57 x i8] zeroinitializer], align 16, !dbg !4336
@sha256_test_buflen = internal constant [3 x i32] [i32 3, i32 56, i32 1000], align 4, !dbg !4338
@sha256_test_sum = internal constant [6 x [32 x i8]] [[32 x i8] c"#\09}\224\05\D8\22\86B\A4w\BD\A2U\B3*\AD\BC\E4\BD\A0\B3\F7\E3l\9D\A7\00\00\00\00", [32 x i8] c"u8\8B\16Q'v\CC]\BA]\A1\FD\89\01P\B0\C6E\\\B4\F5\8B\19RR%%\00\00\00\00", [32 x i8] c" yFU\98\0C\91\D8\BB\B4\C1\EA\97a\8AK\F0?BX\19H\B2\EEN\E7\ADg\00\00\00\00", [32 x i8] c"\BAx\16\BF\8F\01\CF\EAAA@\DE]\AE\22#\B0\03a\A3\96\17z\9C\B4\10\FFa\F2\00\15\AD", [32 x i8] c"$\8Dja\D2\068\B8\E5\C0&\93\0C>`9\A3<\E4Yd\FF!g\F6\EC\ED\D4\19\DB\06\C1", [32 x i8] c"\CD\C7n\\\99\14\FB\92\81\A1\C7\E2\84\D7>g\F1\80\9AH\A4\97 \0E\04m9\CC\C7\11,\D0"], align 16, !dbg !4340
@.str.2.2051 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.3.2052 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.4.2053 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@sha256_padding = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16, !dbg !4333
@.str.2056 = private unnamed_addr constant [76 x i8] c"/home/yang/sgxTestcases/mbedtls-SGX/trusted/mbedtls-2.6.0/library/ssl_cli.c\00", align 1
@.str.1.2057 = private unnamed_addr constant [17 x i8] c"client state: %d\00", align 1
@.str.2.2058 = private unnamed_addr constant [16 x i8] c"handshake: done\00", align 1
@.str.3.2059 = private unnamed_addr constant [17 x i8] c"invalid state %d\00", align 1
@.str.4.2200 = private unnamed_addr constant [22 x i8] c"=> write client hello\00", align 1
@.str.5.2201 = private unnamed_addr constant [16 x i8] c"no RNG provided\00", align 1
@.str.6.2202 = private unnamed_addr constant [86 x i8] c"configured max major version is invalid, consider using mbedtls_ssl_config_defaults()\00", align 1
@.str.7.2203 = private unnamed_addr constant [35 x i8] c"client hello, max version: [%d:%d]\00", align 1
@.str.8.2204 = private unnamed_addr constant [20 x i8] c"ssl_generate_random\00", align 1
@.str.9.2205 = private unnamed_addr constant [27 x i8] c"client hello, random bytes\00", align 1
@.str.10.2206 = private unnamed_addr constant [34 x i8] c"client hello, session id len.: %d\00", align 1
@.str.11.2207 = private unnamed_addr constant [25 x i8] c"client hello, session id\00", align 1
@.str.12.2208 = private unnamed_addr constant [25 x i8] c"no verify cookie to send\00", align 1
@.str.13.2209 = private unnamed_addr constant [21 x i8] c"client hello, cookie\00", align 1
@.str.14.2210 = private unnamed_addr constant [36 x i8] c"client hello, add ciphersuite: %04x\00", align 1
@.str.15.2211 = private unnamed_addr constant [21 x i8] c"adding FALLBACK_SCSV\00", align 1
@.str.16.2212 = private unnamed_addr constant [34 x i8] c"client hello, got %d ciphersuites\00", align 1
@.str.17.2213 = private unnamed_addr constant [32 x i8] c"client hello, compress len.: %d\00", align 1
@.str.18.2214 = private unnamed_addr constant [35 x i8] c"client hello, compress alg.: %d %d\00", align 1
@.str.19.2215 = private unnamed_addr constant [32 x i8] c"client hello, compress alg.: %d\00", align 1
@.str.20.2224 = private unnamed_addr constant [41 x i8] c"client hello, total extension length: %d\00", align 1
@.str.21.2077 = private unnamed_addr constant [25 x i8] c"mbedtls_ssl_write_record\00", align 1
@.str.22.2225 = private unnamed_addr constant [22 x i8] c"<= write client hello\00", align 1
@.str.23.2239 = private unnamed_addr constant [47 x i8] c"client hello, adding server name extension: %s\00", align 1
@.str.24.2227 = private unnamed_addr constant [17 x i8] c"buffer too small\00", align 1
@.str.25.2238 = private unnamed_addr constant [45 x i8] c"client hello, adding renegotiation extension\00", align 1
@.str.26.2237 = private unnamed_addr constant [52 x i8] c"client hello, adding signature_algorithms extension\00", align 1
@.str.27.2235 = private unnamed_addr constant [57 x i8] c"client hello, adding supported_elliptic_curves extension\00", align 1
@.str.28.2236 = private unnamed_addr constant [35 x i8] c"invalid curve in ssl configuration\00", align 1
@.str.29.2234 = private unnamed_addr constant [55 x i8] c"client hello, adding supported_point_formats extension\00", align 1
@.str.30.2233 = private unnamed_addr constant [51 x i8] c"client hello, adding max_fragment_length extension\00", align 1
@.str.31.2232 = private unnamed_addr constant [46 x i8] c"client hello, adding truncated_hmac extension\00", align 1
@.str.32.2231 = private unnamed_addr constant [48 x i8] c"client hello, adding encrypt_then_mac extension\00", align 1
@.str.33.2230 = private unnamed_addr constant [54 x i8] c"client hello, adding extended_master_secret extension\00", align 1
@.str.34.2229 = private unnamed_addr constant [36 x i8] c"client hello, adding alpn extension\00", align 1
@.str.35.2226 = private unnamed_addr constant [46 x i8] c"client hello, adding session ticket extension\00", align 1
@.str.36.2228 = private unnamed_addr constant [36 x i8] c"sending session ticket of length %d\00", align 1
@.str.37.2142 = private unnamed_addr constant [22 x i8] c"=> parse server hello\00", align 1
@.str.38.2061 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_read_record\00", align 1
@.str.39.2143 = private unnamed_addr constant [51 x i8] c"renegotiation requested, but not honored by server\00", align 1
@.str.40.2144 = private unnamed_addr constant [36 x i8] c"non-handshake message during renego\00", align 1
@.str.41.2145 = private unnamed_addr constant [25 x i8] c"bad server hello message\00", align 1
@.str.42.2146 = private unnamed_addr constant [30 x i8] c"received hello verify request\00", align 1
@.str.43.2147 = private unnamed_addr constant [22 x i8] c"<= parse server hello\00", align 1
@.str.44.2148 = private unnamed_addr constant [22 x i8] c"server hello, version\00", align 1
@.str.45.2149 = private unnamed_addr constant [76 x i8] c"server version out of bounds -  min: [%d:%d], server: [%d:%d], max: [%d:%d]\00", align 1
@.str.46.2150 = private unnamed_addr constant [32 x i8] c"server hello, current time: %lu\00", align 1
@.str.47.2151 = private unnamed_addr constant [27 x i8] c"server hello, random bytes\00", align 1
@.str.48.2152 = private unnamed_addr constant [34 x i8] c"server hello, bad compression: %d\00", align 1
@.str.49.2153 = private unnamed_addr constant [36 x i8] c"ciphersuite info for %04x not found\00", align 1
@.str.50.2154 = private unnamed_addr constant [34 x i8] c"server hello, session id len.: %d\00", align 1
@.str.51.2155 = private unnamed_addr constant [25 x i8] c"server hello, session id\00", align 1
@.str.52.2070 = private unnamed_addr constant [24 x i8] c"mbedtls_ssl_derive_keys\00", align 1
@.str.53.2156 = private unnamed_addr constant [28 x i8] c"%s session has been resumed\00", align 1
@.str.54.2105 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.55.2106 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.56.2157 = private unnamed_addr constant [39 x i8] c"server hello, chosen ciphersuite: %04x\00", align 1
@.str.57.2158 = private unnamed_addr constant [32 x i8] c"server hello, compress alg.: %d\00", align 1
@.str.58.2159 = private unnamed_addr constant [37 x i8] c"server hello, chosen ciphersuite: %s\00", align 1
@.str.59.2160 = private unnamed_addr constant [41 x i8] c"server hello, total extension length: %d\00", align 1
@.str.60.2161 = private unnamed_addr constant [30 x i8] c"found renegotiation extension\00", align 1
@.str.61.2163 = private unnamed_addr constant [36 x i8] c"found max_fragment_length extension\00", align 1
@.str.62.2165 = private unnamed_addr constant [31 x i8] c"found truncated_hmac extension\00", align 1
@.str.63.2167 = private unnamed_addr constant [33 x i8] c"found encrypt_then_mac extension\00", align 1
@.str.64.2169 = private unnamed_addr constant [39 x i8] c"found extended_master_secret extension\00", align 1
@.str.65.2171 = private unnamed_addr constant [31 x i8] c"found session_ticket extension\00", align 1
@.str.66.2173 = private unnamed_addr constant [40 x i8] c"found supported_point_formats extension\00", align 1
@.str.67.2174 = private unnamed_addr constant [21 x i8] c"found alpn extension\00", align 1
@.str.68.2176 = private unnamed_addr constant [39 x i8] c"unknown extension found: %d (ignoring)\00", align 1
@.str.69.2177 = private unnamed_addr constant [45 x i8] c"legacy renegotiation, breaking off handshake\00", align 1
@.str.70.2178 = private unnamed_addr constant [46 x i8] c"renegotiation_info extension missing (secure)\00", align 1
@.str.71.2179 = private unnamed_addr constant [33 x i8] c"legacy renegotiation not allowed\00", align 1
@.str.72.2180 = private unnamed_addr constant [46 x i8] c"renegotiation_info extension present (legacy)\00", align 1
@.str.73.2193 = private unnamed_addr constant [30 x i8] c"=> parse hello verify request\00", align 1
@.str.74.2194 = private unnamed_addr constant [15 x i8] c"server version\00", align 1
@.str.75.2195 = private unnamed_addr constant [19 x i8] c"bad server version\00", align 1
@.str.76.2196 = private unnamed_addr constant [7 x i8] c"cookie\00", align 1
@.str.77.2197 = private unnamed_addr constant [51 x i8] c"cookie length does not match incoming message size\00", align 1
@.str.78.2198 = private unnamed_addr constant [24 x i8] c"alloc failed (%d bytes)\00", align 1
@.str.79.2199 = private unnamed_addr constant [30 x i8] c"<= parse hello verify request\00", align 1
@.str.80.2191 = private unnamed_addr constant [32 x i8] c"non-matching renegotiation info\00", align 1
@.str.81.2192 = private unnamed_addr constant [35 x i8] c"non-zero length renegotiation info\00", align 1
@.str.82.2189 = private unnamed_addr constant [43 x i8] c"non-matching max fragment length extension\00", align 1
@.str.83.2188 = private unnamed_addr constant [38 x i8] c"non-matching truncated HMAC extension\00", align 1
@.str.84.2187 = private unnamed_addr constant [40 x i8] c"non-matching encrypt-then-MAC extension\00", align 1
@.str.85.2186 = private unnamed_addr constant [46 x i8] c"non-matching extended master secret extension\00", align 1
@.str.86.2185 = private unnamed_addr constant [38 x i8] c"non-matching session ticket extension\00", align 1
@.str.87.2183 = private unnamed_addr constant [26 x i8] c"point format selected: %d\00", align 1
@.str.88.2184 = private unnamed_addr constant [26 x i8] c"no point format in common\00", align 1
@.str.89.2181 = private unnamed_addr constant [28 x i8] c"non-matching ALPN extension\00", align 1
@.str.90.2182 = private unnamed_addr constant [37 x i8] c"ALPN extension: no matching protocol\00", align 1
@.str.91.2110 = private unnamed_addr constant [29 x i8] c"=> parse server key exchange\00", align 1
@.str.92.2111 = private unnamed_addr constant [34 x i8] c"<= skip parse server key exchange\00", align 1
@.str.93.2113 = private unnamed_addr constant [30 x i8] c"ssl_get_ecdh_params_from_cert\00", align 1
@.str.94.2114 = private unnamed_addr constant [32 x i8] c"bad server key exchange message\00", align 1
@.str.95.2115 = private unnamed_addr constant [48 x i8] c"server key exchange message must not be skipped\00", align 1
@.str.96.2116 = private unnamed_addr constant [20 x i8] c"server key exchange\00", align 1
@.str.97.2075 = private unnamed_addr constant [20 x i8] c"should never happen\00", align 1
@.str.98.2118 = private unnamed_addr constant [10 x i8] c"signature\00", align 1
@.str.99.2119 = private unnamed_addr constant [17 x i8] c"mbedtls_md_setup\00", align 1
@.str.100.2120 = private unnamed_addr constant [16 x i8] c"parameters hash\00", align 1
@.str.101.2096 = private unnamed_addr constant [21 x i8] c"certificate required\00", align 1
@.str.102.2121 = private unnamed_addr constant [18 x i8] c"mbedtls_pk_verify\00", align 1
@.str.103.2122 = private unnamed_addr constant [29 x i8] c"<= parse server key exchange\00", align 1
@.str.104.2138 = private unnamed_addr constant [28 x i8] c"server key not ECDH capable\00", align 1
@.str.105.2140 = private unnamed_addr constant [24 x i8] c"mbedtls_ecdh_get_params\00", align 1
@.str.106.2141 = private unnamed_addr constant [36 x i8] c"bad server certificate (ECDH curve)\00", align 1
@.str.107.2130 = private unnamed_addr constant [15 x i8] c"ECDH curve: %s\00", align 1
@.str.108.2131 = private unnamed_addr constant [9 x i8] c"ECDH: Qp\00", align 1
@.str.109.2137 = private unnamed_addr constant [59 x i8] c"bad server key exchange message (psk_identity_hint length)\00", align 1
@.str.110.2132 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_read_params\00", align 1
@.str.111.2133 = private unnamed_addr constant [29 x i8] c"DHM prime too short: %d < %d\00", align 1
@.str.112.2134 = private unnamed_addr constant [8 x i8] c"DHM: P \00", align 1
@.str.113.2135 = private unnamed_addr constant [8 x i8] c"DHM: G \00", align 1
@.str.114.2136 = private unnamed_addr constant [8 x i8] c"DHM: GY\00", align 1
@.str.115.2128 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_read_params\00", align 1
@.str.116.2129 = private unnamed_addr constant [46 x i8] c"bad server key exchange message (ECDHE curve)\00", align 1
@.str.117.2123 = private unnamed_addr constant [41 x i8] c"Server used unsupported HashAlgorithm %d\00", align 1
@.str.118.2124 = private unnamed_addr constant [46 x i8] c"server used unsupported SignatureAlgorithm %d\00", align 1
@.str.119.2125 = private unnamed_addr constant [50 x i8] c"server used HashAlgorithm %d that was not offered\00", align 1
@.str.120.2126 = private unnamed_addr constant [34 x i8] c"Server used SignatureAlgorithm %d\00", align 1
@.str.121.2127 = private unnamed_addr constant [29 x i8] c"Server used HashAlgorithm %d\00", align 1
@.str.122.2102 = private unnamed_addr constant [29 x i8] c"=> parse certificate request\00", align 1
@.str.123.2103 = private unnamed_addr constant [34 x i8] c"<= skip parse certificate request\00", align 1
@.str.124.2104 = private unnamed_addr constant [32 x i8] c"bad certificate request message\00", align 1
@.str.125.2107 = private unnamed_addr constant [27 x i8] c"got %s certificate request\00", align 1
@.str.126.2108 = private unnamed_addr constant [43 x i8] c"Supported Signature Algorithm found: %d,%d\00", align 1
@.str.127.2109 = private unnamed_addr constant [29 x i8] c"<= parse certificate request\00", align 1
@.str.128.2099 = private unnamed_addr constant [27 x i8] c"=> parse server hello done\00", align 1
@.str.129.2100 = private unnamed_addr constant [30 x i8] c"bad server hello done message\00", align 1
@.str.130.2101 = private unnamed_addr constant [27 x i8] c"<= parse server hello done\00", align 1
@.str.131.2079 = private unnamed_addr constant [29 x i8] c"=> write client key exchange\00", align 1
@.str.132.2080 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_make_public\00", align 1
@.str.133.2081 = private unnamed_addr constant [8 x i8] c"DHM: X \00", align 1
@.str.134.2082 = private unnamed_addr constant [8 x i8] c"DHM: GX\00", align 1
@.str.135.2083 = private unnamed_addr constant [24 x i8] c"mbedtls_dhm_calc_secret\00", align 1
@.str.136.2084 = private unnamed_addr constant [8 x i8] c"DHM: K \00", align 1
@.str.137.2085 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_make_public\00", align 1
@.str.138.2086 = private unnamed_addr constant [8 x i8] c"ECDH: Q\00", align 1
@.str.139.2087 = private unnamed_addr constant [25 x i8] c"mbedtls_ecdh_calc_secret\00", align 1
@.str.140.2088 = private unnamed_addr constant [8 x i8] c"ECDH: z\00", align 1
@.str.141.2089 = private unnamed_addr constant [27 x i8] c"got no private key for PSK\00", align 1
@.str.142.2090 = private unnamed_addr constant [46 x i8] c"psk identity too long or SSL buffer too short\00", align 1
@.str.143.2091 = private unnamed_addr constant [58 x i8] c"psk identity or DHM size too long or SSL buffer too short\00", align 1
@.str.144.2092 = private unnamed_addr constant [33 x i8] c"mbedtls_ssl_psk_derive_premaster\00", align 1
@.str.145.2093 = private unnamed_addr constant [29 x i8] c"<= write client key exchange\00", align 1
@.str.146.2094 = private unnamed_addr constant [35 x i8] c"buffer too small for encrypted pms\00", align 1
@.str.147.2095 = private unnamed_addr constant [6 x i8] c"f_rng\00", align 1
@.str.148.2097 = private unnamed_addr constant [30 x i8] c"certificate key type mismatch\00", align 1
@.str.149.2098 = private unnamed_addr constant [26 x i8] c"mbedtls_rsa_pkcs1_encrypt\00", align 1
@.str.150.2069 = private unnamed_addr constant [28 x i8] c"=> write certificate verify\00", align 1
@.str.151.2071 = private unnamed_addr constant [33 x i8] c"<= skip write certificate verify\00", align 1
@.str.152.2074 = private unnamed_addr constant [35 x i8] c"got no private key for certificate\00", align 1
@.str.153.2076 = private unnamed_addr constant [16 x i8] c"mbedtls_pk_sign\00", align 1
@.str.154.2078 = private unnamed_addr constant [28 x i8] c"<= write certificate verify\00", align 1
@.str.155.2060 = private unnamed_addr constant [28 x i8] c"=> parse new session ticket\00", align 1
@.str.156.2062 = private unnamed_addr constant [31 x i8] c"bad new session ticket message\00", align 1
@.str.157.2064 = private unnamed_addr constant [18 x i8] c"ticket length: %d\00", align 1
@.str.158.2066 = private unnamed_addr constant [20 x i8] c"ticket alloc failed\00", align 1
@.str.159.2067 = private unnamed_addr constant [37 x i8] c"ticket in use, discarding session id\00", align 1
@.str.160.2068 = private unnamed_addr constant [28 x i8] c"<= parse new session ticket\00", align 1
@.str.2244 = private unnamed_addr constant [10 x i8] c"*\86H\86\F7\0D\01\01\08\00", align 1
@.str.1.2257 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.2.2258 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.3.2259 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@.str.4.2260 = private unnamed_addr constant [4 x i8] c"??=\00", align 1
@.str.5.2261 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6.2266 = private unnamed_addr constant [7 x i8] c"%02X%s\00", align 1
@.str.7.2264 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.8.2265 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9.2267 = private unnamed_addr constant [5 x i8] c"....\00", align 1
@.str.10.2270 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.11.2271 = private unnamed_addr constant [23 x i8] c" (%s, MGF1-%s, 0x%02X)\00", align 1
@.str.12.2274 = private unnamed_addr constant [12 x i8] c"%s key size\00", align 1
@.str.13.2279 = private unnamed_addr constant [27 x i8] c"  X.509 certificate load: \00", align 1
@mbedtls_test_cli_crt = hidden global i8* getelementptr inbounds ([1303 x i8], [1303 x i8]* @mbedtls_test_cli_crt_rsa, i32 0, i32 0), align 8, !dbg !2805
@mbedtls_test_cli_crt_len = hidden constant i64 1303, align 8, !dbg !2819
@.str.14.2280 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@mbedtls_test_ca_crt = hidden global i8* getelementptr inbounds ([1307 x i8], [1307 x i8]* @mbedtls_test_ca_crt_rsa, i32 0, i32 0), align 8, !dbg !2795
@mbedtls_test_ca_crt_len = hidden constant i64 1307, align 8, !dbg !2809
@.str.15.2281 = private unnamed_addr constant [34 x i8] c"passed\0A  X.509 signature verify: \00", align 1
@.str.16.2282 = private unnamed_addr constant [9 x i8] c"passed\0A\0A\00", align 1
@.str.2292 = private unnamed_addr constant [18 x i8] c"  ARC4 test #%d: \00", align 1
@arc4_test_pt = internal constant [3 x [8 x i8]] [[8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] zeroinitializer, [8 x i8] zeroinitializer], align 16, !dbg !4342
@arc4_test_key = internal constant [3 x [8 x i8]] [[8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] zeroinitializer], align 16, !dbg !4348
@arc4_test_ct = internal constant [3 x [8 x i8]] [[8 x i8] c"u\B7\87\80\99\E0\C5\96", [8 x i8] c"t\94\C2\E7\10K\08y", [8 x i8] c"\DE\18\89A\A37]:"], align 16, !dbg !4351
@.str.1.2293 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.2.2294 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.3.2295 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@base64_enc_map = internal constant [64 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", align 16, !dbg !4353
@base64_dec_map = internal constant [128 x i8] c"\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F\7F>\7F\7F\7F?456789:;<=\7F\7F\7F@\7F\7F\7F\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\7F\7F\7F\7F\7F\7F\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123\7F\7F\7F\7F\7F", align 16, !dbg !4359
@.str.2306 = private unnamed_addr constant [25 x i8] c"  Base64 encoding test: \00", align 1
@base64_test_dec = internal constant [64 x i8] c"$HnV\87bZ\BD\BF\17\D9\A2\C4\17\1A\01\94\ED\8F\1E\11\B3\D7\09\0C\B6\E9\10o\22\EE\13\CA\B3\07\05v\C9\FA1l\084\FF\8D\C2l8\00C\E9T\97\AFPK\D1A\BA\951Z\0B\97", align 16, !dbg !4362
@base64_test_enc = internal constant [89 x i8] c"JEhuVodiWr2/F9mixBcaAZTtjx4Rs9cJDLbpEG8i7hPKswcFdsn6MWwINP+Nwmw4AEPpVJevUEvRQbqVMVoLlw==\00", align 16, !dbg !4364
@.str.1.2307 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.2.2308 = private unnamed_addr constant [32 x i8] c"passed\0A  Base64 decoding test: \00", align 1
@.str.3.2309 = private unnamed_addr constant [9 x i8] c"passed\0A\0A\00", align 1
@S = internal constant [4 x [256 x i32]] [[256 x i32] [i32 -785314906, i32 -1730169428, i32 805139163, i32 -803545161, i32 -1193168915, i32 1780907670, i32 -1166241723, i32 -248741991, i32 614570311, i32 -1282315017, i32 134345442, i32 -2054226922, i32 1667834072, i32 1901547113, i32 -1537671517, i32 -191677058, i32 227898511, i32 1921955416, i32 1904987480, i32 -2112533778, i32 2069144605, i32 -1034266187, i32 -1674521287, i32 720527379, i32 -976113629, i32 677414384, i32 -901678824, i32 -1193592593, i32 -1904616272, i32 1614419982, i32 1822297739, i32 -1340175810, i32 -686458943, i32 -1120842969, i32 2024746970, i32 1432378464, i32 -430627341, i32 -1437226092, i32 1464375394, i32 1676153920, i32 1439316330, i32 715854006, i32 -1261675468, i32 289532110, i32 -1588296017, i32 2087905683, i32 -1276242927, i32 1668267050, i32 732546397, i32 1947742710, i32 -832815594, i32 -1685613794, i32 -1344882125, i32 1814351708, i32 2050118529, i32 680887927, i32 999245976, i32 1800124847, i32 -994056165, i32 1713906067, i32 1641548236, i32 -81679983, i32 1216130144, i32 1575780402, i32 -276538019, i32 -377129551, i32 -601480446, i32 -345695352, i32 596196993, i32 -745100091, i32 258830323, i32 -2081144263, i32 772490370, i32 -1534844924, i32 1774776394, i32 -1642095778, i32 566650946, i32 -152474470, i32 1728879713, i32 -1412200208, i32 1783734482, i32 -665571480, i32 -1777359064, i32 -1420741725, i32 1861159788, i32 326777828, i32 -1170476976, i32 2130389656, i32 -1578015459, i32 967770486, i32 1724537150, i32 -2109534584, i32 -1930525159, i32 1164943284, i32 2105845187, i32 998989502, i32 -529566248, i32 -2050940813, i32 1075463327, i32 1455516326, i32 1322494562, i32 910128902, i32 469688178, i32 1117454909, i32 936433444, i32 -804646328, i32 -619713837, i32 1240580251, i32 122909385, i32 -2137449605, i32 634681816, i32 -152510729, i32 -469872614, i32 -1233564613, i32 -1754472259, i32 79693498, i32 -1045868618, i32 1084186820, i32 1583128258, i32 426386531, i32 1761308591, i32 1047286709, i32 322548459, i32 995290223, i32 1845252383, i32 -1691314900, i32 -863943356, i32 -1352745719, i32 -1092366332, i32 -567063811, i32 1712269319, i32 422464435, i32 -1060394921, i32 1170764815, i32 -771006663, i32 -1177289765, i32 1434042557, i32 442511882, i32 -694091578, i32 1076654713, i32 1738483198, i32 -81812532, i32 -1901729288, i32 -617471240, i32 1014306527, i32 -43947243, i32 793779912, i32 -1392160085, i32 842905082, i32 -48003232, i32 1395751752, i32 1040244610, i32 -1638115397, i32 -898659168, i32 445077038, i32 -552113701, i32 -717051658, i32 679411651, i32 -1402522938, i32 -1940957837, i32 1767581616, i32 -1144366904, i32 -503340195, i32 -1192226400, i32 284835224, i32 -48135240, i32 1258075500, i32 768725851, i32 -1705778055, i32 -1225243291, i32 -762426948, i32 1274779536, i32 -505548070, i32 -1530167757, i32 1660621633, i32 -823867672, i32 -283063590, i32 913787905, i32 -797008130, i32 737222580, i32 -1780753843, i32 -1366257256, i32 -357724559, i32 1804850592, i32 -795946544, i32 -1345903136, i32 -1908647121, i32 -1904896841, i32 -1879645445, i32 -233690268, i32 -2004305902, i32 -1878134756, i32 1336762016, i32 1754252060, i32 -774901359, i32 -1280786003, i32 791618072, i32 -1106372745, i32 -361419266, i32 -1962795103, i32 -442446833, i32 -1250986776, i32 413987798, i32 -829824359, i32 -1264037920, i32 -49028937, i32 2093235073, i32 -760370983, i32 375366246, i32 -2137688315, i32 -1815317740, i32 555357303, i32 -424861595, i32 2008414854, i32 -950779147, i32 -73583153, i32 -338841844, i32 2067696032, i32 -700376109, i32 -1373733303, i32 2428461, i32 544322398, i32 577241275, i32 1471733935, i32 610547355, i32 -267798242, i32 1432588573, i32 1507829418, i32 2025931657, i32 -648391809, i32 545086370, i32 48609733, i32 -2094660746, i32 1653985193, i32 298326376, i32 1316178497, i32 -1287180854, i32 2064951626, i32 458293330, i32 -1705826027, i32 -703637697, i32 -1130641692, i32 727753846, i32 -2115603456, i32 146436021, i32 1461446943, i32 -224990101, i32 705550613, i32 -1235000031, i32 -407242314, i32 -13368018, i32 -981117340, i32 1404054877, i32 -1449160799, i32 146425753, i32 1854211946], [256 x i32] [i32 1266315497, i32 -1246549692, i32 -613086930, i32 -1004984797, i32 -1385257296, i32 1235738493, i32 -1662099272, i32 -1880247706, i32 -324367247, i32 1771706367, i32 1449415276, i32 -1028546847, i32 422970021, i32 1963543593, i32 -1604775104, i32 -468174274, i32 1062508698, i32 1531092325, i32 1804592342, i32 -1711849514, i32 -1580033017, i32 -269995787, i32 1294809318, i32 -265986623, i32 1289560198, i32 -2072974554, i32 1669523910, i32 35572830, i32 157838143, i32 1052438473, i32 1016535060, i32 1802137761, i32 1753167236, i32 1386275462, i32 -1214491899, i32 -1437595849, i32 1040679964, i32 2145300060, i32 -1904392980, i32 1461121720, i32 -1338320329, i32 -263189491, i32 -266592508, i32 33600511, i32 -1374882534, i32 1018524850, i32 629373528, i32 -603381315, i32 -779021319, i32 2091462646, i32 -1808644237, i32 586499841, i32 988145025, i32 935516892, i32 -927631820, i32 -1695294041, i32 -1455136442, i32 265290510, i32 -322386114, i32 -1535828415, i32 -499593831, i32 1005194799, i32 847297441, i32 406762289, i32 1314163512, i32 1332590856, i32 1866599683, i32 -167115585, i32 750260880, i32 613907577, i32 1450815602, i32 -1129346641, i32 -560302305, i32 -644675568, i32 -1282691566, i32 -590397650, i32 1427272223, i32 778793252, i32 1343938022, i32 -1618686585, i32 2052605720, i32 1946737175, i32 -1130390852, i32 -380928628, i32 -327488454, i32 -612033030, i32 1661551462, i32 -1000029230, i32 -283371449, i32 840292616, i32 -582796489, i32 616741398, i32 312560963, i32 711312465, i32 1351876610, i32 322626781, i32 1910503582, i32 271666773, i32 -2119403562, i32 1594956187, i32 70604529, i32 -677132437, i32 1007753275, i32 1495573769, i32 -225450259, i32 -1745748998, i32 -1631928532, i32 504708206, i32 -2031925904, i32 -353800271, i32 -2045878774, i32 1514023603, i32 1998579484, i32 1312622330, i32 694541497, i32 -1712906993, i32 -2143385130, i32 1382467621, i32 776784248, i32 -1676627094, i32 -971698502, i32 -1797068168, i32 -1510196141, i32 503983604, i32 -218673497, i32 907881277, i32 423175695, i32 432175456, i32 1378068232, i32 -149744970, i32 -340918674, i32 -356311194, i32 -474200683, i32 -1501837181, i32 -1317062703, i32 26017576, i32 -1020076561, i32 -1100195163, i32 1700274565, i32 1756076034, i32 -288447217, i32 -617638597, i32 720338349, i32 1533947780, i32 354530856, i32 688349552, i32 -321042571, i32 1637815568, i32 332179504, i32 -345916010, i32 53804574, i32 -1442618417, i32 -1250730864, i32 1282449977, i32 -711025141, i32 -877994476, i32 -288586052, i32 1617046695, i32 -1666491221, i32 -1292663698, i32 1686838959, i32 431878346, i32 -1608291911, i32 1700445008, i32 1080580658, i32 1009431731, i32 832498133, i32 -1071531785, i32 -1688990951, i32 -2023776103, i32 -1778935426, i32 1648197032, i32 -130578278, i32 -1746719369, i32 300782431, i32 375919233, i32 238389289, i32 -941219882, i32 -1763778655, i32 2019080857, i32 1475708069, i32 455242339, i32 -1685863425, i32 448939670, i32 -843904277, i32 1395535956, i32 -1881585436, i32 1841049896, i32 1491858159, i32 885456874, i32 -30872223, i32 -293847949, i32 1565136089, i32 -396052509, i32 1108368660, i32 540939232, i32 1173283510, i32 -1549095958, i32 -613658859, i32 -87339056, i32 -951913406, i32 -278217803, i32 1699691293, i32 1103962373, i32 -669091426, i32 -2038084153, i32 -464828566, i32 1031889488, i32 -815619598, i32 1535977030, i32 -58162272, i32 -1043876189, i32 2132092099, i32 1774941330, i32 1199868427, i32 1452454533, i32 157007616, i32 -1390851939, i32 342012276, i32 595725824, i32 1480756522, i32 206960106, i32 497939518, i32 591360097, i32 863170706, i32 -1919713727, i32 -698356495, i32 1814182875, i32 2094937945, i32 -873565088, i32 1082520231, i32 -831049106, i32 -1509457788, i32 435703966, i32 -386934699, i32 1641649973, i32 -1452693590, i32 -989067582, i32 1510255612, i32 -2146710820, i32 -1639679442, i32 -1018874748, i32 -36346107, i32 236887753, i32 -613164077, i32 274041037, i32 1734335097, i32 -479771840, i32 -976997275, i32 1899903192, i32 1026095262, i32 -244449504, i32 356393447, i32 -1884275382, i32 -421290197, i32 -612127241], [256 x i32] [i32 -381855128, i32 -1803468553, i32 -162781668, i32 -1805047500, i32 1091903735, i32 1979897079, i32 -1124832466, i32 -727580568, i32 -737663887, i32 857797738, i32 1136121015, i32 1342202287, i32 507115054, i32 -1759230650, i32 337727348, i32 -1081374656, i32 1301675037, i32 -1766485585, i32 1895095763, i32 1721773893, i32 -1078195732, i32 62756741, i32 2142006736, i32 835421444, i32 -1762973773, i32 1442658625, i32 -635090970, i32 -1412822374, i32 676362277, i32 1392781812, i32 170690266, i32 -373920261, i32 1759253602, i32 -683120384, i32 1745797284, i32 664899054, i32 1329594018, i32 -393761396, i32 -1249058810, i32 2062866102, i32 -1429332356, i32 -751345684, i32 -830954599, i32 1080764994, i32 553557557, i32 -638351943, i32 -298199125, i32 991055499, i32 499776247, i32 1265440854, i32 648242737, i32 -354183246, i32 980351604, i32 -581221582, i32 1749149687, i32 -898096901, i32 -83167922, i32 -654396521, i32 1161844396, i32 -1169648345, i32 1431517754, i32 545492359, i32 -26498633, i32 -795437749, i32 1437099964, i32 -1592419752, i32 -861329053, i32 -1713251533, i32 -1507177898, i32 1060185593, i32 1593081372, i32 -1876348548, i32 -34019326, i32 69676912, i32 -2135222948, i32 86519011, i32 -1782508216, i32 -456757982, i32 1220612927, i32 -955283748, i32 133810670, i32 1090789135, i32 1078426020, i32 1569222167, i32 845107691, i32 -711212847, i32 -222510705, i32 1091646820, i32 628848692, i32 1613405280, i32 -537335645, i32 526609435, i32 236106946, i32 48312990, i32 -1352249391, i32 -892239595, i32 1797494240, i32 859738849, i32 992217954, i32 -289490654, i32 -2051890674, i32 -424014439, i32 -562951028, i32 765654824, i32 -804095931, i32 -1783130883, i32 1685915746, i32 -405998096, i32 1414112111, i32 -2021832454, i32 -1013056217, i32 -214004450, i32 172450625, i32 -1724973196, i32 980381355, i32 -185008841, i32 -1475158944, i32 -1578377736, i32 -1726226100, i32 -613520627, i32 -964995824, i32 1835478071, i32 660984891, i32 -590288892, i32 -248967737, i32 -872349789, i32 -1254551662, i32 1762651403, i32 1719377915, i32 -824476260, i32 -1601057013, i32 -652910941, i32 -1156370552, i32 1364962596, i32 2073328063, i32 1983633131, i32 926494387, i32 -871278215, i32 -2144935273, i32 -198299347, i32 1749200295, i32 -966120645, i32 309677260, i32 2016342300, i32 1779581495, i32 -1215147545, i32 111262694, i32 1274766160, i32 443224088, i32 298511866, i32 1025883608, i32 -488520759, i32 1145181785, i32 168956806, i32 -653464466, i32 -710153686, i32 1689216846, i32 -628709281, i32 -1094719096, i32 1692713982, i32 -1648590761, i32 -252198778, i32 1618508792, i32 1610833997, i32 -771914938, i32 -164094032, i32 2001055236, i32 -684262196, i32 -2092799181, i32 -266425487, i32 -1333771897, i32 1006657119, i32 2006996926, i32 -1108824540, i32 1430667929, i32 -1084739999, i32 1314452623, i32 -220332638, i32 -193663176, i32 -2021016126, i32 1399257539, i32 -927756684, i32 -1267338667, i32 1190975929, i32 2062231137, i32 -1960976508, i32 -2073424263, i32 -1856006686, i32 1181637006, i32 548689776, i32 -1932175983, i32 -922558900, i32 -1190417183, i32 -1149106736, i32 296247880, i32 1970579870, i32 -1216407114, i32 -525738999, i32 1714227617, i32 -1003338189, i32 -396747006, i32 166772364, i32 1251581989, i32 493813264, i32 448347421, i32 195405023, i32 -1584991729, i32 677966185, i32 -591930749, i32 1463355134, i32 -1578971493, i32 1338867538, i32 1343315457, i32 -1492745222, i32 -1610435132, i32 233230375, i32 -1694987225, i32 2000651841, i32 -1017099258, i32 1638401717, i32 -266896856, i32 -1057650976, i32 6314154, i32 819756386, i32 300326615, i32 590932579, i32 1405279636, i32 -1027467724, i32 -1144263082, i32 -1866680610, i32 -335774303, i32 -833020554, i32 1862657033, i32 1266418056, i32 963775037, i32 2089974820, i32 -2031914401, i32 1917689273, i32 448879540, i32 -744572676, i32 -313240200, i32 150775221, i32 -667058989, i32 1303187396, i32 508620638, i32 -1318983944, i32 -1568336679, i32 1817252668, i32 1876281319, i32 1457606340, i32 908771278, i32 -574175177, i32 -677760460, i32 -1838972398, i32 1729034894, i32 1080033504], [256 x i32] [i32 976866871, i32 -738527793, i32 -1413318857, i32 1522871579, i32 1555064734, i32 1336096578, i32 -746444992, i32 -1715692610, i32 -720269667, i32 -1089506539, i32 -701686658, i32 -956251013, i32 -1215554709, i32 564236357, i32 -1301368386, i32 1781952180, i32 1464380207, i32 -1131123079, i32 -962365742, i32 1699332808, i32 1393555694, i32 1183702653, i32 -713881059, i32 1288719814, i32 691649499, i32 -1447410096, i32 -1399511320, i32 -1101077756, i32 -1577396752, i32 1781354906, i32 1676643554, i32 -1702433246, i32 -1064713544, i32 1126444790, i32 -1524759638, i32 -1661808476, i32 -2084544070, i32 -1679201715, i32 -1880812208, i32 -1167828010, i32 673620729, i32 -1489356063, i32 1269405062, i32 -279616791, i32 -953159725, i32 -145557542, i32 1057255273, i32 2012875353, i32 -2132498155, i32 -2018474495, i32 -1693849939, i32 993977747, i32 -376373926, i32 -1640704105, i32 753973209, i32 36408145, i32 -1764381638, i32 25011837, i32 -774947114, i32 2088578344, i32 530523599, i32 -1376601957, i32 1524020338, i32 1518925132, i32 -534139791, i32 -535190042, i32 1202760957, i32 -309069157, i32 -388774771, i32 674977740, i32 -120232407, i32 2031300136, i32 2019492241, i32 -311074731, i32 -141160892, i32 -472686964, i32 352677332, i32 -1997247046, i32 60907813, i32 90501309, i32 -1007968747, i32 1016092578, i32 -1759044884, i32 -1455814870, i32 457141659, i32 509813237, i32 -174299397, i32 652014361, i32 1966332200, i32 -1319764491, i32 55981186, i32 -1967506245, i32 676427537, i32 -1039476232, i32 -1412673177, i32 -861040033, i32 1307055953, i32 942726286, i32 933058658, i32 -1826555503, i32 -361066302, i32 -79791154, i32 1361170020, i32 2001714738, i32 -1464409218, i32 -1020707514, i32 1222529897, i32 1679025792, i32 -1565652976, i32 -580013532, i32 1770335741, i32 151462246, i32 -1281735158, i32 1682292957, i32 1483529935, i32 471910574, i32 1539241949, i32 458788160, i32 -858652289, i32 1807016891, i32 -576558466, i32 978976581, i32 1043663428, i32 -1129001515, i32 1927990952, i32 -94075717, i32 -1922690386, i32 -1086558393, i32 -761535389, i32 1412390302, i32 -1362987237, i32 -162634896, i32 1947078029, i32 -413461673, i32 -126740879, i32 -1353482915, i32 1077988104, i32 1320477388, i32 886195818, i32 18198404, i32 -508558296, i32 -1785185763, i32 112762804, i32 -831610808, i32 1866414978, i32 891333506, i32 18488651, i32 661792760, i32 1628790961, i32 -409780260, i32 -1153795797, i32 876946877, i32 -1601685023, i32 1372485963, i32 791857591, i32 -1608533303, i32 -534984578, i32 -1127755274, i32 -822013501, i32 -1578587449, i32 445679433, i32 -732971622, i32 -790962485, i32 -720709064, i32 54117162, i32 -963561881, i32 -1913048708, i32 -525259953, i32 -140617289, i32 1140177722, i32 -220915201, i32 668550556, i32 -1080614356, i32 367459370, i32 261225585, i32 -1684794075, i32 -85617823, i32 -826893077, i32 -1029151655, i32 314222801, i32 -1228863650, i32 -486184436, i32 282218597, i32 -888953790, i32 -521376242, i32 379116347, i32 1285071038, i32 846784868, i32 -1625320142, i32 -523005217, i32 -744475605, i32 -1989021154, i32 453669953, i32 1268987020, i32 -977374944, i32 -1015663912, i32 -550133875, i32 -1684459730, i32 -435458233, i32 266596637, i32 -447948204, i32 517658769, i32 -832407089, i32 -851542417, i32 370717030, i32 -47440635, i32 -2070949179, i32 -151313767, i32 -182193321, i32 -1506642397, i32 -1817692879, i32 1456262402, i32 -1393524382, i32 1517677493, i32 1846949527, i32 -1999473716, i32 -560569710, i32 -2118563376, i32 1280348187, i32 1908823572, i32 -423180355, i32 846861322, i32 1172426758, i32 -1007518822, i32 -911584259, i32 1655181056, i32 -1155153950, i32 901632758, i32 1897031941, i32 -1308360158, i32 -1228157060, i32 -847864789, i32 1393639104, i32 373351379, i32 950779232, i32 625454576, i32 -1170726756, i32 -146354570, i32 2007998917, i32 544563296, i32 -2050228658, i32 -1964470824, i32 2058025392, i32 1291430526, i32 424198748, i32 50039436, i32 29584100, i32 -689184263, i32 -1865090967, i32 -1503863136, i32 1057563949, i32 -1039604065, i32 -1219600078, i32 -831004069, i32 1469046755, i32 985887462]], align 16, !dbg !4369
@P = internal constant [18 x i32] [i32 608135816, i32 -2052912941, i32 320440878, i32 57701188, i32 -1542899678, i32 698298832, i32 137296536, i32 -330404727, i32 1160258022, i32 953160567, i32 -1101764913, i32 887688300, i32 -1062458953, i32 -914599715, i32 1065670069, i32 -1253635817, i32 -1843997223, i32 -1988494565], align 16, !dbg !4375
@SIGMA_CHARS = internal constant [6 x [8 x i8]] [[8 x i8] c"\A0\9Ef\7F;\CC\90\8B", [8 x i8] c"\B6z\E8XL\AAs\B2", [8 x i8] c"\C6\EF7/\E9O\82\BE", [8 x i8] c"T\FFS\A5\F1\D3o\1C", [8 x i8] c"\10\E5'\FA\DEh-\1D", [8 x i8] c"\B0V\88\C2\B3\E6\C1\FD"], align 16, !dbg !4380
@shifts = internal constant [2 x [4 x [4 x i8]]] [[4 x [4 x i8]] [[4 x i8] c"\01\01\01\01", [4 x i8] zeroinitializer, [4 x i8] c"\01\01\01\01", [4 x i8] zeroinitializer], [4 x [4 x i8]] [[4 x i8] c"\01\00\01\01", [4 x i8] c"\01\01\00\01", [4 x i8] c"\01\01\01\00", [4 x i8] c"\01\01\00\01"]], align 16, !dbg !4395
@indexes = internal constant [2 x [4 x [20 x i8]]] [[4 x [20 x i8]] [[20 x i8] c"\00\01\02\03\08\09\0A\0B&'$%\17\14\15\16\1B\FF\FF\1A", [20 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [20 x i8] c"\04\05\06\07\0C\0D\0E\0F\10\11\12\13\FF\18\19\FF\1F\1C\1D\1E", [20 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF"], [4 x [20 x i8]] [[20 x i8] c"\00\01\02\03=>?<\FF\FF\FF\FF\1B\18\19\1A# !\22", [20 x i8] c"\FF\FF\FF\FF\08\09\0A\0B\10\11\12\13\FF\FF\FF\FF'$%&", [20 x i8] c"\FF\FF\FF\FF\0C\0D\0E\0F:;89\1F\1C\1D\1E\FF\FF\FF\FF", [20 x i8] c"\04\05\06\07ABC@\14\15\16\17\FF\FF\FF\FF+()*"]], align 16, !dbg !4399
@transposes = internal constant [2 x [20 x i8]] [[20 x i8] c"\15\16\17\14\FF\FF\FF\FF\12\13\10\11\0B\08\09\0A\0F\0C\0D\0E", [20 x i8] c"\19\1A\1B\18\1D\1E\1F\1C\12\13\10\11\FF\FF\FF\FF\FF\FF\FF\FF"], align 16, !dbg !4404
@.str.2345 = private unnamed_addr constant [26 x i8] c"  CAMELLIA-ECB-%3d (%s): \00", align 1
@.str.1.2343 = private unnamed_addr constant [4 x i8] c"dec\00", align 1
@.str.2.2344 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@camellia_test_ecb_cipher = internal constant [3 x [2 x [16 x i8]]] [[2 x [16 x i8]] [[16 x i8] c"gg18T\96is\08W\06VH\EA\BEC", [16 x i8] c"8<l*\AB\EF\7F\DE%\CDG\0B\F7t\A31"], [2 x [16 x i8]] [[16 x i8] c"\B4\994\01\B3\E9\96\F8N\E5\CE\E7\D7\9B\09\B9", [16 x i8] c"\D1v?\C0\19\D7|\C90\BF\F2\A5o|\93d"], [2 x [16 x i8]] [[16 x i8] c"\9A\CC#}\FF\16\D7l \EF|\91\9E:u\09", [16 x i8] c"\05\03\FB\10\AB$\1E|\F4]\8C\DE\EEGC5"]], align 16, !dbg !4412
@.str.3.2346 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.4.2347 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.5.2348 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6.2349 = private unnamed_addr constant [26 x i8] c"  CAMELLIA-CBC-%3d (%s): \00", align 1
@camellia_test_cbc_iv = internal constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 16, !dbg !4420
@camellia_test_cbc_cipher = internal constant [3 x [3 x [16 x i8]]] [[3 x [16 x i8]] [[16 x i8] c"\16\07\CFIK6\BB\F0\0D\AE\B0\B5\03\C81\AB", [16 x i8] c"\A2\F2\CFg\16)\EFx@\C5\A5\DF\B5\07H\87", [16 x i8] c"\0F\06\16P\08\CF\8B\8BZcXcbT>T"], [3 x [16 x i8]] [[16 x i8] c"*H0\ABZ\C4\A1\A2@YU\FD!\95\CF\93", [16 x i8] c"]Z\86\9B\D1L\E5Bd\F8\92\A6\DD.\C3\D5", [16 x i8] c"7\D3Y\C34\986\D8\84\E3\10\AD\DFh\C4I"], [3 x [16 x i8]] [[16 x i8] c"\E6\CF\A3_\C0+\13JM,\0Bg7\AC>\DA", [16 x i8] c"6\CB\EBs\BDPK@p\B1\B7\DE+!\EBP", [16 x i8] c"\E3\1A`U)}\96\CA30\CD\F1\B1\86\0A\83"]], align 16, !dbg !4424
@camellia_test_cbc_plain = internal constant [3 x [16 x i8]] [[16 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*", [16 x i8] c"\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ", [16 x i8] c"0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF"], align 16, !dbg !4428
@.str.7.2350 = private unnamed_addr constant [26 x i8] c"  CAMELLIA-CTR-128 (%s): \00", align 1
@camellia_test_ctr_nonce_counter = internal constant [3 x [16 x i8]] [[16 x i8] c"\00\00\000\00\00\00\00\00\00\00\00\00\00\00\01", [16 x i8] c"\00l\B6\DB\C0T;Y\DAH\D9\0B\00\00\00\01", [16 x i8] c"\00\E0\01{'w\7F?J\17\86\F0\00\00\00\01"], align 16, !dbg !4430
@camellia_test_ctr_key = internal constant [3 x [16 x i8]] [[16 x i8] c"\AEhR\F8\12\10g\CCK\F7\A5vUw\F3\9E", [16 x i8] c"~$\06x\17\FA\E0\D7C\D6\CE\1F2S\91c", [16 x i8] c"v\91\BE\03^P \A8\ACna\85)\F9\A0\DC"], align 16, !dbg !4432
@camellia_test_ctr_len = internal constant [3 x i32] [i32 16, i32 32, i32 36], align 4, !dbg !4434
@FSb.2332 = internal constant [256 x i8] c"p\82,\EC\B3'\C0\E5\E4\85W5\EA\0C\AEA#\EFk\93E\19\A5!\ED\0EON\1De\92\BD\86\B8\AF\8F|\EB\1F\CE>0\DC_^\C5\0B\1A\A6\E19\CA\D5G]=\D9\01Z\D6QVlM\8B\0D\9Af\FB\CC\B0-t\12+ \F0\B1\84\99\DFL\CB\C24~v\05m\B7\A91\D1\17\04\D7\14X:a\DE\1B\11\1C2\0F\9C\16S\18\F2\22\FED\CF\B2\C3\B5z\91$\08\E8\A8`\FCiP\AA\D0\A0}\A1\89b\97T[\1E\95\E0\FFd\D2\10\C4\00H\A3\F7u\DB\8A\03\E6\DA\09?\DD\94\87\\\83\02\CDJ\903sg\F6\F3\9D\7F\BF\E2R\9B\D8&\C87\C6;\81\96oK\13\BEc.\E9y\A7\8C\9Fn\BC\8E)\F5\F9\B6/\FD\B4Yx\98\06j\E7Fq\BA\D4%\ABB\88\A2\8D\FAr\07\B9U\F8\EE\AC\0A6I*h<8\F1\A4@(\D3{\BB\C9C\C1\15\E3\AD\F4w\C7\80\9E", align 16, !dbg !4385
@FSb2 = internal constant [256 x i8] c"\E0\05X\D9gN\81\CB\C9\0B\AEj\D5\18]\82F\DF\D6'\8A2KB\DB\1C\9E\9C:\CA%{\0Dq_\1F\F8\D7>\9D|`\B9\BE\BC\8B\164M\C3r\95\AB\8E\BAz\B3\02\B4\AD\A2\AC\D8\9A\17\1A5\CC\F7\99aZ\E8$V@\E1c\093\BF\98\97\85h\FC\EC\0A\DAoSb\A3.\08\AF(\B0t\C2\BD6\228d\1E9,\A60\E5D\FD\88\9Fe\87k\F4#H\10\D1Q\C0\F9\D2\A0U\A1A\FAC\13\C4/\A8\B6<+\C1\FF\C8\A5 \89\00\90G\EF\EA\B7\15\06\CD\B5\12~\BB)\0F\B8\07\04\9B\94!f\E6\CE\ED\E7;\FE\7F\C5\A47\B1L\91n\8Dv\03-\DE\96&}\C6\\\D3\F2O\19?\DCy\1DR\EB\F3m^\FBi\B2\F01\0C\D4\CF\8C\E2u\A9JW\84\11E\1B\F5\E4\0Es\AA\F1\DDY\14l\92T\D0xp\E3I\80P\A7\F6w\93\86\83*\C7[\E9\EE\8F\01=", align 16, !dbg !4389
@FSb3 = internal constant [256 x i8] c"8A\16v\D9\93`\F2r\C2\AB\9Au\06W\A0\91\F7\B5\C9\A2\8C\D2\90\F6\07\A7'\8E\B2I\DEC\\\D7\C7>\F5\8Fg\1F\18n\AF/\E2\85\0DS\F0\9Ce\EA\A3\AE\9E\EC\80-k\A8+6\A6\C5\86M3\FDfX\96:\09\95\10x\D8B\CC\EF&\E5a\1A?;\82\B6\DB\D4\98\E8\8B\02\EB\0A,\1D\B0o\8D\88\0E\19\87N\0B\A9\0Cy\11\7F\22\E7Y\E1\DA=\C8\12\04tT0~\B4(UhP\BE\D0\C41\CB*\AD\0F\CAp\FF2i\08b\00$\D1\FB\BA\EDE\81sm\84\9F\EEJ\C3.\C1\01\E6%H\99\B9\B3{\F9\CE\BF\DFq)\CDl\13d\9Bc\9D\C0K\B7\A5\89_\B1\17\F4\BC\D3F\CF7^G\94\FA\FC[\97\FEZ\AC<L\035\F3#\B8]j\92\D5!DQ\C6}9\83\DC\AA|wV\05\1B\A4\154\1E\1C\F8R \14\E9\BD\DD\E4\A1\E0\8A\F1\D6z\BB\E3@O", align 16, !dbg !4391
@FSb4 = internal constant [256 x i8] c"p,\B3\C0\E4W\EA\AE#kE\A5\EDO\1D\92\86\AF|\1F>\DC^\0B\A69\D5]\D9ZQl\8B\9A\FB\B0t+\F0\84\DF\CB4vm\A9\D1\04\14:\DE\112\9CS\F2\FE\CF\C3z$\E8`i\AA\A0\A1bT\1E\E0d\10\00\A3u\8A\E6\09\DD\87\83\CD\90s\F6\9D\BFR\D8\C8\C6\81o\13c\E9\A7\9F\BC)\F9/\B4x\06\E7q\D4\AB\88\8Dr\B9\F8\AC6*<\F1@\D3\BBC\15\ADw\80\82\EC'\E5\855\0CA\EF\93\19!\0ENe\BD\B8\8F\EB\CE0_\C5\1A\E1\CAG=\01\D6VM\0Df\CC-\12 \B1\99L\C2~\05\B71\17\D7Xa\1B\1C\0F\16\18\22D\B2\B5\91\08\A8\FCP\D0}\89\97[\95\FF\D2\C4H\F7\DB\03\DA?\94\\\02J3g\F3\7F\E2\9B&7;\96K\BE.y\8Cn\8E\F5\B6\FDY\98jF\BA%B\A2\FA\07U\EE\0AIh8\A4({\C9\C1\E3\F4\C7\9E", align 16, !dbg !4393
@camellia_test_ecb_key = internal constant <{ <{ <{ [16 x i8], [16 x i8] }>, [32 x i8] }>, <{ <{ [24 x i8], [8 x i8] }>, [32 x i8] }>, [2 x [32 x i8]] }> <{ <{ <{ [16 x i8], [16 x i8] }>, [32 x i8] }> <{ <{ [16 x i8], [16 x i8] }> <{ [16 x i8] c"\01#Eg\89\AB\CD\EF\FE\DC\BA\98vT2\10", [16 x i8] zeroinitializer }>, [32 x i8] zeroinitializer }>, <{ <{ [24 x i8], [8 x i8] }>, [32 x i8] }> <{ <{ [24 x i8], [8 x i8] }> <{ [24 x i8] c"\01#Eg\89\AB\CD\EF\FE\DC\BA\98vT2\10\00\11\223DUfw", [8 x i8] zeroinitializer }>, [32 x i8] zeroinitializer }>, [2 x [32 x i8]] [[32 x i8] c"\01#Eg\89\AB\CD\EF\FE\DC\BA\98vT2\10\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", [32 x i8] zeroinitializer] }>, align 16, !dbg !4408
@camellia_test_ecb_plain = internal constant <{ [16 x i8], <{ i8, i8, i8, i8, i8, [11 x i8] }> }> <{ [16 x i8] c"\01#Eg\89\AB\CD\EF\FE\DC\BA\98vT2\10", <{ i8, i8, i8, i8, i8, [11 x i8] }> <{ i8 0, i8 0, i8 0, i8 0, i8 2, [11 x i8] zeroinitializer }> }>, align 16, !dbg !4416
@camellia_test_cbc_key = internal constant <{ <{ [16 x i8], [16 x i8] }>, <{ [24 x i8], [8 x i8] }>, [32 x i8] }> <{ <{ [16 x i8], [16 x i8] }> <{ [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", [16 x i8] zeroinitializer }>, <{ [24 x i8], [8 x i8] }> <{ [24 x i8] c"\8Es\B0\F7\DA\0EdR\C8\10\F3+\80\90y\E5b\F8\EA\D2R,k{", [8 x i8] zeroinitializer }>, [32 x i8] c"`=\EB\10\15\CAq\BE+s\AE\F0\85}w\81\1F5,\07;a\08\D7-\98\10\A3\09\14\DF\F4" }>, align 16, !dbg !4422
@camellia_test_ctr_ct = internal constant <{ <{ [16 x i8], [32 x i8] }>, <{ [32 x i8], [16 x i8] }>, <{ [36 x i8], [12 x i8] }> }> <{ <{ [16 x i8], [32 x i8] }> <{ [16 x i8] c"\D0\9D\C2\9A\82\14a\9A \87|v\DB\1F\0B?", [32 x i8] zeroinitializer }>, <{ [32 x i8], [16 x i8] }> <{ [32 x i8] c"\DB\F3\C7\8D\C0\83\96\D4\DA|\90we\BB\CBD+\8E\8E\0F1\F0\DC\A7,t\17\E3S`\E0H", [16 x i8] zeroinitializer }>, <{ [36 x i8], [12 x i8] }> <{ [36 x i8] c"\B1\9D\1F\CD\CBu\EB\88/\84\9C\E2M\85\CFs\9C\E6K+\\\9Ds\F1O-]\9D\CE\98\89\CD\DFP\86\96", [12 x i8] zeroinitializer }> }>, align 16, !dbg !4436
@camellia_test_ctr_pt = internal constant <{ <{ [16 x i8], [32 x i8] }>, <{ [32 x i8], [16 x i8] }>, <{ [36 x i8], [12 x i8] }> }> <{ <{ [16 x i8], [32 x i8] }> <{ [16 x i8] c"Single block msg", [32 x i8] zeroinitializer }>, <{ [32 x i8], [16 x i8] }> <{ [32 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F", [16 x i8] zeroinitializer }>, <{ [36 x i8], [12 x i8] }> <{ [36 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#", [12 x i8] zeroinitializer }> }>, align 16, !dbg !4438
@key.2362 = internal constant [16 x i8] c"@ABCDEFGHIJKLMNO", align 16, !dbg !4442
@.str.2363 = private unnamed_addr constant [20 x i8] c"  CCM: setup failed\00", align 1
@.str.1.2364 = private unnamed_addr constant [16 x i8] c"  CCM-AES #%u: \00", align 1
@msg_len = internal constant [3 x i64] [i64 4, i64 16, i64 24], align 16, !dbg !4448
@iv.2367 = internal constant [12 x i8] c"\10\11\12\13\14\15\16\17\18\19\1A\1B", align 1, !dbg !4452
@iv_len.2365 = internal constant [3 x i64] [i64 7, i64 8, i64 12], align 16, !dbg !4455
@ad = internal constant [20 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13", align 16, !dbg !4457
@add_len.2366 = internal constant [3 x i64] [i64 8, i64 16, i64 20], align 16, !dbg !4460
@msg = internal constant [24 x i8] c" !\22#$%&'()*+,-./01234567", align 16, !dbg !4462
@tag_len = internal constant [3 x i64] [i64 4, i64 6, i64 8], align 16, !dbg !4464
@.str.2.2368 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1
@.str.3.2369 = private unnamed_addr constant [8 x i8] c"passed\0A\00", align 1
@.str.4.2370 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@res = internal constant <{ <{ [8 x i8], [24 x i8] }>, <{ [22 x i8], [10 x i8] }>, [32 x i8] }> <{ <{ [8 x i8], [24 x i8] }> <{ [8 x i8] c"qb\01[M\AC%]", [24 x i8] zeroinitializer }>, <{ [22 x i8], [10 x i8] }> <{ [22 x i8] c"\D2\A1\F0\E0Q\EA_b\08\1Aw\92\07=Y=\1F\C6O\BF\AC\CD", [10 x i8] zeroinitializer }>, [32 x i8] c"\E3\B2\01\A9\F5\B7\1Az\9B\1C\EA\EC\CD\97\E7\0Bav\AA\D9\A4B\8A\A5HC\92\FB\C1\B0\99Q" }>, align 16, !dbg !4466

@_ZN20TLSConnectionHandlerC1Ev = hidden unnamed_addr alias void (%class.TLSConnectionHandler*), void (%class.TLSConnectionHandler*)* @_ZN20TLSConnectionHandlerC2Ev
@_ZN20TLSConnectionHandlerD1Ev = hidden unnamed_addr alias void (%class.TLSConnectionHandler*), void (%class.TLSConnectionHandler*)* @_ZN20TLSConnectionHandlerD2Ev

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sgx_sgx_connect(i8* %0) #0 !dbg !4836 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mbedtls_net_context*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4840, metadata !DIExpression()), !dbg !4841
  br label %6, !dbg !4842

6:                                                ; preds = %1
  %7 = load i8*, i8** %3, align 8, !dbg !4843
  %8 = icmp ne i8* %7, null, !dbg !4843
  br i1 %8, label %9, label %13, !dbg !4843

9:                                                ; preds = %6
  %10 = load i8*, i8** %3, align 8, !dbg !4843
  %11 = call i32 @sgx_is_outside_enclave(i8* %10, i64 4), !dbg !4843
  %12 = icmp ne i32 %11, 0, !dbg !4843
  br i1 %12, label %14, label %13, !dbg !4846

13:                                               ; preds = %9, %6
  store i32 2, i32* %2, align 4, !dbg !4843
  br label %22, !dbg !4843

14:                                               ; preds = %9
  br label %15, !dbg !4846

15:                                               ; preds = %14
  call void @llvm.x86.sse2.lfence(), !dbg !4847
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %4, metadata !4848, metadata !DIExpression()), !dbg !4849
  %16 = load i8*, i8** %3, align 8, !dbg !4850
  %17 = bitcast i8* %16 to %struct.mbedtls_net_context*, !dbg !4850
  store %struct.mbedtls_net_context* %17, %struct.mbedtls_net_context** %4, align 8, !dbg !4849
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4851, metadata !DIExpression()), !dbg !4852
  store i32 0, i32* %5, align 4, !dbg !4852
  %18 = call i32 @sgx_connect(), !dbg !4853
  %19 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %4, align 8, !dbg !4854
  %20 = getelementptr inbounds %struct.mbedtls_net_context, %struct.mbedtls_net_context* %19, i32 0, i32 0, !dbg !4855
  store i32 %18, i32* %20, align 4, !dbg !4856
  %21 = load i32, i32* %5, align 4, !dbg !4857
  store i32 %21, i32* %2, align 4, !dbg !4858
  br label %22, !dbg !4858

22:                                               ; preds = %15, %13
  %23 = load i32, i32* %2, align 4, !dbg !4859
  ret i32 %23, !dbg !4859
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sgx_sgx_accept(i8* %0) #0 !dbg !4860 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mbedtls_net_context*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4861, metadata !DIExpression()), !dbg !4862
  br label %6, !dbg !4863

6:                                                ; preds = %1
  %7 = load i8*, i8** %3, align 8, !dbg !4864
  %8 = icmp ne i8* %7, null, !dbg !4864
  br i1 %8, label %9, label %13, !dbg !4864

9:                                                ; preds = %6
  %10 = load i8*, i8** %3, align 8, !dbg !4864
  %11 = call i32 @sgx_is_outside_enclave(i8* %10, i64 4), !dbg !4864
  %12 = icmp ne i32 %11, 0, !dbg !4864
  br i1 %12, label %14, label %13, !dbg !4867

13:                                               ; preds = %9, %6
  store i32 2, i32* %2, align 4, !dbg !4864
  br label %22, !dbg !4864

14:                                               ; preds = %9
  br label %15, !dbg !4867

15:                                               ; preds = %14
  call void @llvm.x86.sse2.lfence(), !dbg !4868
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %4, metadata !4869, metadata !DIExpression()), !dbg !4870
  %16 = load i8*, i8** %3, align 8, !dbg !4871
  %17 = bitcast i8* %16 to %struct.mbedtls_net_context*, !dbg !4871
  store %struct.mbedtls_net_context* %17, %struct.mbedtls_net_context** %4, align 8, !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4872, metadata !DIExpression()), !dbg !4873
  store i32 0, i32* %5, align 4, !dbg !4873
  %18 = call i32 @sgx_accept(), !dbg !4874
  %19 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %4, align 8, !dbg !4875
  %20 = getelementptr inbounds %struct.mbedtls_net_context, %struct.mbedtls_net_context* %19, i32 0, i32 0, !dbg !4876
  store i32 %18, i32* %20, align 4, !dbg !4877
  %21 = load i32, i32* %5, align 4, !dbg !4878
  store i32 %21, i32* %2, align 4, !dbg !4879
  br label %22, !dbg !4879

22:                                               ; preds = %15, %13
  %23 = load i32, i32* %2, align 4, !dbg !4880
  ret i32 %23, !dbg !4880
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sgx_ssl_conn_init(i8* %0) #0 !dbg !4881 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4882, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4884, metadata !DIExpression()), !dbg !4885
  store i32 0, i32* %4, align 4, !dbg !4885
  %5 = load i8*, i8** %3, align 8, !dbg !4886
  %6 = icmp ne i8* %5, null, !dbg !4888
  br i1 %6, label %7, label %8, !dbg !4889

7:                                                ; preds = %1
  store i32 2, i32* %2, align 4, !dbg !4890
  br label %10, !dbg !4890

8:                                                ; preds = %1
  call void @ssl_conn_init(), !dbg !4891
  %9 = load i32, i32* %4, align 4, !dbg !4892
  store i32 %9, i32* %2, align 4, !dbg !4893
  br label %10, !dbg !4893

10:                                               ; preds = %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !4894
  ret i32 %11, !dbg !4894
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sgx_ssl_conn_teardown(i8* %0) #0 !dbg !4895 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4896, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4898, metadata !DIExpression()), !dbg !4899
  store i32 0, i32* %4, align 4, !dbg !4899
  %5 = load i8*, i8** %3, align 8, !dbg !4900
  %6 = icmp ne i8* %5, null, !dbg !4902
  br i1 %6, label %7, label %8, !dbg !4903

7:                                                ; preds = %1
  store i32 2, i32* %2, align 4, !dbg !4904
  br label %10, !dbg !4904

8:                                                ; preds = %1
  call void @ssl_conn_teardown(), !dbg !4905
  %9 = load i32, i32* %4, align 4, !dbg !4906
  store i32 %9, i32* %2, align 4, !dbg !4907
  br label %10, !dbg !4907

10:                                               ; preds = %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !4908
  ret i32 %11, !dbg !4908
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sgx_ssl_conn_handle(i8* %0) #0 !dbg !4909 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.ms_ssl_conn_handle_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.thread_info_t*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.thread_info_t*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4910, metadata !DIExpression()), !dbg !4911
  br label %9, !dbg !4912

9:                                                ; preds = %1
  %10 = load i8*, i8** %3, align 8, !dbg !4913
  %11 = icmp ne i8* %10, null, !dbg !4913
  br i1 %11, label %12, label %16, !dbg !4913

12:                                               ; preds = %9
  %13 = load i8*, i8** %3, align 8, !dbg !4913
  %14 = call i32 @sgx_is_outside_enclave(i8* %13, i64 16), !dbg !4913
  %15 = icmp ne i32 %14, 0, !dbg !4913
  br i1 %15, label %17, label %16, !dbg !4916

16:                                               ; preds = %12, %9
  store i32 2, i32* %2, align 4, !dbg !4913
  br label %86, !dbg !4913

17:                                               ; preds = %12
  br label %18, !dbg !4916

18:                                               ; preds = %17
  call void @llvm.x86.sse2.lfence(), !dbg !4917
  call void @llvm.dbg.declare(metadata %struct.ms_ssl_conn_handle_t** %4, metadata !4918, metadata !DIExpression()), !dbg !4919
  %19 = load i8*, i8** %3, align 8, !dbg !4920
  %20 = bitcast i8* %19 to %struct.ms_ssl_conn_handle_t*, !dbg !4920
  store %struct.ms_ssl_conn_handle_t* %20, %struct.ms_ssl_conn_handle_t** %4, align 8, !dbg !4919
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4921, metadata !DIExpression()), !dbg !4922
  store i32 0, i32* %5, align 4, !dbg !4922
  call void @llvm.dbg.declare(metadata %struct.thread_info_t** %6, metadata !4923, metadata !DIExpression()), !dbg !4924
  %21 = load %struct.ms_ssl_conn_handle_t*, %struct.ms_ssl_conn_handle_t** %4, align 8, !dbg !4925
  %22 = getelementptr inbounds %struct.ms_ssl_conn_handle_t, %struct.ms_ssl_conn_handle_t* %21, i32 0, i32 1, !dbg !4926
  %23 = load %struct.thread_info_t*, %struct.thread_info_t** %22, align 8, !dbg !4926
  store %struct.thread_info_t* %23, %struct.thread_info_t** %6, align 8, !dbg !4924
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4927, metadata !DIExpression()), !dbg !4928
  store i64 16, i64* %7, align 8, !dbg !4928
  call void @llvm.dbg.declare(metadata %struct.thread_info_t** %8, metadata !4929, metadata !DIExpression()), !dbg !4930
  store %struct.thread_info_t* null, %struct.thread_info_t** %8, align 8, !dbg !4930
  br label %24, !dbg !4931

24:                                               ; preds = %18
  %25 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !4932
  %26 = icmp ne %struct.thread_info_t* %25, null, !dbg !4932
  br i1 %26, label %27, label %34, !dbg !4932

27:                                               ; preds = %24
  %28 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !4932
  %29 = bitcast %struct.thread_info_t* %28 to i8*, !dbg !4932
  %30 = load i64, i64* %7, align 8, !dbg !4932
  %31 = call i32 @sgx_is_outside_enclave(i8* %29, i64 %30), !dbg !4932
  %32 = icmp ne i32 %31, 0, !dbg !4932
  br i1 %32, label %34, label %33, !dbg !4935

33:                                               ; preds = %27
  store i32 2, i32* %2, align 4, !dbg !4932
  br label %86, !dbg !4932

34:                                               ; preds = %27, %24
  br label %35, !dbg !4935

35:                                               ; preds = %34
  call void @llvm.x86.sse2.lfence(), !dbg !4936
  %36 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !4937
  %37 = icmp ne %struct.thread_info_t* %36, null, !dbg !4939
  br i1 %37, label %38, label %59, !dbg !4940

38:                                               ; preds = %35
  %39 = load i64, i64* %7, align 8, !dbg !4941
  %40 = icmp ne i64 %39, 0, !dbg !4942
  br i1 %40, label %41, label %59, !dbg !4943

41:                                               ; preds = %38
  %42 = load i64, i64* %7, align 8, !dbg !4944
  %43 = call align 16 i8* @malloc(i64 %42), !dbg !4946
  %44 = bitcast i8* %43 to %struct.thread_info_t*, !dbg !4947
  store %struct.thread_info_t* %44, %struct.thread_info_t** %8, align 8, !dbg !4948
  %45 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4949
  %46 = icmp eq %struct.thread_info_t* %45, null, !dbg !4951
  br i1 %46, label %47, label %48, !dbg !4952

47:                                               ; preds = %41
  store i32 3, i32* %5, align 4, !dbg !4953
  br label %78, !dbg !4955

48:                                               ; preds = %41
  %49 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4956
  %50 = bitcast %struct.thread_info_t* %49 to i8*, !dbg !4956
  %51 = load i64, i64* %7, align 8, !dbg !4958
  %52 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !4959
  %53 = bitcast %struct.thread_info_t* %52 to i8*, !dbg !4959
  %54 = load i64, i64* %7, align 8, !dbg !4960
  %55 = call i32 @memcpy_s(i8* %50, i64 %51, i8* %53, i64 %54), !dbg !4961
  %56 = icmp ne i32 %55, 0, !dbg !4961
  br i1 %56, label %57, label %58, !dbg !4962

57:                                               ; preds = %48
  store i32 1, i32* %5, align 4, !dbg !4963
  br label %78, !dbg !4965

58:                                               ; preds = %48
  br label %59, !dbg !4966

59:                                               ; preds = %58, %38, %35
  %60 = load %struct.ms_ssl_conn_handle_t*, %struct.ms_ssl_conn_handle_t** %4, align 8, !dbg !4967
  %61 = getelementptr inbounds %struct.ms_ssl_conn_handle_t, %struct.ms_ssl_conn_handle_t* %60, i32 0, i32 0, !dbg !4968
  %62 = load i64, i64* %61, align 8, !dbg !4968
  %63 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4969
  call void @ssl_conn_handle(i64 %62, %struct.thread_info_t* %63), !dbg !4970
  %64 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4971
  %65 = icmp ne %struct.thread_info_t* %64, null, !dbg !4971
  br i1 %65, label %66, label %77, !dbg !4973

66:                                               ; preds = %59
  %67 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !4974
  %68 = bitcast %struct.thread_info_t* %67 to i8*, !dbg !4974
  %69 = load i64, i64* %7, align 8, !dbg !4977
  %70 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4978
  %71 = bitcast %struct.thread_info_t* %70 to i8*, !dbg !4978
  %72 = load i64, i64* %7, align 8, !dbg !4979
  %73 = call i32 @memcpy_s(i8* %68, i64 %69, i8* %71, i64 %72), !dbg !4980
  %74 = icmp ne i32 %73, 0, !dbg !4980
  br i1 %74, label %75, label %76, !dbg !4981

75:                                               ; preds = %66
  store i32 1, i32* %5, align 4, !dbg !4982
  br label %78, !dbg !4984

76:                                               ; preds = %66
  br label %77, !dbg !4985

77:                                               ; preds = %76, %59
  br label %78, !dbg !4971

78:                                               ; preds = %77, %75, %57, %47
  call void @llvm.dbg.label(metadata !4986), !dbg !4987
  %79 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4988
  %80 = icmp ne %struct.thread_info_t* %79, null, !dbg !4988
  br i1 %80, label %81, label %84, !dbg !4990

81:                                               ; preds = %78
  %82 = load %struct.thread_info_t*, %struct.thread_info_t** %8, align 8, !dbg !4991
  %83 = bitcast %struct.thread_info_t* %82 to i8*, !dbg !4991
  call void @free(i8* %83), !dbg !4992
  br label %84, !dbg !4992

84:                                               ; preds = %81, %78
  %85 = load i32, i32* %5, align 4, !dbg !4993
  store i32 %85, i32* %2, align 4, !dbg !4994
  br label %86, !dbg !4994

86:                                               ; preds = %84, %33, %16
  %87 = load i32, i32* %2, align 4, !dbg !4995
  ret i32 %87, !dbg !4995
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sgx_dummy(i8* %0) #0 !dbg !4996 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4997, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i32 0, i32* %4, align 4, !dbg !5000
  %5 = load i8*, i8** %3, align 8, !dbg !5001
  %6 = icmp ne i8* %5, null, !dbg !5003
  br i1 %6, label %7, label %8, !dbg !5004

7:                                                ; preds = %1
  store i32 2, i32* %2, align 4, !dbg !5005
  br label %10, !dbg !5005

8:                                                ; preds = %1
  call void @dummy(), !dbg !5006
  %9 = load i32, i32* %4, align 4, !dbg !5007
  store i32 %9, i32* %2, align 4, !dbg !5008
  br label %10, !dbg !5008

10:                                               ; preds = %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !5009
  ret i32 %11, !dbg !5009
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @sgx_is_outside_enclave(i8*, i64) #2

; Function Attrs: nounwind
declare void @llvm.x86.sse2.lfence() #3

declare align 16 i8* @malloc(i64) #2

declare i32 @memcpy_s(i8*, i64, i8*, i64) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare void @free(i8*) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_connect(i32* %0, %struct.mbedtls_net_context* %1, i8* %2, i8* %3, i32 %4) #0 !dbg !5010 {
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca %struct.mbedtls_net_context*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.ms_ocall_mbedtls_net_connect_t*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  store i32* %0, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !5013, metadata !DIExpression()), !dbg !5014
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %8, metadata !5015, metadata !DIExpression()), !dbg !5016
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5017, metadata !DIExpression()), !dbg !5018
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5019, metadata !DIExpression()), !dbg !5020
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5021, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5023, metadata !DIExpression()), !dbg !5024
  store i32 0, i32* %12, align 4, !dbg !5024
  call void @llvm.dbg.declare(metadata i64* %13, metadata !5025, metadata !DIExpression()), !dbg !5026
  store i64 4, i64* %13, align 8, !dbg !5026
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5027, metadata !DIExpression()), !dbg !5028
  %20 = load i8*, i8** %9, align 8, !dbg !5029
  %21 = icmp ne i8* %20, null, !dbg !5029
  br i1 %21, label %22, label %26, !dbg !5029

22:                                               ; preds = %5
  %23 = load i8*, i8** %9, align 8, !dbg !5030
  %24 = call i64 @strlen(i8* %23), !dbg !5031
  %25 = add i64 %24, 1, !dbg !5032
  br label %27, !dbg !5029

26:                                               ; preds = %5
  br label %27, !dbg !5029

27:                                               ; preds = %26, %22
  %28 = phi i64 [ %25, %22 ], [ 0, %26 ], !dbg !5029
  store i64 %28, i64* %14, align 8, !dbg !5028
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5033, metadata !DIExpression()), !dbg !5034
  %29 = load i8*, i8** %10, align 8, !dbg !5035
  %30 = icmp ne i8* %29, null, !dbg !5035
  br i1 %30, label %31, label %35, !dbg !5035

31:                                               ; preds = %27
  %32 = load i8*, i8** %10, align 8, !dbg !5036
  %33 = call i64 @strlen(i8* %32), !dbg !5037
  %34 = add i64 %33, 1, !dbg !5038
  br label %36, !dbg !5035

35:                                               ; preds = %27
  br label %36, !dbg !5035

36:                                               ; preds = %35, %31
  %37 = phi i64 [ %34, %31 ], [ 0, %35 ], !dbg !5035
  store i64 %37, i64* %15, align 8, !dbg !5034
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_connect_t** %16, metadata !5039, metadata !DIExpression()), !dbg !5040
  store %struct.ms_ocall_mbedtls_net_connect_t* null, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5040
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5041, metadata !DIExpression()), !dbg !5042
  store i64 40, i64* %17, align 8, !dbg !5042
  call void @llvm.dbg.declare(metadata i8** %18, metadata !5043, metadata !DIExpression()), !dbg !5044
  store i8* null, i8** %18, align 8, !dbg !5044
  call void @llvm.dbg.declare(metadata i8** %19, metadata !5045, metadata !DIExpression()), !dbg !5046
  store i8* null, i8** %19, align 8, !dbg !5046
  br label %38, !dbg !5047

38:                                               ; preds = %36
  %39 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5048
  %40 = icmp ne %struct.mbedtls_net_context* %39, null, !dbg !5048
  br i1 %40, label %41, label %48, !dbg !5048

41:                                               ; preds = %38
  %42 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5048
  %43 = bitcast %struct.mbedtls_net_context* %42 to i8*, !dbg !5048
  %44 = load i64, i64* %13, align 8, !dbg !5048
  %45 = call i32 @sgx_is_within_enclave(i8* %43, i64 %44), !dbg !5048
  %46 = icmp ne i32 %45, 0, !dbg !5048
  br i1 %46, label %48, label %47, !dbg !5051

47:                                               ; preds = %41
  store i32 2, i32* %6, align 4, !dbg !5048
  br label %266, !dbg !5048

48:                                               ; preds = %41, %38
  br label %49, !dbg !5051

49:                                               ; preds = %48
  br label %50, !dbg !5052

50:                                               ; preds = %49
  %51 = load i8*, i8** %9, align 8, !dbg !5053
  %52 = icmp ne i8* %51, null, !dbg !5053
  br i1 %52, label %53, label %59, !dbg !5053

53:                                               ; preds = %50
  %54 = load i8*, i8** %9, align 8, !dbg !5053
  %55 = load i64, i64* %14, align 8, !dbg !5053
  %56 = call i32 @sgx_is_within_enclave(i8* %54, i64 %55), !dbg !5053
  %57 = icmp ne i32 %56, 0, !dbg !5053
  br i1 %57, label %59, label %58, !dbg !5056

58:                                               ; preds = %53
  store i32 2, i32* %6, align 4, !dbg !5053
  br label %266, !dbg !5053

59:                                               ; preds = %53, %50
  br label %60, !dbg !5056

60:                                               ; preds = %59
  br label %61, !dbg !5057

61:                                               ; preds = %60
  %62 = load i8*, i8** %10, align 8, !dbg !5058
  %63 = icmp ne i8* %62, null, !dbg !5058
  br i1 %63, label %64, label %70, !dbg !5058

64:                                               ; preds = %61
  %65 = load i8*, i8** %10, align 8, !dbg !5058
  %66 = load i64, i64* %15, align 8, !dbg !5058
  %67 = call i32 @sgx_is_within_enclave(i8* %65, i64 %66), !dbg !5058
  %68 = icmp ne i32 %67, 0, !dbg !5058
  br i1 %68, label %70, label %69, !dbg !5061

69:                                               ; preds = %64
  store i32 2, i32* %6, align 4, !dbg !5058
  br label %266, !dbg !5058

70:                                               ; preds = %64, %61
  br label %71, !dbg !5061

71:                                               ; preds = %70
  %72 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5062
  %73 = icmp ne %struct.mbedtls_net_context* %72, null, !dbg !5062
  br i1 %73, label %74, label %76, !dbg !5062

74:                                               ; preds = %71
  %75 = load i64, i64* %13, align 8, !dbg !5062
  br label %77, !dbg !5062

76:                                               ; preds = %71
  br label %77, !dbg !5062

77:                                               ; preds = %76, %74
  %78 = phi i64 [ %75, %74 ], [ 0, %76 ], !dbg !5062
  %79 = load i64, i64* %17, align 8, !dbg !5062
  %80 = add i64 %79, %78, !dbg !5062
  store i64 %80, i64* %17, align 8, !dbg !5062
  %81 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5062
  %82 = icmp ne %struct.mbedtls_net_context* %81, null, !dbg !5062
  br i1 %82, label %83, label %85, !dbg !5062

83:                                               ; preds = %77
  %84 = load i64, i64* %13, align 8, !dbg !5062
  br label %86, !dbg !5062

85:                                               ; preds = %77
  br label %86, !dbg !5062

86:                                               ; preds = %85, %83
  %87 = phi i64 [ %84, %83 ], [ 0, %85 ], !dbg !5062
  %88 = icmp ult i64 %80, %87, !dbg !5062
  br i1 %88, label %89, label %90, !dbg !5064

89:                                               ; preds = %86
  store i32 2, i32* %6, align 4, !dbg !5065
  br label %266, !dbg !5065

90:                                               ; preds = %86
  %91 = load i8*, i8** %9, align 8, !dbg !5066
  %92 = icmp ne i8* %91, null, !dbg !5066
  br i1 %92, label %93, label %95, !dbg !5066

93:                                               ; preds = %90
  %94 = load i64, i64* %14, align 8, !dbg !5066
  br label %96, !dbg !5066

95:                                               ; preds = %90
  br label %96, !dbg !5066

96:                                               ; preds = %95, %93
  %97 = phi i64 [ %94, %93 ], [ 0, %95 ], !dbg !5066
  %98 = load i64, i64* %17, align 8, !dbg !5066
  %99 = add i64 %98, %97, !dbg !5066
  store i64 %99, i64* %17, align 8, !dbg !5066
  %100 = load i8*, i8** %9, align 8, !dbg !5066
  %101 = icmp ne i8* %100, null, !dbg !5066
  br i1 %101, label %102, label %104, !dbg !5066

102:                                              ; preds = %96
  %103 = load i64, i64* %14, align 8, !dbg !5066
  br label %105, !dbg !5066

104:                                              ; preds = %96
  br label %105, !dbg !5066

105:                                              ; preds = %104, %102
  %106 = phi i64 [ %103, %102 ], [ 0, %104 ], !dbg !5066
  %107 = icmp ult i64 %99, %106, !dbg !5066
  br i1 %107, label %108, label %109, !dbg !5068

108:                                              ; preds = %105
  store i32 2, i32* %6, align 4, !dbg !5069
  br label %266, !dbg !5069

109:                                              ; preds = %105
  %110 = load i8*, i8** %10, align 8, !dbg !5070
  %111 = icmp ne i8* %110, null, !dbg !5070
  br i1 %111, label %112, label %114, !dbg !5070

112:                                              ; preds = %109
  %113 = load i64, i64* %15, align 8, !dbg !5070
  br label %115, !dbg !5070

114:                                              ; preds = %109
  br label %115, !dbg !5070

115:                                              ; preds = %114, %112
  %116 = phi i64 [ %113, %112 ], [ 0, %114 ], !dbg !5070
  %117 = load i64, i64* %17, align 8, !dbg !5070
  %118 = add i64 %117, %116, !dbg !5070
  store i64 %118, i64* %17, align 8, !dbg !5070
  %119 = load i8*, i8** %10, align 8, !dbg !5070
  %120 = icmp ne i8* %119, null, !dbg !5070
  br i1 %120, label %121, label %123, !dbg !5070

121:                                              ; preds = %115
  %122 = load i64, i64* %15, align 8, !dbg !5070
  br label %124, !dbg !5070

123:                                              ; preds = %115
  br label %124, !dbg !5070

124:                                              ; preds = %123, %121
  %125 = phi i64 [ %122, %121 ], [ 0, %123 ], !dbg !5070
  %126 = icmp ult i64 %118, %125, !dbg !5070
  br i1 %126, label %127, label %128, !dbg !5072

127:                                              ; preds = %124
  store i32 2, i32* %6, align 4, !dbg !5073
  br label %266, !dbg !5073

128:                                              ; preds = %124
  %129 = load i64, i64* %17, align 8, !dbg !5074
  %130 = call i8* @sgx_ocalloc(i64 %129), !dbg !5075
  store i8* %130, i8** %18, align 8, !dbg !5076
  %131 = load i8*, i8** %18, align 8, !dbg !5077
  %132 = icmp eq i8* %131, null, !dbg !5079
  br i1 %132, label %133, label %134, !dbg !5080

133:                                              ; preds = %128
  call void @sgx_ocfree(), !dbg !5081
  store i32 1, i32* %6, align 4, !dbg !5083
  br label %266, !dbg !5083

134:                                              ; preds = %128
  %135 = load i8*, i8** %18, align 8, !dbg !5084
  %136 = bitcast i8* %135 to %struct.ms_ocall_mbedtls_net_connect_t*, !dbg !5085
  store %struct.ms_ocall_mbedtls_net_connect_t* %136, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5086
  %137 = load i8*, i8** %18, align 8, !dbg !5087
  %138 = ptrtoint i8* %137 to i64, !dbg !5088
  %139 = add i64 %138, 40, !dbg !5089
  %140 = inttoptr i64 %139 to i8*, !dbg !5090
  store i8* %140, i8** %18, align 8, !dbg !5091
  %141 = load i64, i64* %17, align 8, !dbg !5092
  %142 = sub i64 %141, 40, !dbg !5092
  store i64 %142, i64* %17, align 8, !dbg !5092
  %143 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5093
  %144 = icmp ne %struct.mbedtls_net_context* %143, null, !dbg !5095
  br i1 %144, label %145, label %168, !dbg !5096

145:                                              ; preds = %134
  %146 = load i8*, i8** %18, align 8, !dbg !5097
  %147 = bitcast i8* %146 to %struct.mbedtls_net_context*, !dbg !5099
  %148 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5100
  %149 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %148, i32 0, i32 1, !dbg !5101
  store %struct.mbedtls_net_context* %147, %struct.mbedtls_net_context** %149, align 8, !dbg !5102
  %150 = load i8*, i8** %18, align 8, !dbg !5103
  store i8* %150, i8** %19, align 8, !dbg !5104
  %151 = load i8*, i8** %18, align 8, !dbg !5105
  %152 = load i64, i64* %17, align 8, !dbg !5107
  %153 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5108
  %154 = bitcast %struct.mbedtls_net_context* %153 to i8*, !dbg !5108
  %155 = load i64, i64* %13, align 8, !dbg !5109
  %156 = call i32 @memcpy_s(i8* %151, i64 %152, i8* %154, i64 %155), !dbg !5110
  %157 = icmp ne i32 %156, 0, !dbg !5110
  br i1 %157, label %158, label %159, !dbg !5111

158:                                              ; preds = %145
  call void @sgx_ocfree(), !dbg !5112
  store i32 1, i32* %6, align 4, !dbg !5114
  br label %266, !dbg !5114

159:                                              ; preds = %145
  %160 = load i8*, i8** %18, align 8, !dbg !5115
  %161 = ptrtoint i8* %160 to i64, !dbg !5116
  %162 = load i64, i64* %13, align 8, !dbg !5117
  %163 = add i64 %161, %162, !dbg !5118
  %164 = inttoptr i64 %163 to i8*, !dbg !5119
  store i8* %164, i8** %18, align 8, !dbg !5120
  %165 = load i64, i64* %13, align 8, !dbg !5121
  %166 = load i64, i64* %17, align 8, !dbg !5122
  %167 = sub i64 %166, %165, !dbg !5122
  store i64 %167, i64* %17, align 8, !dbg !5122
  br label %171, !dbg !5123

168:                                              ; preds = %134
  %169 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5124
  %170 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %169, i32 0, i32 1, !dbg !5126
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %170, align 8, !dbg !5127
  br label %171

171:                                              ; preds = %168, %159
  %172 = load i8*, i8** %9, align 8, !dbg !5128
  %173 = icmp ne i8* %172, null, !dbg !5130
  br i1 %173, label %174, label %199, !dbg !5131

174:                                              ; preds = %171
  %175 = load i8*, i8** %18, align 8, !dbg !5132
  %176 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5134
  %177 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %176, i32 0, i32 2, !dbg !5135
  store i8* %175, i8** %177, align 8, !dbg !5136
  %178 = load i64, i64* %14, align 8, !dbg !5137
  %179 = urem i64 %178, 1, !dbg !5139
  %180 = icmp ne i64 %179, 0, !dbg !5140
  br i1 %180, label %181, label %182, !dbg !5141

181:                                              ; preds = %174
  call void @sgx_ocfree(), !dbg !5142
  store i32 2, i32* %6, align 4, !dbg !5144
  br label %266, !dbg !5144

182:                                              ; preds = %174
  %183 = load i8*, i8** %18, align 8, !dbg !5145
  %184 = load i64, i64* %17, align 8, !dbg !5147
  %185 = load i8*, i8** %9, align 8, !dbg !5148
  %186 = load i64, i64* %14, align 8, !dbg !5149
  %187 = call i32 @memcpy_s(i8* %183, i64 %184, i8* %185, i64 %186), !dbg !5150
  %188 = icmp ne i32 %187, 0, !dbg !5150
  br i1 %188, label %189, label %190, !dbg !5151

189:                                              ; preds = %182
  call void @sgx_ocfree(), !dbg !5152
  store i32 1, i32* %6, align 4, !dbg !5154
  br label %266, !dbg !5154

190:                                              ; preds = %182
  %191 = load i8*, i8** %18, align 8, !dbg !5155
  %192 = ptrtoint i8* %191 to i64, !dbg !5156
  %193 = load i64, i64* %14, align 8, !dbg !5157
  %194 = add i64 %192, %193, !dbg !5158
  %195 = inttoptr i64 %194 to i8*, !dbg !5159
  store i8* %195, i8** %18, align 8, !dbg !5160
  %196 = load i64, i64* %14, align 8, !dbg !5161
  %197 = load i64, i64* %17, align 8, !dbg !5162
  %198 = sub i64 %197, %196, !dbg !5162
  store i64 %198, i64* %17, align 8, !dbg !5162
  br label %202, !dbg !5163

199:                                              ; preds = %171
  %200 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5164
  %201 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %200, i32 0, i32 2, !dbg !5166
  store i8* null, i8** %201, align 8, !dbg !5167
  br label %202

202:                                              ; preds = %199, %190
  %203 = load i8*, i8** %10, align 8, !dbg !5168
  %204 = icmp ne i8* %203, null, !dbg !5170
  br i1 %204, label %205, label %230, !dbg !5171

205:                                              ; preds = %202
  %206 = load i8*, i8** %18, align 8, !dbg !5172
  %207 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5174
  %208 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %207, i32 0, i32 3, !dbg !5175
  store i8* %206, i8** %208, align 8, !dbg !5176
  %209 = load i64, i64* %15, align 8, !dbg !5177
  %210 = urem i64 %209, 1, !dbg !5179
  %211 = icmp ne i64 %210, 0, !dbg !5180
  br i1 %211, label %212, label %213, !dbg !5181

212:                                              ; preds = %205
  call void @sgx_ocfree(), !dbg !5182
  store i32 2, i32* %6, align 4, !dbg !5184
  br label %266, !dbg !5184

213:                                              ; preds = %205
  %214 = load i8*, i8** %18, align 8, !dbg !5185
  %215 = load i64, i64* %17, align 8, !dbg !5187
  %216 = load i8*, i8** %10, align 8, !dbg !5188
  %217 = load i64, i64* %15, align 8, !dbg !5189
  %218 = call i32 @memcpy_s(i8* %214, i64 %215, i8* %216, i64 %217), !dbg !5190
  %219 = icmp ne i32 %218, 0, !dbg !5190
  br i1 %219, label %220, label %221, !dbg !5191

220:                                              ; preds = %213
  call void @sgx_ocfree(), !dbg !5192
  store i32 1, i32* %6, align 4, !dbg !5194
  br label %266, !dbg !5194

221:                                              ; preds = %213
  %222 = load i8*, i8** %18, align 8, !dbg !5195
  %223 = ptrtoint i8* %222 to i64, !dbg !5196
  %224 = load i64, i64* %15, align 8, !dbg !5197
  %225 = add i64 %223, %224, !dbg !5198
  %226 = inttoptr i64 %225 to i8*, !dbg !5199
  store i8* %226, i8** %18, align 8, !dbg !5200
  %227 = load i64, i64* %15, align 8, !dbg !5201
  %228 = load i64, i64* %17, align 8, !dbg !5202
  %229 = sub i64 %228, %227, !dbg !5202
  store i64 %229, i64* %17, align 8, !dbg !5202
  br label %233, !dbg !5203

230:                                              ; preds = %202
  %231 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5204
  %232 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %231, i32 0, i32 3, !dbg !5206
  store i8* null, i8** %232, align 8, !dbg !5207
  br label %233

233:                                              ; preds = %230, %221
  %234 = load i32, i32* %11, align 4, !dbg !5208
  %235 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5209
  %236 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %235, i32 0, i32 4, !dbg !5210
  store i32 %234, i32* %236, align 8, !dbg !5211
  %237 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5212
  %238 = bitcast %struct.ms_ocall_mbedtls_net_connect_t* %237 to i8*, !dbg !5212
  %239 = call i32 @sgx_ocall(i32 0, i8* %238), !dbg !5213
  store i32 %239, i32* %12, align 4, !dbg !5214
  %240 = load i32, i32* %12, align 4, !dbg !5215
  %241 = icmp eq i32 %240, 0, !dbg !5217
  br i1 %241, label %242, label %264, !dbg !5218

242:                                              ; preds = %233
  %243 = load i32*, i32** %7, align 8, !dbg !5219
  %244 = icmp ne i32* %243, null, !dbg !5219
  br i1 %244, label %245, label %250, !dbg !5222

245:                                              ; preds = %242
  %246 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5223
  %247 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %246, i32 0, i32 0, !dbg !5224
  %248 = load i32, i32* %247, align 8, !dbg !5224
  %249 = load i32*, i32** %7, align 8, !dbg !5225
  store i32 %248, i32* %249, align 4, !dbg !5226
  br label %250, !dbg !5227

250:                                              ; preds = %245, %242
  %251 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5228
  %252 = icmp ne %struct.mbedtls_net_context* %251, null, !dbg !5228
  br i1 %252, label %253, label %263, !dbg !5230

253:                                              ; preds = %250
  %254 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5231
  %255 = bitcast %struct.mbedtls_net_context* %254 to i8*, !dbg !5234
  %256 = load i64, i64* %13, align 8, !dbg !5235
  %257 = load i8*, i8** %19, align 8, !dbg !5236
  %258 = load i64, i64* %13, align 8, !dbg !5237
  %259 = call i32 @memcpy_s(i8* %255, i64 %256, i8* %257, i64 %258), !dbg !5238
  %260 = icmp ne i32 %259, 0, !dbg !5238
  br i1 %260, label %261, label %262, !dbg !5239

261:                                              ; preds = %253
  call void @sgx_ocfree(), !dbg !5240
  store i32 1, i32* %6, align 4, !dbg !5242
  br label %266, !dbg !5242

262:                                              ; preds = %253
  br label %263, !dbg !5243

263:                                              ; preds = %262, %250
  br label %264, !dbg !5244

264:                                              ; preds = %263, %233
  call void @sgx_ocfree(), !dbg !5245
  %265 = load i32, i32* %12, align 4, !dbg !5246
  store i32 %265, i32* %6, align 4, !dbg !5247
  br label %266, !dbg !5247

266:                                              ; preds = %264, %261, %220, %212, %189, %181, %158, %133, %127, %108, %89, %69, %58, %47
  %267 = load i32, i32* %6, align 4, !dbg !5248
  ret i32 %267, !dbg !5248
}

declare i64 @strlen(i8*) #2

declare i32 @sgx_is_within_enclave(i8*, i64) #2

declare i8* @sgx_ocalloc(i64) #2

declare void @sgx_ocfree() #2

declare i32 @sgx_ocall(i32, i8*) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_bind(i32* %0, %struct.mbedtls_net_context* %1, i8* %2, i8* %3, i32 %4) #0 !dbg !5249 {
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca %struct.mbedtls_net_context*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.ms_ocall_mbedtls_net_connect_t*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  store i32* %0, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !5250, metadata !DIExpression()), !dbg !5251
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %8, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5254, metadata !DIExpression()), !dbg !5255
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5256, metadata !DIExpression()), !dbg !5257
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5260, metadata !DIExpression()), !dbg !5261
  store i32 0, i32* %12, align 4, !dbg !5261
  call void @llvm.dbg.declare(metadata i64* %13, metadata !5262, metadata !DIExpression()), !dbg !5263
  store i64 4, i64* %13, align 8, !dbg !5263
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5264, metadata !DIExpression()), !dbg !5265
  %20 = load i8*, i8** %9, align 8, !dbg !5266
  %21 = icmp ne i8* %20, null, !dbg !5266
  br i1 %21, label %22, label %26, !dbg !5266

22:                                               ; preds = %5
  %23 = load i8*, i8** %9, align 8, !dbg !5267
  %24 = call i64 @strlen(i8* %23), !dbg !5268
  %25 = add i64 %24, 1, !dbg !5269
  br label %27, !dbg !5266

26:                                               ; preds = %5
  br label %27, !dbg !5266

27:                                               ; preds = %26, %22
  %28 = phi i64 [ %25, %22 ], [ 0, %26 ], !dbg !5266
  store i64 %28, i64* %14, align 8, !dbg !5265
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5270, metadata !DIExpression()), !dbg !5271
  %29 = load i8*, i8** %10, align 8, !dbg !5272
  %30 = icmp ne i8* %29, null, !dbg !5272
  br i1 %30, label %31, label %35, !dbg !5272

31:                                               ; preds = %27
  %32 = load i8*, i8** %10, align 8, !dbg !5273
  %33 = call i64 @strlen(i8* %32), !dbg !5274
  %34 = add i64 %33, 1, !dbg !5275
  br label %36, !dbg !5272

35:                                               ; preds = %27
  br label %36, !dbg !5272

36:                                               ; preds = %35, %31
  %37 = phi i64 [ %34, %31 ], [ 0, %35 ], !dbg !5272
  store i64 %37, i64* %15, align 8, !dbg !5271
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_connect_t** %16, metadata !5276, metadata !DIExpression()), !dbg !5277
  store %struct.ms_ocall_mbedtls_net_connect_t* null, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5277
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5278, metadata !DIExpression()), !dbg !5279
  store i64 40, i64* %17, align 8, !dbg !5279
  call void @llvm.dbg.declare(metadata i8** %18, metadata !5280, metadata !DIExpression()), !dbg !5281
  store i8* null, i8** %18, align 8, !dbg !5281
  call void @llvm.dbg.declare(metadata i8** %19, metadata !5282, metadata !DIExpression()), !dbg !5283
  store i8* null, i8** %19, align 8, !dbg !5283
  br label %38, !dbg !5284

38:                                               ; preds = %36
  %39 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5285
  %40 = icmp ne %struct.mbedtls_net_context* %39, null, !dbg !5285
  br i1 %40, label %41, label %48, !dbg !5285

41:                                               ; preds = %38
  %42 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5285
  %43 = bitcast %struct.mbedtls_net_context* %42 to i8*, !dbg !5285
  %44 = load i64, i64* %13, align 8, !dbg !5285
  %45 = call i32 @sgx_is_within_enclave(i8* %43, i64 %44), !dbg !5285
  %46 = icmp ne i32 %45, 0, !dbg !5285
  br i1 %46, label %48, label %47, !dbg !5288

47:                                               ; preds = %41
  store i32 2, i32* %6, align 4, !dbg !5285
  br label %259, !dbg !5285

48:                                               ; preds = %41, %38
  br label %49, !dbg !5288

49:                                               ; preds = %48
  br label %50, !dbg !5289

50:                                               ; preds = %49
  %51 = load i8*, i8** %9, align 8, !dbg !5290
  %52 = icmp ne i8* %51, null, !dbg !5290
  br i1 %52, label %53, label %59, !dbg !5290

53:                                               ; preds = %50
  %54 = load i8*, i8** %9, align 8, !dbg !5290
  %55 = load i64, i64* %14, align 8, !dbg !5290
  %56 = call i32 @sgx_is_within_enclave(i8* %54, i64 %55), !dbg !5290
  %57 = icmp ne i32 %56, 0, !dbg !5290
  br i1 %57, label %59, label %58, !dbg !5293

58:                                               ; preds = %53
  store i32 2, i32* %6, align 4, !dbg !5290
  br label %259, !dbg !5290

59:                                               ; preds = %53, %50
  br label %60, !dbg !5293

60:                                               ; preds = %59
  br label %61, !dbg !5294

61:                                               ; preds = %60
  %62 = load i8*, i8** %10, align 8, !dbg !5295
  %63 = icmp ne i8* %62, null, !dbg !5295
  br i1 %63, label %64, label %70, !dbg !5295

64:                                               ; preds = %61
  %65 = load i8*, i8** %10, align 8, !dbg !5295
  %66 = load i64, i64* %15, align 8, !dbg !5295
  %67 = call i32 @sgx_is_within_enclave(i8* %65, i64 %66), !dbg !5295
  %68 = icmp ne i32 %67, 0, !dbg !5295
  br i1 %68, label %70, label %69, !dbg !5298

69:                                               ; preds = %64
  store i32 2, i32* %6, align 4, !dbg !5295
  br label %259, !dbg !5295

70:                                               ; preds = %64, %61
  br label %71, !dbg !5298

71:                                               ; preds = %70
  %72 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5299
  %73 = icmp ne %struct.mbedtls_net_context* %72, null, !dbg !5299
  br i1 %73, label %74, label %76, !dbg !5299

74:                                               ; preds = %71
  %75 = load i64, i64* %13, align 8, !dbg !5299
  br label %77, !dbg !5299

76:                                               ; preds = %71
  br label %77, !dbg !5299

77:                                               ; preds = %76, %74
  %78 = phi i64 [ %75, %74 ], [ 0, %76 ], !dbg !5299
  %79 = load i64, i64* %17, align 8, !dbg !5299
  %80 = add i64 %79, %78, !dbg !5299
  store i64 %80, i64* %17, align 8, !dbg !5299
  %81 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5299
  %82 = icmp ne %struct.mbedtls_net_context* %81, null, !dbg !5299
  br i1 %82, label %83, label %85, !dbg !5299

83:                                               ; preds = %77
  %84 = load i64, i64* %13, align 8, !dbg !5299
  br label %86, !dbg !5299

85:                                               ; preds = %77
  br label %86, !dbg !5299

86:                                               ; preds = %85, %83
  %87 = phi i64 [ %84, %83 ], [ 0, %85 ], !dbg !5299
  %88 = icmp ult i64 %80, %87, !dbg !5299
  br i1 %88, label %89, label %90, !dbg !5301

89:                                               ; preds = %86
  store i32 2, i32* %6, align 4, !dbg !5302
  br label %259, !dbg !5302

90:                                               ; preds = %86
  %91 = load i8*, i8** %9, align 8, !dbg !5303
  %92 = icmp ne i8* %91, null, !dbg !5303
  br i1 %92, label %93, label %95, !dbg !5303

93:                                               ; preds = %90
  %94 = load i64, i64* %14, align 8, !dbg !5303
  br label %96, !dbg !5303

95:                                               ; preds = %90
  br label %96, !dbg !5303

96:                                               ; preds = %95, %93
  %97 = phi i64 [ %94, %93 ], [ 0, %95 ], !dbg !5303
  %98 = load i64, i64* %17, align 8, !dbg !5303
  %99 = add i64 %98, %97, !dbg !5303
  store i64 %99, i64* %17, align 8, !dbg !5303
  %100 = load i8*, i8** %9, align 8, !dbg !5303
  %101 = icmp ne i8* %100, null, !dbg !5303
  br i1 %101, label %102, label %104, !dbg !5303

102:                                              ; preds = %96
  %103 = load i64, i64* %14, align 8, !dbg !5303
  br label %105, !dbg !5303

104:                                              ; preds = %96
  br label %105, !dbg !5303

105:                                              ; preds = %104, %102
  %106 = phi i64 [ %103, %102 ], [ 0, %104 ], !dbg !5303
  %107 = icmp ult i64 %99, %106, !dbg !5303
  br i1 %107, label %108, label %109, !dbg !5305

108:                                              ; preds = %105
  store i32 2, i32* %6, align 4, !dbg !5306
  br label %259, !dbg !5306

109:                                              ; preds = %105
  %110 = load i8*, i8** %10, align 8, !dbg !5307
  %111 = icmp ne i8* %110, null, !dbg !5307
  br i1 %111, label %112, label %114, !dbg !5307

112:                                              ; preds = %109
  %113 = load i64, i64* %15, align 8, !dbg !5307
  br label %115, !dbg !5307

114:                                              ; preds = %109
  br label %115, !dbg !5307

115:                                              ; preds = %114, %112
  %116 = phi i64 [ %113, %112 ], [ 0, %114 ], !dbg !5307
  %117 = load i64, i64* %17, align 8, !dbg !5307
  %118 = add i64 %117, %116, !dbg !5307
  store i64 %118, i64* %17, align 8, !dbg !5307
  %119 = load i8*, i8** %10, align 8, !dbg !5307
  %120 = icmp ne i8* %119, null, !dbg !5307
  br i1 %120, label %121, label %123, !dbg !5307

121:                                              ; preds = %115
  %122 = load i64, i64* %15, align 8, !dbg !5307
  br label %124, !dbg !5307

123:                                              ; preds = %115
  br label %124, !dbg !5307

124:                                              ; preds = %123, %121
  %125 = phi i64 [ %122, %121 ], [ 0, %123 ], !dbg !5307
  %126 = icmp ult i64 %118, %125, !dbg !5307
  br i1 %126, label %127, label %128, !dbg !5309

127:                                              ; preds = %124
  store i32 2, i32* %6, align 4, !dbg !5310
  br label %259, !dbg !5310

128:                                              ; preds = %124
  %129 = load i64, i64* %17, align 8, !dbg !5311
  %130 = call i8* @sgx_ocalloc(i64 %129), !dbg !5312
  store i8* %130, i8** %18, align 8, !dbg !5313
  %131 = load i8*, i8** %18, align 8, !dbg !5314
  %132 = icmp eq i8* %131, null, !dbg !5316
  br i1 %132, label %133, label %134, !dbg !5317

133:                                              ; preds = %128
  call void @sgx_ocfree(), !dbg !5318
  store i32 1, i32* %6, align 4, !dbg !5320
  br label %259, !dbg !5320

134:                                              ; preds = %128
  %135 = load i8*, i8** %18, align 8, !dbg !5321
  %136 = bitcast i8* %135 to %struct.ms_ocall_mbedtls_net_connect_t*, !dbg !5322
  store %struct.ms_ocall_mbedtls_net_connect_t* %136, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5323
  %137 = load i8*, i8** %18, align 8, !dbg !5324
  %138 = ptrtoint i8* %137 to i64, !dbg !5325
  %139 = add i64 %138, 40, !dbg !5326
  %140 = inttoptr i64 %139 to i8*, !dbg !5327
  store i8* %140, i8** %18, align 8, !dbg !5328
  %141 = load i64, i64* %17, align 8, !dbg !5329
  %142 = sub i64 %141, 40, !dbg !5329
  store i64 %142, i64* %17, align 8, !dbg !5329
  %143 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5330
  %144 = icmp ne %struct.mbedtls_net_context* %143, null, !dbg !5332
  br i1 %144, label %145, label %161, !dbg !5333

145:                                              ; preds = %134
  %146 = load i8*, i8** %18, align 8, !dbg !5334
  %147 = bitcast i8* %146 to %struct.mbedtls_net_context*, !dbg !5336
  %148 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5337
  %149 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %148, i32 0, i32 1, !dbg !5338
  store %struct.mbedtls_net_context* %147, %struct.mbedtls_net_context** %149, align 8, !dbg !5339
  %150 = load i8*, i8** %18, align 8, !dbg !5340
  store i8* %150, i8** %19, align 8, !dbg !5341
  %151 = load i8*, i8** %19, align 8, !dbg !5342
  %152 = load i64, i64* %13, align 8, !dbg !5343
  call void @llvm.memset.p0i8.i64(i8* align 1 %151, i8 0, i64 %152, i1 false), !dbg !5344
  %153 = load i8*, i8** %18, align 8, !dbg !5345
  %154 = ptrtoint i8* %153 to i64, !dbg !5346
  %155 = load i64, i64* %13, align 8, !dbg !5347
  %156 = add i64 %154, %155, !dbg !5348
  %157 = inttoptr i64 %156 to i8*, !dbg !5349
  store i8* %157, i8** %18, align 8, !dbg !5350
  %158 = load i64, i64* %13, align 8, !dbg !5351
  %159 = load i64, i64* %17, align 8, !dbg !5352
  %160 = sub i64 %159, %158, !dbg !5352
  store i64 %160, i64* %17, align 8, !dbg !5352
  br label %164, !dbg !5353

161:                                              ; preds = %134
  %162 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5354
  %163 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %162, i32 0, i32 1, !dbg !5356
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %163, align 8, !dbg !5357
  br label %164

164:                                              ; preds = %161, %145
  %165 = load i8*, i8** %9, align 8, !dbg !5358
  %166 = icmp ne i8* %165, null, !dbg !5360
  br i1 %166, label %167, label %192, !dbg !5361

167:                                              ; preds = %164
  %168 = load i8*, i8** %18, align 8, !dbg !5362
  %169 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5364
  %170 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %169, i32 0, i32 2, !dbg !5365
  store i8* %168, i8** %170, align 8, !dbg !5366
  %171 = load i64, i64* %14, align 8, !dbg !5367
  %172 = urem i64 %171, 1, !dbg !5369
  %173 = icmp ne i64 %172, 0, !dbg !5370
  br i1 %173, label %174, label %175, !dbg !5371

174:                                              ; preds = %167
  call void @sgx_ocfree(), !dbg !5372
  store i32 2, i32* %6, align 4, !dbg !5374
  br label %259, !dbg !5374

175:                                              ; preds = %167
  %176 = load i8*, i8** %18, align 8, !dbg !5375
  %177 = load i64, i64* %17, align 8, !dbg !5377
  %178 = load i8*, i8** %9, align 8, !dbg !5378
  %179 = load i64, i64* %14, align 8, !dbg !5379
  %180 = call i32 @memcpy_s(i8* %176, i64 %177, i8* %178, i64 %179), !dbg !5380
  %181 = icmp ne i32 %180, 0, !dbg !5380
  br i1 %181, label %182, label %183, !dbg !5381

182:                                              ; preds = %175
  call void @sgx_ocfree(), !dbg !5382
  store i32 1, i32* %6, align 4, !dbg !5384
  br label %259, !dbg !5384

183:                                              ; preds = %175
  %184 = load i8*, i8** %18, align 8, !dbg !5385
  %185 = ptrtoint i8* %184 to i64, !dbg !5386
  %186 = load i64, i64* %14, align 8, !dbg !5387
  %187 = add i64 %185, %186, !dbg !5388
  %188 = inttoptr i64 %187 to i8*, !dbg !5389
  store i8* %188, i8** %18, align 8, !dbg !5390
  %189 = load i64, i64* %14, align 8, !dbg !5391
  %190 = load i64, i64* %17, align 8, !dbg !5392
  %191 = sub i64 %190, %189, !dbg !5392
  store i64 %191, i64* %17, align 8, !dbg !5392
  br label %195, !dbg !5393

192:                                              ; preds = %164
  %193 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5394
  %194 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %193, i32 0, i32 2, !dbg !5396
  store i8* null, i8** %194, align 8, !dbg !5397
  br label %195

195:                                              ; preds = %192, %183
  %196 = load i8*, i8** %10, align 8, !dbg !5398
  %197 = icmp ne i8* %196, null, !dbg !5400
  br i1 %197, label %198, label %223, !dbg !5401

198:                                              ; preds = %195
  %199 = load i8*, i8** %18, align 8, !dbg !5402
  %200 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5404
  %201 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %200, i32 0, i32 3, !dbg !5405
  store i8* %199, i8** %201, align 8, !dbg !5406
  %202 = load i64, i64* %15, align 8, !dbg !5407
  %203 = urem i64 %202, 1, !dbg !5409
  %204 = icmp ne i64 %203, 0, !dbg !5410
  br i1 %204, label %205, label %206, !dbg !5411

205:                                              ; preds = %198
  call void @sgx_ocfree(), !dbg !5412
  store i32 2, i32* %6, align 4, !dbg !5414
  br label %259, !dbg !5414

206:                                              ; preds = %198
  %207 = load i8*, i8** %18, align 8, !dbg !5415
  %208 = load i64, i64* %17, align 8, !dbg !5417
  %209 = load i8*, i8** %10, align 8, !dbg !5418
  %210 = load i64, i64* %15, align 8, !dbg !5419
  %211 = call i32 @memcpy_s(i8* %207, i64 %208, i8* %209, i64 %210), !dbg !5420
  %212 = icmp ne i32 %211, 0, !dbg !5420
  br i1 %212, label %213, label %214, !dbg !5421

213:                                              ; preds = %206
  call void @sgx_ocfree(), !dbg !5422
  store i32 1, i32* %6, align 4, !dbg !5424
  br label %259, !dbg !5424

214:                                              ; preds = %206
  %215 = load i8*, i8** %18, align 8, !dbg !5425
  %216 = ptrtoint i8* %215 to i64, !dbg !5426
  %217 = load i64, i64* %15, align 8, !dbg !5427
  %218 = add i64 %216, %217, !dbg !5428
  %219 = inttoptr i64 %218 to i8*, !dbg !5429
  store i8* %219, i8** %18, align 8, !dbg !5430
  %220 = load i64, i64* %15, align 8, !dbg !5431
  %221 = load i64, i64* %17, align 8, !dbg !5432
  %222 = sub i64 %221, %220, !dbg !5432
  store i64 %222, i64* %17, align 8, !dbg !5432
  br label %226, !dbg !5433

223:                                              ; preds = %195
  %224 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5434
  %225 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %224, i32 0, i32 3, !dbg !5436
  store i8* null, i8** %225, align 8, !dbg !5437
  br label %226

226:                                              ; preds = %223, %214
  %227 = load i32, i32* %11, align 4, !dbg !5438
  %228 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5439
  %229 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %228, i32 0, i32 4, !dbg !5440
  store i32 %227, i32* %229, align 8, !dbg !5441
  %230 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5442
  %231 = bitcast %struct.ms_ocall_mbedtls_net_connect_t* %230 to i8*, !dbg !5442
  %232 = call i32 @sgx_ocall(i32 1, i8* %231), !dbg !5443
  store i32 %232, i32* %12, align 4, !dbg !5444
  %233 = load i32, i32* %12, align 4, !dbg !5445
  %234 = icmp eq i32 %233, 0, !dbg !5447
  br i1 %234, label %235, label %257, !dbg !5448

235:                                              ; preds = %226
  %236 = load i32*, i32** %7, align 8, !dbg !5449
  %237 = icmp ne i32* %236, null, !dbg !5449
  br i1 %237, label %238, label %243, !dbg !5452

238:                                              ; preds = %235
  %239 = load %struct.ms_ocall_mbedtls_net_connect_t*, %struct.ms_ocall_mbedtls_net_connect_t** %16, align 8, !dbg !5453
  %240 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_connect_t, %struct.ms_ocall_mbedtls_net_connect_t* %239, i32 0, i32 0, !dbg !5454
  %241 = load i32, i32* %240, align 8, !dbg !5454
  %242 = load i32*, i32** %7, align 8, !dbg !5455
  store i32 %241, i32* %242, align 4, !dbg !5456
  br label %243, !dbg !5457

243:                                              ; preds = %238, %235
  %244 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5458
  %245 = icmp ne %struct.mbedtls_net_context* %244, null, !dbg !5458
  br i1 %245, label %246, label %256, !dbg !5460

246:                                              ; preds = %243
  %247 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !5461
  %248 = bitcast %struct.mbedtls_net_context* %247 to i8*, !dbg !5464
  %249 = load i64, i64* %13, align 8, !dbg !5465
  %250 = load i8*, i8** %19, align 8, !dbg !5466
  %251 = load i64, i64* %13, align 8, !dbg !5467
  %252 = call i32 @memcpy_s(i8* %248, i64 %249, i8* %250, i64 %251), !dbg !5468
  %253 = icmp ne i32 %252, 0, !dbg !5468
  br i1 %253, label %254, label %255, !dbg !5469

254:                                              ; preds = %246
  call void @sgx_ocfree(), !dbg !5470
  store i32 1, i32* %6, align 4, !dbg !5472
  br label %259, !dbg !5472

255:                                              ; preds = %246
  br label %256, !dbg !5473

256:                                              ; preds = %255, %243
  br label %257, !dbg !5474

257:                                              ; preds = %256, %226
  call void @sgx_ocfree(), !dbg !5475
  %258 = load i32, i32* %12, align 4, !dbg !5476
  store i32 %258, i32* %6, align 4, !dbg !5477
  br label %259, !dbg !5477

259:                                              ; preds = %257, %254, %213, %205, %182, %174, %133, %127, %108, %89, %69, %58, %47
  %260 = load i32, i32* %6, align 4, !dbg !5478
  ret i32 %260, !dbg !5478
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_accept(i32* %0, %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context* %2, i8* %3, i64 %4, i64* %5) #0 !dbg !5479 {
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca %struct.mbedtls_net_context*, align 8
  %10 = alloca %struct.mbedtls_net_context*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca %struct.ms_ocall_mbedtls_net_accept_t*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  store i32* %0, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !5482, metadata !DIExpression()), !dbg !5483
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %9, metadata !5484, metadata !DIExpression()), !dbg !5485
  store %struct.mbedtls_net_context* %2, %struct.mbedtls_net_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %10, metadata !5486, metadata !DIExpression()), !dbg !5487
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5488, metadata !DIExpression()), !dbg !5489
  store i64 %4, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !5490, metadata !DIExpression()), !dbg !5491
  store i64* %5, i64** %13, align 8
  call void @llvm.dbg.declare(metadata i64** %13, metadata !5492, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5494, metadata !DIExpression()), !dbg !5495
  store i32 0, i32* %14, align 4, !dbg !5495
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5496, metadata !DIExpression()), !dbg !5497
  store i64 4, i64* %15, align 8, !dbg !5497
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5498, metadata !DIExpression()), !dbg !5499
  store i64 4, i64* %16, align 8, !dbg !5499
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5500, metadata !DIExpression()), !dbg !5501
  %25 = load i64, i64* %12, align 8, !dbg !5502
  store i64 %25, i64* %17, align 8, !dbg !5501
  call void @llvm.dbg.declare(metadata i64* %18, metadata !5503, metadata !DIExpression()), !dbg !5504
  store i64 8, i64* %18, align 8, !dbg !5504
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_accept_t** %19, metadata !5505, metadata !DIExpression()), !dbg !5506
  store %struct.ms_ocall_mbedtls_net_accept_t* null, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5506
  call void @llvm.dbg.declare(metadata i64* %20, metadata !5507, metadata !DIExpression()), !dbg !5508
  store i64 48, i64* %20, align 8, !dbg !5508
  call void @llvm.dbg.declare(metadata i8** %21, metadata !5509, metadata !DIExpression()), !dbg !5510
  store i8* null, i8** %21, align 8, !dbg !5510
  call void @llvm.dbg.declare(metadata i8** %22, metadata !5511, metadata !DIExpression()), !dbg !5512
  store i8* null, i8** %22, align 8, !dbg !5512
  call void @llvm.dbg.declare(metadata i8** %23, metadata !5513, metadata !DIExpression()), !dbg !5514
  store i8* null, i8** %23, align 8, !dbg !5514
  call void @llvm.dbg.declare(metadata i8** %24, metadata !5515, metadata !DIExpression()), !dbg !5516
  store i8* null, i8** %24, align 8, !dbg !5516
  br label %26, !dbg !5517

26:                                               ; preds = %6
  %27 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !5518
  %28 = icmp ne %struct.mbedtls_net_context* %27, null, !dbg !5518
  br i1 %28, label %29, label %36, !dbg !5518

29:                                               ; preds = %26
  %30 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !5518
  %31 = bitcast %struct.mbedtls_net_context* %30 to i8*, !dbg !5518
  %32 = load i64, i64* %15, align 8, !dbg !5518
  %33 = call i32 @sgx_is_within_enclave(i8* %31, i64 %32), !dbg !5518
  %34 = icmp ne i32 %33, 0, !dbg !5518
  br i1 %34, label %36, label %35, !dbg !5521

35:                                               ; preds = %29
  store i32 2, i32* %7, align 4, !dbg !5518
  br label %318, !dbg !5518

36:                                               ; preds = %29, %26
  br label %37, !dbg !5521

37:                                               ; preds = %36
  br label %38, !dbg !5522

38:                                               ; preds = %37
  %39 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5523
  %40 = icmp ne %struct.mbedtls_net_context* %39, null, !dbg !5523
  br i1 %40, label %41, label %48, !dbg !5523

41:                                               ; preds = %38
  %42 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5523
  %43 = bitcast %struct.mbedtls_net_context* %42 to i8*, !dbg !5523
  %44 = load i64, i64* %16, align 8, !dbg !5523
  %45 = call i32 @sgx_is_within_enclave(i8* %43, i64 %44), !dbg !5523
  %46 = icmp ne i32 %45, 0, !dbg !5523
  br i1 %46, label %48, label %47, !dbg !5526

47:                                               ; preds = %41
  store i32 2, i32* %7, align 4, !dbg !5523
  br label %318, !dbg !5523

48:                                               ; preds = %41, %38
  br label %49, !dbg !5526

49:                                               ; preds = %48
  br label %50, !dbg !5527

50:                                               ; preds = %49
  %51 = load i8*, i8** %11, align 8, !dbg !5528
  %52 = icmp ne i8* %51, null, !dbg !5528
  br i1 %52, label %53, label %59, !dbg !5528

53:                                               ; preds = %50
  %54 = load i8*, i8** %11, align 8, !dbg !5528
  %55 = load i64, i64* %17, align 8, !dbg !5528
  %56 = call i32 @sgx_is_within_enclave(i8* %54, i64 %55), !dbg !5528
  %57 = icmp ne i32 %56, 0, !dbg !5528
  br i1 %57, label %59, label %58, !dbg !5531

58:                                               ; preds = %53
  store i32 2, i32* %7, align 4, !dbg !5528
  br label %318, !dbg !5528

59:                                               ; preds = %53, %50
  br label %60, !dbg !5531

60:                                               ; preds = %59
  br label %61, !dbg !5532

61:                                               ; preds = %60
  %62 = load i64*, i64** %13, align 8, !dbg !5533
  %63 = icmp ne i64* %62, null, !dbg !5533
  br i1 %63, label %64, label %71, !dbg !5533

64:                                               ; preds = %61
  %65 = load i64*, i64** %13, align 8, !dbg !5533
  %66 = bitcast i64* %65 to i8*, !dbg !5533
  %67 = load i64, i64* %18, align 8, !dbg !5533
  %68 = call i32 @sgx_is_within_enclave(i8* %66, i64 %67), !dbg !5533
  %69 = icmp ne i32 %68, 0, !dbg !5533
  br i1 %69, label %71, label %70, !dbg !5536

70:                                               ; preds = %64
  store i32 2, i32* %7, align 4, !dbg !5533
  br label %318, !dbg !5533

71:                                               ; preds = %64, %61
  br label %72, !dbg !5536

72:                                               ; preds = %71
  %73 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !5537
  %74 = icmp ne %struct.mbedtls_net_context* %73, null, !dbg !5537
  br i1 %74, label %75, label %77, !dbg !5537

75:                                               ; preds = %72
  %76 = load i64, i64* %15, align 8, !dbg !5537
  br label %78, !dbg !5537

77:                                               ; preds = %72
  br label %78, !dbg !5537

78:                                               ; preds = %77, %75
  %79 = phi i64 [ %76, %75 ], [ 0, %77 ], !dbg !5537
  %80 = load i64, i64* %20, align 8, !dbg !5537
  %81 = add i64 %80, %79, !dbg !5537
  store i64 %81, i64* %20, align 8, !dbg !5537
  %82 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !5537
  %83 = icmp ne %struct.mbedtls_net_context* %82, null, !dbg !5537
  br i1 %83, label %84, label %86, !dbg !5537

84:                                               ; preds = %78
  %85 = load i64, i64* %15, align 8, !dbg !5537
  br label %87, !dbg !5537

86:                                               ; preds = %78
  br label %87, !dbg !5537

87:                                               ; preds = %86, %84
  %88 = phi i64 [ %85, %84 ], [ 0, %86 ], !dbg !5537
  %89 = icmp ult i64 %81, %88, !dbg !5537
  br i1 %89, label %90, label %91, !dbg !5539

90:                                               ; preds = %87
  store i32 2, i32* %7, align 4, !dbg !5540
  br label %318, !dbg !5540

91:                                               ; preds = %87
  %92 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5541
  %93 = icmp ne %struct.mbedtls_net_context* %92, null, !dbg !5541
  br i1 %93, label %94, label %96, !dbg !5541

94:                                               ; preds = %91
  %95 = load i64, i64* %16, align 8, !dbg !5541
  br label %97, !dbg !5541

96:                                               ; preds = %91
  br label %97, !dbg !5541

97:                                               ; preds = %96, %94
  %98 = phi i64 [ %95, %94 ], [ 0, %96 ], !dbg !5541
  %99 = load i64, i64* %20, align 8, !dbg !5541
  %100 = add i64 %99, %98, !dbg !5541
  store i64 %100, i64* %20, align 8, !dbg !5541
  %101 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5541
  %102 = icmp ne %struct.mbedtls_net_context* %101, null, !dbg !5541
  br i1 %102, label %103, label %105, !dbg !5541

103:                                              ; preds = %97
  %104 = load i64, i64* %16, align 8, !dbg !5541
  br label %106, !dbg !5541

105:                                              ; preds = %97
  br label %106, !dbg !5541

106:                                              ; preds = %105, %103
  %107 = phi i64 [ %104, %103 ], [ 0, %105 ], !dbg !5541
  %108 = icmp ult i64 %100, %107, !dbg !5541
  br i1 %108, label %109, label %110, !dbg !5543

109:                                              ; preds = %106
  store i32 2, i32* %7, align 4, !dbg !5544
  br label %318, !dbg !5544

110:                                              ; preds = %106
  %111 = load i8*, i8** %11, align 8, !dbg !5545
  %112 = icmp ne i8* %111, null, !dbg !5545
  br i1 %112, label %113, label %115, !dbg !5545

113:                                              ; preds = %110
  %114 = load i64, i64* %17, align 8, !dbg !5545
  br label %116, !dbg !5545

115:                                              ; preds = %110
  br label %116, !dbg !5545

116:                                              ; preds = %115, %113
  %117 = phi i64 [ %114, %113 ], [ 0, %115 ], !dbg !5545
  %118 = load i64, i64* %20, align 8, !dbg !5545
  %119 = add i64 %118, %117, !dbg !5545
  store i64 %119, i64* %20, align 8, !dbg !5545
  %120 = load i8*, i8** %11, align 8, !dbg !5545
  %121 = icmp ne i8* %120, null, !dbg !5545
  br i1 %121, label %122, label %124, !dbg !5545

122:                                              ; preds = %116
  %123 = load i64, i64* %17, align 8, !dbg !5545
  br label %125, !dbg !5545

124:                                              ; preds = %116
  br label %125, !dbg !5545

125:                                              ; preds = %124, %122
  %126 = phi i64 [ %123, %122 ], [ 0, %124 ], !dbg !5545
  %127 = icmp ult i64 %119, %126, !dbg !5545
  br i1 %127, label %128, label %129, !dbg !5547

128:                                              ; preds = %125
  store i32 2, i32* %7, align 4, !dbg !5548
  br label %318, !dbg !5548

129:                                              ; preds = %125
  %130 = load i64*, i64** %13, align 8, !dbg !5549
  %131 = icmp ne i64* %130, null, !dbg !5549
  br i1 %131, label %132, label %134, !dbg !5549

132:                                              ; preds = %129
  %133 = load i64, i64* %18, align 8, !dbg !5549
  br label %135, !dbg !5549

134:                                              ; preds = %129
  br label %135, !dbg !5549

135:                                              ; preds = %134, %132
  %136 = phi i64 [ %133, %132 ], [ 0, %134 ], !dbg !5549
  %137 = load i64, i64* %20, align 8, !dbg !5549
  %138 = add i64 %137, %136, !dbg !5549
  store i64 %138, i64* %20, align 8, !dbg !5549
  %139 = load i64*, i64** %13, align 8, !dbg !5549
  %140 = icmp ne i64* %139, null, !dbg !5549
  br i1 %140, label %141, label %143, !dbg !5549

141:                                              ; preds = %135
  %142 = load i64, i64* %18, align 8, !dbg !5549
  br label %144, !dbg !5549

143:                                              ; preds = %135
  br label %144, !dbg !5549

144:                                              ; preds = %143, %141
  %145 = phi i64 [ %142, %141 ], [ 0, %143 ], !dbg !5549
  %146 = icmp ult i64 %138, %145, !dbg !5549
  br i1 %146, label %147, label %148, !dbg !5551

147:                                              ; preds = %144
  store i32 2, i32* %7, align 4, !dbg !5552
  br label %318, !dbg !5552

148:                                              ; preds = %144
  %149 = load i64, i64* %20, align 8, !dbg !5553
  %150 = call i8* @sgx_ocalloc(i64 %149), !dbg !5554
  store i8* %150, i8** %21, align 8, !dbg !5555
  %151 = load i8*, i8** %21, align 8, !dbg !5556
  %152 = icmp eq i8* %151, null, !dbg !5558
  br i1 %152, label %153, label %154, !dbg !5559

153:                                              ; preds = %148
  call void @sgx_ocfree(), !dbg !5560
  store i32 1, i32* %7, align 4, !dbg !5562
  br label %318, !dbg !5562

154:                                              ; preds = %148
  %155 = load i8*, i8** %21, align 8, !dbg !5563
  %156 = bitcast i8* %155 to %struct.ms_ocall_mbedtls_net_accept_t*, !dbg !5564
  store %struct.ms_ocall_mbedtls_net_accept_t* %156, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5565
  %157 = load i8*, i8** %21, align 8, !dbg !5566
  %158 = ptrtoint i8* %157 to i64, !dbg !5567
  %159 = add i64 %158, 48, !dbg !5568
  %160 = inttoptr i64 %159 to i8*, !dbg !5569
  store i8* %160, i8** %21, align 8, !dbg !5570
  %161 = load i64, i64* %20, align 8, !dbg !5571
  %162 = sub i64 %161, 48, !dbg !5571
  store i64 %162, i64* %20, align 8, !dbg !5571
  %163 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !5572
  %164 = icmp ne %struct.mbedtls_net_context* %163, null, !dbg !5574
  br i1 %164, label %165, label %187, !dbg !5575

165:                                              ; preds = %154
  %166 = load i8*, i8** %21, align 8, !dbg !5576
  %167 = bitcast i8* %166 to %struct.mbedtls_net_context*, !dbg !5578
  %168 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5579
  %169 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %168, i32 0, i32 1, !dbg !5580
  store %struct.mbedtls_net_context* %167, %struct.mbedtls_net_context** %169, align 8, !dbg !5581
  %170 = load i8*, i8** %21, align 8, !dbg !5582
  %171 = load i64, i64* %20, align 8, !dbg !5584
  %172 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !5585
  %173 = bitcast %struct.mbedtls_net_context* %172 to i8*, !dbg !5585
  %174 = load i64, i64* %15, align 8, !dbg !5586
  %175 = call i32 @memcpy_s(i8* %170, i64 %171, i8* %173, i64 %174), !dbg !5587
  %176 = icmp ne i32 %175, 0, !dbg !5587
  br i1 %176, label %177, label %178, !dbg !5588

177:                                              ; preds = %165
  call void @sgx_ocfree(), !dbg !5589
  store i32 1, i32* %7, align 4, !dbg !5591
  br label %318, !dbg !5591

178:                                              ; preds = %165
  %179 = load i8*, i8** %21, align 8, !dbg !5592
  %180 = ptrtoint i8* %179 to i64, !dbg !5593
  %181 = load i64, i64* %15, align 8, !dbg !5594
  %182 = add i64 %180, %181, !dbg !5595
  %183 = inttoptr i64 %182 to i8*, !dbg !5596
  store i8* %183, i8** %21, align 8, !dbg !5597
  %184 = load i64, i64* %15, align 8, !dbg !5598
  %185 = load i64, i64* %20, align 8, !dbg !5599
  %186 = sub i64 %185, %184, !dbg !5599
  store i64 %186, i64* %20, align 8, !dbg !5599
  br label %190, !dbg !5600

187:                                              ; preds = %154
  %188 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5601
  %189 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %188, i32 0, i32 1, !dbg !5603
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %189, align 8, !dbg !5604
  br label %190

190:                                              ; preds = %187, %178
  %191 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5605
  %192 = icmp ne %struct.mbedtls_net_context* %191, null, !dbg !5607
  br i1 %192, label %193, label %209, !dbg !5608

193:                                              ; preds = %190
  %194 = load i8*, i8** %21, align 8, !dbg !5609
  %195 = bitcast i8* %194 to %struct.mbedtls_net_context*, !dbg !5611
  %196 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5612
  %197 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %196, i32 0, i32 2, !dbg !5613
  store %struct.mbedtls_net_context* %195, %struct.mbedtls_net_context** %197, align 8, !dbg !5614
  %198 = load i8*, i8** %21, align 8, !dbg !5615
  store i8* %198, i8** %22, align 8, !dbg !5616
  %199 = load i8*, i8** %22, align 8, !dbg !5617
  %200 = load i64, i64* %16, align 8, !dbg !5618
  call void @llvm.memset.p0i8.i64(i8* align 1 %199, i8 0, i64 %200, i1 false), !dbg !5619
  %201 = load i8*, i8** %21, align 8, !dbg !5620
  %202 = ptrtoint i8* %201 to i64, !dbg !5621
  %203 = load i64, i64* %16, align 8, !dbg !5622
  %204 = add i64 %202, %203, !dbg !5623
  %205 = inttoptr i64 %204 to i8*, !dbg !5624
  store i8* %205, i8** %21, align 8, !dbg !5625
  %206 = load i64, i64* %16, align 8, !dbg !5626
  %207 = load i64, i64* %20, align 8, !dbg !5627
  %208 = sub i64 %207, %206, !dbg !5627
  store i64 %208, i64* %20, align 8, !dbg !5627
  br label %212, !dbg !5628

209:                                              ; preds = %190
  %210 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5629
  %211 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %210, i32 0, i32 2, !dbg !5631
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %211, align 8, !dbg !5632
  br label %212

212:                                              ; preds = %209, %193
  %213 = load i8*, i8** %11, align 8, !dbg !5633
  %214 = icmp ne i8* %213, null, !dbg !5635
  br i1 %214, label %215, label %230, !dbg !5636

215:                                              ; preds = %212
  %216 = load i8*, i8** %21, align 8, !dbg !5637
  %217 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5639
  %218 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %217, i32 0, i32 3, !dbg !5640
  store i8* %216, i8** %218, align 8, !dbg !5641
  %219 = load i8*, i8** %21, align 8, !dbg !5642
  store i8* %219, i8** %23, align 8, !dbg !5643
  %220 = load i8*, i8** %23, align 8, !dbg !5644
  %221 = load i64, i64* %17, align 8, !dbg !5645
  call void @llvm.memset.p0i8.i64(i8* align 1 %220, i8 0, i64 %221, i1 false), !dbg !5646
  %222 = load i8*, i8** %21, align 8, !dbg !5647
  %223 = ptrtoint i8* %222 to i64, !dbg !5648
  %224 = load i64, i64* %17, align 8, !dbg !5649
  %225 = add i64 %223, %224, !dbg !5650
  %226 = inttoptr i64 %225 to i8*, !dbg !5651
  store i8* %226, i8** %21, align 8, !dbg !5652
  %227 = load i64, i64* %17, align 8, !dbg !5653
  %228 = load i64, i64* %20, align 8, !dbg !5654
  %229 = sub i64 %228, %227, !dbg !5654
  store i64 %229, i64* %20, align 8, !dbg !5654
  br label %233, !dbg !5655

230:                                              ; preds = %212
  %231 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5656
  %232 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %231, i32 0, i32 3, !dbg !5658
  store i8* null, i8** %232, align 8, !dbg !5659
  br label %233

233:                                              ; preds = %230, %215
  %234 = load i64, i64* %12, align 8, !dbg !5660
  %235 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5661
  %236 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %235, i32 0, i32 4, !dbg !5662
  store i64 %234, i64* %236, align 8, !dbg !5663
  %237 = load i64*, i64** %13, align 8, !dbg !5664
  %238 = icmp ne i64* %237, null, !dbg !5666
  br i1 %238, label %239, label %260, !dbg !5667

239:                                              ; preds = %233
  %240 = load i8*, i8** %21, align 8, !dbg !5668
  %241 = bitcast i8* %240 to i64*, !dbg !5670
  %242 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5671
  %243 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %242, i32 0, i32 5, !dbg !5672
  store i64* %241, i64** %243, align 8, !dbg !5673
  %244 = load i8*, i8** %21, align 8, !dbg !5674
  store i8* %244, i8** %24, align 8, !dbg !5675
  %245 = load i64, i64* %18, align 8, !dbg !5676
  %246 = urem i64 %245, 8, !dbg !5678
  %247 = icmp ne i64 %246, 0, !dbg !5679
  br i1 %247, label %248, label %249, !dbg !5680

248:                                              ; preds = %239
  call void @sgx_ocfree(), !dbg !5681
  store i32 2, i32* %7, align 4, !dbg !5683
  br label %318, !dbg !5683

249:                                              ; preds = %239
  %250 = load i8*, i8** %24, align 8, !dbg !5684
  %251 = load i64, i64* %18, align 8, !dbg !5685
  call void @llvm.memset.p0i8.i64(i8* align 1 %250, i8 0, i64 %251, i1 false), !dbg !5686
  %252 = load i8*, i8** %21, align 8, !dbg !5687
  %253 = ptrtoint i8* %252 to i64, !dbg !5688
  %254 = load i64, i64* %18, align 8, !dbg !5689
  %255 = add i64 %253, %254, !dbg !5690
  %256 = inttoptr i64 %255 to i8*, !dbg !5691
  store i8* %256, i8** %21, align 8, !dbg !5692
  %257 = load i64, i64* %18, align 8, !dbg !5693
  %258 = load i64, i64* %20, align 8, !dbg !5694
  %259 = sub i64 %258, %257, !dbg !5694
  store i64 %259, i64* %20, align 8, !dbg !5694
  br label %263, !dbg !5695

260:                                              ; preds = %233
  %261 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5696
  %262 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %261, i32 0, i32 5, !dbg !5698
  store i64* null, i64** %262, align 8, !dbg !5699
  br label %263

263:                                              ; preds = %260, %249
  %264 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5700
  %265 = bitcast %struct.ms_ocall_mbedtls_net_accept_t* %264 to i8*, !dbg !5700
  %266 = call i32 @sgx_ocall(i32 2, i8* %265), !dbg !5701
  store i32 %266, i32* %14, align 4, !dbg !5702
  %267 = load i32, i32* %14, align 4, !dbg !5703
  %268 = icmp eq i32 %267, 0, !dbg !5705
  br i1 %268, label %269, label %316, !dbg !5706

269:                                              ; preds = %263
  %270 = load i32*, i32** %8, align 8, !dbg !5707
  %271 = icmp ne i32* %270, null, !dbg !5707
  br i1 %271, label %272, label %277, !dbg !5710

272:                                              ; preds = %269
  %273 = load %struct.ms_ocall_mbedtls_net_accept_t*, %struct.ms_ocall_mbedtls_net_accept_t** %19, align 8, !dbg !5711
  %274 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_accept_t, %struct.ms_ocall_mbedtls_net_accept_t* %273, i32 0, i32 0, !dbg !5712
  %275 = load i32, i32* %274, align 8, !dbg !5712
  %276 = load i32*, i32** %8, align 8, !dbg !5713
  store i32 %275, i32* %276, align 4, !dbg !5714
  br label %277, !dbg !5715

277:                                              ; preds = %272, %269
  %278 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5716
  %279 = icmp ne %struct.mbedtls_net_context* %278, null, !dbg !5716
  br i1 %279, label %280, label %290, !dbg !5718

280:                                              ; preds = %277
  %281 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %10, align 8, !dbg !5719
  %282 = bitcast %struct.mbedtls_net_context* %281 to i8*, !dbg !5722
  %283 = load i64, i64* %16, align 8, !dbg !5723
  %284 = load i8*, i8** %22, align 8, !dbg !5724
  %285 = load i64, i64* %16, align 8, !dbg !5725
  %286 = call i32 @memcpy_s(i8* %282, i64 %283, i8* %284, i64 %285), !dbg !5726
  %287 = icmp ne i32 %286, 0, !dbg !5726
  br i1 %287, label %288, label %289, !dbg !5727

288:                                              ; preds = %280
  call void @sgx_ocfree(), !dbg !5728
  store i32 1, i32* %7, align 4, !dbg !5730
  br label %318, !dbg !5730

289:                                              ; preds = %280
  br label %290, !dbg !5731

290:                                              ; preds = %289, %277
  %291 = load i8*, i8** %11, align 8, !dbg !5732
  %292 = icmp ne i8* %291, null, !dbg !5732
  br i1 %292, label %293, label %302, !dbg !5734

293:                                              ; preds = %290
  %294 = load i8*, i8** %11, align 8, !dbg !5735
  %295 = load i64, i64* %17, align 8, !dbg !5738
  %296 = load i8*, i8** %23, align 8, !dbg !5739
  %297 = load i64, i64* %17, align 8, !dbg !5740
  %298 = call i32 @memcpy_s(i8* %294, i64 %295, i8* %296, i64 %297), !dbg !5741
  %299 = icmp ne i32 %298, 0, !dbg !5741
  br i1 %299, label %300, label %301, !dbg !5742

300:                                              ; preds = %293
  call void @sgx_ocfree(), !dbg !5743
  store i32 1, i32* %7, align 4, !dbg !5745
  br label %318, !dbg !5745

301:                                              ; preds = %293
  br label %302, !dbg !5746

302:                                              ; preds = %301, %290
  %303 = load i64*, i64** %13, align 8, !dbg !5747
  %304 = icmp ne i64* %303, null, !dbg !5747
  br i1 %304, label %305, label %315, !dbg !5749

305:                                              ; preds = %302
  %306 = load i64*, i64** %13, align 8, !dbg !5750
  %307 = bitcast i64* %306 to i8*, !dbg !5753
  %308 = load i64, i64* %18, align 8, !dbg !5754
  %309 = load i8*, i8** %24, align 8, !dbg !5755
  %310 = load i64, i64* %18, align 8, !dbg !5756
  %311 = call i32 @memcpy_s(i8* %307, i64 %308, i8* %309, i64 %310), !dbg !5757
  %312 = icmp ne i32 %311, 0, !dbg !5757
  br i1 %312, label %313, label %314, !dbg !5758

313:                                              ; preds = %305
  call void @sgx_ocfree(), !dbg !5759
  store i32 1, i32* %7, align 4, !dbg !5761
  br label %318, !dbg !5761

314:                                              ; preds = %305
  br label %315, !dbg !5762

315:                                              ; preds = %314, %302
  br label %316, !dbg !5763

316:                                              ; preds = %315, %263
  call void @sgx_ocfree(), !dbg !5764
  %317 = load i32, i32* %14, align 4, !dbg !5765
  store i32 %317, i32* %7, align 4, !dbg !5766
  br label %318, !dbg !5766

318:                                              ; preds = %316, %313, %300, %288, %248, %177, %153, %147, %128, %109, %90, %70, %58, %47, %35
  %319 = load i32, i32* %7, align 4, !dbg !5767
  ret i32 %319, !dbg !5767
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_set_block(i32* %0, %struct.mbedtls_net_context* %1) #0 !dbg !5768 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca %struct.mbedtls_net_context*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.ms_ocall_mbedtls_net_set_block_t*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !5771, metadata !DIExpression()), !dbg !5772
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %5, metadata !5773, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5775, metadata !DIExpression()), !dbg !5776
  store i32 0, i32* %6, align 4, !dbg !5776
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5777, metadata !DIExpression()), !dbg !5778
  store i64 4, i64* %7, align 8, !dbg !5778
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_set_block_t** %8, metadata !5779, metadata !DIExpression()), !dbg !5780
  store %struct.ms_ocall_mbedtls_net_set_block_t* null, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5780
  call void @llvm.dbg.declare(metadata i64* %9, metadata !5781, metadata !DIExpression()), !dbg !5782
  store i64 16, i64* %9, align 8, !dbg !5782
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5783, metadata !DIExpression()), !dbg !5784
  store i8* null, i8** %10, align 8, !dbg !5784
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5785, metadata !DIExpression()), !dbg !5786
  store i8* null, i8** %11, align 8, !dbg !5786
  br label %12, !dbg !5787

12:                                               ; preds = %2
  %13 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5788
  %14 = icmp ne %struct.mbedtls_net_context* %13, null, !dbg !5788
  br i1 %14, label %15, label %22, !dbg !5788

15:                                               ; preds = %12
  %16 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5788
  %17 = bitcast %struct.mbedtls_net_context* %16 to i8*, !dbg !5788
  %18 = load i64, i64* %7, align 8, !dbg !5788
  %19 = call i32 @sgx_is_within_enclave(i8* %17, i64 %18), !dbg !5788
  %20 = icmp ne i32 %19, 0, !dbg !5788
  br i1 %20, label %22, label %21, !dbg !5791

21:                                               ; preds = %15
  store i32 2, i32* %3, align 4, !dbg !5788
  br label %115, !dbg !5788

22:                                               ; preds = %15, %12
  br label %23, !dbg !5791

23:                                               ; preds = %22
  %24 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5792
  %25 = icmp ne %struct.mbedtls_net_context* %24, null, !dbg !5792
  br i1 %25, label %26, label %28, !dbg !5792

26:                                               ; preds = %23
  %27 = load i64, i64* %7, align 8, !dbg !5792
  br label %29, !dbg !5792

28:                                               ; preds = %23
  br label %29, !dbg !5792

29:                                               ; preds = %28, %26
  %30 = phi i64 [ %27, %26 ], [ 0, %28 ], !dbg !5792
  %31 = load i64, i64* %9, align 8, !dbg !5792
  %32 = add i64 %31, %30, !dbg !5792
  store i64 %32, i64* %9, align 8, !dbg !5792
  %33 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5792
  %34 = icmp ne %struct.mbedtls_net_context* %33, null, !dbg !5792
  br i1 %34, label %35, label %37, !dbg !5792

35:                                               ; preds = %29
  %36 = load i64, i64* %7, align 8, !dbg !5792
  br label %38, !dbg !5792

37:                                               ; preds = %29
  br label %38, !dbg !5792

38:                                               ; preds = %37, %35
  %39 = phi i64 [ %36, %35 ], [ 0, %37 ], !dbg !5792
  %40 = icmp ult i64 %32, %39, !dbg !5792
  br i1 %40, label %41, label %42, !dbg !5794

41:                                               ; preds = %38
  store i32 2, i32* %3, align 4, !dbg !5795
  br label %115, !dbg !5795

42:                                               ; preds = %38
  %43 = load i64, i64* %9, align 8, !dbg !5796
  %44 = call i8* @sgx_ocalloc(i64 %43), !dbg !5797
  store i8* %44, i8** %10, align 8, !dbg !5798
  %45 = load i8*, i8** %10, align 8, !dbg !5799
  %46 = icmp eq i8* %45, null, !dbg !5801
  br i1 %46, label %47, label %48, !dbg !5802

47:                                               ; preds = %42
  call void @sgx_ocfree(), !dbg !5803
  store i32 1, i32* %3, align 4, !dbg !5805
  br label %115, !dbg !5805

48:                                               ; preds = %42
  %49 = load i8*, i8** %10, align 8, !dbg !5806
  %50 = bitcast i8* %49 to %struct.ms_ocall_mbedtls_net_set_block_t*, !dbg !5807
  store %struct.ms_ocall_mbedtls_net_set_block_t* %50, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5808
  %51 = load i8*, i8** %10, align 8, !dbg !5809
  %52 = ptrtoint i8* %51 to i64, !dbg !5810
  %53 = add i64 %52, 16, !dbg !5811
  %54 = inttoptr i64 %53 to i8*, !dbg !5812
  store i8* %54, i8** %10, align 8, !dbg !5813
  %55 = load i64, i64* %9, align 8, !dbg !5814
  %56 = sub i64 %55, 16, !dbg !5814
  store i64 %56, i64* %9, align 8, !dbg !5814
  %57 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5815
  %58 = icmp ne %struct.mbedtls_net_context* %57, null, !dbg !5817
  br i1 %58, label %59, label %82, !dbg !5818

59:                                               ; preds = %48
  %60 = load i8*, i8** %10, align 8, !dbg !5819
  %61 = bitcast i8* %60 to %struct.mbedtls_net_context*, !dbg !5821
  %62 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5822
  %63 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_set_block_t, %struct.ms_ocall_mbedtls_net_set_block_t* %62, i32 0, i32 1, !dbg !5823
  store %struct.mbedtls_net_context* %61, %struct.mbedtls_net_context** %63, align 8, !dbg !5824
  %64 = load i8*, i8** %10, align 8, !dbg !5825
  store i8* %64, i8** %11, align 8, !dbg !5826
  %65 = load i8*, i8** %10, align 8, !dbg !5827
  %66 = load i64, i64* %9, align 8, !dbg !5829
  %67 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5830
  %68 = bitcast %struct.mbedtls_net_context* %67 to i8*, !dbg !5830
  %69 = load i64, i64* %7, align 8, !dbg !5831
  %70 = call i32 @memcpy_s(i8* %65, i64 %66, i8* %68, i64 %69), !dbg !5832
  %71 = icmp ne i32 %70, 0, !dbg !5832
  br i1 %71, label %72, label %73, !dbg !5833

72:                                               ; preds = %59
  call void @sgx_ocfree(), !dbg !5834
  store i32 1, i32* %3, align 4, !dbg !5836
  br label %115, !dbg !5836

73:                                               ; preds = %59
  %74 = load i8*, i8** %10, align 8, !dbg !5837
  %75 = ptrtoint i8* %74 to i64, !dbg !5838
  %76 = load i64, i64* %7, align 8, !dbg !5839
  %77 = add i64 %75, %76, !dbg !5840
  %78 = inttoptr i64 %77 to i8*, !dbg !5841
  store i8* %78, i8** %10, align 8, !dbg !5842
  %79 = load i64, i64* %7, align 8, !dbg !5843
  %80 = load i64, i64* %9, align 8, !dbg !5844
  %81 = sub i64 %80, %79, !dbg !5844
  store i64 %81, i64* %9, align 8, !dbg !5844
  br label %85, !dbg !5845

82:                                               ; preds = %48
  %83 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5846
  %84 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_set_block_t, %struct.ms_ocall_mbedtls_net_set_block_t* %83, i32 0, i32 1, !dbg !5848
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %84, align 8, !dbg !5849
  br label %85

85:                                               ; preds = %82, %73
  %86 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5850
  %87 = bitcast %struct.ms_ocall_mbedtls_net_set_block_t* %86 to i8*, !dbg !5850
  %88 = call i32 @sgx_ocall(i32 3, i8* %87), !dbg !5851
  store i32 %88, i32* %6, align 4, !dbg !5852
  %89 = load i32, i32* %6, align 4, !dbg !5853
  %90 = icmp eq i32 %89, 0, !dbg !5855
  br i1 %90, label %91, label %113, !dbg !5856

91:                                               ; preds = %85
  %92 = load i32*, i32** %4, align 8, !dbg !5857
  %93 = icmp ne i32* %92, null, !dbg !5857
  br i1 %93, label %94, label %99, !dbg !5860

94:                                               ; preds = %91
  %95 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5861
  %96 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_set_block_t, %struct.ms_ocall_mbedtls_net_set_block_t* %95, i32 0, i32 0, !dbg !5862
  %97 = load i32, i32* %96, align 8, !dbg !5862
  %98 = load i32*, i32** %4, align 8, !dbg !5863
  store i32 %97, i32* %98, align 4, !dbg !5864
  br label %99, !dbg !5865

99:                                               ; preds = %94, %91
  %100 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5866
  %101 = icmp ne %struct.mbedtls_net_context* %100, null, !dbg !5866
  br i1 %101, label %102, label %112, !dbg !5868

102:                                              ; preds = %99
  %103 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5869
  %104 = bitcast %struct.mbedtls_net_context* %103 to i8*, !dbg !5872
  %105 = load i64, i64* %7, align 8, !dbg !5873
  %106 = load i8*, i8** %11, align 8, !dbg !5874
  %107 = load i64, i64* %7, align 8, !dbg !5875
  %108 = call i32 @memcpy_s(i8* %104, i64 %105, i8* %106, i64 %107), !dbg !5876
  %109 = icmp ne i32 %108, 0, !dbg !5876
  br i1 %109, label %110, label %111, !dbg !5877

110:                                              ; preds = %102
  call void @sgx_ocfree(), !dbg !5878
  store i32 1, i32* %3, align 4, !dbg !5880
  br label %115, !dbg !5880

111:                                              ; preds = %102
  br label %112, !dbg !5881

112:                                              ; preds = %111, %99
  br label %113, !dbg !5882

113:                                              ; preds = %112, %85
  call void @sgx_ocfree(), !dbg !5883
  %114 = load i32, i32* %6, align 4, !dbg !5884
  store i32 %114, i32* %3, align 4, !dbg !5885
  br label %115, !dbg !5885

115:                                              ; preds = %113, %110, %72, %47, %41, %21
  %116 = load i32, i32* %3, align 4, !dbg !5886
  ret i32 %116, !dbg !5886
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_set_nonblock(i32* %0, %struct.mbedtls_net_context* %1) #0 !dbg !5887 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca %struct.mbedtls_net_context*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.ms_ocall_mbedtls_net_set_block_t*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !5888, metadata !DIExpression()), !dbg !5889
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %5, metadata !5890, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5892, metadata !DIExpression()), !dbg !5893
  store i32 0, i32* %6, align 4, !dbg !5893
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5894, metadata !DIExpression()), !dbg !5895
  store i64 4, i64* %7, align 8, !dbg !5895
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_set_block_t** %8, metadata !5896, metadata !DIExpression()), !dbg !5897
  store %struct.ms_ocall_mbedtls_net_set_block_t* null, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5897
  call void @llvm.dbg.declare(metadata i64* %9, metadata !5898, metadata !DIExpression()), !dbg !5899
  store i64 16, i64* %9, align 8, !dbg !5899
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5900, metadata !DIExpression()), !dbg !5901
  store i8* null, i8** %10, align 8, !dbg !5901
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5902, metadata !DIExpression()), !dbg !5903
  store i8* null, i8** %11, align 8, !dbg !5903
  br label %12, !dbg !5904

12:                                               ; preds = %2
  %13 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5905
  %14 = icmp ne %struct.mbedtls_net_context* %13, null, !dbg !5905
  br i1 %14, label %15, label %22, !dbg !5905

15:                                               ; preds = %12
  %16 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5905
  %17 = bitcast %struct.mbedtls_net_context* %16 to i8*, !dbg !5905
  %18 = load i64, i64* %7, align 8, !dbg !5905
  %19 = call i32 @sgx_is_within_enclave(i8* %17, i64 %18), !dbg !5905
  %20 = icmp ne i32 %19, 0, !dbg !5905
  br i1 %20, label %22, label %21, !dbg !5908

21:                                               ; preds = %15
  store i32 2, i32* %3, align 4, !dbg !5905
  br label %115, !dbg !5905

22:                                               ; preds = %15, %12
  br label %23, !dbg !5908

23:                                               ; preds = %22
  %24 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5909
  %25 = icmp ne %struct.mbedtls_net_context* %24, null, !dbg !5909
  br i1 %25, label %26, label %28, !dbg !5909

26:                                               ; preds = %23
  %27 = load i64, i64* %7, align 8, !dbg !5909
  br label %29, !dbg !5909

28:                                               ; preds = %23
  br label %29, !dbg !5909

29:                                               ; preds = %28, %26
  %30 = phi i64 [ %27, %26 ], [ 0, %28 ], !dbg !5909
  %31 = load i64, i64* %9, align 8, !dbg !5909
  %32 = add i64 %31, %30, !dbg !5909
  store i64 %32, i64* %9, align 8, !dbg !5909
  %33 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5909
  %34 = icmp ne %struct.mbedtls_net_context* %33, null, !dbg !5909
  br i1 %34, label %35, label %37, !dbg !5909

35:                                               ; preds = %29
  %36 = load i64, i64* %7, align 8, !dbg !5909
  br label %38, !dbg !5909

37:                                               ; preds = %29
  br label %38, !dbg !5909

38:                                               ; preds = %37, %35
  %39 = phi i64 [ %36, %35 ], [ 0, %37 ], !dbg !5909
  %40 = icmp ult i64 %32, %39, !dbg !5909
  br i1 %40, label %41, label %42, !dbg !5911

41:                                               ; preds = %38
  store i32 2, i32* %3, align 4, !dbg !5912
  br label %115, !dbg !5912

42:                                               ; preds = %38
  %43 = load i64, i64* %9, align 8, !dbg !5913
  %44 = call i8* @sgx_ocalloc(i64 %43), !dbg !5914
  store i8* %44, i8** %10, align 8, !dbg !5915
  %45 = load i8*, i8** %10, align 8, !dbg !5916
  %46 = icmp eq i8* %45, null, !dbg !5918
  br i1 %46, label %47, label %48, !dbg !5919

47:                                               ; preds = %42
  call void @sgx_ocfree(), !dbg !5920
  store i32 1, i32* %3, align 4, !dbg !5922
  br label %115, !dbg !5922

48:                                               ; preds = %42
  %49 = load i8*, i8** %10, align 8, !dbg !5923
  %50 = bitcast i8* %49 to %struct.ms_ocall_mbedtls_net_set_block_t*, !dbg !5924
  store %struct.ms_ocall_mbedtls_net_set_block_t* %50, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5925
  %51 = load i8*, i8** %10, align 8, !dbg !5926
  %52 = ptrtoint i8* %51 to i64, !dbg !5927
  %53 = add i64 %52, 16, !dbg !5928
  %54 = inttoptr i64 %53 to i8*, !dbg !5929
  store i8* %54, i8** %10, align 8, !dbg !5930
  %55 = load i64, i64* %9, align 8, !dbg !5931
  %56 = sub i64 %55, 16, !dbg !5931
  store i64 %56, i64* %9, align 8, !dbg !5931
  %57 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5932
  %58 = icmp ne %struct.mbedtls_net_context* %57, null, !dbg !5934
  br i1 %58, label %59, label %82, !dbg !5935

59:                                               ; preds = %48
  %60 = load i8*, i8** %10, align 8, !dbg !5936
  %61 = bitcast i8* %60 to %struct.mbedtls_net_context*, !dbg !5938
  %62 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5939
  %63 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_set_block_t, %struct.ms_ocall_mbedtls_net_set_block_t* %62, i32 0, i32 1, !dbg !5940
  store %struct.mbedtls_net_context* %61, %struct.mbedtls_net_context** %63, align 8, !dbg !5941
  %64 = load i8*, i8** %10, align 8, !dbg !5942
  store i8* %64, i8** %11, align 8, !dbg !5943
  %65 = load i8*, i8** %10, align 8, !dbg !5944
  %66 = load i64, i64* %9, align 8, !dbg !5946
  %67 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5947
  %68 = bitcast %struct.mbedtls_net_context* %67 to i8*, !dbg !5947
  %69 = load i64, i64* %7, align 8, !dbg !5948
  %70 = call i32 @memcpy_s(i8* %65, i64 %66, i8* %68, i64 %69), !dbg !5949
  %71 = icmp ne i32 %70, 0, !dbg !5949
  br i1 %71, label %72, label %73, !dbg !5950

72:                                               ; preds = %59
  call void @sgx_ocfree(), !dbg !5951
  store i32 1, i32* %3, align 4, !dbg !5953
  br label %115, !dbg !5953

73:                                               ; preds = %59
  %74 = load i8*, i8** %10, align 8, !dbg !5954
  %75 = ptrtoint i8* %74 to i64, !dbg !5955
  %76 = load i64, i64* %7, align 8, !dbg !5956
  %77 = add i64 %75, %76, !dbg !5957
  %78 = inttoptr i64 %77 to i8*, !dbg !5958
  store i8* %78, i8** %10, align 8, !dbg !5959
  %79 = load i64, i64* %7, align 8, !dbg !5960
  %80 = load i64, i64* %9, align 8, !dbg !5961
  %81 = sub i64 %80, %79, !dbg !5961
  store i64 %81, i64* %9, align 8, !dbg !5961
  br label %85, !dbg !5962

82:                                               ; preds = %48
  %83 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5963
  %84 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_set_block_t, %struct.ms_ocall_mbedtls_net_set_block_t* %83, i32 0, i32 1, !dbg !5965
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %84, align 8, !dbg !5966
  br label %85

85:                                               ; preds = %82, %73
  %86 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5967
  %87 = bitcast %struct.ms_ocall_mbedtls_net_set_block_t* %86 to i8*, !dbg !5967
  %88 = call i32 @sgx_ocall(i32 4, i8* %87), !dbg !5968
  store i32 %88, i32* %6, align 4, !dbg !5969
  %89 = load i32, i32* %6, align 4, !dbg !5970
  %90 = icmp eq i32 %89, 0, !dbg !5972
  br i1 %90, label %91, label %113, !dbg !5973

91:                                               ; preds = %85
  %92 = load i32*, i32** %4, align 8, !dbg !5974
  %93 = icmp ne i32* %92, null, !dbg !5974
  br i1 %93, label %94, label %99, !dbg !5977

94:                                               ; preds = %91
  %95 = load %struct.ms_ocall_mbedtls_net_set_block_t*, %struct.ms_ocall_mbedtls_net_set_block_t** %8, align 8, !dbg !5978
  %96 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_set_block_t, %struct.ms_ocall_mbedtls_net_set_block_t* %95, i32 0, i32 0, !dbg !5979
  %97 = load i32, i32* %96, align 8, !dbg !5979
  %98 = load i32*, i32** %4, align 8, !dbg !5980
  store i32 %97, i32* %98, align 4, !dbg !5981
  br label %99, !dbg !5982

99:                                               ; preds = %94, %91
  %100 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5983
  %101 = icmp ne %struct.mbedtls_net_context* %100, null, !dbg !5983
  br i1 %101, label %102, label %112, !dbg !5985

102:                                              ; preds = %99
  %103 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %5, align 8, !dbg !5986
  %104 = bitcast %struct.mbedtls_net_context* %103 to i8*, !dbg !5989
  %105 = load i64, i64* %7, align 8, !dbg !5990
  %106 = load i8*, i8** %11, align 8, !dbg !5991
  %107 = load i64, i64* %7, align 8, !dbg !5992
  %108 = call i32 @memcpy_s(i8* %104, i64 %105, i8* %106, i64 %107), !dbg !5993
  %109 = icmp ne i32 %108, 0, !dbg !5993
  br i1 %109, label %110, label %111, !dbg !5994

110:                                              ; preds = %102
  call void @sgx_ocfree(), !dbg !5995
  store i32 1, i32* %3, align 4, !dbg !5997
  br label %115, !dbg !5997

111:                                              ; preds = %102
  br label %112, !dbg !5998

112:                                              ; preds = %111, %99
  br label %113, !dbg !5999

113:                                              ; preds = %112, %85
  call void @sgx_ocfree(), !dbg !6000
  %114 = load i32, i32* %6, align 4, !dbg !6001
  store i32 %114, i32* %3, align 4, !dbg !6002
  br label %115, !dbg !6002

115:                                              ; preds = %113, %110, %72, %47, %41, %21
  %116 = load i32, i32* %3, align 4, !dbg !6003
  ret i32 %116, !dbg !6003
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_usleep(i64 %0) #0 !dbg !6004 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.ms_ocall_mbedtls_net_usleep_t*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6007, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6009, metadata !DIExpression()), !dbg !6010
  store i32 0, i32* %4, align 4, !dbg !6010
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_usleep_t** %5, metadata !6011, metadata !DIExpression()), !dbg !6012
  store %struct.ms_ocall_mbedtls_net_usleep_t* null, %struct.ms_ocall_mbedtls_net_usleep_t** %5, align 8, !dbg !6012
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6013, metadata !DIExpression()), !dbg !6014
  store i64 8, i64* %6, align 8, !dbg !6014
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6015, metadata !DIExpression()), !dbg !6016
  store i8* null, i8** %7, align 8, !dbg !6016
  %8 = load i64, i64* %6, align 8, !dbg !6017
  %9 = call i8* @sgx_ocalloc(i64 %8), !dbg !6018
  store i8* %9, i8** %7, align 8, !dbg !6019
  %10 = load i8*, i8** %7, align 8, !dbg !6020
  %11 = icmp eq i8* %10, null, !dbg !6022
  br i1 %11, label %12, label %13, !dbg !6023

12:                                               ; preds = %1
  call void @sgx_ocfree(), !dbg !6024
  store i32 1, i32* %2, align 4, !dbg !6026
  br label %33, !dbg !6026

13:                                               ; preds = %1
  %14 = load i8*, i8** %7, align 8, !dbg !6027
  %15 = bitcast i8* %14 to %struct.ms_ocall_mbedtls_net_usleep_t*, !dbg !6028
  store %struct.ms_ocall_mbedtls_net_usleep_t* %15, %struct.ms_ocall_mbedtls_net_usleep_t** %5, align 8, !dbg !6029
  %16 = load i8*, i8** %7, align 8, !dbg !6030
  %17 = ptrtoint i8* %16 to i64, !dbg !6031
  %18 = add i64 %17, 8, !dbg !6032
  %19 = inttoptr i64 %18 to i8*, !dbg !6033
  store i8* %19, i8** %7, align 8, !dbg !6034
  %20 = load i64, i64* %6, align 8, !dbg !6035
  %21 = sub i64 %20, 8, !dbg !6035
  store i64 %21, i64* %6, align 8, !dbg !6035
  %22 = load i64, i64* %3, align 8, !dbg !6036
  %23 = load %struct.ms_ocall_mbedtls_net_usleep_t*, %struct.ms_ocall_mbedtls_net_usleep_t** %5, align 8, !dbg !6037
  %24 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_usleep_t, %struct.ms_ocall_mbedtls_net_usleep_t* %23, i32 0, i32 0, !dbg !6038
  store i64 %22, i64* %24, align 8, !dbg !6039
  %25 = load %struct.ms_ocall_mbedtls_net_usleep_t*, %struct.ms_ocall_mbedtls_net_usleep_t** %5, align 8, !dbg !6040
  %26 = bitcast %struct.ms_ocall_mbedtls_net_usleep_t* %25 to i8*, !dbg !6040
  %27 = call i32 @sgx_ocall(i32 5, i8* %26), !dbg !6041
  store i32 %27, i32* %4, align 4, !dbg !6042
  %28 = load i32, i32* %4, align 4, !dbg !6043
  %29 = icmp eq i32 %28, 0, !dbg !6045
  br i1 %29, label %30, label %31, !dbg !6046

30:                                               ; preds = %13
  br label %31, !dbg !6047

31:                                               ; preds = %30, %13
  call void @sgx_ocfree(), !dbg !6049
  %32 = load i32, i32* %4, align 4, !dbg !6050
  store i32 %32, i32* %2, align 4, !dbg !6051
  br label %33, !dbg !6051

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %2, align 4, !dbg !6052
  ret i32 %34, !dbg !6052
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_recv(i32* %0, %struct.mbedtls_net_context* %1, i8* %2, i64 %3) #0 !dbg !6053 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca %struct.mbedtls_net_context*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.ms_ocall_mbedtls_net_recv_t*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !6056, metadata !DIExpression()), !dbg !6057
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %7, metadata !6058, metadata !DIExpression()), !dbg !6059
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6060, metadata !DIExpression()), !dbg !6061
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6062, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 0, i32* %10, align 4, !dbg !6065
  call void @llvm.dbg.declare(metadata i64* %11, metadata !6066, metadata !DIExpression()), !dbg !6067
  store i64 4, i64* %11, align 8, !dbg !6067
  call void @llvm.dbg.declare(metadata i64* %12, metadata !6068, metadata !DIExpression()), !dbg !6069
  %18 = load i64, i64* %9, align 8, !dbg !6070
  store i64 %18, i64* %12, align 8, !dbg !6069
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_recv_t** %13, metadata !6071, metadata !DIExpression()), !dbg !6072
  store %struct.ms_ocall_mbedtls_net_recv_t* null, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6072
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6073, metadata !DIExpression()), !dbg !6074
  store i64 32, i64* %14, align 8, !dbg !6074
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6075, metadata !DIExpression()), !dbg !6076
  store i8* null, i8** %15, align 8, !dbg !6076
  call void @llvm.dbg.declare(metadata i8** %16, metadata !6077, metadata !DIExpression()), !dbg !6078
  store i8* null, i8** %16, align 8, !dbg !6078
  call void @llvm.dbg.declare(metadata i8** %17, metadata !6079, metadata !DIExpression()), !dbg !6080
  store i8* null, i8** %17, align 8, !dbg !6080
  br label %19, !dbg !6081

19:                                               ; preds = %4
  %20 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6082
  %21 = icmp ne %struct.mbedtls_net_context* %20, null, !dbg !6082
  br i1 %21, label %22, label %29, !dbg !6082

22:                                               ; preds = %19
  %23 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6082
  %24 = bitcast %struct.mbedtls_net_context* %23 to i8*, !dbg !6082
  %25 = load i64, i64* %11, align 8, !dbg !6082
  %26 = call i32 @sgx_is_within_enclave(i8* %24, i64 %25), !dbg !6082
  %27 = icmp ne i32 %26, 0, !dbg !6082
  br i1 %27, label %29, label %28, !dbg !6085

28:                                               ; preds = %22
  store i32 2, i32* %5, align 4, !dbg !6082
  br label %193, !dbg !6082

29:                                               ; preds = %22, %19
  br label %30, !dbg !6085

30:                                               ; preds = %29
  br label %31, !dbg !6086

31:                                               ; preds = %30
  %32 = load i8*, i8** %8, align 8, !dbg !6087
  %33 = icmp ne i8* %32, null, !dbg !6087
  br i1 %33, label %34, label %40, !dbg !6087

34:                                               ; preds = %31
  %35 = load i8*, i8** %8, align 8, !dbg !6087
  %36 = load i64, i64* %12, align 8, !dbg !6087
  %37 = call i32 @sgx_is_within_enclave(i8* %35, i64 %36), !dbg !6087
  %38 = icmp ne i32 %37, 0, !dbg !6087
  br i1 %38, label %40, label %39, !dbg !6090

39:                                               ; preds = %34
  store i32 2, i32* %5, align 4, !dbg !6087
  br label %193, !dbg !6087

40:                                               ; preds = %34, %31
  br label %41, !dbg !6090

41:                                               ; preds = %40
  %42 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6091
  %43 = icmp ne %struct.mbedtls_net_context* %42, null, !dbg !6091
  br i1 %43, label %44, label %46, !dbg !6091

44:                                               ; preds = %41
  %45 = load i64, i64* %11, align 8, !dbg !6091
  br label %47, !dbg !6091

46:                                               ; preds = %41
  br label %47, !dbg !6091

47:                                               ; preds = %46, %44
  %48 = phi i64 [ %45, %44 ], [ 0, %46 ], !dbg !6091
  %49 = load i64, i64* %14, align 8, !dbg !6091
  %50 = add i64 %49, %48, !dbg !6091
  store i64 %50, i64* %14, align 8, !dbg !6091
  %51 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6091
  %52 = icmp ne %struct.mbedtls_net_context* %51, null, !dbg !6091
  br i1 %52, label %53, label %55, !dbg !6091

53:                                               ; preds = %47
  %54 = load i64, i64* %11, align 8, !dbg !6091
  br label %56, !dbg !6091

55:                                               ; preds = %47
  br label %56, !dbg !6091

56:                                               ; preds = %55, %53
  %57 = phi i64 [ %54, %53 ], [ 0, %55 ], !dbg !6091
  %58 = icmp ult i64 %50, %57, !dbg !6091
  br i1 %58, label %59, label %60, !dbg !6093

59:                                               ; preds = %56
  store i32 2, i32* %5, align 4, !dbg !6094
  br label %193, !dbg !6094

60:                                               ; preds = %56
  %61 = load i8*, i8** %8, align 8, !dbg !6095
  %62 = icmp ne i8* %61, null, !dbg !6095
  br i1 %62, label %63, label %65, !dbg !6095

63:                                               ; preds = %60
  %64 = load i64, i64* %12, align 8, !dbg !6095
  br label %66, !dbg !6095

65:                                               ; preds = %60
  br label %66, !dbg !6095

66:                                               ; preds = %65, %63
  %67 = phi i64 [ %64, %63 ], [ 0, %65 ], !dbg !6095
  %68 = load i64, i64* %14, align 8, !dbg !6095
  %69 = add i64 %68, %67, !dbg !6095
  store i64 %69, i64* %14, align 8, !dbg !6095
  %70 = load i8*, i8** %8, align 8, !dbg !6095
  %71 = icmp ne i8* %70, null, !dbg !6095
  br i1 %71, label %72, label %74, !dbg !6095

72:                                               ; preds = %66
  %73 = load i64, i64* %12, align 8, !dbg !6095
  br label %75, !dbg !6095

74:                                               ; preds = %66
  br label %75, !dbg !6095

75:                                               ; preds = %74, %72
  %76 = phi i64 [ %73, %72 ], [ 0, %74 ], !dbg !6095
  %77 = icmp ult i64 %69, %76, !dbg !6095
  br i1 %77, label %78, label %79, !dbg !6097

78:                                               ; preds = %75
  store i32 2, i32* %5, align 4, !dbg !6098
  br label %193, !dbg !6098

79:                                               ; preds = %75
  %80 = load i64, i64* %14, align 8, !dbg !6099
  %81 = call i8* @sgx_ocalloc(i64 %80), !dbg !6100
  store i8* %81, i8** %15, align 8, !dbg !6101
  %82 = load i8*, i8** %15, align 8, !dbg !6102
  %83 = icmp eq i8* %82, null, !dbg !6104
  br i1 %83, label %84, label %85, !dbg !6105

84:                                               ; preds = %79
  call void @sgx_ocfree(), !dbg !6106
  store i32 1, i32* %5, align 4, !dbg !6108
  br label %193, !dbg !6108

85:                                               ; preds = %79
  %86 = load i8*, i8** %15, align 8, !dbg !6109
  %87 = bitcast i8* %86 to %struct.ms_ocall_mbedtls_net_recv_t*, !dbg !6110
  store %struct.ms_ocall_mbedtls_net_recv_t* %87, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6111
  %88 = load i8*, i8** %15, align 8, !dbg !6112
  %89 = ptrtoint i8* %88 to i64, !dbg !6113
  %90 = add i64 %89, 32, !dbg !6114
  %91 = inttoptr i64 %90 to i8*, !dbg !6115
  store i8* %91, i8** %15, align 8, !dbg !6116
  %92 = load i64, i64* %14, align 8, !dbg !6117
  %93 = sub i64 %92, 32, !dbg !6117
  store i64 %93, i64* %14, align 8, !dbg !6117
  %94 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6118
  %95 = icmp ne %struct.mbedtls_net_context* %94, null, !dbg !6120
  br i1 %95, label %96, label %119, !dbg !6121

96:                                               ; preds = %85
  %97 = load i8*, i8** %15, align 8, !dbg !6122
  %98 = bitcast i8* %97 to %struct.mbedtls_net_context*, !dbg !6124
  %99 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6125
  %100 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %99, i32 0, i32 1, !dbg !6126
  store %struct.mbedtls_net_context* %98, %struct.mbedtls_net_context** %100, align 8, !dbg !6127
  %101 = load i8*, i8** %15, align 8, !dbg !6128
  store i8* %101, i8** %16, align 8, !dbg !6129
  %102 = load i8*, i8** %15, align 8, !dbg !6130
  %103 = load i64, i64* %14, align 8, !dbg !6132
  %104 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6133
  %105 = bitcast %struct.mbedtls_net_context* %104 to i8*, !dbg !6133
  %106 = load i64, i64* %11, align 8, !dbg !6134
  %107 = call i32 @memcpy_s(i8* %102, i64 %103, i8* %105, i64 %106), !dbg !6135
  %108 = icmp ne i32 %107, 0, !dbg !6135
  br i1 %108, label %109, label %110, !dbg !6136

109:                                              ; preds = %96
  call void @sgx_ocfree(), !dbg !6137
  store i32 1, i32* %5, align 4, !dbg !6139
  br label %193, !dbg !6139

110:                                              ; preds = %96
  %111 = load i8*, i8** %15, align 8, !dbg !6140
  %112 = ptrtoint i8* %111 to i64, !dbg !6141
  %113 = load i64, i64* %11, align 8, !dbg !6142
  %114 = add i64 %112, %113, !dbg !6143
  %115 = inttoptr i64 %114 to i8*, !dbg !6144
  store i8* %115, i8** %15, align 8, !dbg !6145
  %116 = load i64, i64* %11, align 8, !dbg !6146
  %117 = load i64, i64* %14, align 8, !dbg !6147
  %118 = sub i64 %117, %116, !dbg !6147
  store i64 %118, i64* %14, align 8, !dbg !6147
  br label %122, !dbg !6148

119:                                              ; preds = %85
  %120 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6149
  %121 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %120, i32 0, i32 1, !dbg !6151
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %121, align 8, !dbg !6152
  br label %122

122:                                              ; preds = %119, %110
  %123 = load i8*, i8** %8, align 8, !dbg !6153
  %124 = icmp ne i8* %123, null, !dbg !6155
  br i1 %124, label %125, label %145, !dbg !6156

125:                                              ; preds = %122
  %126 = load i8*, i8** %15, align 8, !dbg !6157
  %127 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6159
  %128 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %127, i32 0, i32 2, !dbg !6160
  store i8* %126, i8** %128, align 8, !dbg !6161
  %129 = load i8*, i8** %15, align 8, !dbg !6162
  store i8* %129, i8** %17, align 8, !dbg !6163
  %130 = load i64, i64* %12, align 8, !dbg !6164
  %131 = urem i64 %130, 1, !dbg !6166
  %132 = icmp ne i64 %131, 0, !dbg !6167
  br i1 %132, label %133, label %134, !dbg !6168

133:                                              ; preds = %125
  call void @sgx_ocfree(), !dbg !6169
  store i32 2, i32* %5, align 4, !dbg !6171
  br label %193, !dbg !6171

134:                                              ; preds = %125
  %135 = load i8*, i8** %17, align 8, !dbg !6172
  %136 = load i64, i64* %12, align 8, !dbg !6173
  call void @llvm.memset.p0i8.i64(i8* align 1 %135, i8 0, i64 %136, i1 false), !dbg !6174
  %137 = load i8*, i8** %15, align 8, !dbg !6175
  %138 = ptrtoint i8* %137 to i64, !dbg !6176
  %139 = load i64, i64* %12, align 8, !dbg !6177
  %140 = add i64 %138, %139, !dbg !6178
  %141 = inttoptr i64 %140 to i8*, !dbg !6179
  store i8* %141, i8** %15, align 8, !dbg !6180
  %142 = load i64, i64* %12, align 8, !dbg !6181
  %143 = load i64, i64* %14, align 8, !dbg !6182
  %144 = sub i64 %143, %142, !dbg !6182
  store i64 %144, i64* %14, align 8, !dbg !6182
  br label %148, !dbg !6183

145:                                              ; preds = %122
  %146 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6184
  %147 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %146, i32 0, i32 2, !dbg !6186
  store i8* null, i8** %147, align 8, !dbg !6187
  br label %148

148:                                              ; preds = %145, %134
  %149 = load i64, i64* %9, align 8, !dbg !6188
  %150 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6189
  %151 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %150, i32 0, i32 3, !dbg !6190
  store i64 %149, i64* %151, align 8, !dbg !6191
  %152 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6192
  %153 = bitcast %struct.ms_ocall_mbedtls_net_recv_t* %152 to i8*, !dbg !6192
  %154 = call i32 @sgx_ocall(i32 6, i8* %153), !dbg !6193
  store i32 %154, i32* %10, align 4, !dbg !6194
  %155 = load i32, i32* %10, align 4, !dbg !6195
  %156 = icmp eq i32 %155, 0, !dbg !6197
  br i1 %156, label %157, label %191, !dbg !6198

157:                                              ; preds = %148
  %158 = load i32*, i32** %6, align 8, !dbg !6199
  %159 = icmp ne i32* %158, null, !dbg !6199
  br i1 %159, label %160, label %165, !dbg !6202

160:                                              ; preds = %157
  %161 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6203
  %162 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %161, i32 0, i32 0, !dbg !6204
  %163 = load i32, i32* %162, align 8, !dbg !6204
  %164 = load i32*, i32** %6, align 8, !dbg !6205
  store i32 %163, i32* %164, align 4, !dbg !6206
  br label %165, !dbg !6207

165:                                              ; preds = %160, %157
  %166 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6208
  %167 = icmp ne %struct.mbedtls_net_context* %166, null, !dbg !6208
  br i1 %167, label %168, label %178, !dbg !6210

168:                                              ; preds = %165
  %169 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6211
  %170 = bitcast %struct.mbedtls_net_context* %169 to i8*, !dbg !6214
  %171 = load i64, i64* %11, align 8, !dbg !6215
  %172 = load i8*, i8** %16, align 8, !dbg !6216
  %173 = load i64, i64* %11, align 8, !dbg !6217
  %174 = call i32 @memcpy_s(i8* %170, i64 %171, i8* %172, i64 %173), !dbg !6218
  %175 = icmp ne i32 %174, 0, !dbg !6218
  br i1 %175, label %176, label %177, !dbg !6219

176:                                              ; preds = %168
  call void @sgx_ocfree(), !dbg !6220
  store i32 1, i32* %5, align 4, !dbg !6222
  br label %193, !dbg !6222

177:                                              ; preds = %168
  br label %178, !dbg !6223

178:                                              ; preds = %177, %165
  %179 = load i8*, i8** %8, align 8, !dbg !6224
  %180 = icmp ne i8* %179, null, !dbg !6224
  br i1 %180, label %181, label %190, !dbg !6226

181:                                              ; preds = %178
  %182 = load i8*, i8** %8, align 8, !dbg !6227
  %183 = load i64, i64* %12, align 8, !dbg !6230
  %184 = load i8*, i8** %17, align 8, !dbg !6231
  %185 = load i64, i64* %12, align 8, !dbg !6232
  %186 = call i32 @memcpy_s(i8* %182, i64 %183, i8* %184, i64 %185), !dbg !6233
  %187 = icmp ne i32 %186, 0, !dbg !6233
  br i1 %187, label %188, label %189, !dbg !6234

188:                                              ; preds = %181
  call void @sgx_ocfree(), !dbg !6235
  store i32 1, i32* %5, align 4, !dbg !6237
  br label %193, !dbg !6237

189:                                              ; preds = %181
  br label %190, !dbg !6238

190:                                              ; preds = %189, %178
  br label %191, !dbg !6239

191:                                              ; preds = %190, %148
  call void @sgx_ocfree(), !dbg !6240
  %192 = load i32, i32* %10, align 4, !dbg !6241
  store i32 %192, i32* %5, align 4, !dbg !6242
  br label %193, !dbg !6242

193:                                              ; preds = %191, %188, %176, %133, %109, %84, %78, %59, %39, %28
  %194 = load i32, i32* %5, align 4, !dbg !6243
  ret i32 %194, !dbg !6243
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_send(i32* %0, %struct.mbedtls_net_context* %1, i8* %2, i64 %3) #0 !dbg !6244 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca %struct.mbedtls_net_context*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.ms_ocall_mbedtls_net_recv_t*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !6247, metadata !DIExpression()), !dbg !6248
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %7, metadata !6249, metadata !DIExpression()), !dbg !6250
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6251, metadata !DIExpression()), !dbg !6252
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6253, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6255, metadata !DIExpression()), !dbg !6256
  store i32 0, i32* %10, align 4, !dbg !6256
  call void @llvm.dbg.declare(metadata i64* %11, metadata !6257, metadata !DIExpression()), !dbg !6258
  store i64 4, i64* %11, align 8, !dbg !6258
  call void @llvm.dbg.declare(metadata i64* %12, metadata !6259, metadata !DIExpression()), !dbg !6260
  %17 = load i64, i64* %9, align 8, !dbg !6261
  store i64 %17, i64* %12, align 8, !dbg !6260
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_recv_t** %13, metadata !6262, metadata !DIExpression()), !dbg !6263
  store %struct.ms_ocall_mbedtls_net_recv_t* null, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6263
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6264, metadata !DIExpression()), !dbg !6265
  store i64 32, i64* %14, align 8, !dbg !6265
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6266, metadata !DIExpression()), !dbg !6267
  store i8* null, i8** %15, align 8, !dbg !6267
  call void @llvm.dbg.declare(metadata i8** %16, metadata !6268, metadata !DIExpression()), !dbg !6269
  store i8* null, i8** %16, align 8, !dbg !6269
  br label %18, !dbg !6270

18:                                               ; preds = %4
  %19 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6271
  %20 = icmp ne %struct.mbedtls_net_context* %19, null, !dbg !6271
  br i1 %20, label %21, label %28, !dbg !6271

21:                                               ; preds = %18
  %22 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6271
  %23 = bitcast %struct.mbedtls_net_context* %22 to i8*, !dbg !6271
  %24 = load i64, i64* %11, align 8, !dbg !6271
  %25 = call i32 @sgx_is_within_enclave(i8* %23, i64 %24), !dbg !6271
  %26 = icmp ne i32 %25, 0, !dbg !6271
  br i1 %26, label %28, label %27, !dbg !6274

27:                                               ; preds = %21
  store i32 2, i32* %5, align 4, !dbg !6271
  br label %185, !dbg !6271

28:                                               ; preds = %21, %18
  br label %29, !dbg !6274

29:                                               ; preds = %28
  br label %30, !dbg !6275

30:                                               ; preds = %29
  %31 = load i8*, i8** %8, align 8, !dbg !6276
  %32 = icmp ne i8* %31, null, !dbg !6276
  br i1 %32, label %33, label %39, !dbg !6276

33:                                               ; preds = %30
  %34 = load i8*, i8** %8, align 8, !dbg !6276
  %35 = load i64, i64* %12, align 8, !dbg !6276
  %36 = call i32 @sgx_is_within_enclave(i8* %34, i64 %35), !dbg !6276
  %37 = icmp ne i32 %36, 0, !dbg !6276
  br i1 %37, label %39, label %38, !dbg !6279

38:                                               ; preds = %33
  store i32 2, i32* %5, align 4, !dbg !6276
  br label %185, !dbg !6276

39:                                               ; preds = %33, %30
  br label %40, !dbg !6279

40:                                               ; preds = %39
  %41 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6280
  %42 = icmp ne %struct.mbedtls_net_context* %41, null, !dbg !6280
  br i1 %42, label %43, label %45, !dbg !6280

43:                                               ; preds = %40
  %44 = load i64, i64* %11, align 8, !dbg !6280
  br label %46, !dbg !6280

45:                                               ; preds = %40
  br label %46, !dbg !6280

46:                                               ; preds = %45, %43
  %47 = phi i64 [ %44, %43 ], [ 0, %45 ], !dbg !6280
  %48 = load i64, i64* %14, align 8, !dbg !6280
  %49 = add i64 %48, %47, !dbg !6280
  store i64 %49, i64* %14, align 8, !dbg !6280
  %50 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6280
  %51 = icmp ne %struct.mbedtls_net_context* %50, null, !dbg !6280
  br i1 %51, label %52, label %54, !dbg !6280

52:                                               ; preds = %46
  %53 = load i64, i64* %11, align 8, !dbg !6280
  br label %55, !dbg !6280

54:                                               ; preds = %46
  br label %55, !dbg !6280

55:                                               ; preds = %54, %52
  %56 = phi i64 [ %53, %52 ], [ 0, %54 ], !dbg !6280
  %57 = icmp ult i64 %49, %56, !dbg !6280
  br i1 %57, label %58, label %59, !dbg !6282

58:                                               ; preds = %55
  store i32 2, i32* %5, align 4, !dbg !6283
  br label %185, !dbg !6283

59:                                               ; preds = %55
  %60 = load i8*, i8** %8, align 8, !dbg !6284
  %61 = icmp ne i8* %60, null, !dbg !6284
  br i1 %61, label %62, label %64, !dbg !6284

62:                                               ; preds = %59
  %63 = load i64, i64* %12, align 8, !dbg !6284
  br label %65, !dbg !6284

64:                                               ; preds = %59
  br label %65, !dbg !6284

65:                                               ; preds = %64, %62
  %66 = phi i64 [ %63, %62 ], [ 0, %64 ], !dbg !6284
  %67 = load i64, i64* %14, align 8, !dbg !6284
  %68 = add i64 %67, %66, !dbg !6284
  store i64 %68, i64* %14, align 8, !dbg !6284
  %69 = load i8*, i8** %8, align 8, !dbg !6284
  %70 = icmp ne i8* %69, null, !dbg !6284
  br i1 %70, label %71, label %73, !dbg !6284

71:                                               ; preds = %65
  %72 = load i64, i64* %12, align 8, !dbg !6284
  br label %74, !dbg !6284

73:                                               ; preds = %65
  br label %74, !dbg !6284

74:                                               ; preds = %73, %71
  %75 = phi i64 [ %72, %71 ], [ 0, %73 ], !dbg !6284
  %76 = icmp ult i64 %68, %75, !dbg !6284
  br i1 %76, label %77, label %78, !dbg !6286

77:                                               ; preds = %74
  store i32 2, i32* %5, align 4, !dbg !6287
  br label %185, !dbg !6287

78:                                               ; preds = %74
  %79 = load i64, i64* %14, align 8, !dbg !6288
  %80 = call i8* @sgx_ocalloc(i64 %79), !dbg !6289
  store i8* %80, i8** %15, align 8, !dbg !6290
  %81 = load i8*, i8** %15, align 8, !dbg !6291
  %82 = icmp eq i8* %81, null, !dbg !6293
  br i1 %82, label %83, label %84, !dbg !6294

83:                                               ; preds = %78
  call void @sgx_ocfree(), !dbg !6295
  store i32 1, i32* %5, align 4, !dbg !6297
  br label %185, !dbg !6297

84:                                               ; preds = %78
  %85 = load i8*, i8** %15, align 8, !dbg !6298
  %86 = bitcast i8* %85 to %struct.ms_ocall_mbedtls_net_recv_t*, !dbg !6299
  store %struct.ms_ocall_mbedtls_net_recv_t* %86, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6300
  %87 = load i8*, i8** %15, align 8, !dbg !6301
  %88 = ptrtoint i8* %87 to i64, !dbg !6302
  %89 = add i64 %88, 32, !dbg !6303
  %90 = inttoptr i64 %89 to i8*, !dbg !6304
  store i8* %90, i8** %15, align 8, !dbg !6305
  %91 = load i64, i64* %14, align 8, !dbg !6306
  %92 = sub i64 %91, 32, !dbg !6306
  store i64 %92, i64* %14, align 8, !dbg !6306
  %93 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6307
  %94 = icmp ne %struct.mbedtls_net_context* %93, null, !dbg !6309
  br i1 %94, label %95, label %118, !dbg !6310

95:                                               ; preds = %84
  %96 = load i8*, i8** %15, align 8, !dbg !6311
  %97 = bitcast i8* %96 to %struct.mbedtls_net_context*, !dbg !6313
  %98 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6314
  %99 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %98, i32 0, i32 1, !dbg !6315
  store %struct.mbedtls_net_context* %97, %struct.mbedtls_net_context** %99, align 8, !dbg !6316
  %100 = load i8*, i8** %15, align 8, !dbg !6317
  store i8* %100, i8** %16, align 8, !dbg !6318
  %101 = load i8*, i8** %15, align 8, !dbg !6319
  %102 = load i64, i64* %14, align 8, !dbg !6321
  %103 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6322
  %104 = bitcast %struct.mbedtls_net_context* %103 to i8*, !dbg !6322
  %105 = load i64, i64* %11, align 8, !dbg !6323
  %106 = call i32 @memcpy_s(i8* %101, i64 %102, i8* %104, i64 %105), !dbg !6324
  %107 = icmp ne i32 %106, 0, !dbg !6324
  br i1 %107, label %108, label %109, !dbg !6325

108:                                              ; preds = %95
  call void @sgx_ocfree(), !dbg !6326
  store i32 1, i32* %5, align 4, !dbg !6328
  br label %185, !dbg !6328

109:                                              ; preds = %95
  %110 = load i8*, i8** %15, align 8, !dbg !6329
  %111 = ptrtoint i8* %110 to i64, !dbg !6330
  %112 = load i64, i64* %11, align 8, !dbg !6331
  %113 = add i64 %111, %112, !dbg !6332
  %114 = inttoptr i64 %113 to i8*, !dbg !6333
  store i8* %114, i8** %15, align 8, !dbg !6334
  %115 = load i64, i64* %11, align 8, !dbg !6335
  %116 = load i64, i64* %14, align 8, !dbg !6336
  %117 = sub i64 %116, %115, !dbg !6336
  store i64 %117, i64* %14, align 8, !dbg !6336
  br label %121, !dbg !6337

118:                                              ; preds = %84
  %119 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6338
  %120 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %119, i32 0, i32 1, !dbg !6340
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %120, align 8, !dbg !6341
  br label %121

121:                                              ; preds = %118, %109
  %122 = load i8*, i8** %8, align 8, !dbg !6342
  %123 = icmp ne i8* %122, null, !dbg !6344
  br i1 %123, label %124, label %149, !dbg !6345

124:                                              ; preds = %121
  %125 = load i8*, i8** %15, align 8, !dbg !6346
  %126 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6348
  %127 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %126, i32 0, i32 2, !dbg !6349
  store i8* %125, i8** %127, align 8, !dbg !6350
  %128 = load i64, i64* %12, align 8, !dbg !6351
  %129 = urem i64 %128, 1, !dbg !6353
  %130 = icmp ne i64 %129, 0, !dbg !6354
  br i1 %130, label %131, label %132, !dbg !6355

131:                                              ; preds = %124
  call void @sgx_ocfree(), !dbg !6356
  store i32 2, i32* %5, align 4, !dbg !6358
  br label %185, !dbg !6358

132:                                              ; preds = %124
  %133 = load i8*, i8** %15, align 8, !dbg !6359
  %134 = load i64, i64* %14, align 8, !dbg !6361
  %135 = load i8*, i8** %8, align 8, !dbg !6362
  %136 = load i64, i64* %12, align 8, !dbg !6363
  %137 = call i32 @memcpy_s(i8* %133, i64 %134, i8* %135, i64 %136), !dbg !6364
  %138 = icmp ne i32 %137, 0, !dbg !6364
  br i1 %138, label %139, label %140, !dbg !6365

139:                                              ; preds = %132
  call void @sgx_ocfree(), !dbg !6366
  store i32 1, i32* %5, align 4, !dbg !6368
  br label %185, !dbg !6368

140:                                              ; preds = %132
  %141 = load i8*, i8** %15, align 8, !dbg !6369
  %142 = ptrtoint i8* %141 to i64, !dbg !6370
  %143 = load i64, i64* %12, align 8, !dbg !6371
  %144 = add i64 %142, %143, !dbg !6372
  %145 = inttoptr i64 %144 to i8*, !dbg !6373
  store i8* %145, i8** %15, align 8, !dbg !6374
  %146 = load i64, i64* %12, align 8, !dbg !6375
  %147 = load i64, i64* %14, align 8, !dbg !6376
  %148 = sub i64 %147, %146, !dbg !6376
  store i64 %148, i64* %14, align 8, !dbg !6376
  br label %152, !dbg !6377

149:                                              ; preds = %121
  %150 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6378
  %151 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %150, i32 0, i32 2, !dbg !6380
  store i8* null, i8** %151, align 8, !dbg !6381
  br label %152

152:                                              ; preds = %149, %140
  %153 = load i64, i64* %9, align 8, !dbg !6382
  %154 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6383
  %155 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %154, i32 0, i32 3, !dbg !6384
  store i64 %153, i64* %155, align 8, !dbg !6385
  %156 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6386
  %157 = bitcast %struct.ms_ocall_mbedtls_net_recv_t* %156 to i8*, !dbg !6386
  %158 = call i32 @sgx_ocall(i32 7, i8* %157), !dbg !6387
  store i32 %158, i32* %10, align 4, !dbg !6388
  %159 = load i32, i32* %10, align 4, !dbg !6389
  %160 = icmp eq i32 %159, 0, !dbg !6391
  br i1 %160, label %161, label %183, !dbg !6392

161:                                              ; preds = %152
  %162 = load i32*, i32** %6, align 8, !dbg !6393
  %163 = icmp ne i32* %162, null, !dbg !6393
  br i1 %163, label %164, label %169, !dbg !6396

164:                                              ; preds = %161
  %165 = load %struct.ms_ocall_mbedtls_net_recv_t*, %struct.ms_ocall_mbedtls_net_recv_t** %13, align 8, !dbg !6397
  %166 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_t, %struct.ms_ocall_mbedtls_net_recv_t* %165, i32 0, i32 0, !dbg !6398
  %167 = load i32, i32* %166, align 8, !dbg !6398
  %168 = load i32*, i32** %6, align 8, !dbg !6399
  store i32 %167, i32* %168, align 4, !dbg !6400
  br label %169, !dbg !6401

169:                                              ; preds = %164, %161
  %170 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6402
  %171 = icmp ne %struct.mbedtls_net_context* %170, null, !dbg !6402
  br i1 %171, label %172, label %182, !dbg !6404

172:                                              ; preds = %169
  %173 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %7, align 8, !dbg !6405
  %174 = bitcast %struct.mbedtls_net_context* %173 to i8*, !dbg !6408
  %175 = load i64, i64* %11, align 8, !dbg !6409
  %176 = load i8*, i8** %16, align 8, !dbg !6410
  %177 = load i64, i64* %11, align 8, !dbg !6411
  %178 = call i32 @memcpy_s(i8* %174, i64 %175, i8* %176, i64 %177), !dbg !6412
  %179 = icmp ne i32 %178, 0, !dbg !6412
  br i1 %179, label %180, label %181, !dbg !6413

180:                                              ; preds = %172
  call void @sgx_ocfree(), !dbg !6414
  store i32 1, i32* %5, align 4, !dbg !6416
  br label %185, !dbg !6416

181:                                              ; preds = %172
  br label %182, !dbg !6417

182:                                              ; preds = %181, %169
  br label %183, !dbg !6418

183:                                              ; preds = %182, %152
  call void @sgx_ocfree(), !dbg !6419
  %184 = load i32, i32* %10, align 4, !dbg !6420
  store i32 %184, i32* %5, align 4, !dbg !6421
  br label %185, !dbg !6421

185:                                              ; preds = %183, %180, %139, %131, %108, %83, %77, %58, %38, %27
  %186 = load i32, i32* %5, align 4, !dbg !6422
  ret i32 %186, !dbg !6422
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_recv_timeout(i32* %0, %struct.mbedtls_net_context* %1, i8* %2, i64 %3, i32 %4) #0 !dbg !6423 {
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca %struct.mbedtls_net_context*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.ms_ocall_mbedtls_net_recv_timeout_t*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  store i32* %0, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !6426, metadata !DIExpression()), !dbg !6427
  store %struct.mbedtls_net_context* %1, %struct.mbedtls_net_context** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %8, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6430, metadata !DIExpression()), !dbg !6431
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !6432, metadata !DIExpression()), !dbg !6433
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6436, metadata !DIExpression()), !dbg !6437
  store i32 0, i32* %12, align 4, !dbg !6437
  call void @llvm.dbg.declare(metadata i64* %13, metadata !6438, metadata !DIExpression()), !dbg !6439
  store i64 4, i64* %13, align 8, !dbg !6439
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6440, metadata !DIExpression()), !dbg !6441
  %20 = load i64, i64* %10, align 8, !dbg !6442
  store i64 %20, i64* %14, align 8, !dbg !6441
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, metadata !6443, metadata !DIExpression()), !dbg !6444
  store %struct.ms_ocall_mbedtls_net_recv_timeout_t* null, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6444
  call void @llvm.dbg.declare(metadata i64* %16, metadata !6445, metadata !DIExpression()), !dbg !6446
  store i64 40, i64* %16, align 8, !dbg !6446
  call void @llvm.dbg.declare(metadata i8** %17, metadata !6447, metadata !DIExpression()), !dbg !6448
  store i8* null, i8** %17, align 8, !dbg !6448
  call void @llvm.dbg.declare(metadata i8** %18, metadata !6449, metadata !DIExpression()), !dbg !6450
  store i8* null, i8** %18, align 8, !dbg !6450
  call void @llvm.dbg.declare(metadata i8** %19, metadata !6451, metadata !DIExpression()), !dbg !6452
  store i8* null, i8** %19, align 8, !dbg !6452
  br label %21, !dbg !6453

21:                                               ; preds = %5
  %22 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6454
  %23 = icmp ne %struct.mbedtls_net_context* %22, null, !dbg !6454
  br i1 %23, label %24, label %31, !dbg !6454

24:                                               ; preds = %21
  %25 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6454
  %26 = bitcast %struct.mbedtls_net_context* %25 to i8*, !dbg !6454
  %27 = load i64, i64* %13, align 8, !dbg !6454
  %28 = call i32 @sgx_is_within_enclave(i8* %26, i64 %27), !dbg !6454
  %29 = icmp ne i32 %28, 0, !dbg !6454
  br i1 %29, label %31, label %30, !dbg !6457

30:                                               ; preds = %24
  store i32 2, i32* %6, align 4, !dbg !6454
  br label %198, !dbg !6454

31:                                               ; preds = %24, %21
  br label %32, !dbg !6457

32:                                               ; preds = %31
  br label %33, !dbg !6458

33:                                               ; preds = %32
  %34 = load i8*, i8** %9, align 8, !dbg !6459
  %35 = icmp ne i8* %34, null, !dbg !6459
  br i1 %35, label %36, label %42, !dbg !6459

36:                                               ; preds = %33
  %37 = load i8*, i8** %9, align 8, !dbg !6459
  %38 = load i64, i64* %14, align 8, !dbg !6459
  %39 = call i32 @sgx_is_within_enclave(i8* %37, i64 %38), !dbg !6459
  %40 = icmp ne i32 %39, 0, !dbg !6459
  br i1 %40, label %42, label %41, !dbg !6462

41:                                               ; preds = %36
  store i32 2, i32* %6, align 4, !dbg !6459
  br label %198, !dbg !6459

42:                                               ; preds = %36, %33
  br label %43, !dbg !6462

43:                                               ; preds = %42
  %44 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6463
  %45 = icmp ne %struct.mbedtls_net_context* %44, null, !dbg !6463
  br i1 %45, label %46, label %48, !dbg !6463

46:                                               ; preds = %43
  %47 = load i64, i64* %13, align 8, !dbg !6463
  br label %49, !dbg !6463

48:                                               ; preds = %43
  br label %49, !dbg !6463

49:                                               ; preds = %48, %46
  %50 = phi i64 [ %47, %46 ], [ 0, %48 ], !dbg !6463
  %51 = load i64, i64* %16, align 8, !dbg !6463
  %52 = add i64 %51, %50, !dbg !6463
  store i64 %52, i64* %16, align 8, !dbg !6463
  %53 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6463
  %54 = icmp ne %struct.mbedtls_net_context* %53, null, !dbg !6463
  br i1 %54, label %55, label %57, !dbg !6463

55:                                               ; preds = %49
  %56 = load i64, i64* %13, align 8, !dbg !6463
  br label %58, !dbg !6463

57:                                               ; preds = %49
  br label %58, !dbg !6463

58:                                               ; preds = %57, %55
  %59 = phi i64 [ %56, %55 ], [ 0, %57 ], !dbg !6463
  %60 = icmp ult i64 %52, %59, !dbg !6463
  br i1 %60, label %61, label %62, !dbg !6465

61:                                               ; preds = %58
  store i32 2, i32* %6, align 4, !dbg !6466
  br label %198, !dbg !6466

62:                                               ; preds = %58
  %63 = load i8*, i8** %9, align 8, !dbg !6467
  %64 = icmp ne i8* %63, null, !dbg !6467
  br i1 %64, label %65, label %67, !dbg !6467

65:                                               ; preds = %62
  %66 = load i64, i64* %14, align 8, !dbg !6467
  br label %68, !dbg !6467

67:                                               ; preds = %62
  br label %68, !dbg !6467

68:                                               ; preds = %67, %65
  %69 = phi i64 [ %66, %65 ], [ 0, %67 ], !dbg !6467
  %70 = load i64, i64* %16, align 8, !dbg !6467
  %71 = add i64 %70, %69, !dbg !6467
  store i64 %71, i64* %16, align 8, !dbg !6467
  %72 = load i8*, i8** %9, align 8, !dbg !6467
  %73 = icmp ne i8* %72, null, !dbg !6467
  br i1 %73, label %74, label %76, !dbg !6467

74:                                               ; preds = %68
  %75 = load i64, i64* %14, align 8, !dbg !6467
  br label %77, !dbg !6467

76:                                               ; preds = %68
  br label %77, !dbg !6467

77:                                               ; preds = %76, %74
  %78 = phi i64 [ %75, %74 ], [ 0, %76 ], !dbg !6467
  %79 = icmp ult i64 %71, %78, !dbg !6467
  br i1 %79, label %80, label %81, !dbg !6469

80:                                               ; preds = %77
  store i32 2, i32* %6, align 4, !dbg !6470
  br label %198, !dbg !6470

81:                                               ; preds = %77
  %82 = load i64, i64* %16, align 8, !dbg !6471
  %83 = call i8* @sgx_ocalloc(i64 %82), !dbg !6472
  store i8* %83, i8** %17, align 8, !dbg !6473
  %84 = load i8*, i8** %17, align 8, !dbg !6474
  %85 = icmp eq i8* %84, null, !dbg !6476
  br i1 %85, label %86, label %87, !dbg !6477

86:                                               ; preds = %81
  call void @sgx_ocfree(), !dbg !6478
  store i32 1, i32* %6, align 4, !dbg !6480
  br label %198, !dbg !6480

87:                                               ; preds = %81
  %88 = load i8*, i8** %17, align 8, !dbg !6481
  %89 = bitcast i8* %88 to %struct.ms_ocall_mbedtls_net_recv_timeout_t*, !dbg !6482
  store %struct.ms_ocall_mbedtls_net_recv_timeout_t* %89, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6483
  %90 = load i8*, i8** %17, align 8, !dbg !6484
  %91 = ptrtoint i8* %90 to i64, !dbg !6485
  %92 = add i64 %91, 40, !dbg !6486
  %93 = inttoptr i64 %92 to i8*, !dbg !6487
  store i8* %93, i8** %17, align 8, !dbg !6488
  %94 = load i64, i64* %16, align 8, !dbg !6489
  %95 = sub i64 %94, 40, !dbg !6489
  store i64 %95, i64* %16, align 8, !dbg !6489
  %96 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6490
  %97 = icmp ne %struct.mbedtls_net_context* %96, null, !dbg !6492
  br i1 %97, label %98, label %121, !dbg !6493

98:                                               ; preds = %87
  %99 = load i8*, i8** %17, align 8, !dbg !6494
  %100 = bitcast i8* %99 to %struct.mbedtls_net_context*, !dbg !6496
  %101 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6497
  %102 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %101, i32 0, i32 1, !dbg !6498
  store %struct.mbedtls_net_context* %100, %struct.mbedtls_net_context** %102, align 8, !dbg !6499
  %103 = load i8*, i8** %17, align 8, !dbg !6500
  store i8* %103, i8** %18, align 8, !dbg !6501
  %104 = load i8*, i8** %17, align 8, !dbg !6502
  %105 = load i64, i64* %16, align 8, !dbg !6504
  %106 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6505
  %107 = bitcast %struct.mbedtls_net_context* %106 to i8*, !dbg !6505
  %108 = load i64, i64* %13, align 8, !dbg !6506
  %109 = call i32 @memcpy_s(i8* %104, i64 %105, i8* %107, i64 %108), !dbg !6507
  %110 = icmp ne i32 %109, 0, !dbg !6507
  br i1 %110, label %111, label %112, !dbg !6508

111:                                              ; preds = %98
  call void @sgx_ocfree(), !dbg !6509
  store i32 1, i32* %6, align 4, !dbg !6511
  br label %198, !dbg !6511

112:                                              ; preds = %98
  %113 = load i8*, i8** %17, align 8, !dbg !6512
  %114 = ptrtoint i8* %113 to i64, !dbg !6513
  %115 = load i64, i64* %13, align 8, !dbg !6514
  %116 = add i64 %114, %115, !dbg !6515
  %117 = inttoptr i64 %116 to i8*, !dbg !6516
  store i8* %117, i8** %17, align 8, !dbg !6517
  %118 = load i64, i64* %13, align 8, !dbg !6518
  %119 = load i64, i64* %16, align 8, !dbg !6519
  %120 = sub i64 %119, %118, !dbg !6519
  store i64 %120, i64* %16, align 8, !dbg !6519
  br label %124, !dbg !6520

121:                                              ; preds = %87
  %122 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6521
  %123 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %122, i32 0, i32 1, !dbg !6523
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %123, align 8, !dbg !6524
  br label %124

124:                                              ; preds = %121, %112
  %125 = load i8*, i8** %9, align 8, !dbg !6525
  %126 = icmp ne i8* %125, null, !dbg !6527
  br i1 %126, label %127, label %147, !dbg !6528

127:                                              ; preds = %124
  %128 = load i8*, i8** %17, align 8, !dbg !6529
  %129 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6531
  %130 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %129, i32 0, i32 2, !dbg !6532
  store i8* %128, i8** %130, align 8, !dbg !6533
  %131 = load i8*, i8** %17, align 8, !dbg !6534
  store i8* %131, i8** %19, align 8, !dbg !6535
  %132 = load i64, i64* %14, align 8, !dbg !6536
  %133 = urem i64 %132, 1, !dbg !6538
  %134 = icmp ne i64 %133, 0, !dbg !6539
  br i1 %134, label %135, label %136, !dbg !6540

135:                                              ; preds = %127
  call void @sgx_ocfree(), !dbg !6541
  store i32 2, i32* %6, align 4, !dbg !6543
  br label %198, !dbg !6543

136:                                              ; preds = %127
  %137 = load i8*, i8** %19, align 8, !dbg !6544
  %138 = load i64, i64* %14, align 8, !dbg !6545
  call void @llvm.memset.p0i8.i64(i8* align 1 %137, i8 0, i64 %138, i1 false), !dbg !6546
  %139 = load i8*, i8** %17, align 8, !dbg !6547
  %140 = ptrtoint i8* %139 to i64, !dbg !6548
  %141 = load i64, i64* %14, align 8, !dbg !6549
  %142 = add i64 %140, %141, !dbg !6550
  %143 = inttoptr i64 %142 to i8*, !dbg !6551
  store i8* %143, i8** %17, align 8, !dbg !6552
  %144 = load i64, i64* %14, align 8, !dbg !6553
  %145 = load i64, i64* %16, align 8, !dbg !6554
  %146 = sub i64 %145, %144, !dbg !6554
  store i64 %146, i64* %16, align 8, !dbg !6554
  br label %150, !dbg !6555

147:                                              ; preds = %124
  %148 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6556
  %149 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %148, i32 0, i32 2, !dbg !6558
  store i8* null, i8** %149, align 8, !dbg !6559
  br label %150

150:                                              ; preds = %147, %136
  %151 = load i64, i64* %10, align 8, !dbg !6560
  %152 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6561
  %153 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %152, i32 0, i32 3, !dbg !6562
  store i64 %151, i64* %153, align 8, !dbg !6563
  %154 = load i32, i32* %11, align 4, !dbg !6564
  %155 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6565
  %156 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %155, i32 0, i32 4, !dbg !6566
  store i32 %154, i32* %156, align 8, !dbg !6567
  %157 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6568
  %158 = bitcast %struct.ms_ocall_mbedtls_net_recv_timeout_t* %157 to i8*, !dbg !6568
  %159 = call i32 @sgx_ocall(i32 8, i8* %158), !dbg !6569
  store i32 %159, i32* %12, align 4, !dbg !6570
  %160 = load i32, i32* %12, align 4, !dbg !6571
  %161 = icmp eq i32 %160, 0, !dbg !6573
  br i1 %161, label %162, label %196, !dbg !6574

162:                                              ; preds = %150
  %163 = load i32*, i32** %7, align 8, !dbg !6575
  %164 = icmp ne i32* %163, null, !dbg !6575
  br i1 %164, label %165, label %170, !dbg !6578

165:                                              ; preds = %162
  %166 = load %struct.ms_ocall_mbedtls_net_recv_timeout_t*, %struct.ms_ocall_mbedtls_net_recv_timeout_t** %15, align 8, !dbg !6579
  %167 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_recv_timeout_t, %struct.ms_ocall_mbedtls_net_recv_timeout_t* %166, i32 0, i32 0, !dbg !6580
  %168 = load i32, i32* %167, align 8, !dbg !6580
  %169 = load i32*, i32** %7, align 8, !dbg !6581
  store i32 %168, i32* %169, align 4, !dbg !6582
  br label %170, !dbg !6583

170:                                              ; preds = %165, %162
  %171 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6584
  %172 = icmp ne %struct.mbedtls_net_context* %171, null, !dbg !6584
  br i1 %172, label %173, label %183, !dbg !6586

173:                                              ; preds = %170
  %174 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %8, align 8, !dbg !6587
  %175 = bitcast %struct.mbedtls_net_context* %174 to i8*, !dbg !6590
  %176 = load i64, i64* %13, align 8, !dbg !6591
  %177 = load i8*, i8** %18, align 8, !dbg !6592
  %178 = load i64, i64* %13, align 8, !dbg !6593
  %179 = call i32 @memcpy_s(i8* %175, i64 %176, i8* %177, i64 %178), !dbg !6594
  %180 = icmp ne i32 %179, 0, !dbg !6594
  br i1 %180, label %181, label %182, !dbg !6595

181:                                              ; preds = %173
  call void @sgx_ocfree(), !dbg !6596
  store i32 1, i32* %6, align 4, !dbg !6598
  br label %198, !dbg !6598

182:                                              ; preds = %173
  br label %183, !dbg !6599

183:                                              ; preds = %182, %170
  %184 = load i8*, i8** %9, align 8, !dbg !6600
  %185 = icmp ne i8* %184, null, !dbg !6600
  br i1 %185, label %186, label %195, !dbg !6602

186:                                              ; preds = %183
  %187 = load i8*, i8** %9, align 8, !dbg !6603
  %188 = load i64, i64* %14, align 8, !dbg !6606
  %189 = load i8*, i8** %19, align 8, !dbg !6607
  %190 = load i64, i64* %14, align 8, !dbg !6608
  %191 = call i32 @memcpy_s(i8* %187, i64 %188, i8* %189, i64 %190), !dbg !6609
  %192 = icmp ne i32 %191, 0, !dbg !6609
  br i1 %192, label %193, label %194, !dbg !6610

193:                                              ; preds = %186
  call void @sgx_ocfree(), !dbg !6611
  store i32 1, i32* %6, align 4, !dbg !6613
  br label %198, !dbg !6613

194:                                              ; preds = %186
  br label %195, !dbg !6614

195:                                              ; preds = %194, %183
  br label %196, !dbg !6615

196:                                              ; preds = %195, %150
  call void @sgx_ocfree(), !dbg !6616
  %197 = load i32, i32* %12, align 4, !dbg !6617
  store i32 %197, i32* %6, align 4, !dbg !6618
  br label %198, !dbg !6618

198:                                              ; preds = %196, %193, %181, %135, %111, %86, %80, %61, %41, %30
  %199 = load i32, i32* %6, align 4, !dbg !6619
  ret i32 %199, !dbg !6619
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_mbedtls_net_free(%struct.mbedtls_net_context* %0) #0 !dbg !6620 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_net_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.ms_ocall_mbedtls_net_free_t*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.mbedtls_net_context* %0, %struct.mbedtls_net_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %3, metadata !6623, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6625, metadata !DIExpression()), !dbg !6626
  store i32 0, i32* %4, align 4, !dbg !6626
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6627, metadata !DIExpression()), !dbg !6628
  store i64 4, i64* %5, align 8, !dbg !6628
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_mbedtls_net_free_t** %6, metadata !6629, metadata !DIExpression()), !dbg !6630
  store %struct.ms_ocall_mbedtls_net_free_t* null, %struct.ms_ocall_mbedtls_net_free_t** %6, align 8, !dbg !6630
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6631, metadata !DIExpression()), !dbg !6632
  store i64 8, i64* %7, align 8, !dbg !6632
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6633, metadata !DIExpression()), !dbg !6634
  store i8* null, i8** %8, align 8, !dbg !6634
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6635, metadata !DIExpression()), !dbg !6636
  store i8* null, i8** %9, align 8, !dbg !6636
  br label %10, !dbg !6637

10:                                               ; preds = %1
  %11 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6638
  %12 = icmp ne %struct.mbedtls_net_context* %11, null, !dbg !6638
  br i1 %12, label %13, label %20, !dbg !6638

13:                                               ; preds = %10
  %14 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6638
  %15 = bitcast %struct.mbedtls_net_context* %14 to i8*, !dbg !6638
  %16 = load i64, i64* %5, align 8, !dbg !6638
  %17 = call i32 @sgx_is_within_enclave(i8* %15, i64 %16), !dbg !6638
  %18 = icmp ne i32 %17, 0, !dbg !6638
  br i1 %18, label %20, label %19, !dbg !6641

19:                                               ; preds = %13
  store i32 2, i32* %2, align 4, !dbg !6638
  br label %105, !dbg !6638

20:                                               ; preds = %13, %10
  br label %21, !dbg !6641

21:                                               ; preds = %20
  %22 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6642
  %23 = icmp ne %struct.mbedtls_net_context* %22, null, !dbg !6642
  br i1 %23, label %24, label %26, !dbg !6642

24:                                               ; preds = %21
  %25 = load i64, i64* %5, align 8, !dbg !6642
  br label %27, !dbg !6642

26:                                               ; preds = %21
  br label %27, !dbg !6642

27:                                               ; preds = %26, %24
  %28 = phi i64 [ %25, %24 ], [ 0, %26 ], !dbg !6642
  %29 = load i64, i64* %7, align 8, !dbg !6642
  %30 = add i64 %29, %28, !dbg !6642
  store i64 %30, i64* %7, align 8, !dbg !6642
  %31 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6642
  %32 = icmp ne %struct.mbedtls_net_context* %31, null, !dbg !6642
  br i1 %32, label %33, label %35, !dbg !6642

33:                                               ; preds = %27
  %34 = load i64, i64* %5, align 8, !dbg !6642
  br label %36, !dbg !6642

35:                                               ; preds = %27
  br label %36, !dbg !6642

36:                                               ; preds = %35, %33
  %37 = phi i64 [ %34, %33 ], [ 0, %35 ], !dbg !6642
  %38 = icmp ult i64 %30, %37, !dbg !6642
  br i1 %38, label %39, label %40, !dbg !6644

39:                                               ; preds = %36
  store i32 2, i32* %2, align 4, !dbg !6645
  br label %105, !dbg !6645

40:                                               ; preds = %36
  %41 = load i64, i64* %7, align 8, !dbg !6646
  %42 = call i8* @sgx_ocalloc(i64 %41), !dbg !6647
  store i8* %42, i8** %8, align 8, !dbg !6648
  %43 = load i8*, i8** %8, align 8, !dbg !6649
  %44 = icmp eq i8* %43, null, !dbg !6651
  br i1 %44, label %45, label %46, !dbg !6652

45:                                               ; preds = %40
  call void @sgx_ocfree(), !dbg !6653
  store i32 1, i32* %2, align 4, !dbg !6655
  br label %105, !dbg !6655

46:                                               ; preds = %40
  %47 = load i8*, i8** %8, align 8, !dbg !6656
  %48 = bitcast i8* %47 to %struct.ms_ocall_mbedtls_net_free_t*, !dbg !6657
  store %struct.ms_ocall_mbedtls_net_free_t* %48, %struct.ms_ocall_mbedtls_net_free_t** %6, align 8, !dbg !6658
  %49 = load i8*, i8** %8, align 8, !dbg !6659
  %50 = ptrtoint i8* %49 to i64, !dbg !6660
  %51 = add i64 %50, 8, !dbg !6661
  %52 = inttoptr i64 %51 to i8*, !dbg !6662
  store i8* %52, i8** %8, align 8, !dbg !6663
  %53 = load i64, i64* %7, align 8, !dbg !6664
  %54 = sub i64 %53, 8, !dbg !6664
  store i64 %54, i64* %7, align 8, !dbg !6664
  %55 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6665
  %56 = icmp ne %struct.mbedtls_net_context* %55, null, !dbg !6667
  br i1 %56, label %57, label %80, !dbg !6668

57:                                               ; preds = %46
  %58 = load i8*, i8** %8, align 8, !dbg !6669
  %59 = bitcast i8* %58 to %struct.mbedtls_net_context*, !dbg !6671
  %60 = load %struct.ms_ocall_mbedtls_net_free_t*, %struct.ms_ocall_mbedtls_net_free_t** %6, align 8, !dbg !6672
  %61 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_free_t, %struct.ms_ocall_mbedtls_net_free_t* %60, i32 0, i32 0, !dbg !6673
  store %struct.mbedtls_net_context* %59, %struct.mbedtls_net_context** %61, align 8, !dbg !6674
  %62 = load i8*, i8** %8, align 8, !dbg !6675
  store i8* %62, i8** %9, align 8, !dbg !6676
  %63 = load i8*, i8** %8, align 8, !dbg !6677
  %64 = load i64, i64* %7, align 8, !dbg !6679
  %65 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6680
  %66 = bitcast %struct.mbedtls_net_context* %65 to i8*, !dbg !6680
  %67 = load i64, i64* %5, align 8, !dbg !6681
  %68 = call i32 @memcpy_s(i8* %63, i64 %64, i8* %66, i64 %67), !dbg !6682
  %69 = icmp ne i32 %68, 0, !dbg !6682
  br i1 %69, label %70, label %71, !dbg !6683

70:                                               ; preds = %57
  call void @sgx_ocfree(), !dbg !6684
  store i32 1, i32* %2, align 4, !dbg !6686
  br label %105, !dbg !6686

71:                                               ; preds = %57
  %72 = load i8*, i8** %8, align 8, !dbg !6687
  %73 = ptrtoint i8* %72 to i64, !dbg !6688
  %74 = load i64, i64* %5, align 8, !dbg !6689
  %75 = add i64 %73, %74, !dbg !6690
  %76 = inttoptr i64 %75 to i8*, !dbg !6691
  store i8* %76, i8** %8, align 8, !dbg !6692
  %77 = load i64, i64* %5, align 8, !dbg !6693
  %78 = load i64, i64* %7, align 8, !dbg !6694
  %79 = sub i64 %78, %77, !dbg !6694
  store i64 %79, i64* %7, align 8, !dbg !6694
  br label %83, !dbg !6695

80:                                               ; preds = %46
  %81 = load %struct.ms_ocall_mbedtls_net_free_t*, %struct.ms_ocall_mbedtls_net_free_t** %6, align 8, !dbg !6696
  %82 = getelementptr inbounds %struct.ms_ocall_mbedtls_net_free_t, %struct.ms_ocall_mbedtls_net_free_t* %81, i32 0, i32 0, !dbg !6698
  store %struct.mbedtls_net_context* null, %struct.mbedtls_net_context** %82, align 8, !dbg !6699
  br label %83

83:                                               ; preds = %80, %71
  %84 = load %struct.ms_ocall_mbedtls_net_free_t*, %struct.ms_ocall_mbedtls_net_free_t** %6, align 8, !dbg !6700
  %85 = bitcast %struct.ms_ocall_mbedtls_net_free_t* %84 to i8*, !dbg !6700
  %86 = call i32 @sgx_ocall(i32 9, i8* %85), !dbg !6701
  store i32 %86, i32* %4, align 4, !dbg !6702
  %87 = load i32, i32* %4, align 4, !dbg !6703
  %88 = icmp eq i32 %87, 0, !dbg !6705
  br i1 %88, label %89, label %103, !dbg !6706

89:                                               ; preds = %83
  %90 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6707
  %91 = icmp ne %struct.mbedtls_net_context* %90, null, !dbg !6707
  br i1 %91, label %92, label %102, !dbg !6710

92:                                               ; preds = %89
  %93 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %3, align 8, !dbg !6711
  %94 = bitcast %struct.mbedtls_net_context* %93 to i8*, !dbg !6714
  %95 = load i64, i64* %5, align 8, !dbg !6715
  %96 = load i8*, i8** %9, align 8, !dbg !6716
  %97 = load i64, i64* %5, align 8, !dbg !6717
  %98 = call i32 @memcpy_s(i8* %94, i64 %95, i8* %96, i64 %97), !dbg !6718
  %99 = icmp ne i32 %98, 0, !dbg !6718
  br i1 %99, label %100, label %101, !dbg !6719

100:                                              ; preds = %92
  call void @sgx_ocfree(), !dbg !6720
  store i32 1, i32* %2, align 4, !dbg !6722
  br label %105, !dbg !6722

101:                                              ; preds = %92
  br label %102, !dbg !6723

102:                                              ; preds = %101, %89
  br label %103, !dbg !6724

103:                                              ; preds = %102, %83
  call void @sgx_ocfree(), !dbg !6725
  %104 = load i32, i32* %4, align 4, !dbg !6726
  store i32 %104, i32* %2, align 4, !dbg !6727
  br label %105, !dbg !6727

105:                                              ; preds = %103, %100, %70, %45, %39, %19
  %106 = load i32, i32* %2, align 4, !dbg !6728
  ret i32 %106, !dbg !6728
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ocall_print_string(i32* %0, i8* %1) #0 !dbg !6729 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.ms_ocall_print_string_t*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !6732, metadata !DIExpression()), !dbg !6733
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6734, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6736, metadata !DIExpression()), !dbg !6737
  store i32 0, i32* %6, align 4, !dbg !6737
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6738, metadata !DIExpression()), !dbg !6739
  %11 = load i8*, i8** %5, align 8, !dbg !6740
  %12 = icmp ne i8* %11, null, !dbg !6740
  br i1 %12, label %13, label %17, !dbg !6740

13:                                               ; preds = %2
  %14 = load i8*, i8** %5, align 8, !dbg !6741
  %15 = call i64 @strlen(i8* %14), !dbg !6742
  %16 = add i64 %15, 1, !dbg !6743
  br label %18, !dbg !6740

17:                                               ; preds = %2
  br label %18, !dbg !6740

18:                                               ; preds = %17, %13
  %19 = phi i64 [ %16, %13 ], [ 0, %17 ], !dbg !6740
  store i64 %19, i64* %7, align 8, !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_print_string_t** %8, metadata !6744, metadata !DIExpression()), !dbg !6745
  store %struct.ms_ocall_print_string_t* null, %struct.ms_ocall_print_string_t** %8, align 8, !dbg !6745
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6746, metadata !DIExpression()), !dbg !6747
  store i64 16, i64* %9, align 8, !dbg !6747
  call void @llvm.dbg.declare(metadata i8** %10, metadata !6748, metadata !DIExpression()), !dbg !6749
  store i8* null, i8** %10, align 8, !dbg !6749
  br label %20, !dbg !6750

20:                                               ; preds = %18
  %21 = load i8*, i8** %5, align 8, !dbg !6751
  %22 = icmp ne i8* %21, null, !dbg !6751
  br i1 %22, label %23, label %29, !dbg !6751

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 8, !dbg !6751
  %25 = load i64, i64* %7, align 8, !dbg !6751
  %26 = call i32 @sgx_is_within_enclave(i8* %24, i64 %25), !dbg !6751
  %27 = icmp ne i32 %26, 0, !dbg !6751
  br i1 %27, label %29, label %28, !dbg !6754

28:                                               ; preds = %23
  store i32 2, i32* %3, align 4, !dbg !6751
  br label %111, !dbg !6751

29:                                               ; preds = %23, %20
  br label %30, !dbg !6754

30:                                               ; preds = %29
  %31 = load i8*, i8** %5, align 8, !dbg !6755
  %32 = icmp ne i8* %31, null, !dbg !6755
  br i1 %32, label %33, label %35, !dbg !6755

33:                                               ; preds = %30
  %34 = load i64, i64* %7, align 8, !dbg !6755
  br label %36, !dbg !6755

35:                                               ; preds = %30
  br label %36, !dbg !6755

36:                                               ; preds = %35, %33
  %37 = phi i64 [ %34, %33 ], [ 0, %35 ], !dbg !6755
  %38 = load i64, i64* %9, align 8, !dbg !6755
  %39 = add i64 %38, %37, !dbg !6755
  store i64 %39, i64* %9, align 8, !dbg !6755
  %40 = load i8*, i8** %5, align 8, !dbg !6755
  %41 = icmp ne i8* %40, null, !dbg !6755
  br i1 %41, label %42, label %44, !dbg !6755

42:                                               ; preds = %36
  %43 = load i64, i64* %7, align 8, !dbg !6755
  br label %45, !dbg !6755

44:                                               ; preds = %36
  br label %45, !dbg !6755

45:                                               ; preds = %44, %42
  %46 = phi i64 [ %43, %42 ], [ 0, %44 ], !dbg !6755
  %47 = icmp ult i64 %39, %46, !dbg !6755
  br i1 %47, label %48, label %49, !dbg !6757

48:                                               ; preds = %45
  store i32 2, i32* %3, align 4, !dbg !6758
  br label %111, !dbg !6758

49:                                               ; preds = %45
  %50 = load i64, i64* %9, align 8, !dbg !6759
  %51 = call i8* @sgx_ocalloc(i64 %50), !dbg !6760
  store i8* %51, i8** %10, align 8, !dbg !6761
  %52 = load i8*, i8** %10, align 8, !dbg !6762
  %53 = icmp eq i8* %52, null, !dbg !6764
  br i1 %53, label %54, label %55, !dbg !6765

54:                                               ; preds = %49
  call void @sgx_ocfree(), !dbg !6766
  store i32 1, i32* %3, align 4, !dbg !6768
  br label %111, !dbg !6768

55:                                               ; preds = %49
  %56 = load i8*, i8** %10, align 8, !dbg !6769
  %57 = bitcast i8* %56 to %struct.ms_ocall_print_string_t*, !dbg !6770
  store %struct.ms_ocall_print_string_t* %57, %struct.ms_ocall_print_string_t** %8, align 8, !dbg !6771
  %58 = load i8*, i8** %10, align 8, !dbg !6772
  %59 = ptrtoint i8* %58 to i64, !dbg !6773
  %60 = add i64 %59, 16, !dbg !6774
  %61 = inttoptr i64 %60 to i8*, !dbg !6775
  store i8* %61, i8** %10, align 8, !dbg !6776
  %62 = load i64, i64* %9, align 8, !dbg !6777
  %63 = sub i64 %62, 16, !dbg !6777
  store i64 %63, i64* %9, align 8, !dbg !6777
  %64 = load i8*, i8** %5, align 8, !dbg !6778
  %65 = icmp ne i8* %64, null, !dbg !6780
  br i1 %65, label %66, label %91, !dbg !6781

66:                                               ; preds = %55
  %67 = load i8*, i8** %10, align 8, !dbg !6782
  %68 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %8, align 8, !dbg !6784
  %69 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %68, i32 0, i32 1, !dbg !6785
  store i8* %67, i8** %69, align 8, !dbg !6786
  %70 = load i64, i64* %7, align 8, !dbg !6787
  %71 = urem i64 %70, 1, !dbg !6789
  %72 = icmp ne i64 %71, 0, !dbg !6790
  br i1 %72, label %73, label %74, !dbg !6791

73:                                               ; preds = %66
  call void @sgx_ocfree(), !dbg !6792
  store i32 2, i32* %3, align 4, !dbg !6794
  br label %111, !dbg !6794

74:                                               ; preds = %66
  %75 = load i8*, i8** %10, align 8, !dbg !6795
  %76 = load i64, i64* %9, align 8, !dbg !6797
  %77 = load i8*, i8** %5, align 8, !dbg !6798
  %78 = load i64, i64* %7, align 8, !dbg !6799
  %79 = call i32 @memcpy_s(i8* %75, i64 %76, i8* %77, i64 %78), !dbg !6800
  %80 = icmp ne i32 %79, 0, !dbg !6800
  br i1 %80, label %81, label %82, !dbg !6801

81:                                               ; preds = %74
  call void @sgx_ocfree(), !dbg !6802
  store i32 1, i32* %3, align 4, !dbg !6804
  br label %111, !dbg !6804

82:                                               ; preds = %74
  %83 = load i8*, i8** %10, align 8, !dbg !6805
  %84 = ptrtoint i8* %83 to i64, !dbg !6806
  %85 = load i64, i64* %7, align 8, !dbg !6807
  %86 = add i64 %84, %85, !dbg !6808
  %87 = inttoptr i64 %86 to i8*, !dbg !6809
  store i8* %87, i8** %10, align 8, !dbg !6810
  %88 = load i64, i64* %7, align 8, !dbg !6811
  %89 = load i64, i64* %9, align 8, !dbg !6812
  %90 = sub i64 %89, %88, !dbg !6812
  store i64 %90, i64* %9, align 8, !dbg !6812
  br label %94, !dbg !6813

91:                                               ; preds = %55
  %92 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %8, align 8, !dbg !6814
  %93 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %92, i32 0, i32 1, !dbg !6816
  store i8* null, i8** %93, align 8, !dbg !6817
  br label %94

94:                                               ; preds = %91, %82
  %95 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %8, align 8, !dbg !6818
  %96 = bitcast %struct.ms_ocall_print_string_t* %95 to i8*, !dbg !6818
  %97 = call i32 @sgx_ocall(i32 10, i8* %96), !dbg !6819
  store i32 %97, i32* %6, align 4, !dbg !6820
  %98 = load i32, i32* %6, align 4, !dbg !6821
  %99 = icmp eq i32 %98, 0, !dbg !6823
  br i1 %99, label %100, label %109, !dbg !6824

100:                                              ; preds = %94
  %101 = load i32*, i32** %4, align 8, !dbg !6825
  %102 = icmp ne i32* %101, null, !dbg !6825
  br i1 %102, label %103, label %108, !dbg !6828

103:                                              ; preds = %100
  %104 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %8, align 8, !dbg !6829
  %105 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %104, i32 0, i32 0, !dbg !6830
  %106 = load i32, i32* %105, align 8, !dbg !6830
  %107 = load i32*, i32** %4, align 8, !dbg !6831
  store i32 %106, i32* %107, align 4, !dbg !6832
  br label %108, !dbg !6833

108:                                              ; preds = %103, %100
  br label %109, !dbg !6834

109:                                              ; preds = %108, %94
  call void @sgx_ocfree(), !dbg !6835
  %110 = load i32, i32* %6, align 4, !dbg !6836
  store i32 %110, i32* %3, align 4, !dbg !6837
  br label %111, !dbg !6837

111:                                              ; preds = %109, %81, %73, %54, %48, %28
  %112 = load i32, i32* %3, align 4, !dbg !6838
  ret i32 %112, !dbg !6838
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @sgx_oc_cpuidex(i32* %0, i32 %1, i32 %2) #0 !dbg !6839 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.ms_sgx_oc_cpuidex_t*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i32* %0, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6846, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6848, metadata !DIExpression()), !dbg !6849
  store i32 0, i32* %8, align 4, !dbg !6849
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6850, metadata !DIExpression()), !dbg !6851
  store i64 16, i64* %9, align 8, !dbg !6851
  call void @llvm.dbg.declare(metadata %struct.ms_sgx_oc_cpuidex_t** %10, metadata !6852, metadata !DIExpression()), !dbg !6853
  store %struct.ms_sgx_oc_cpuidex_t* null, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %11, metadata !6854, metadata !DIExpression()), !dbg !6855
  store i64 16, i64* %11, align 8, !dbg !6855
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6856, metadata !DIExpression()), !dbg !6857
  store i8* null, i8** %12, align 8, !dbg !6857
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6858, metadata !DIExpression()), !dbg !6859
  store i8* null, i8** %13, align 8, !dbg !6859
  br label %14, !dbg !6860

14:                                               ; preds = %3
  %15 = load i32*, i32** %5, align 8, !dbg !6861
  %16 = icmp ne i32* %15, null, !dbg !6861
  br i1 %16, label %17, label %24, !dbg !6861

17:                                               ; preds = %14
  %18 = load i32*, i32** %5, align 8, !dbg !6861
  %19 = bitcast i32* %18 to i8*, !dbg !6861
  %20 = load i64, i64* %9, align 8, !dbg !6861
  %21 = call i32 @sgx_is_within_enclave(i8* %19, i64 %20), !dbg !6861
  %22 = icmp ne i32 %21, 0, !dbg !6861
  br i1 %22, label %24, label %23, !dbg !6864

23:                                               ; preds = %17
  store i32 2, i32* %4, align 4, !dbg !6861
  br label %113, !dbg !6861

24:                                               ; preds = %17, %14
  br label %25, !dbg !6864

25:                                               ; preds = %24
  %26 = load i32*, i32** %5, align 8, !dbg !6865
  %27 = icmp ne i32* %26, null, !dbg !6865
  br i1 %27, label %28, label %30, !dbg !6865

28:                                               ; preds = %25
  %29 = load i64, i64* %9, align 8, !dbg !6865
  br label %31, !dbg !6865

30:                                               ; preds = %25
  br label %31, !dbg !6865

31:                                               ; preds = %30, %28
  %32 = phi i64 [ %29, %28 ], [ 0, %30 ], !dbg !6865
  %33 = load i64, i64* %11, align 8, !dbg !6865
  %34 = add i64 %33, %32, !dbg !6865
  store i64 %34, i64* %11, align 8, !dbg !6865
  %35 = load i32*, i32** %5, align 8, !dbg !6865
  %36 = icmp ne i32* %35, null, !dbg !6865
  br i1 %36, label %37, label %39, !dbg !6865

37:                                               ; preds = %31
  %38 = load i64, i64* %9, align 8, !dbg !6865
  br label %40, !dbg !6865

39:                                               ; preds = %31
  br label %40, !dbg !6865

40:                                               ; preds = %39, %37
  %41 = phi i64 [ %38, %37 ], [ 0, %39 ], !dbg !6865
  %42 = icmp ult i64 %34, %41, !dbg !6865
  br i1 %42, label %43, label %44, !dbg !6867

43:                                               ; preds = %40
  store i32 2, i32* %4, align 4, !dbg !6868
  br label %113, !dbg !6868

44:                                               ; preds = %40
  %45 = load i64, i64* %11, align 8, !dbg !6869
  %46 = call i8* @sgx_ocalloc(i64 %45), !dbg !6870
  store i8* %46, i8** %12, align 8, !dbg !6871
  %47 = load i8*, i8** %12, align 8, !dbg !6872
  %48 = icmp eq i8* %47, null, !dbg !6874
  br i1 %48, label %49, label %50, !dbg !6875

49:                                               ; preds = %44
  call void @sgx_ocfree(), !dbg !6876
  store i32 1, i32* %4, align 4, !dbg !6878
  br label %113, !dbg !6878

50:                                               ; preds = %44
  %51 = load i8*, i8** %12, align 8, !dbg !6879
  %52 = bitcast i8* %51 to %struct.ms_sgx_oc_cpuidex_t*, !dbg !6880
  store %struct.ms_sgx_oc_cpuidex_t* %52, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6881
  %53 = load i8*, i8** %12, align 8, !dbg !6882
  %54 = ptrtoint i8* %53 to i64, !dbg !6883
  %55 = add i64 %54, 16, !dbg !6884
  %56 = inttoptr i64 %55 to i8*, !dbg !6885
  store i8* %56, i8** %12, align 8, !dbg !6886
  %57 = load i64, i64* %11, align 8, !dbg !6887
  %58 = sub i64 %57, 16, !dbg !6887
  store i64 %58, i64* %11, align 8, !dbg !6887
  %59 = load i32*, i32** %5, align 8, !dbg !6888
  %60 = icmp ne i32* %59, null, !dbg !6890
  br i1 %60, label %61, label %82, !dbg !6891

61:                                               ; preds = %50
  %62 = load i8*, i8** %12, align 8, !dbg !6892
  %63 = bitcast i8* %62 to i32*, !dbg !6894
  %64 = load %struct.ms_sgx_oc_cpuidex_t*, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6895
  %65 = getelementptr inbounds %struct.ms_sgx_oc_cpuidex_t, %struct.ms_sgx_oc_cpuidex_t* %64, i32 0, i32 0, !dbg !6896
  store i32* %63, i32** %65, align 8, !dbg !6897
  %66 = load i8*, i8** %12, align 8, !dbg !6898
  store i8* %66, i8** %13, align 8, !dbg !6899
  %67 = load i64, i64* %9, align 8, !dbg !6900
  %68 = urem i64 %67, 4, !dbg !6902
  %69 = icmp ne i64 %68, 0, !dbg !6903
  br i1 %69, label %70, label %71, !dbg !6904

70:                                               ; preds = %61
  call void @sgx_ocfree(), !dbg !6905
  store i32 2, i32* %4, align 4, !dbg !6907
  br label %113, !dbg !6907

71:                                               ; preds = %61
  %72 = load i8*, i8** %13, align 8, !dbg !6908
  %73 = load i64, i64* %9, align 8, !dbg !6909
  call void @llvm.memset.p0i8.i64(i8* align 1 %72, i8 0, i64 %73, i1 false), !dbg !6910
  %74 = load i8*, i8** %12, align 8, !dbg !6911
  %75 = ptrtoint i8* %74 to i64, !dbg !6912
  %76 = load i64, i64* %9, align 8, !dbg !6913
  %77 = add i64 %75, %76, !dbg !6914
  %78 = inttoptr i64 %77 to i8*, !dbg !6915
  store i8* %78, i8** %12, align 8, !dbg !6916
  %79 = load i64, i64* %9, align 8, !dbg !6917
  %80 = load i64, i64* %11, align 8, !dbg !6918
  %81 = sub i64 %80, %79, !dbg !6918
  store i64 %81, i64* %11, align 8, !dbg !6918
  br label %85, !dbg !6919

82:                                               ; preds = %50
  %83 = load %struct.ms_sgx_oc_cpuidex_t*, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6920
  %84 = getelementptr inbounds %struct.ms_sgx_oc_cpuidex_t, %struct.ms_sgx_oc_cpuidex_t* %83, i32 0, i32 0, !dbg !6922
  store i32* null, i32** %84, align 8, !dbg !6923
  br label %85

85:                                               ; preds = %82, %71
  %86 = load i32, i32* %6, align 4, !dbg !6924
  %87 = load %struct.ms_sgx_oc_cpuidex_t*, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6925
  %88 = getelementptr inbounds %struct.ms_sgx_oc_cpuidex_t, %struct.ms_sgx_oc_cpuidex_t* %87, i32 0, i32 1, !dbg !6926
  store i32 %86, i32* %88, align 8, !dbg !6927
  %89 = load i32, i32* %7, align 4, !dbg !6928
  %90 = load %struct.ms_sgx_oc_cpuidex_t*, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6929
  %91 = getelementptr inbounds %struct.ms_sgx_oc_cpuidex_t, %struct.ms_sgx_oc_cpuidex_t* %90, i32 0, i32 2, !dbg !6930
  store i32 %89, i32* %91, align 4, !dbg !6931
  %92 = load %struct.ms_sgx_oc_cpuidex_t*, %struct.ms_sgx_oc_cpuidex_t** %10, align 8, !dbg !6932
  %93 = bitcast %struct.ms_sgx_oc_cpuidex_t* %92 to i8*, !dbg !6932
  %94 = call i32 @sgx_ocall(i32 11, i8* %93), !dbg !6933
  store i32 %94, i32* %8, align 4, !dbg !6934
  %95 = load i32, i32* %8, align 4, !dbg !6935
  %96 = icmp eq i32 %95, 0, !dbg !6937
  br i1 %96, label %97, label %111, !dbg !6938

97:                                               ; preds = %85
  %98 = load i32*, i32** %5, align 8, !dbg !6939
  %99 = icmp ne i32* %98, null, !dbg !6939
  br i1 %99, label %100, label %110, !dbg !6942

100:                                              ; preds = %97
  %101 = load i32*, i32** %5, align 8, !dbg !6943
  %102 = bitcast i32* %101 to i8*, !dbg !6946
  %103 = load i64, i64* %9, align 8, !dbg !6947
  %104 = load i8*, i8** %13, align 8, !dbg !6948
  %105 = load i64, i64* %9, align 8, !dbg !6949
  %106 = call i32 @memcpy_s(i8* %102, i64 %103, i8* %104, i64 %105), !dbg !6950
  %107 = icmp ne i32 %106, 0, !dbg !6950
  br i1 %107, label %108, label %109, !dbg !6951

108:                                              ; preds = %100
  call void @sgx_ocfree(), !dbg !6952
  store i32 1, i32* %4, align 4, !dbg !6954
  br label %113, !dbg !6954

109:                                              ; preds = %100
  br label %110, !dbg !6955

110:                                              ; preds = %109, %97
  br label %111, !dbg !6956

111:                                              ; preds = %110, %85
  call void @sgx_ocfree(), !dbg !6957
  %112 = load i32, i32* %8, align 4, !dbg !6958
  store i32 %112, i32* %4, align 4, !dbg !6959
  br label %113, !dbg !6959

113:                                              ; preds = %111, %108, %70, %49, %43, %23
  %114 = load i32, i32* %4, align 4, !dbg !6960
  ret i32 %114, !dbg !6960
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @sgx_thread_wait_untrusted_event_ocall(i32* %0, i8* %1) #0 !dbg !6961 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.ms_ocall_print_string_t*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !6964, metadata !DIExpression()), !dbg !6965
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6966, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6968, metadata !DIExpression()), !dbg !6969
  store i32 0, i32* %6, align 4, !dbg !6969
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_print_string_t** %7, metadata !6970, metadata !DIExpression()), !dbg !6971
  store %struct.ms_ocall_print_string_t* null, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !6971
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6972, metadata !DIExpression()), !dbg !6973
  store i64 16, i64* %8, align 8, !dbg !6973
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6974, metadata !DIExpression()), !dbg !6975
  store i8* null, i8** %9, align 8, !dbg !6975
  %10 = load i64, i64* %8, align 8, !dbg !6976
  %11 = call i8* @sgx_ocalloc(i64 %10), !dbg !6977
  store i8* %11, i8** %9, align 8, !dbg !6978
  %12 = load i8*, i8** %9, align 8, !dbg !6979
  %13 = icmp eq i8* %12, null, !dbg !6981
  br i1 %13, label %14, label %15, !dbg !6982

14:                                               ; preds = %2
  call void @sgx_ocfree(), !dbg !6983
  store i32 1, i32* %3, align 4, !dbg !6985
  br label %43, !dbg !6985

15:                                               ; preds = %2
  %16 = load i8*, i8** %9, align 8, !dbg !6986
  %17 = bitcast i8* %16 to %struct.ms_ocall_print_string_t*, !dbg !6987
  store %struct.ms_ocall_print_string_t* %17, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !6988
  %18 = load i8*, i8** %9, align 8, !dbg !6989
  %19 = ptrtoint i8* %18 to i64, !dbg !6990
  %20 = add i64 %19, 16, !dbg !6991
  %21 = inttoptr i64 %20 to i8*, !dbg !6992
  store i8* %21, i8** %9, align 8, !dbg !6993
  %22 = load i64, i64* %8, align 8, !dbg !6994
  %23 = sub i64 %22, 16, !dbg !6994
  store i64 %23, i64* %8, align 8, !dbg !6994
  %24 = load i8*, i8** %5, align 8, !dbg !6995
  %25 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !6996
  %26 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %25, i32 0, i32 1, !dbg !6997
  store i8* %24, i8** %26, align 8, !dbg !6998
  %27 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !6999
  %28 = bitcast %struct.ms_ocall_print_string_t* %27 to i8*, !dbg !6999
  %29 = call i32 @sgx_ocall(i32 12, i8* %28), !dbg !7000
  store i32 %29, i32* %6, align 4, !dbg !7001
  %30 = load i32, i32* %6, align 4, !dbg !7002
  %31 = icmp eq i32 %30, 0, !dbg !7004
  br i1 %31, label %32, label %41, !dbg !7005

32:                                               ; preds = %15
  %33 = load i32*, i32** %4, align 8, !dbg !7006
  %34 = icmp ne i32* %33, null, !dbg !7006
  br i1 %34, label %35, label %40, !dbg !7009

35:                                               ; preds = %32
  %36 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !7010
  %37 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %36, i32 0, i32 0, !dbg !7011
  %38 = load i32, i32* %37, align 8, !dbg !7011
  %39 = load i32*, i32** %4, align 8, !dbg !7012
  store i32 %38, i32* %39, align 4, !dbg !7013
  br label %40, !dbg !7014

40:                                               ; preds = %35, %32
  br label %41, !dbg !7015

41:                                               ; preds = %40, %15
  call void @sgx_ocfree(), !dbg !7016
  %42 = load i32, i32* %6, align 4, !dbg !7017
  store i32 %42, i32* %3, align 4, !dbg !7018
  br label %43, !dbg !7018

43:                                               ; preds = %41, %14
  %44 = load i32, i32* %3, align 4, !dbg !7019
  ret i32 %44, !dbg !7019
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @sgx_thread_set_untrusted_event_ocall(i32* %0, i8* %1) #0 !dbg !7020 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.ms_ocall_print_string_t*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7021, metadata !DIExpression()), !dbg !7022
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7023, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7025, metadata !DIExpression()), !dbg !7026
  store i32 0, i32* %6, align 4, !dbg !7026
  call void @llvm.dbg.declare(metadata %struct.ms_ocall_print_string_t** %7, metadata !7027, metadata !DIExpression()), !dbg !7028
  store %struct.ms_ocall_print_string_t* null, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !7028
  call void @llvm.dbg.declare(metadata i64* %8, metadata !7029, metadata !DIExpression()), !dbg !7030
  store i64 16, i64* %8, align 8, !dbg !7030
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7031, metadata !DIExpression()), !dbg !7032
  store i8* null, i8** %9, align 8, !dbg !7032
  %10 = load i64, i64* %8, align 8, !dbg !7033
  %11 = call i8* @sgx_ocalloc(i64 %10), !dbg !7034
  store i8* %11, i8** %9, align 8, !dbg !7035
  %12 = load i8*, i8** %9, align 8, !dbg !7036
  %13 = icmp eq i8* %12, null, !dbg !7038
  br i1 %13, label %14, label %15, !dbg !7039

14:                                               ; preds = %2
  call void @sgx_ocfree(), !dbg !7040
  store i32 1, i32* %3, align 4, !dbg !7042
  br label %43, !dbg !7042

15:                                               ; preds = %2
  %16 = load i8*, i8** %9, align 8, !dbg !7043
  %17 = bitcast i8* %16 to %struct.ms_ocall_print_string_t*, !dbg !7044
  store %struct.ms_ocall_print_string_t* %17, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !7045
  %18 = load i8*, i8** %9, align 8, !dbg !7046
  %19 = ptrtoint i8* %18 to i64, !dbg !7047
  %20 = add i64 %19, 16, !dbg !7048
  %21 = inttoptr i64 %20 to i8*, !dbg !7049
  store i8* %21, i8** %9, align 8, !dbg !7050
  %22 = load i64, i64* %8, align 8, !dbg !7051
  %23 = sub i64 %22, 16, !dbg !7051
  store i64 %23, i64* %8, align 8, !dbg !7051
  %24 = load i8*, i8** %5, align 8, !dbg !7052
  %25 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !7053
  %26 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %25, i32 0, i32 1, !dbg !7054
  store i8* %24, i8** %26, align 8, !dbg !7055
  %27 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !7056
  %28 = bitcast %struct.ms_ocall_print_string_t* %27 to i8*, !dbg !7056
  %29 = call i32 @sgx_ocall(i32 13, i8* %28), !dbg !7057
  store i32 %29, i32* %6, align 4, !dbg !7058
  %30 = load i32, i32* %6, align 4, !dbg !7059
  %31 = icmp eq i32 %30, 0, !dbg !7061
  br i1 %31, label %32, label %41, !dbg !7062

32:                                               ; preds = %15
  %33 = load i32*, i32** %4, align 8, !dbg !7063
  %34 = icmp ne i32* %33, null, !dbg !7063
  br i1 %34, label %35, label %40, !dbg !7066

35:                                               ; preds = %32
  %36 = load %struct.ms_ocall_print_string_t*, %struct.ms_ocall_print_string_t** %7, align 8, !dbg !7067
  %37 = getelementptr inbounds %struct.ms_ocall_print_string_t, %struct.ms_ocall_print_string_t* %36, i32 0, i32 0, !dbg !7068
  %38 = load i32, i32* %37, align 8, !dbg !7068
  %39 = load i32*, i32** %4, align 8, !dbg !7069
  store i32 %38, i32* %39, align 4, !dbg !7070
  br label %40, !dbg !7071

40:                                               ; preds = %35, %32
  br label %41, !dbg !7072

41:                                               ; preds = %40, %15
  call void @sgx_ocfree(), !dbg !7073
  %42 = load i32, i32* %6, align 4, !dbg !7074
  store i32 %42, i32* %3, align 4, !dbg !7075
  br label %43, !dbg !7075

43:                                               ; preds = %41, %14
  %44 = load i32, i32* %3, align 4, !dbg !7076
  ret i32 %44, !dbg !7076
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @sgx_thread_setwait_untrusted_events_ocall(i32* %0, i8* %1, i8* %2) #0 !dbg !7077 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i32* %0, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !7080, metadata !DIExpression()), !dbg !7081
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7082, metadata !DIExpression()), !dbg !7083
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7084, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7086, metadata !DIExpression()), !dbg !7087
  store i32 0, i32* %8, align 4, !dbg !7087
  call void @llvm.dbg.declare(metadata %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, metadata !7088, metadata !DIExpression()), !dbg !7089
  store %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* null, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, align 8, !dbg !7089
  call void @llvm.dbg.declare(metadata i64* %10, metadata !7090, metadata !DIExpression()), !dbg !7091
  store i64 24, i64* %10, align 8, !dbg !7091
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7092, metadata !DIExpression()), !dbg !7093
  store i8* null, i8** %11, align 8, !dbg !7093
  %12 = load i64, i64* %10, align 8, !dbg !7094
  %13 = call i8* @sgx_ocalloc(i64 %12), !dbg !7095
  store i8* %13, i8** %11, align 8, !dbg !7096
  %14 = load i8*, i8** %11, align 8, !dbg !7097
  %15 = icmp eq i8* %14, null, !dbg !7099
  br i1 %15, label %16, label %17, !dbg !7100

16:                                               ; preds = %3
  call void @sgx_ocfree(), !dbg !7101
  store i32 1, i32* %4, align 4, !dbg !7103
  br label %48, !dbg !7103

17:                                               ; preds = %3
  %18 = load i8*, i8** %11, align 8, !dbg !7104
  %19 = bitcast i8* %18 to %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, !dbg !7105
  store %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %19, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, align 8, !dbg !7106
  %20 = load i8*, i8** %11, align 8, !dbg !7107
  %21 = ptrtoint i8* %20 to i64, !dbg !7108
  %22 = add i64 %21, 24, !dbg !7109
  %23 = inttoptr i64 %22 to i8*, !dbg !7110
  store i8* %23, i8** %11, align 8, !dbg !7111
  %24 = load i64, i64* %10, align 8, !dbg !7112
  %25 = sub i64 %24, 24, !dbg !7112
  store i64 %25, i64* %10, align 8, !dbg !7112
  %26 = load i8*, i8** %6, align 8, !dbg !7113
  %27 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, align 8, !dbg !7114
  %28 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %27, i32 0, i32 1, !dbg !7115
  store i8* %26, i8** %28, align 8, !dbg !7116
  %29 = load i8*, i8** %7, align 8, !dbg !7117
  %30 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, align 8, !dbg !7118
  %31 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %30, i32 0, i32 2, !dbg !7119
  store i8* %29, i8** %31, align 8, !dbg !7120
  %32 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, align 8, !dbg !7121
  %33 = bitcast %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %32 to i8*, !dbg !7121
  %34 = call i32 @sgx_ocall(i32 14, i8* %33), !dbg !7122
  store i32 %34, i32* %8, align 4, !dbg !7123
  %35 = load i32, i32* %8, align 4, !dbg !7124
  %36 = icmp eq i32 %35, 0, !dbg !7126
  br i1 %36, label %37, label %46, !dbg !7127

37:                                               ; preds = %17
  %38 = load i32*, i32** %5, align 8, !dbg !7128
  %39 = icmp ne i32* %38, null, !dbg !7128
  br i1 %39, label %40, label %45, !dbg !7131

40:                                               ; preds = %37
  %41 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %9, align 8, !dbg !7132
  %42 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %41, i32 0, i32 0, !dbg !7133
  %43 = load i32, i32* %42, align 8, !dbg !7133
  %44 = load i32*, i32** %5, align 8, !dbg !7134
  store i32 %43, i32* %44, align 4, !dbg !7135
  br label %45, !dbg !7136

45:                                               ; preds = %40, %37
  br label %46, !dbg !7137

46:                                               ; preds = %45, %17
  call void @sgx_ocfree(), !dbg !7138
  %47 = load i32, i32* %8, align 4, !dbg !7139
  store i32 %47, i32* %4, align 4, !dbg !7140
  br label %48, !dbg !7140

48:                                               ; preds = %46, %16
  %49 = load i32, i32* %4, align 4, !dbg !7141
  ret i32 %49, !dbg !7141
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @sgx_thread_set_multiple_untrusted_events_ocall(i32* %0, i8** %1, i64 %2) #0 !dbg !7142 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store i32* %0, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !7145, metadata !DIExpression()), !dbg !7146
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !7147, metadata !DIExpression()), !dbg !7148
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7149, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7151, metadata !DIExpression()), !dbg !7152
  store i32 0, i32* %8, align 4, !dbg !7152
  call void @llvm.dbg.declare(metadata i64* %9, metadata !7153, metadata !DIExpression()), !dbg !7154
  %13 = load i64, i64* %7, align 8, !dbg !7155
  %14 = mul i64 %13, 8, !dbg !7156
  store i64 %14, i64* %9, align 8, !dbg !7154
  call void @llvm.dbg.declare(metadata %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, metadata !7157, metadata !DIExpression()), !dbg !7158
  store %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* null, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7158
  call void @llvm.dbg.declare(metadata i64* %11, metadata !7159, metadata !DIExpression()), !dbg !7160
  store i64 24, i64* %11, align 8, !dbg !7160
  call void @llvm.dbg.declare(metadata i8** %12, metadata !7161, metadata !DIExpression()), !dbg !7162
  store i8* null, i8** %12, align 8, !dbg !7162
  br label %15, !dbg !7163

15:                                               ; preds = %3
  %16 = load i8**, i8*** %6, align 8, !dbg !7164
  %17 = icmp ne i8** %16, null, !dbg !7164
  br i1 %17, label %18, label %25, !dbg !7164

18:                                               ; preds = %15
  %19 = load i8**, i8*** %6, align 8, !dbg !7164
  %20 = bitcast i8** %19 to i8*, !dbg !7164
  %21 = load i64, i64* %9, align 8, !dbg !7164
  %22 = call i32 @sgx_is_within_enclave(i8* %20, i64 %21), !dbg !7164
  %23 = icmp ne i32 %22, 0, !dbg !7164
  br i1 %23, label %25, label %24, !dbg !7167

24:                                               ; preds = %18
  store i32 2, i32* %4, align 4, !dbg !7164
  br label %112, !dbg !7164

25:                                               ; preds = %18, %15
  br label %26, !dbg !7167

26:                                               ; preds = %25
  %27 = load i8**, i8*** %6, align 8, !dbg !7168
  %28 = icmp ne i8** %27, null, !dbg !7168
  br i1 %28, label %29, label %31, !dbg !7168

29:                                               ; preds = %26
  %30 = load i64, i64* %9, align 8, !dbg !7168
  br label %32, !dbg !7168

31:                                               ; preds = %26
  br label %32, !dbg !7168

32:                                               ; preds = %31, %29
  %33 = phi i64 [ %30, %29 ], [ 0, %31 ], !dbg !7168
  %34 = load i64, i64* %11, align 8, !dbg !7168
  %35 = add i64 %34, %33, !dbg !7168
  store i64 %35, i64* %11, align 8, !dbg !7168
  %36 = load i8**, i8*** %6, align 8, !dbg !7168
  %37 = icmp ne i8** %36, null, !dbg !7168
  br i1 %37, label %38, label %40, !dbg !7168

38:                                               ; preds = %32
  %39 = load i64, i64* %9, align 8, !dbg !7168
  br label %41, !dbg !7168

40:                                               ; preds = %32
  br label %41, !dbg !7168

41:                                               ; preds = %40, %38
  %42 = phi i64 [ %39, %38 ], [ 0, %40 ], !dbg !7168
  %43 = icmp ult i64 %35, %42, !dbg !7168
  br i1 %43, label %44, label %45, !dbg !7170

44:                                               ; preds = %41
  store i32 2, i32* %4, align 4, !dbg !7171
  br label %112, !dbg !7171

45:                                               ; preds = %41
  %46 = load i64, i64* %11, align 8, !dbg !7172
  %47 = call i8* @sgx_ocalloc(i64 %46), !dbg !7173
  store i8* %47, i8** %12, align 8, !dbg !7174
  %48 = load i8*, i8** %12, align 8, !dbg !7175
  %49 = icmp eq i8* %48, null, !dbg !7177
  br i1 %49, label %50, label %51, !dbg !7178

50:                                               ; preds = %45
  call void @sgx_ocfree(), !dbg !7179
  store i32 1, i32* %4, align 4, !dbg !7181
  br label %112, !dbg !7181

51:                                               ; preds = %45
  %52 = load i8*, i8** %12, align 8, !dbg !7182
  %53 = bitcast i8* %52 to %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, !dbg !7183
  store %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* %53, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7184
  %54 = load i8*, i8** %12, align 8, !dbg !7185
  %55 = ptrtoint i8* %54 to i64, !dbg !7186
  %56 = add i64 %55, 24, !dbg !7187
  %57 = inttoptr i64 %56 to i8*, !dbg !7188
  store i8* %57, i8** %12, align 8, !dbg !7189
  %58 = load i64, i64* %11, align 8, !dbg !7190
  %59 = sub i64 %58, 24, !dbg !7190
  store i64 %59, i64* %11, align 8, !dbg !7190
  %60 = load i8**, i8*** %6, align 8, !dbg !7191
  %61 = icmp ne i8** %60, null, !dbg !7193
  br i1 %61, label %62, label %89, !dbg !7194

62:                                               ; preds = %51
  %63 = load i8*, i8** %12, align 8, !dbg !7195
  %64 = bitcast i8* %63 to i8**, !dbg !7197
  %65 = load %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7198
  %66 = getelementptr inbounds %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* %65, i32 0, i32 1, !dbg !7199
  store i8** %64, i8*** %66, align 8, !dbg !7200
  %67 = load i64, i64* %9, align 8, !dbg !7201
  %68 = urem i64 %67, 8, !dbg !7203
  %69 = icmp ne i64 %68, 0, !dbg !7204
  br i1 %69, label %70, label %71, !dbg !7205

70:                                               ; preds = %62
  call void @sgx_ocfree(), !dbg !7206
  store i32 2, i32* %4, align 4, !dbg !7208
  br label %112, !dbg !7208

71:                                               ; preds = %62
  %72 = load i8*, i8** %12, align 8, !dbg !7209
  %73 = load i64, i64* %11, align 8, !dbg !7211
  %74 = load i8**, i8*** %6, align 8, !dbg !7212
  %75 = bitcast i8** %74 to i8*, !dbg !7212
  %76 = load i64, i64* %9, align 8, !dbg !7213
  %77 = call i32 @memcpy_s(i8* %72, i64 %73, i8* %75, i64 %76), !dbg !7214
  %78 = icmp ne i32 %77, 0, !dbg !7214
  br i1 %78, label %79, label %80, !dbg !7215

79:                                               ; preds = %71
  call void @sgx_ocfree(), !dbg !7216
  store i32 1, i32* %4, align 4, !dbg !7218
  br label %112, !dbg !7218

80:                                               ; preds = %71
  %81 = load i8*, i8** %12, align 8, !dbg !7219
  %82 = ptrtoint i8* %81 to i64, !dbg !7220
  %83 = load i64, i64* %9, align 8, !dbg !7221
  %84 = add i64 %82, %83, !dbg !7222
  %85 = inttoptr i64 %84 to i8*, !dbg !7223
  store i8* %85, i8** %12, align 8, !dbg !7224
  %86 = load i64, i64* %9, align 8, !dbg !7225
  %87 = load i64, i64* %11, align 8, !dbg !7226
  %88 = sub i64 %87, %86, !dbg !7226
  store i64 %88, i64* %11, align 8, !dbg !7226
  br label %92, !dbg !7227

89:                                               ; preds = %51
  %90 = load %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7228
  %91 = getelementptr inbounds %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* %90, i32 0, i32 1, !dbg !7230
  store i8** null, i8*** %91, align 8, !dbg !7231
  br label %92

92:                                               ; preds = %89, %80
  %93 = load i64, i64* %7, align 8, !dbg !7232
  %94 = load %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7233
  %95 = getelementptr inbounds %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* %94, i32 0, i32 2, !dbg !7234
  store i64 %93, i64* %95, align 8, !dbg !7235
  %96 = load %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7236
  %97 = bitcast %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* %96 to i8*, !dbg !7236
  %98 = call i32 @sgx_ocall(i32 15, i8* %97), !dbg !7237
  store i32 %98, i32* %8, align 4, !dbg !7238
  %99 = load i32, i32* %8, align 4, !dbg !7239
  %100 = icmp eq i32 %99, 0, !dbg !7241
  br i1 %100, label %101, label %110, !dbg !7242

101:                                              ; preds = %92
  %102 = load i32*, i32** %5, align 8, !dbg !7243
  %103 = icmp ne i32* %102, null, !dbg !7243
  br i1 %103, label %104, label %109, !dbg !7246

104:                                              ; preds = %101
  %105 = load %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t*, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t** %10, align 8, !dbg !7247
  %106 = getelementptr inbounds %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t, %struct.ms_sgx_thread_set_multiple_untrusted_events_ocall_t* %105, i32 0, i32 0, !dbg !7248
  %107 = load i32, i32* %106, align 8, !dbg !7248
  %108 = load i32*, i32** %5, align 8, !dbg !7249
  store i32 %107, i32* %108, align 4, !dbg !7250
  br label %109, !dbg !7251

109:                                              ; preds = %104, %101
  br label %110, !dbg !7252

110:                                              ; preds = %109, %92
  call void @sgx_ocfree(), !dbg !7253
  %111 = load i32, i32* %8, align 4, !dbg !7254
  store i32 %111, i32* %4, align 4, !dbg !7255
  br label %112, !dbg !7255

112:                                              ; preds = %110, %79, %70, %50, %44, %24
  %113 = load i32, i32* %4, align 4, !dbg !7256
  ret i32 %113, !dbg !7256
}

; Function Attrs: mustprogress noinline optnone ssp uwtable
define hidden i32 @sgx_connect() #5 !dbg !7257 {
  %1 = alloca %struct.options, align 8
  %2 = alloca [1024 x i8], align 16
  %3 = alloca %struct.options, align 8
  call void @llvm.dbg.declare(metadata %struct.options* %1, metadata !7260, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata [1024 x i8]* %2, metadata !7307, metadata !DIExpression()), !dbg !7311
  call void @_ZL15client_opt_initP7options(%struct.options* %1), !dbg !7312
  %4 = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 3, !dbg !7313
  store i32 1, i32* %4, align 8, !dbg !7314
  %5 = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 0, !dbg !7315
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %5, align 8, !dbg !7316
  %6 = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 2, !dbg !7317
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %6, align 8, !dbg !7318
  %7 = bitcast %struct.options* %3 to i8*, !dbg !7319
  %8 = bitcast %struct.options* %1 to i8*, !dbg !7319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 216, i1 false), !dbg !7319
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0, !dbg !7320
  %10 = call i32 @ssl_client(%struct.options* byval(%struct.options) align 8 %3, i8** null, i32 0, i8* %9, i32 1024), !dbg !7321
  ret i32 %10, !dbg !7322
}

; Function Attrs: mustprogress noinline nounwind optnone ssp uwtable
define internal void @_ZL15client_opt_initP7options(%struct.options* %0) #6 !dbg !7323 {
  %2 = alloca %struct.options*, align 8
  store %struct.options* %0, %struct.options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.options** %2, metadata !7327, metadata !DIExpression()), !dbg !7328
  %3 = load %struct.options*, %struct.options** %2, align 8, !dbg !7329
  %4 = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 0, !dbg !7330
  store i8* null, i8** %4, align 8, !dbg !7331
  %5 = load %struct.options*, %struct.options** %2, align 8, !dbg !7332
  %6 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 1, !dbg !7333
  store i8* null, i8** %6, align 8, !dbg !7334
  %7 = load %struct.options*, %struct.options** %2, align 8, !dbg !7335
  %8 = getelementptr inbounds %struct.options, %struct.options* %7, i32 0, i32 2, !dbg !7336
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %8, align 8, !dbg !7337
  %9 = load %struct.options*, %struct.options** %2, align 8, !dbg !7338
  %10 = getelementptr inbounds %struct.options, %struct.options* %9, i32 0, i32 3, !dbg !7339
  store i32 0, i32* %10, align 8, !dbg !7340
  %11 = load %struct.options*, %struct.options** %2, align 8, !dbg !7341
  %12 = getelementptr inbounds %struct.options, %struct.options* %11, i32 0, i32 4, !dbg !7342
  store i32 0, i32* %12, align 4, !dbg !7343
  %13 = load %struct.options*, %struct.options** %2, align 8, !dbg !7344
  %14 = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 5, !dbg !7345
  store i32 0, i32* %14, align 8, !dbg !7346
  %15 = load %struct.options*, %struct.options** %2, align 8, !dbg !7347
  %16 = getelementptr inbounds %struct.options, %struct.options* %15, i32 0, i32 6, !dbg !7348
  store i32 0, i32* %16, align 4, !dbg !7349
  %17 = load %struct.options*, %struct.options** %2, align 8, !dbg !7350
  %18 = getelementptr inbounds %struct.options, %struct.options* %17, i32 0, i32 7, !dbg !7351
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %18, align 8, !dbg !7352
  %19 = load %struct.options*, %struct.options** %2, align 8, !dbg !7353
  %20 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 8, !dbg !7354
  store i32 -1, i32* %20, align 8, !dbg !7355
  %21 = load %struct.options*, %struct.options** %2, align 8, !dbg !7356
  %22 = getelementptr inbounds %struct.options, %struct.options* %21, i32 0, i32 9, !dbg !7357
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %22, align 8, !dbg !7358
  %23 = load %struct.options*, %struct.options** %2, align 8, !dbg !7359
  %24 = getelementptr inbounds %struct.options, %struct.options* %23, i32 0, i32 10, !dbg !7360
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %24, align 8, !dbg !7361
  %25 = load %struct.options*, %struct.options** %2, align 8, !dbg !7362
  %26 = getelementptr inbounds %struct.options, %struct.options* %25, i32 0, i32 11, !dbg !7363
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %26, align 8, !dbg !7364
  %27 = load %struct.options*, %struct.options** %2, align 8, !dbg !7365
  %28 = getelementptr inbounds %struct.options, %struct.options* %27, i32 0, i32 12, !dbg !7366
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %28, align 8, !dbg !7367
  %29 = load %struct.options*, %struct.options** %2, align 8, !dbg !7368
  %30 = getelementptr inbounds %struct.options, %struct.options* %29, i32 0, i32 13, !dbg !7369
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %30, align 8, !dbg !7370
  %31 = load %struct.options*, %struct.options** %2, align 8, !dbg !7371
  %32 = getelementptr inbounds %struct.options, %struct.options* %31, i32 0, i32 14, !dbg !7372
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8** %32, align 8, !dbg !7373
  %33 = load %struct.options*, %struct.options** %2, align 8, !dbg !7374
  %34 = getelementptr inbounds %struct.options, %struct.options* %33, i32 0, i32 15, !dbg !7375
  store i8* null, i8** %34, align 8, !dbg !7376
  %35 = load %struct.options*, %struct.options** %2, align 8, !dbg !7377
  %36 = getelementptr inbounds %struct.options, %struct.options* %35, i32 0, i32 16, !dbg !7378
  %37 = getelementptr inbounds [2 x i32], [2 x i32]* %36, i64 0, i64 0, !dbg !7377
  store i32 0, i32* %37, align 8, !dbg !7379
  %38 = load %struct.options*, %struct.options** %2, align 8, !dbg !7380
  %39 = getelementptr inbounds %struct.options, %struct.options* %38, i32 0, i32 17, !dbg !7381
  store i32 0, i32* %39, align 8, !dbg !7382
  %40 = load %struct.options*, %struct.options** %2, align 8, !dbg !7383
  %41 = getelementptr inbounds %struct.options, %struct.options* %40, i32 0, i32 18, !dbg !7384
  store i32 -2, i32* %41, align 4, !dbg !7385
  %42 = load %struct.options*, %struct.options** %2, align 8, !dbg !7386
  %43 = getelementptr inbounds %struct.options, %struct.options* %42, i32 0, i32 19, !dbg !7387
  store i32 0, i32* %43, align 8, !dbg !7388
  %44 = load %struct.options*, %struct.options** %2, align 8, !dbg !7389
  %45 = getelementptr inbounds %struct.options, %struct.options* %44, i32 0, i32 21, !dbg !7390
  store i32 1, i32* %45, align 8, !dbg !7391
  %46 = load %struct.options*, %struct.options** %2, align 8, !dbg !7392
  %47 = getelementptr inbounds %struct.options, %struct.options* %46, i32 0, i32 22, !dbg !7393
  store i32 -1, i32* %47, align 4, !dbg !7394
  %48 = load %struct.options*, %struct.options** %2, align 8, !dbg !7395
  %49 = getelementptr inbounds %struct.options, %struct.options* %48, i32 0, i32 23, !dbg !7396
  store i32 -1, i32* %49, align 8, !dbg !7397
  %50 = load %struct.options*, %struct.options** %2, align 8, !dbg !7398
  %51 = getelementptr inbounds %struct.options, %struct.options* %50, i32 0, i32 24, !dbg !7399
  store i8 -1, i8* %51, align 4, !dbg !7400
  %52 = load %struct.options*, %struct.options** %2, align 8, !dbg !7401
  %53 = getelementptr inbounds %struct.options, %struct.options* %52, i32 0, i32 25, !dbg !7402
  store i32 -1, i32* %53, align 8, !dbg !7403
  %54 = load %struct.options*, %struct.options** %2, align 8, !dbg !7404
  %55 = getelementptr inbounds %struct.options, %struct.options* %54, i32 0, i32 26, !dbg !7405
  store i8 0, i8* %55, align 4, !dbg !7406
  %56 = load %struct.options*, %struct.options** %2, align 8, !dbg !7407
  %57 = getelementptr inbounds %struct.options, %struct.options* %56, i32 0, i32 27, !dbg !7408
  store i32 -1, i32* %57, align 8, !dbg !7409
  %58 = load %struct.options*, %struct.options** %2, align 8, !dbg !7410
  %59 = getelementptr inbounds %struct.options, %struct.options* %58, i32 0, i32 28, !dbg !7411
  store i32 -1, i32* %59, align 4, !dbg !7412
  %60 = load %struct.options*, %struct.options** %2, align 8, !dbg !7413
  %61 = getelementptr inbounds %struct.options, %struct.options* %60, i32 0, i32 29, !dbg !7414
  store i32 -1, i32* %61, align 8, !dbg !7415
  %62 = load %struct.options*, %struct.options** %2, align 8, !dbg !7416
  %63 = getelementptr inbounds %struct.options, %struct.options* %62, i32 0, i32 30, !dbg !7417
  store i32 0, i32* %63, align 4, !dbg !7418
  %64 = load %struct.options*, %struct.options** %2, align 8, !dbg !7419
  %65 = getelementptr inbounds %struct.options, %struct.options* %64, i32 0, i32 31, !dbg !7420
  store i32 0, i32* %65, align 8, !dbg !7421
  %66 = load %struct.options*, %struct.options** %2, align 8, !dbg !7422
  %67 = getelementptr inbounds %struct.options, %struct.options* %66, i32 0, i32 32, !dbg !7423
  store i32 0, i32* %67, align 4, !dbg !7424
  %68 = load %struct.options*, %struct.options** %2, align 8, !dbg !7425
  %69 = getelementptr inbounds %struct.options, %struct.options* %68, i32 0, i32 33, !dbg !7426
  store i32 1, i32* %69, align 8, !dbg !7427
  %70 = load %struct.options*, %struct.options** %2, align 8, !dbg !7428
  %71 = getelementptr inbounds %struct.options, %struct.options* %70, i32 0, i32 34, !dbg !7429
  store i8* null, i8** %71, align 8, !dbg !7430
  %72 = load %struct.options*, %struct.options** %2, align 8, !dbg !7431
  %73 = getelementptr inbounds %struct.options, %struct.options* %72, i32 0, i32 35, !dbg !7432
  store i32 0, i32* %73, align 8, !dbg !7433
  %74 = load %struct.options*, %struct.options** %2, align 8, !dbg !7434
  %75 = getelementptr inbounds %struct.options, %struct.options* %74, i32 0, i32 36, !dbg !7435
  store i32 0, i32* %75, align 4, !dbg !7436
  %76 = load %struct.options*, %struct.options** %2, align 8, !dbg !7437
  %77 = getelementptr inbounds %struct.options, %struct.options* %76, i32 0, i32 37, !dbg !7438
  store i32 0, i32* %77, align 8, !dbg !7439
  %78 = load %struct.options*, %struct.options** %2, align 8, !dbg !7440
  %79 = getelementptr inbounds %struct.options, %struct.options* %78, i32 0, i32 38, !dbg !7441
  store i8 -1, i8* %79, align 4, !dbg !7442
  %80 = load %struct.options*, %struct.options** %2, align 8, !dbg !7443
  %81 = getelementptr inbounds %struct.options, %struct.options* %80, i32 0, i32 39, !dbg !7444
  store i8 -1, i8* %81, align 1, !dbg !7445
  %82 = load %struct.options*, %struct.options** %2, align 8, !dbg !7446
  %83 = getelementptr inbounds %struct.options, %struct.options* %82, i32 0, i32 40, !dbg !7447
  store i8 -1, i8* %83, align 2, !dbg !7448
  ret void, !dbg !7449
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: mustprogress noinline optnone ssp uwtable
define hidden i32 @sgx_accept() #5 !dbg !7450 {
  %1 = call i32 @ssl_server(), !dbg !7451
  ret i32 %1, !dbg !7452
}

; Function Attrs: mustprogress noinline optnone ssp uwtable
define hidden void @ssl_conn_init() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7453 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = call noalias nonnull i8* @_Znwm(i64 2872) #15, !dbg !7454, !heapallocsite !1905
  %4 = bitcast i8* %3 to %class.TLSConnectionHandler*, !dbg !7454
  invoke void @_ZN20TLSConnectionHandlerC1Ev(%class.TLSConnectionHandler* nonnull align 8 dereferenceable(2868) %4)
          to label %5 unwind label %6, !dbg !7455

5:                                                ; preds = %0
  store %class.TLSConnectionHandler* %4, %class.TLSConnectionHandler** @connectionHandler, align 8, !dbg !7456
  ret void, !dbg !7457

6:                                                ; preds = %0
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !7457
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !7457
  store i8* %8, i8** %1, align 8, !dbg !7457
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !7457
  store i32 %9, i32* %2, align 4, !dbg !7457
  call void @_ZdlPv(i8* %3) #16, !dbg !7454
  br label %10, !dbg !7454

10:                                               ; preds = %6
  %11 = load i8*, i8** %1, align 8, !dbg !7454
  %12 = load i32, i32* %2, align 4, !dbg !7454
  %13 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !7454
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !7454
  resume { i8*, i32 } %14, !dbg !7454
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin allocsize(0)
declare nonnull i8* @_Znwm(i64) #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #9

; Function Attrs: mustprogress noinline optnone ssp uwtable
define hidden void @ssl_conn_handle(i64 %0, %struct.thread_info_t* %1) #5 !dbg !7458 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.thread_info_t*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !7461, metadata !DIExpression()), !dbg !7462
  store %struct.thread_info_t* %1, %struct.thread_info_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info_t** %4, metadata !7463, metadata !DIExpression()), !dbg !7464
  %5 = load %class.TLSConnectionHandler*, %class.TLSConnectionHandler** @connectionHandler, align 8, !dbg !7465
  %6 = load i64, i64* %3, align 8, !dbg !7466
  %7 = load %struct.thread_info_t*, %struct.thread_info_t** %4, align 8, !dbg !7467
  call void @_ZN20TLSConnectionHandler6handleElP13thread_info_t(%class.TLSConnectionHandler* nonnull align 8 dereferenceable(2868) %5, i64 %6, %struct.thread_info_t* %7), !dbg !7468
  ret void, !dbg !7469
}

; Function Attrs: mustprogress noinline nounwind optnone ssp uwtable
define hidden void @ssl_conn_teardown() #6 !dbg !7470 {
  %1 = load %class.TLSConnectionHandler*, %class.TLSConnectionHandler** @connectionHandler, align 8, !dbg !7471
  %2 = icmp eq %class.TLSConnectionHandler* %1, null, !dbg !7472
  br i1 %2, label %5, label %3, !dbg !7472

3:                                                ; preds = %0
  call void @_ZN20TLSConnectionHandlerD1Ev(%class.TLSConnectionHandler* nonnull align 8 dereferenceable(2868) %1) #3, !dbg !7472
  %4 = bitcast %class.TLSConnectionHandler* %1 to i8*, !dbg !7472
  call void @_ZdlPv(i8* %4) #16, !dbg !7472
  br label %5, !dbg !7472

5:                                                ; preds = %3, %0
  ret void, !dbg !7473
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @dump_buf(i8* %0, i8* %1, i64 %2) #0 !dbg !7474 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7479, metadata !DIExpression()), !dbg !7480
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7481, metadata !DIExpression()), !dbg !7482
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7483, metadata !DIExpression()), !dbg !7484
  %7 = load i8*, i8** %4, align 8, !dbg !7485
  %8 = load i8*, i8** %5, align 8, !dbg !7486
  %9 = load i64, i64* %6, align 8, !dbg !7487
  %10 = trunc i64 %9 to i32, !dbg !7487
  call void @hexdump(i8* %7, i8* %8, i32 %10), !dbg !7488
  ret void, !dbg !7489
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @hexdump(i8* %0, i8* %1, i32 %2) #0 !dbg !7490 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7493, metadata !DIExpression()), !dbg !7494
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7497, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7503, metadata !DIExpression()), !dbg !7504
  %10 = load i8*, i8** %5, align 8, !dbg !7505
  %11 = icmp ne i8* %10, null, !dbg !7505
  br i1 %11, label %13, label %12, !dbg !7507

12:                                               ; preds = %3
  br label %132, !dbg !7508

13:                                               ; preds = %3
  %14 = load i8*, i8** %4, align 8, !dbg !7509
  %15 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8* %14), !dbg !7510
  store i32 0, i32* %8, align 4, !dbg !7511
  store i32 0, i32* %7, align 4, !dbg !7513
  br label %16, !dbg !7514

16:                                               ; preds = %127, %13
  %17 = load i32, i32* %8, align 4, !dbg !7515
  %18 = load i32, i32* %6, align 4, !dbg !7517
  %19 = udiv i32 %18, 16, !dbg !7518
  %20 = load i32, i32* %6, align 4, !dbg !7519
  %21 = urem i32 %20, 16, !dbg !7520
  %22 = icmp ne i32 %21, 0, !dbg !7521
  %23 = zext i1 %22 to i32, !dbg !7521
  %24 = add i32 %19, %23, !dbg !7522
  %25 = icmp ult i32 %17, %24, !dbg !7523
  br i1 %25, label %26, label %132, !dbg !7524

26:                                               ; preds = %16
  %27 = load i32, i32* %7, align 4, !dbg !7525
  %28 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.17, i64 0, i64 0), i32 %27), !dbg !7527
  %29 = load i32, i32* %7, align 4, !dbg !7528
  store i32 %29, i32* %9, align 4, !dbg !7530
  br label %30, !dbg !7531

30:                                               ; preds = %50, %26
  %31 = load i32, i32* %9, align 4, !dbg !7532
  %32 = load i32, i32* %7, align 4, !dbg !7534
  %33 = add i32 %32, 8, !dbg !7535
  %34 = icmp ult i32 %31, %33, !dbg !7536
  br i1 %34, label %35, label %53, !dbg !7537

35:                                               ; preds = %30
  %36 = load i32, i32* %9, align 4, !dbg !7538
  %37 = load i32, i32* %6, align 4, !dbg !7540
  %38 = icmp ult i32 %36, %37, !dbg !7541
  br i1 %38, label %39, label %47, !dbg !7542

39:                                               ; preds = %35
  %40 = load i8*, i8** %5, align 8, !dbg !7543
  %41 = load i32, i32* %9, align 4, !dbg !7544
  %42 = zext i32 %41 to i64, !dbg !7545
  %43 = getelementptr inbounds i8, i8* %40, i64 %42, !dbg !7545
  %44 = load i8, i8* %43, align 1, !dbg !7545
  %45 = zext i8 %44 to i32, !dbg !7545
  %46 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.18, i64 0, i64 0), i32 %45), !dbg !7546
  br label %49, !dbg !7546

47:                                               ; preds = %35
  %48 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.19, i64 0, i64 0)), !dbg !7547
  br label %49

49:                                               ; preds = %47, %39
  br label %50, !dbg !7540

50:                                               ; preds = %49
  %51 = load i32, i32* %9, align 4, !dbg !7548
  %52 = add i32 %51, 1, !dbg !7548
  store i32 %52, i32* %9, align 4, !dbg !7548
  br label %30, !dbg !7549, !llvm.loop !7550

53:                                               ; preds = %30
  %54 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)), !dbg !7553
  %55 = load i32, i32* %7, align 4, !dbg !7554
  %56 = add i32 %55, 8, !dbg !7556
  store i32 %56, i32* %9, align 4, !dbg !7557
  br label %57, !dbg !7558

57:                                               ; preds = %77, %53
  %58 = load i32, i32* %9, align 4, !dbg !7559
  %59 = load i32, i32* %7, align 4, !dbg !7561
  %60 = add i32 %59, 16, !dbg !7562
  %61 = icmp ult i32 %58, %60, !dbg !7563
  br i1 %61, label %62, label %80, !dbg !7564

62:                                               ; preds = %57
  %63 = load i32, i32* %9, align 4, !dbg !7565
  %64 = load i32, i32* %6, align 4, !dbg !7567
  %65 = icmp ult i32 %63, %64, !dbg !7568
  br i1 %65, label %66, label %74, !dbg !7569

66:                                               ; preds = %62
  %67 = load i8*, i8** %5, align 8, !dbg !7570
  %68 = load i32, i32* %9, align 4, !dbg !7571
  %69 = zext i32 %68 to i64, !dbg !7572
  %70 = getelementptr inbounds i8, i8* %67, i64 %69, !dbg !7572
  %71 = load i8, i8* %70, align 1, !dbg !7572
  %72 = zext i8 %71 to i32, !dbg !7572
  %73 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.18, i64 0, i64 0), i32 %72), !dbg !7573
  br label %76, !dbg !7573

74:                                               ; preds = %62
  %75 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.19, i64 0, i64 0)), !dbg !7574
  br label %76

76:                                               ; preds = %74, %66
  br label %77, !dbg !7567

77:                                               ; preds = %76
  %78 = load i32, i32* %9, align 4, !dbg !7575
  %79 = add i32 %78, 1, !dbg !7575
  store i32 %79, i32* %9, align 4, !dbg !7575
  br label %57, !dbg !7576, !llvm.loop !7577

80:                                               ; preds = %57
  %81 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.19, i64 0, i64 0)), !dbg !7579
  %82 = load i32, i32* %7, align 4, !dbg !7580
  store i32 %82, i32* %9, align 4, !dbg !7582
  br label %83, !dbg !7583

83:                                               ; preds = %122, %80
  %84 = load i32, i32* %9, align 4, !dbg !7584
  %85 = load i32, i32* %7, align 4, !dbg !7586
  %86 = add i32 %85, 16, !dbg !7587
  %87 = icmp ult i32 %84, %86, !dbg !7588
  br i1 %87, label %88, label %125, !dbg !7589

88:                                               ; preds = %83
  %89 = load i32, i32* %9, align 4, !dbg !7590
  %90 = load i32, i32* %6, align 4, !dbg !7592
  %91 = icmp ult i32 %89, %90, !dbg !7593
  br i1 %91, label %92, label %119, !dbg !7594

92:                                               ; preds = %88
  %93 = load i8*, i8** %5, align 8, !dbg !7595
  %94 = load i32, i32* %9, align 4, !dbg !7597
  %95 = zext i32 %94 to i64, !dbg !7598
  %96 = getelementptr inbounds i8, i8* %93, i64 %95, !dbg !7598
  %97 = load i8, i8* %96, align 1, !dbg !7598
  %98 = zext i8 %97 to i32, !dbg !7598
  %99 = icmp sge i32 %98, 32, !dbg !7599
  br i1 %99, label %100, label %116, !dbg !7600

100:                                              ; preds = %92
  %101 = load i8*, i8** %5, align 8, !dbg !7601
  %102 = load i32, i32* %9, align 4, !dbg !7602
  %103 = zext i32 %102 to i64, !dbg !7603
  %104 = getelementptr inbounds i8, i8* %101, i64 %103, !dbg !7603
  %105 = load i8, i8* %104, align 1, !dbg !7603
  %106 = zext i8 %105 to i32, !dbg !7603
  %107 = icmp slt i32 %106, 127, !dbg !7604
  br i1 %107, label %108, label %116, !dbg !7605

108:                                              ; preds = %100
  %109 = load i8*, i8** %5, align 8, !dbg !7606
  %110 = load i32, i32* %9, align 4, !dbg !7607
  %111 = zext i32 %110 to i64, !dbg !7608
  %112 = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !7608
  %113 = load i8, i8* %112, align 1, !dbg !7608
  %114 = sext i8 %113 to i32, !dbg !7608
  %115 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.20, i64 0, i64 0), i32 %114), !dbg !7609
  br label %118, !dbg !7609

116:                                              ; preds = %100, %92
  %117 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)), !dbg !7610
  br label %118

118:                                              ; preds = %116, %108
  br label %121, !dbg !7611

119:                                              ; preds = %88
  %120 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)), !dbg !7612
  br label %121

121:                                              ; preds = %119, %118
  br label %122, !dbg !7592

122:                                              ; preds = %121
  %123 = load i32, i32* %9, align 4, !dbg !7613
  %124 = add i32 %123, 1, !dbg !7613
  store i32 %124, i32* %9, align 4, !dbg !7613
  br label %83, !dbg !7614, !llvm.loop !7615

125:                                              ; preds = %83
  %126 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.21, i64 0, i64 0)), !dbg !7617
  br label %127, !dbg !7618

127:                                              ; preds = %125
  %128 = load i32, i32* %8, align 4, !dbg !7619
  %129 = add i32 %128, 1, !dbg !7619
  store i32 %129, i32* %8, align 4, !dbg !7619
  %130 = load i32, i32* %7, align 4, !dbg !7620
  %131 = add i32 %130, 16, !dbg !7620
  store i32 %131, i32* %7, align 4, !dbg !7620
  br label %16, !dbg !7621, !llvm.loop !7622

132:                                              ; preds = %12, %16
  ret void, !dbg !7624
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @string_dump(i8* %0, i8* %1, i64 %2) #0 !dbg !7625 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7630, metadata !DIExpression()), !dbg !7631
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7634, metadata !DIExpression()), !dbg !7635
  %8 = load i8*, i8** %5, align 8, !dbg !7636
  %9 = icmp ne i8* %8, null, !dbg !7636
  br i1 %9, label %11, label %10, !dbg !7638

10:                                               ; preds = %3
  br label %32, !dbg !7639

11:                                               ; preds = %3
  %12 = load i8*, i8** %4, align 8, !dbg !7640
  %13 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8* %12), !dbg !7641
  store i32 0, i32* %7, align 4, !dbg !7642
  br label %14, !dbg !7644

14:                                               ; preds = %27, %11
  %15 = load i32, i32* %7, align 4, !dbg !7645
  %16 = zext i32 %15 to i64, !dbg !7645
  %17 = load i64, i64* %6, align 8, !dbg !7647
  %18 = icmp ult i64 %16, %17, !dbg !7648
  br i1 %18, label %19, label %30, !dbg !7649

19:                                               ; preds = %14
  %20 = load i8*, i8** %5, align 8, !dbg !7650
  %21 = load i32, i32* %7, align 4, !dbg !7652
  %22 = zext i32 %21 to i64, !dbg !7653
  %23 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !7653
  %24 = load i8, i8* %23, align 1, !dbg !7653
  %25 = zext i8 %24 to i32, !dbg !7653
  %26 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.20, i64 0, i64 0), i32 %25), !dbg !7654
  br label %27, !dbg !7655

27:                                               ; preds = %19
  %28 = load i32, i32* %7, align 4, !dbg !7656
  %29 = add i32 %28, 1, !dbg !7656
  store i32 %29, i32* %7, align 4, !dbg !7656
  br label %14, !dbg !7657, !llvm.loop !7658

30:                                               ; preds = %14
  %31 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.21, i64 0, i64 0)), !dbg !7660
  br label %32, !dbg !7661

32:                                               ; preds = %30, %10
  ret void, !dbg !7661
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ssl_client(%struct.options* byval(%struct.options) align 8 %0, i8** %1, i32 %2, i8* %3, i32 %4) #0 !dbg !7662 {
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.mbedtls_net_context, align 4
  %18 = alloca [16385 x i8], align 16
  %19 = alloca [32 x i8], align 16
  %20 = alloca i64, align 8
  %21 = alloca [10 x i8*], align 16
  %22 = alloca i8*, align 8
  %23 = alloca %struct.mbedtls_entropy_context, align 8
  %24 = alloca %struct.mbedtls_ctr_drbg_context, align 8
  %25 = alloca %struct.mbedtls_ssl_context, align 8
  %26 = alloca %struct.mbedtls_ssl_config, align 8
  %27 = alloca %struct.mbedtls_ssl_session, align 8
  %28 = alloca i32, align 4
  %29 = alloca %struct.mbedtls_x509_crt, align 8
  %30 = alloca %struct.mbedtls_x509_crt, align 8
  %31 = alloca %struct.mbedtls_pk_context, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8*, align 8
  %38 = alloca [512 x i8], align 16
  %39 = alloca [100 x i8], align 16
  call void @llvm.dbg.declare(metadata %struct.options* %0, metadata !7709, metadata !DIExpression()), !dbg !7710
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !7711, metadata !DIExpression()), !dbg !7712
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7713, metadata !DIExpression()), !dbg !7714
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7715, metadata !DIExpression()), !dbg !7716
  store i32 %4, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7717, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7719, metadata !DIExpression()), !dbg !7720
  store i32 0, i32* %10, align 4, !dbg !7720
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7729, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7731, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context* %17, metadata !7733, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.declare(metadata [16385 x i8]* %18, metadata !7739, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.declare(metadata [32 x i8]* %19, metadata !7744, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.declare(metadata i64* %20, metadata !7746, metadata !DIExpression()), !dbg !7747
  store i64 0, i64* %20, align 8, !dbg !7747
  call void @llvm.dbg.declare(metadata [10 x i8*]* %21, metadata !7748, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.declare(metadata i8** %22, metadata !7751, metadata !DIExpression()), !dbg !7752
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i8** %22, align 8, !dbg !7752
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context* %23, metadata !7753, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context* %24, metadata !7781, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context* %25, metadata !7800, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_config* %26, metadata !8082, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_session* %27, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.declare(metadata i32* %28, metadata !8086, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt* %29, metadata !8088, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt* %30, metadata !8090, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context* %31, metadata !8092, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.declare(metadata i8** %32, metadata !8094, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.declare(metadata i32** %33, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @mbedtls_net_init_ocall(%struct.mbedtls_net_context* %17), !dbg !8098
  call void @mbedtls_ssl_init(%struct.mbedtls_ssl_context* %25), !dbg !8099
  call void @mbedtls_ssl_config_init(%struct.mbedtls_ssl_config* %26), !dbg !8100
  %40 = bitcast %struct.mbedtls_ssl_session* %27 to i8*, !dbg !8101
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 144, i1 false), !dbg !8101
  call void @mbedtls_ctr_drbg_init(%struct.mbedtls_ctr_drbg_context* %24), !dbg !8102
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %29), !dbg !8103
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %30), !dbg !8104
  call void @mbedtls_pk_init(%struct.mbedtls_pk_context* %31), !dbg !8105
  %41 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 0, !dbg !8106
  %42 = bitcast i8** %41 to i8*, !dbg !8106
  call void @llvm.memset.p0i8.i64(i8* align 16 %42, i8 0, i64 80, i1 false), !dbg !8106
  %43 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 3, !dbg !8107
  %44 = load i32, i32* %43, align 8, !dbg !8107
  call void @mbedtls_debug_set_threshold(i32 %44), !dbg !8108
  %45 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 16, !dbg !8109
  %46 = getelementptr inbounds [2 x i32], [2 x i32]* %45, i64 0, i64 0, !dbg !8111
  %47 = load i32, i32* %46, align 8, !dbg !8111
  %48 = icmp sgt i32 %47, 0, !dbg !8112
  br i1 %48, label %49, label %132, !dbg !8113

49:                                               ; preds = %5
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %34, metadata !8114, metadata !DIExpression()), !dbg !8133
  %50 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 16, !dbg !8134
  %51 = getelementptr inbounds [2 x i32], [2 x i32]* %50, i64 0, i64 0, !dbg !8135
  %52 = load i32, i32* %51, align 8, !dbg !8135
  %53 = call %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_id(i32 %52), !dbg !8136
  store %struct.mbedtls_ssl_ciphersuite_t* %53, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8137
  %54 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8138
  %55 = load i32, i32* %54, align 8, !dbg !8138
  %56 = icmp ne i32 %55, -1, !dbg !8140
  br i1 %56, label %57, label %66, !dbg !8141

57:                                               ; preds = %49
  %58 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8142
  %59 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %58, i32 0, i32 6, !dbg !8143
  %60 = load i32, i32* %59, align 8, !dbg !8143
  %61 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8144
  %62 = load i32, i32* %61, align 8, !dbg !8144
  %63 = icmp sgt i32 %60, %62, !dbg !8145
  br i1 %63, label %64, label %66, !dbg !8146

64:                                               ; preds = %57
  %65 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.25, i64 0, i64 0)), !dbg !8147
  store i32 2, i32* %10, align 4, !dbg !8149
  br label %1405, !dbg !8150

66:                                               ; preds = %57, %49
  %67 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8151
  %68 = load i32, i32* %67, align 4, !dbg !8151
  %69 = icmp ne i32 %68, -1, !dbg !8153
  br i1 %69, label %70, label %79, !dbg !8154

70:                                               ; preds = %66
  %71 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8155
  %72 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %71, i32 0, i32 8, !dbg !8156
  %73 = load i32, i32* %72, align 8, !dbg !8156
  %74 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8157
  %75 = load i32, i32* %74, align 4, !dbg !8157
  %76 = icmp slt i32 %73, %75, !dbg !8158
  br i1 %76, label %77, label %79, !dbg !8159

77:                                               ; preds = %70
  %78 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.25, i64 0, i64 0)), !dbg !8160
  store i32 2, i32* %10, align 4, !dbg !8162
  br label %1405, !dbg !8163

79:                                               ; preds = %70, %66
  %80 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8164
  %81 = load i32, i32* %80, align 8, !dbg !8164
  %82 = icmp eq i32 %81, -1, !dbg !8166
  br i1 %82, label %90, label %83, !dbg !8167

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8168
  %85 = load i32, i32* %84, align 8, !dbg !8168
  %86 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8169
  %87 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %86, i32 0, i32 8, !dbg !8170
  %88 = load i32, i32* %87, align 8, !dbg !8170
  %89 = icmp sgt i32 %85, %88, !dbg !8171
  br i1 %89, label %90, label %95, !dbg !8172

90:                                               ; preds = %83, %79
  %91 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8173
  %92 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %91, i32 0, i32 8, !dbg !8175
  %93 = load i32, i32* %92, align 8, !dbg !8175
  %94 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8176
  store i32 %93, i32* %94, align 8, !dbg !8177
  br label %95, !dbg !8178

95:                                               ; preds = %90, %83
  %96 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8179
  %97 = load i32, i32* %96, align 4, !dbg !8179
  %98 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8181
  %99 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %98, i32 0, i32 6, !dbg !8182
  %100 = load i32, i32* %99, align 8, !dbg !8182
  %101 = icmp slt i32 %97, %100, !dbg !8183
  br i1 %101, label %102, label %117, !dbg !8184

102:                                              ; preds = %95
  %103 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8185
  %104 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %103, i32 0, i32 6, !dbg !8187
  %105 = load i32, i32* %104, align 8, !dbg !8187
  %106 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8188
  store i32 %105, i32* %106, align 4, !dbg !8189
  %107 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !8190
  %108 = load i32, i32* %107, align 8, !dbg !8190
  %109 = icmp eq i32 %108, 1, !dbg !8192
  br i1 %109, label %110, label %116, !dbg !8193

110:                                              ; preds = %102
  %111 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8194
  %112 = load i32, i32* %111, align 4, !dbg !8194
  %113 = icmp slt i32 %112, 2, !dbg !8195
  br i1 %113, label %114, label %116, !dbg !8196

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8197
  store i32 2, i32* %115, align 4, !dbg !8198
  br label %116, !dbg !8199

116:                                              ; preds = %114, %110, %102
  br label %117, !dbg !8200

117:                                              ; preds = %116, %95
  %118 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %34, align 8, !dbg !8201
  %119 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %118, i32 0, i32 2, !dbg !8203
  %120 = load i32, i32* %119, align 8, !dbg !8203
  %121 = icmp eq i32 %120, 42, !dbg !8204
  br i1 %121, label %122, label %131, !dbg !8205

122:                                              ; preds = %117
  %123 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 24, !dbg !8206
  %124 = load i8, i8* %123, align 4, !dbg !8206
  %125 = sext i8 %124 to i32, !dbg !8209
  %126 = icmp eq i32 %125, 1, !dbg !8210
  br i1 %126, label %127, label %129, !dbg !8211

127:                                              ; preds = %122
  %128 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.26, i64 0, i64 0)), !dbg !8212
  store i32 2, i32* %10, align 4, !dbg !8214
  br label %1405, !dbg !8215

129:                                              ; preds = %122
  %130 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 24, !dbg !8216
  store i8 0, i8* %130, align 4, !dbg !8217
  br label %131, !dbg !8218

131:                                              ; preds = %129, %117
  br label %132, !dbg !8219

132:                                              ; preds = %131, %5
  %133 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 13, !dbg !8220
  %134 = load i8*, i8** %133, align 8, !dbg !8220
  %135 = call i64 @strlen(i8* %134), !dbg !8222
  %136 = icmp ne i64 %135, 0, !dbg !8222
  br i1 %136, label %137, label %274, !dbg !8223

137:                                              ; preds = %132
  call void @llvm.dbg.declare(metadata i8* %35, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.declare(metadata i64* %36, metadata !8227, metadata !DIExpression()), !dbg !8228
  %138 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 13, !dbg !8229
  %139 = load i8*, i8** %138, align 8, !dbg !8229
  %140 = call i64 @strlen(i8* %139), !dbg !8231
  %141 = urem i64 %140, 2, !dbg !8232
  %142 = icmp ne i64 %141, 0, !dbg !8233
  br i1 %142, label %143, label %145, !dbg !8234

143:                                              ; preds = %137
  %144 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.27, i64 0, i64 0)), !dbg !8235
  br label %1385, !dbg !8237

145:                                              ; preds = %137
  %146 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 13, !dbg !8238
  %147 = load i8*, i8** %146, align 8, !dbg !8238
  %148 = call i64 @strlen(i8* %147), !dbg !8239
  %149 = udiv i64 %148, 2, !dbg !8240
  store i64 %149, i64* %20, align 8, !dbg !8241
  store i64 0, i64* %36, align 8, !dbg !8242
  br label %150, !dbg !8244

150:                                              ; preds = %270, %145
  %151 = load i64, i64* %36, align 8, !dbg !8245
  %152 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 13, !dbg !8247
  %153 = load i8*, i8** %152, align 8, !dbg !8247
  %154 = call i64 @strlen(i8* %153), !dbg !8248
  %155 = icmp ult i64 %151, %154, !dbg !8249
  br i1 %155, label %156, label %273, !dbg !8250

156:                                              ; preds = %150
  %157 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 13, !dbg !8251
  %158 = load i8*, i8** %157, align 8, !dbg !8251
  %159 = load i64, i64* %36, align 8, !dbg !8253
  %160 = getelementptr inbounds i8, i8* %158, i64 %159, !dbg !8254
  %161 = load i8, i8* %160, align 1, !dbg !8254
  store i8 %161, i8* %35, align 1, !dbg !8255
  %162 = load i8, i8* %35, align 1, !dbg !8256
  %163 = zext i8 %162 to i32, !dbg !8256
  %164 = icmp sge i32 %163, 48, !dbg !8258
  br i1 %164, label %165, label %174, !dbg !8259

165:                                              ; preds = %156
  %166 = load i8, i8* %35, align 1, !dbg !8260
  %167 = zext i8 %166 to i32, !dbg !8260
  %168 = icmp sle i32 %167, 57, !dbg !8261
  br i1 %168, label %169, label %174, !dbg !8262

169:                                              ; preds = %165
  %170 = load i8, i8* %35, align 1, !dbg !8263
  %171 = zext i8 %170 to i32, !dbg !8263
  %172 = sub nsw i32 %171, 48, !dbg !8263
  %173 = trunc i32 %172 to i8, !dbg !8263
  store i8 %173, i8* %35, align 1, !dbg !8263
  br label %204, !dbg !8264

174:                                              ; preds = %165, %156
  %175 = load i8, i8* %35, align 1, !dbg !8265
  %176 = zext i8 %175 to i32, !dbg !8265
  %177 = icmp sge i32 %176, 97, !dbg !8267
  br i1 %177, label %178, label %187, !dbg !8268

178:                                              ; preds = %174
  %179 = load i8, i8* %35, align 1, !dbg !8269
  %180 = zext i8 %179 to i32, !dbg !8269
  %181 = icmp sle i32 %180, 102, !dbg !8270
  br i1 %181, label %182, label %187, !dbg !8271

182:                                              ; preds = %178
  %183 = load i8, i8* %35, align 1, !dbg !8272
  %184 = zext i8 %183 to i32, !dbg !8272
  %185 = sub nsw i32 %184, 87, !dbg !8272
  %186 = trunc i32 %185 to i8, !dbg !8272
  store i8 %186, i8* %35, align 1, !dbg !8272
  br label %203, !dbg !8273

187:                                              ; preds = %178, %174
  %188 = load i8, i8* %35, align 1, !dbg !8274
  %189 = zext i8 %188 to i32, !dbg !8274
  %190 = icmp sge i32 %189, 65, !dbg !8276
  br i1 %190, label %191, label %200, !dbg !8277

191:                                              ; preds = %187
  %192 = load i8, i8* %35, align 1, !dbg !8278
  %193 = zext i8 %192 to i32, !dbg !8278
  %194 = icmp sle i32 %193, 70, !dbg !8279
  br i1 %194, label %195, label %200, !dbg !8280

195:                                              ; preds = %191
  %196 = load i8, i8* %35, align 1, !dbg !8281
  %197 = zext i8 %196 to i32, !dbg !8281
  %198 = sub nsw i32 %197, 55, !dbg !8281
  %199 = trunc i32 %198 to i8, !dbg !8281
  store i8 %199, i8* %35, align 1, !dbg !8281
  br label %202, !dbg !8282

200:                                              ; preds = %191, %187
  %201 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.27, i64 0, i64 0)), !dbg !8283
  br label %1385, !dbg !8285

202:                                              ; preds = %195
  br label %203

203:                                              ; preds = %202, %182
  br label %204

204:                                              ; preds = %203, %169
  %205 = load i8, i8* %35, align 1, !dbg !8286
  %206 = zext i8 %205 to i32, !dbg !8286
  %207 = shl i32 %206, 4, !dbg !8287
  %208 = trunc i32 %207 to i8, !dbg !8286
  %209 = load i64, i64* %36, align 8, !dbg !8288
  %210 = udiv i64 %209, 2, !dbg !8289
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 %210, !dbg !8290
  store i8 %208, i8* %211, align 1, !dbg !8291
  %212 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 13, !dbg !8292
  %213 = load i8*, i8** %212, align 8, !dbg !8292
  %214 = load i64, i64* %36, align 8, !dbg !8293
  %215 = add i64 %214, 1, !dbg !8294
  %216 = getelementptr inbounds i8, i8* %213, i64 %215, !dbg !8295
  %217 = load i8, i8* %216, align 1, !dbg !8295
  store i8 %217, i8* %35, align 1, !dbg !8296
  %218 = load i8, i8* %35, align 1, !dbg !8297
  %219 = zext i8 %218 to i32, !dbg !8297
  %220 = icmp sge i32 %219, 48, !dbg !8299
  br i1 %220, label %221, label %230, !dbg !8300

221:                                              ; preds = %204
  %222 = load i8, i8* %35, align 1, !dbg !8301
  %223 = zext i8 %222 to i32, !dbg !8301
  %224 = icmp sle i32 %223, 57, !dbg !8302
  br i1 %224, label %225, label %230, !dbg !8303

225:                                              ; preds = %221
  %226 = load i8, i8* %35, align 1, !dbg !8304
  %227 = zext i8 %226 to i32, !dbg !8304
  %228 = sub nsw i32 %227, 48, !dbg !8304
  %229 = trunc i32 %228 to i8, !dbg !8304
  store i8 %229, i8* %35, align 1, !dbg !8304
  br label %260, !dbg !8305

230:                                              ; preds = %221, %204
  %231 = load i8, i8* %35, align 1, !dbg !8306
  %232 = zext i8 %231 to i32, !dbg !8306
  %233 = icmp sge i32 %232, 97, !dbg !8308
  br i1 %233, label %234, label %243, !dbg !8309

234:                                              ; preds = %230
  %235 = load i8, i8* %35, align 1, !dbg !8310
  %236 = zext i8 %235 to i32, !dbg !8310
  %237 = icmp sle i32 %236, 102, !dbg !8311
  br i1 %237, label %238, label %243, !dbg !8312

238:                                              ; preds = %234
  %239 = load i8, i8* %35, align 1, !dbg !8313
  %240 = zext i8 %239 to i32, !dbg !8313
  %241 = sub nsw i32 %240, 87, !dbg !8313
  %242 = trunc i32 %241 to i8, !dbg !8313
  store i8 %242, i8* %35, align 1, !dbg !8313
  br label %259, !dbg !8314

243:                                              ; preds = %234, %230
  %244 = load i8, i8* %35, align 1, !dbg !8315
  %245 = zext i8 %244 to i32, !dbg !8315
  %246 = icmp sge i32 %245, 65, !dbg !8317
  br i1 %246, label %247, label %256, !dbg !8318

247:                                              ; preds = %243
  %248 = load i8, i8* %35, align 1, !dbg !8319
  %249 = zext i8 %248 to i32, !dbg !8319
  %250 = icmp sle i32 %249, 70, !dbg !8320
  br i1 %250, label %251, label %256, !dbg !8321

251:                                              ; preds = %247
  %252 = load i8, i8* %35, align 1, !dbg !8322
  %253 = zext i8 %252 to i32, !dbg !8322
  %254 = sub nsw i32 %253, 55, !dbg !8322
  %255 = trunc i32 %254 to i8, !dbg !8322
  store i8 %255, i8* %35, align 1, !dbg !8322
  br label %258, !dbg !8323

256:                                              ; preds = %247, %243
  %257 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.27, i64 0, i64 0)), !dbg !8324
  br label %1385, !dbg !8326

258:                                              ; preds = %251
  br label %259

259:                                              ; preds = %258, %238
  br label %260

260:                                              ; preds = %259, %225
  %261 = load i8, i8* %35, align 1, !dbg !8327
  %262 = zext i8 %261 to i32, !dbg !8327
  %263 = load i64, i64* %36, align 8, !dbg !8328
  %264 = udiv i64 %263, 2, !dbg !8329
  %265 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 %264, !dbg !8330
  %266 = load i8, i8* %265, align 1, !dbg !8331
  %267 = zext i8 %266 to i32, !dbg !8331
  %268 = or i32 %267, %262, !dbg !8331
  %269 = trunc i32 %268 to i8, !dbg !8331
  store i8 %269, i8* %265, align 1, !dbg !8331
  br label %270, !dbg !8332

270:                                              ; preds = %260
  %271 = load i64, i64* %36, align 8, !dbg !8333
  %272 = add i64 %271, 2, !dbg !8333
  store i64 %272, i64* %36, align 8, !dbg !8333
  br label %150, !dbg !8334, !llvm.loop !8335

273:                                              ; preds = %150
  br label %274, !dbg !8337

274:                                              ; preds = %273, %132
  %275 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 34, !dbg !8338
  %276 = load i8*, i8** %275, align 8, !dbg !8338
  %277 = icmp ne i8* %276, null, !dbg !8340
  br i1 %277, label %278, label %322, !dbg !8341

278:                                              ; preds = %274
  %279 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 34, !dbg !8342
  %280 = load i8*, i8** %279, align 8, !dbg !8342
  store i8* %280, i8** %32, align 8, !dbg !8344
  store i32 0, i32* %13, align 4, !dbg !8345
  br label %281, !dbg !8346

281:                                              ; preds = %320, %278
  %282 = load i32, i32* %13, align 4, !dbg !8347
  %283 = icmp slt i32 %282, 79, !dbg !8348
  br i1 %283, label %284, label %289, !dbg !8349

284:                                              ; preds = %281
  %285 = load i8*, i8** %32, align 8, !dbg !8350
  %286 = load i8, i8* %285, align 1, !dbg !8351
  %287 = sext i8 %286 to i32, !dbg !8351
  %288 = icmp ne i32 %287, 0, !dbg !8352
  br label %289

289:                                              ; preds = %284, %281
  %290 = phi i1 [ false, %281 ], [ %288, %284 ], !dbg !8353
  br i1 %290, label %291, label %321, !dbg !8346

291:                                              ; preds = %289
  %292 = load i8*, i8** %32, align 8, !dbg !8354
  %293 = load i32, i32* %13, align 4, !dbg !8356
  %294 = add nsw i32 %293, 1, !dbg !8356
  store i32 %294, i32* %13, align 4, !dbg !8356
  %295 = sext i32 %293 to i64, !dbg !8357
  %296 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 %295, !dbg !8357
  store i8* %292, i8** %296, align 8, !dbg !8358
  br label %297, !dbg !8359

297:                                              ; preds = %309, %291
  %298 = load i8*, i8** %32, align 8, !dbg !8360
  %299 = load i8, i8* %298, align 1, !dbg !8361
  %300 = sext i8 %299 to i32, !dbg !8361
  %301 = icmp ne i32 %300, 44, !dbg !8362
  br i1 %301, label %302, label %307, !dbg !8363

302:                                              ; preds = %297
  %303 = load i8*, i8** %32, align 8, !dbg !8364
  %304 = load i8, i8* %303, align 1, !dbg !8365
  %305 = sext i8 %304 to i32, !dbg !8365
  %306 = icmp ne i32 %305, 0, !dbg !8366
  br label %307

307:                                              ; preds = %302, %297
  %308 = phi i1 [ false, %297 ], [ %306, %302 ], !dbg !8367
  br i1 %308, label %309, label %312, !dbg !8359

309:                                              ; preds = %307
  %310 = load i8*, i8** %32, align 8, !dbg !8368
  %311 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !8368
  store i8* %311, i8** %32, align 8, !dbg !8368
  br label %297, !dbg !8359, !llvm.loop !8369

312:                                              ; preds = %307
  %313 = load i8*, i8** %32, align 8, !dbg !8370
  %314 = load i8, i8* %313, align 1, !dbg !8372
  %315 = sext i8 %314 to i32, !dbg !8372
  %316 = icmp eq i32 %315, 44, !dbg !8373
  br i1 %316, label %317, label %320, !dbg !8374

317:                                              ; preds = %312
  %318 = load i8*, i8** %32, align 8, !dbg !8375
  %319 = getelementptr inbounds i8, i8* %318, i32 1, !dbg !8375
  store i8* %319, i8** %32, align 8, !dbg !8375
  store i8 0, i8* %318, align 1, !dbg !8376
  br label %320, !dbg !8377

320:                                              ; preds = %317, %312
  br label %281, !dbg !8346, !llvm.loop !8378

321:                                              ; preds = %289
  br label %322, !dbg !8380

322:                                              ; preds = %321, %274
  br label %323, !dbg !8381

323:                                              ; preds = %322
  %324 = load i8, i8* @log_run_level, align 1, !dbg !8382
  %325 = zext i8 %324 to i32, !dbg !8382
  %326 = icmp sle i32 4, %325, !dbg !8382
  br i1 %326, label %327, label %330, !dbg !8385

327:                                              ; preds = %323
  %328 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8386
  %329 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4.28, i64 0, i64 0), i8* %328, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 489), !dbg !8386
  br label %330, !dbg !8386

330:                                              ; preds = %327, %323
  br label %331, !dbg !8385

331:                                              ; preds = %330
  call void @mbedtls_entropy_init(%struct.mbedtls_entropy_context* %23), !dbg !8388
  %332 = bitcast %struct.mbedtls_entropy_context* %23 to i8*, !dbg !8389
  %333 = load i8*, i8** %22, align 8, !dbg !8391
  %334 = load i8*, i8** %22, align 8, !dbg !8392
  %335 = call i64 @strlen(i8* %334), !dbg !8393
  %336 = call i32 @mbedtls_ctr_drbg_seed(%struct.mbedtls_ctr_drbg_context* %24, i32 (i8*, i8*, i64)* @mbedtls_entropy_func, i8* %332, i8* %333, i64 %335), !dbg !8394
  store i32 %336, i32* %10, align 4, !dbg !8395
  %337 = icmp ne i32 %336, 0, !dbg !8396
  br i1 %337, label %338, label %350, !dbg !8397

338:                                              ; preds = %331
  br label %339, !dbg !8398

339:                                              ; preds = %338
  %340 = load i8, i8* @log_run_level, align 1, !dbg !8400
  %341 = zext i8 %340 to i32, !dbg !8400
  %342 = icmp sle i32 1, %341, !dbg !8400
  br i1 %342, label %343, label %348, !dbg !8403

343:                                              ; preds = %339
  %344 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8404
  %345 = load i32, i32* %10, align 4, !dbg !8404
  %346 = sub nsw i32 0, %345, !dbg !8404
  %347 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5.29, i64 0, i64 0), i8* %344, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 496, i32 %346), !dbg !8404
  br label %348, !dbg !8404

348:                                              ; preds = %343, %339
  br label %349, !dbg !8403

349:                                              ; preds = %348
  br label %1385, !dbg !8406

350:                                              ; preds = %331
  br label %351, !dbg !8407

351:                                              ; preds = %350
  %352 = load i8, i8* @log_run_level, align 1, !dbg !8408
  %353 = zext i8 %352 to i32, !dbg !8408
  %354 = icmp sle i32 4, %353, !dbg !8408
  br i1 %354, label %355, label %358, !dbg !8411

355:                                              ; preds = %351
  %356 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8412
  %357 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6.30, i64 0, i64 0), i8* %356, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 504), !dbg !8412
  br label %358, !dbg !8412

358:                                              ; preds = %355, %351
  br label %359, !dbg !8411

359:                                              ; preds = %358
  %360 = call i32 @mbedtls_x509_crt_parse(%struct.mbedtls_x509_crt* %29, i8* getelementptr inbounds ([267576 x i8], [267576 x i8]* @.str.7.31, i64 0, i64 0), i64 267576), !dbg !8414
  store i32 %360, i32* %10, align 4, !dbg !8415
  %361 = load i32, i32* %10, align 4, !dbg !8416
  %362 = icmp slt i32 %361, 0, !dbg !8418
  br i1 %362, label %363, label %375, !dbg !8419

363:                                              ; preds = %359
  br label %364, !dbg !8420

364:                                              ; preds = %363
  %365 = load i8, i8* @log_run_level, align 1, !dbg !8422
  %366 = zext i8 %365 to i32, !dbg !8422
  %367 = icmp sle i32 1, %366, !dbg !8422
  br i1 %367, label %368, label %373, !dbg !8425

368:                                              ; preds = %364
  %369 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8426
  %370 = load i32, i32* %10, align 4, !dbg !8426
  %371 = sub nsw i32 0, %370, !dbg !8426
  %372 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8.32, i64 0, i64 0), i8* %369, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 525, i32 %371), !dbg !8426
  br label %373, !dbg !8426

373:                                              ; preds = %368, %364
  br label %374, !dbg !8425

374:                                              ; preds = %373
  br label %1385, !dbg !8428

375:                                              ; preds = %359
  %376 = load i32, i32* %10, align 4, !dbg !8429
  %377 = icmp ne i32 %376, 0, !dbg !8431
  br i1 %377, label %378, label %390, !dbg !8432

378:                                              ; preds = %375
  br label %379, !dbg !8433

379:                                              ; preds = %378
  %380 = load i8, i8* @log_run_level, align 1, !dbg !8435
  %381 = zext i8 %380 to i32, !dbg !8435
  %382 = icmp sle i32 1, %381, !dbg !8435
  br i1 %382, label %383, label %388, !dbg !8438

383:                                              ; preds = %379
  %384 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8439
  %385 = load i32, i32* %10, align 4, !dbg !8439
  %386 = sub nsw i32 0, %385, !dbg !8439
  %387 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i8* %384, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 530, i32 %386), !dbg !8439
  br label %388, !dbg !8439

388:                                              ; preds = %383, %379
  br label %389, !dbg !8438

389:                                              ; preds = %388
  br label %1385, !dbg !8441

390:                                              ; preds = %375
  %391 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 1, !dbg !8442
  %392 = load i8*, i8** %391, align 8, !dbg !8442
  %393 = icmp eq i8* %392, null, !dbg !8444
  br i1 %393, label %394, label %398, !dbg !8445

394:                                              ; preds = %390
  %395 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0, !dbg !8446
  %396 = load i8*, i8** %395, align 8, !dbg !8446
  %397 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 1, !dbg !8447
  store i8* %396, i8** %397, align 8, !dbg !8448
  br label %398, !dbg !8449

398:                                              ; preds = %394, %390
  br label %399, !dbg !8450

399:                                              ; preds = %398
  %400 = load i8, i8* @log_run_level, align 1, !dbg !8451
  %401 = zext i8 %400 to i32, !dbg !8451
  %402 = icmp sle i32 4, %401, !dbg !8451
  br i1 %402, label %403, label %415, !dbg !8454

403:                                              ; preds = %399
  %404 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8455
  %405 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !8455
  %406 = load i32, i32* %405, align 8, !dbg !8455
  %407 = icmp eq i32 %406, 0, !dbg !8455
  %408 = zext i1 %407 to i64, !dbg !8455
  %409 = select i1 %407, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.33, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), !dbg !8455
  %410 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 1, !dbg !8455
  %411 = load i8*, i8** %410, align 8, !dbg !8455
  %412 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 2, !dbg !8455
  %413 = load i8*, i8** %412, align 8, !dbg !8455
  %414 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i8* %404, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 543, i8* %409, i8* %411, i8* %413), !dbg !8455
  br label %415, !dbg !8455

415:                                              ; preds = %403, %399
  br label %416, !dbg !8454

416:                                              ; preds = %415
  %417 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 1, !dbg !8457
  %418 = load i8*, i8** %417, align 8, !dbg !8457
  %419 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 2, !dbg !8459
  %420 = load i8*, i8** %419, align 8, !dbg !8459
  %421 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !8460
  %422 = load i32, i32* %421, align 8, !dbg !8460
  %423 = icmp eq i32 %422, 0, !dbg !8461
  %424 = zext i1 %423 to i64, !dbg !8462
  %425 = select i1 %423, i32 0, i32 1, !dbg !8462
  %426 = call i32 @mbedtls_net_connect_ocall(%struct.mbedtls_net_context* %17, i8* %418, i8* %420, i32 %425), !dbg !8463
  store i32 %426, i32* %10, align 4, !dbg !8464
  %427 = icmp ne i32 %426, 0, !dbg !8465
  br i1 %427, label %428, label %440, !dbg !8466

428:                                              ; preds = %416
  br label %429, !dbg !8467

429:                                              ; preds = %428
  %430 = load i8, i8* @log_run_level, align 1, !dbg !8469
  %431 = zext i8 %430 to i32, !dbg !8469
  %432 = icmp sle i32 1, %431, !dbg !8469
  br i1 %432, label %433, label %438, !dbg !8472

433:                                              ; preds = %429
  %434 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8473
  %435 = load i32, i32* %10, align 4, !dbg !8473
  %436 = sub nsw i32 0, %435, !dbg !8473
  %437 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13, i64 0, i64 0), i8* %434, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 549, i32 %436), !dbg !8473
  br label %438, !dbg !8473

438:                                              ; preds = %433, %429
  br label %439, !dbg !8472

439:                                              ; preds = %438
  br label %1385, !dbg !8475

440:                                              ; preds = %416
  %441 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 4, !dbg !8476
  %442 = load i32, i32* %441, align 4, !dbg !8476
  %443 = icmp sgt i32 %442, 0, !dbg !8478
  br i1 %443, label %444, label %446, !dbg !8479

444:                                              ; preds = %440
  %445 = call i32 @mbedtls_net_set_nonblock_ocall(%struct.mbedtls_net_context* %17), !dbg !8480
  store i32 %445, i32* %10, align 4, !dbg !8481
  br label %448, !dbg !8482

446:                                              ; preds = %440
  %447 = call i32 @mbedtls_net_set_block_ocall(%struct.mbedtls_net_context* %17), !dbg !8483
  store i32 %447, i32* %10, align 4, !dbg !8484
  br label %448

448:                                              ; preds = %446, %444
  %449 = load i32, i32* %10, align 4, !dbg !8485
  %450 = icmp ne i32 %449, 0, !dbg !8487
  br i1 %450, label %451, label %463, !dbg !8488

451:                                              ; preds = %448
  br label %452, !dbg !8489

452:                                              ; preds = %451
  %453 = load i8, i8* @log_run_level, align 1, !dbg !8491
  %454 = zext i8 %453 to i32, !dbg !8491
  %455 = icmp sle i32 1, %454, !dbg !8491
  br i1 %455, label %456, label %461, !dbg !8494

456:                                              ; preds = %452
  %457 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8495
  %458 = load i32, i32* %10, align 4, !dbg !8495
  %459 = sub nsw i32 0, %458, !dbg !8495
  %460 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* %457, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 559, i32 %459), !dbg !8495
  br label %461, !dbg !8495

461:                                              ; preds = %456, %452
  br label %462, !dbg !8494

462:                                              ; preds = %461
  br label %1385, !dbg !8497

463:                                              ; preds = %448
  br label %464, !dbg !8498

464:                                              ; preds = %463
  %465 = load i8, i8* @log_run_level, align 1, !dbg !8499
  %466 = zext i8 %465 to i32, !dbg !8499
  %467 = icmp sle i32 4, %466, !dbg !8499
  br i1 %467, label %468, label %471, !dbg !8502

468:                                              ; preds = %464
  %469 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8503
  %470 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0), i8* %469, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 566), !dbg !8503
  br label %471, !dbg !8503

471:                                              ; preds = %468, %464
  br label %472, !dbg !8502

472:                                              ; preds = %471
  %473 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !8505
  %474 = load i32, i32* %473, align 8, !dbg !8505
  %475 = call i32 @mbedtls_ssl_config_defaults(%struct.mbedtls_ssl_config* %26, i32 0, i32 %474, i32 0), !dbg !8507
  store i32 %475, i32* %10, align 4, !dbg !8508
  %476 = icmp ne i32 %475, 0, !dbg !8509
  br i1 %476, label %477, label %489, !dbg !8510

477:                                              ; preds = %472
  br label %478, !dbg !8511

478:                                              ; preds = %477
  %479 = load i8, i8* @log_run_level, align 1, !dbg !8513
  %480 = zext i8 %479 to i32, !dbg !8513
  %481 = icmp sle i32 1, %480, !dbg !8513
  br i1 %481, label %482, label %487, !dbg !8516

482:                                              ; preds = %478
  %483 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8517
  %484 = load i32, i32* %10, align 4, !dbg !8517
  %485 = sub nsw i32 0, %484, !dbg !8517
  %486 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16.34, i64 0, i64 0), i8* %483, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 573, i32 %485), !dbg !8517
  br label %487, !dbg !8517

487:                                              ; preds = %482, %478
  br label %488, !dbg !8516

488:                                              ; preds = %487
  br label %1385, !dbg !8519

489:                                              ; preds = %472
  %490 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 3, !dbg !8520
  %491 = load i32, i32* %490, align 8, !dbg !8520
  %492 = icmp sgt i32 %491, 0, !dbg !8522
  br i1 %492, label %493, label %494, !dbg !8523

493:                                              ; preds = %489
  call void @mbedtls_ssl_conf_verify(%struct.mbedtls_ssl_config* %26, i32 (i8*, %struct.mbedtls_x509_crt*, i32, i32*)* @my_verify, i8* null), !dbg !8524
  br label %494, !dbg !8524

494:                                              ; preds = %493, %489
  %495 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 25, !dbg !8525
  %496 = load i32, i32* %495, align 8, !dbg !8525
  %497 = icmp ne i32 %496, -1, !dbg !8527
  br i1 %497, label %498, label %501, !dbg !8528

498:                                              ; preds = %494
  %499 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 25, !dbg !8529
  %500 = load i32, i32* %499, align 8, !dbg !8529
  call void @mbedtls_ssl_conf_authmode(%struct.mbedtls_ssl_config* %26, i32 %500), !dbg !8530
  br label %501, !dbg !8530

501:                                              ; preds = %498, %494
  %502 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 36, !dbg !8531
  %503 = load i32, i32* %502, align 4, !dbg !8531
  %504 = icmp ne i32 %503, 0, !dbg !8533
  br i1 %504, label %509, label %505, !dbg !8534

505:                                              ; preds = %501
  %506 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 37, !dbg !8535
  %507 = load i32, i32* %506, align 8, !dbg !8535
  %508 = icmp ne i32 %507, 0, !dbg !8536
  br i1 %508, label %509, label %514, !dbg !8537

509:                                              ; preds = %505, %501
  %510 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 36, !dbg !8538
  %511 = load i32, i32* %510, align 4, !dbg !8538
  %512 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 37, !dbg !8539
  %513 = load i32, i32* %512, align 8, !dbg !8539
  call void @mbedtls_ssl_conf_handshake_timeout(%struct.mbedtls_ssl_config* %26, i32 %511, i32 %513), !dbg !8540
  br label %514, !dbg !8540

514:                                              ; preds = %509, %505
  %515 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 26, !dbg !8541
  %516 = load i8, i8* %515, align 4, !dbg !8541
  %517 = call i32 @mbedtls_ssl_conf_max_frag_len(%struct.mbedtls_ssl_config* %26, i8 zeroext %516), !dbg !8543
  store i32 %517, i32* %10, align 4, !dbg !8544
  %518 = icmp ne i32 %517, 0, !dbg !8545
  br i1 %518, label %519, label %522, !dbg !8546

519:                                              ; preds = %514
  %520 = load i32, i32* %10, align 4, !dbg !8547
  %521 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.17, i64 0, i64 0), i32 %520), !dbg !8549
  br label %1385, !dbg !8550

522:                                              ; preds = %514
  %523 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 27, !dbg !8551
  %524 = load i32, i32* %523, align 8, !dbg !8551
  %525 = icmp ne i32 %524, -1, !dbg !8553
  br i1 %525, label %526, label %529, !dbg !8554

526:                                              ; preds = %522
  %527 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 27, !dbg !8555
  %528 = load i32, i32* %527, align 8, !dbg !8555
  call void @mbedtls_ssl_conf_truncated_hmac(%struct.mbedtls_ssl_config* %26, i32 %528), !dbg !8556
  br label %529, !dbg !8556

529:                                              ; preds = %526, %522
  %530 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 39, !dbg !8557
  %531 = load i8, i8* %530, align 1, !dbg !8557
  %532 = sext i8 %531 to i32, !dbg !8559
  %533 = icmp ne i32 %532, -1, !dbg !8560
  br i1 %533, label %534, label %537, !dbg !8561

534:                                              ; preds = %529
  %535 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 39, !dbg !8562
  %536 = load i8, i8* %535, align 1, !dbg !8562
  call void @mbedtls_ssl_conf_extended_master_secret(%struct.mbedtls_ssl_config* %26, i8 signext %536), !dbg !8563
  br label %537, !dbg !8563

537:                                              ; preds = %534, %529
  %538 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 40, !dbg !8564
  %539 = load i8, i8* %538, align 2, !dbg !8564
  %540 = sext i8 %539 to i32, !dbg !8566
  %541 = icmp ne i32 %540, -1, !dbg !8567
  br i1 %541, label %542, label %545, !dbg !8568

542:                                              ; preds = %537
  %543 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 40, !dbg !8569
  %544 = load i8, i8* %543, align 2, !dbg !8569
  call void @mbedtls_ssl_conf_encrypt_then_mac(%struct.mbedtls_ssl_config* %26, i8 signext %544), !dbg !8570
  br label %545, !dbg !8570

545:                                              ; preds = %542, %537
  %546 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 28, !dbg !8571
  %547 = load i32, i32* %546, align 4, !dbg !8571
  %548 = icmp ne i32 %547, -1, !dbg !8573
  br i1 %548, label %549, label %556, !dbg !8574

549:                                              ; preds = %545
  %550 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 28, !dbg !8575
  %551 = load i32, i32* %550, align 4, !dbg !8575
  %552 = icmp ne i32 %551, 0, !dbg !8576
  %553 = zext i1 %552 to i64, !dbg !8576
  %554 = select i1 %552, i32 1, i32 0, !dbg !8576
  %555 = trunc i32 %554 to i8, !dbg !8576
  call void @mbedtls_ssl_conf_cbc_record_splitting(%struct.mbedtls_ssl_config* %26, i8 signext %555), !dbg !8577
  br label %556, !dbg !8577

556:                                              ; preds = %549, %545
  %557 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 29, !dbg !8578
  %558 = load i32, i32* %557, align 8, !dbg !8578
  %559 = icmp ne i32 %558, -1, !dbg !8580
  br i1 %559, label %560, label %563, !dbg !8581

560:                                              ; preds = %556
  %561 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 29, !dbg !8582
  %562 = load i32, i32* %561, align 8, !dbg !8582
  call void @mbedtls_ssl_conf_dhm_min_bitlen(%struct.mbedtls_ssl_config* %26, i32 %562), !dbg !8583
  br label %563, !dbg !8583

563:                                              ; preds = %560, %556
  %564 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 34, !dbg !8584
  %565 = load i8*, i8** %564, align 8, !dbg !8584
  %566 = icmp ne i8* %565, null, !dbg !8586
  br i1 %566, label %567, label %575, !dbg !8587

567:                                              ; preds = %563
  %568 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 0, !dbg !8588
  %569 = call i32 @mbedtls_ssl_conf_alpn_protocols(%struct.mbedtls_ssl_config* %26, i8** %568), !dbg !8590
  store i32 %569, i32* %10, align 4, !dbg !8591
  %570 = icmp ne i32 %569, 0, !dbg !8592
  br i1 %570, label %571, label %574, !dbg !8593

571:                                              ; preds = %567
  %572 = load i32, i32* %10, align 4, !dbg !8594
  %573 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0), i32 %572), !dbg !8596
  br label %1385, !dbg !8597

574:                                              ; preds = %567
  br label %575, !dbg !8598

575:                                              ; preds = %574, %563
  %576 = bitcast %struct.mbedtls_ctr_drbg_context* %24 to i8*, !dbg !8599
  call void @mbedtls_ssl_conf_rng(%struct.mbedtls_ssl_config* %26, i32 (i8*, i8*, i64)* @mbedtls_ctr_drbg_random, i8* %576), !dbg !8600
  call void @mbedtls_ssl_conf_dbg(%struct.mbedtls_ssl_config* %26, void (i8*, i32, i8*, i32, i8*)* @my_debug, i8* null), !dbg !8601
  %577 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 5, !dbg !8602
  %578 = load i32, i32* %577, align 8, !dbg !8602
  call void @mbedtls_ssl_conf_read_timeout(%struct.mbedtls_ssl_config* %26, i32 %578), !dbg !8603
  %579 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 33, !dbg !8604
  %580 = load i32, i32* %579, align 8, !dbg !8604
  call void @mbedtls_ssl_conf_session_tickets(%struct.mbedtls_ssl_config* %26, i32 %580), !dbg !8605
  %581 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 16, !dbg !8606
  %582 = getelementptr inbounds [2 x i32], [2 x i32]* %581, i64 0, i64 0, !dbg !8608
  %583 = load i32, i32* %582, align 8, !dbg !8608
  %584 = icmp ne i32 %583, 0, !dbg !8609
  br i1 %584, label %585, label %588, !dbg !8610

585:                                              ; preds = %575
  %586 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 16, !dbg !8611
  %587 = getelementptr inbounds [2 x i32], [2 x i32]* %586, i64 0, i64 0, !dbg !8612
  call void @mbedtls_ssl_conf_ciphersuites(%struct.mbedtls_ssl_config* %26, i32* %587), !dbg !8613
  br label %588, !dbg !8613

588:                                              ; preds = %585, %575
  %589 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 24, !dbg !8614
  %590 = load i8, i8* %589, align 4, !dbg !8614
  %591 = sext i8 %590 to i32, !dbg !8616
  %592 = icmp ne i32 %591, -1, !dbg !8617
  br i1 %592, label %593, label %596, !dbg !8618

593:                                              ; preds = %588
  %594 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 24, !dbg !8619
  %595 = load i8, i8* %594, align 4, !dbg !8619
  call void @mbedtls_ssl_conf_arc4_support(%struct.mbedtls_ssl_config* %26, i8 signext %595), !dbg !8620
  br label %596, !dbg !8620

596:                                              ; preds = %593, %588
  %597 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 18, !dbg !8621
  %598 = load i32, i32* %597, align 4, !dbg !8621
  %599 = icmp ne i32 %598, -2, !dbg !8623
  br i1 %599, label %600, label %603, !dbg !8624

600:                                              ; preds = %596
  %601 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 18, !dbg !8625
  %602 = load i32, i32* %601, align 4, !dbg !8625
  call void @mbedtls_ssl_conf_legacy_renegotiation(%struct.mbedtls_ssl_config* %26, i32 %602), !dbg !8626
  br label %603, !dbg !8626

603:                                              ; preds = %600, %596
  %604 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 17, !dbg !8627
  %605 = load i32, i32* %604, align 8, !dbg !8627
  call void @mbedtls_ssl_conf_renegotiation(%struct.mbedtls_ssl_config* %26, i32 %605), !dbg !8628
  %606 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 10, !dbg !8629
  %607 = load i8*, i8** %606, align 8, !dbg !8629
  %608 = call i32 @strcmp(i8* %607, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)), !dbg !8631
  %609 = icmp ne i32 %608, 0, !dbg !8632
  br i1 %609, label %610, label %616, !dbg !8633

610:                                              ; preds = %603
  %611 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 9, !dbg !8634
  %612 = load i8*, i8** %611, align 8, !dbg !8634
  %613 = call i32 @strcmp(i8* %612, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)), !dbg !8635
  %614 = icmp ne i32 %613, 0, !dbg !8636
  br i1 %614, label %615, label %616, !dbg !8637

615:                                              ; preds = %610
  call void @mbedtls_ssl_conf_ca_chain(%struct.mbedtls_ssl_config* %26, %struct.mbedtls_x509_crt* %29, %struct.mbedtls_x509_crl* null), !dbg !8638
  br label %616, !dbg !8640

616:                                              ; preds = %615, %610, %603
  %617 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 11, !dbg !8641
  %618 = load i8*, i8** %617, align 8, !dbg !8641
  %619 = call i32 @strcmp(i8* %618, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)), !dbg !8643
  %620 = icmp ne i32 %619, 0, !dbg !8644
  br i1 %620, label %621, label %633, !dbg !8645

621:                                              ; preds = %616
  %622 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 12, !dbg !8646
  %623 = load i8*, i8** %622, align 8, !dbg !8646
  %624 = call i32 @strcmp(i8* %623, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)), !dbg !8647
  %625 = icmp ne i32 %624, 0, !dbg !8648
  br i1 %625, label %626, label %633, !dbg !8649

626:                                              ; preds = %621
  %627 = call i32 @mbedtls_ssl_conf_own_cert(%struct.mbedtls_ssl_config* %26, %struct.mbedtls_x509_crt* %30, %struct.mbedtls_pk_context* %31), !dbg !8650
  store i32 %627, i32* %10, align 4, !dbg !8653
  %628 = icmp ne i32 %627, 0, !dbg !8654
  br i1 %628, label %629, label %632, !dbg !8655

629:                                              ; preds = %626
  %630 = load i32, i32* %10, align 4, !dbg !8656
  %631 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0), i32 %630), !dbg !8658
  br label %1385, !dbg !8659

632:                                              ; preds = %626
  br label %633, !dbg !8660

633:                                              ; preds = %632, %621, %616
  %634 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 0, !dbg !8661
  %635 = load i64, i64* %20, align 8, !dbg !8663
  %636 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 14, !dbg !8664
  %637 = load i8*, i8** %636, align 8, !dbg !8664
  %638 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 14, !dbg !8665
  %639 = load i8*, i8** %638, align 8, !dbg !8665
  %640 = call i64 @strlen(i8* %639), !dbg !8666
  %641 = call i32 @mbedtls_ssl_conf_psk(%struct.mbedtls_ssl_config* %26, i8* %634, i64 %635, i8* %637, i64 %640), !dbg !8667
  store i32 %641, i32* %10, align 4, !dbg !8668
  %642 = icmp ne i32 %641, 0, !dbg !8669
  br i1 %642, label %643, label %646, !dbg !8670

643:                                              ; preds = %633
  %644 = load i32, i32* %10, align 4, !dbg !8671
  %645 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0), i32 %644), !dbg !8673
  br label %1385, !dbg !8674

646:                                              ; preds = %633
  %647 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8675
  %648 = load i32, i32* %647, align 4, !dbg !8675
  %649 = icmp ne i32 %648, -1, !dbg !8677
  br i1 %649, label %650, label %653, !dbg !8678

650:                                              ; preds = %646
  %651 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 22, !dbg !8679
  %652 = load i32, i32* %651, align 4, !dbg !8679
  call void @mbedtls_ssl_conf_min_version(%struct.mbedtls_ssl_config* %26, i32 3, i32 %652), !dbg !8680
  br label %653, !dbg !8680

653:                                              ; preds = %650, %646
  %654 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8681
  %655 = load i32, i32* %654, align 8, !dbg !8681
  %656 = icmp ne i32 %655, -1, !dbg !8683
  br i1 %656, label %657, label %660, !dbg !8684

657:                                              ; preds = %653
  %658 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 23, !dbg !8685
  %659 = load i32, i32* %658, align 8, !dbg !8685
  call void @mbedtls_ssl_conf_max_version(%struct.mbedtls_ssl_config* %26, i32 3, i32 %659), !dbg !8686
  br label %660, !dbg !8686

660:                                              ; preds = %657, %653
  %661 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 38, !dbg !8687
  %662 = load i8, i8* %661, align 4, !dbg !8687
  %663 = sext i8 %662 to i32, !dbg !8689
  %664 = icmp ne i32 %663, -1, !dbg !8690
  br i1 %664, label %665, label %668, !dbg !8691

665:                                              ; preds = %660
  %666 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 38, !dbg !8692
  %667 = load i8, i8* %666, align 4, !dbg !8692
  call void @mbedtls_ssl_conf_fallback(%struct.mbedtls_ssl_config* %26, i8 signext %667), !dbg !8693
  br label %668, !dbg !8693

668:                                              ; preds = %665, %660
  %669 = call i32 @mbedtls_ssl_setup(%struct.mbedtls_ssl_context* %25, %struct.mbedtls_ssl_config* %26), !dbg !8694
  store i32 %669, i32* %10, align 4, !dbg !8696
  %670 = icmp ne i32 %669, 0, !dbg !8697
  br i1 %670, label %671, label %683, !dbg !8698

671:                                              ; preds = %668
  br label %672, !dbg !8699

672:                                              ; preds = %671
  %673 = load i8, i8* @log_run_level, align 1, !dbg !8701
  %674 = zext i8 %673 to i32, !dbg !8701
  %675 = icmp sle i32 1, %674, !dbg !8701
  br i1 %675, label %676, label %681, !dbg !8704

676:                                              ; preds = %672
  %677 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8705
  %678 = load i32, i32* %10, align 4, !dbg !8705
  %679 = sub nsw i32 0, %678, !dbg !8705
  %680 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.22, i64 0, i64 0), i8* %677, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 697, i32 %679), !dbg !8705
  br label %681, !dbg !8705

681:                                              ; preds = %676, %672
  br label %682, !dbg !8704

682:                                              ; preds = %681
  br label %1385, !dbg !8707

683:                                              ; preds = %668
  %684 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0, !dbg !8708
  %685 = load i8*, i8** %684, align 8, !dbg !8708
  %686 = call i32 @mbedtls_ssl_set_hostname(%struct.mbedtls_ssl_context* %25, i8* %685), !dbg !8710
  store i32 %686, i32* %10, align 4, !dbg !8711
  %687 = icmp ne i32 %686, 0, !dbg !8712
  br i1 %687, label %688, label %699, !dbg !8713

688:                                              ; preds = %683
  br label %689, !dbg !8714

689:                                              ; preds = %688
  %690 = load i8, i8* @log_run_level, align 1, !dbg !8716
  %691 = zext i8 %690 to i32, !dbg !8716
  %692 = icmp sle i32 1, %691, !dbg !8716
  br i1 %692, label %693, label %697, !dbg !8719

693:                                              ; preds = %689
  %694 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8720
  %695 = load i32, i32* %10, align 4, !dbg !8720
  %696 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.23, i64 0, i64 0), i8* %694, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 704, i32 %695), !dbg !8720
  br label %697, !dbg !8720

697:                                              ; preds = %693, %689
  br label %698, !dbg !8719

698:                                              ; preds = %697
  br label %1385, !dbg !8722

699:                                              ; preds = %683
  %700 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 4, !dbg !8723
  %701 = load i32, i32* %700, align 4, !dbg !8723
  %702 = icmp eq i32 %701, 2, !dbg !8725
  br i1 %702, label %703, label %705, !dbg !8726

703:                                              ; preds = %699
  %704 = bitcast %struct.mbedtls_net_context* %17 to i8*, !dbg !8727
  call void @mbedtls_ssl_set_bio(%struct.mbedtls_ssl_context* %25, i8* %704, i32 (i8*, i8*, i64)* @my_send, i32 (i8*, i8*, i64)* @my_recv, i32 (i8*, i8*, i64, i32)* null), !dbg !8728
  br label %712, !dbg !8728

705:                                              ; preds = %699
  %706 = bitcast %struct.mbedtls_net_context* %17 to i8*, !dbg !8729
  %707 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 4, !dbg !8730
  %708 = load i32, i32* %707, align 4, !dbg !8730
  %709 = icmp eq i32 %708, 0, !dbg !8731
  %710 = zext i1 %709 to i64, !dbg !8732
  %711 = select i1 %709, i32 (i8*, i8*, i64, i32)* @mbedtls_net_recv_timeout_ocall, i32 (i8*, i8*, i64, i32)* null, !dbg !8732
  call void @mbedtls_ssl_set_bio(%struct.mbedtls_ssl_context* %25, i8* %706, i32 (i8*, i8*, i64)* @mbedtls_net_send_ocall, i32 (i8*, i8*, i64)* @mbedtls_net_recv_ocall, i32 (i8*, i8*, i64, i32)* %711), !dbg !8733
  br label %712

712:                                              ; preds = %705, %703
  br label %713, !dbg !8734

713:                                              ; preds = %712
  %714 = load i8, i8* @log_run_level, align 1, !dbg !8735
  %715 = zext i8 %714 to i32, !dbg !8735
  %716 = icmp sle i32 4, %715, !dbg !8735
  br i1 %716, label %717, label %720, !dbg !8738

717:                                              ; preds = %713
  %718 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8739
  %719 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.24.35, i64 0, i64 0), i8* %718, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 736), !dbg !8739
  br label %720, !dbg !8739

720:                                              ; preds = %717, %713
  br label %721, !dbg !8738

721:                                              ; preds = %720
  br label %722, !dbg !8741

722:                                              ; preds = %756, %721
  %723 = call i32 @mbedtls_ssl_handshake(%struct.mbedtls_ssl_context* %25), !dbg !8742
  store i32 %723, i32* %10, align 4, !dbg !8743
  %724 = icmp ne i32 %723, 0, !dbg !8744
  br i1 %724, label %725, label %757, !dbg !8741

725:                                              ; preds = %722
  %726 = load i32, i32* %10, align 4, !dbg !8745
  %727 = icmp ne i32 %726, -26880, !dbg !8748
  br i1 %727, label %728, label %756, !dbg !8749

728:                                              ; preds = %725
  %729 = load i32, i32* %10, align 4, !dbg !8750
  %730 = icmp ne i32 %729, -26752, !dbg !8751
  br i1 %730, label %731, label %756, !dbg !8752

731:                                              ; preds = %728
  br label %732, !dbg !8753

732:                                              ; preds = %731
  %733 = load i8, i8* @log_run_level, align 1, !dbg !8755
  %734 = zext i8 %733 to i32, !dbg !8755
  %735 = icmp sle i32 1, %734, !dbg !8755
  br i1 %735, label %736, label %741, !dbg !8758

736:                                              ; preds = %732
  %737 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8759
  %738 = load i32, i32* %10, align 4, !dbg !8759
  %739 = sub nsw i32 0, %738, !dbg !8759
  %740 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.25, i64 0, i64 0), i8* %737, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 742, i32 %739), !dbg !8759
  br label %741, !dbg !8759

741:                                              ; preds = %736, %732
  br label %742, !dbg !8758

742:                                              ; preds = %741
  %743 = load i32, i32* %10, align 4, !dbg !8761
  %744 = icmp eq i32 %743, -9984, !dbg !8763
  br i1 %744, label %745, label %755, !dbg !8764

745:                                              ; preds = %742
  br label %746, !dbg !8765

746:                                              ; preds = %745
  %747 = load i8, i8* @log_run_level, align 1, !dbg !8766
  %748 = zext i8 %747 to i32, !dbg !8766
  %749 = icmp sle i32 1, %748, !dbg !8766
  br i1 %749, label %750, label %753, !dbg !8769

750:                                              ; preds = %746
  %751 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8770
  %752 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([214 x i8], [214 x i8]* @.str.26, i64 0, i64 0), i8* %751, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 750), !dbg !8770
  br label %753, !dbg !8770

753:                                              ; preds = %750, %746
  br label %754, !dbg !8769

754:                                              ; preds = %753
  br label %755, !dbg !8769

755:                                              ; preds = %754, %742
  br label %1385, !dbg !8772

756:                                              ; preds = %728, %725
  br label %722, !dbg !8741, !llvm.loop !8773

757:                                              ; preds = %722
  br label %758, !dbg !8775

758:                                              ; preds = %757
  %759 = load i8, i8* @log_run_level, align 1, !dbg !8776
  %760 = zext i8 %759 to i32, !dbg !8776
  %761 = icmp sle i32 4, %760, !dbg !8776
  br i1 %761, label %762, label %767, !dbg !8779

762:                                              ; preds = %758
  %763 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8780
  %764 = call i8* @mbedtls_ssl_get_version(%struct.mbedtls_ssl_context* %25), !dbg !8780
  %765 = call i8* @mbedtls_ssl_get_ciphersuite(%struct.mbedtls_ssl_context* %25), !dbg !8780
  %766 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0), i8* %763, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 756, i8* %764, i8* %765), !dbg !8780
  br label %767, !dbg !8780

767:                                              ; preds = %762, %758
  br label %768, !dbg !8779

768:                                              ; preds = %767
  %769 = call i32 @mbedtls_ssl_get_record_expansion(%struct.mbedtls_ssl_context* %25), !dbg !8782
  store i32 %769, i32* %10, align 4, !dbg !8784
  %770 = icmp sge i32 %769, 0, !dbg !8785
  br i1 %770, label %771, label %782, !dbg !8786

771:                                              ; preds = %768
  br label %772, !dbg !8787

772:                                              ; preds = %771
  %773 = load i8, i8* @log_run_level, align 1, !dbg !8788
  %774 = zext i8 %773 to i32, !dbg !8788
  %775 = icmp sle i32 5, %774, !dbg !8788
  br i1 %775, label %776, label %780, !dbg !8791

776:                                              ; preds = %772
  %777 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 5), align 8, !dbg !8792
  %778 = load i32, i32* %10, align 4, !dbg !8792
  %779 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i64 0, i64 0), i8* %777, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 759, i32 %778), !dbg !8792
  br label %780, !dbg !8792

780:                                              ; preds = %776, %772
  br label %781, !dbg !8791

781:                                              ; preds = %780
  br label %792, !dbg !8791

782:                                              ; preds = %768
  br label %783, !dbg !8794

783:                                              ; preds = %782
  %784 = load i8, i8* @log_run_level, align 1, !dbg !8795
  %785 = zext i8 %784 to i32, !dbg !8795
  %786 = icmp sle i32 5, %785, !dbg !8795
  br i1 %786, label %787, label %790, !dbg !8798

787:                                              ; preds = %783
  %788 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 5), align 8, !dbg !8799
  %789 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.29, i64 0, i64 0), i8* %788, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 761), !dbg !8799
  br label %790, !dbg !8799

790:                                              ; preds = %787, %783
  br label %791, !dbg !8798

791:                                              ; preds = %790
  br label %792

792:                                              ; preds = %791, %781
  br label %793, !dbg !8801

793:                                              ; preds = %792
  %794 = load i8, i8* @log_run_level, align 1, !dbg !8802
  %795 = zext i8 %794 to i32, !dbg !8802
  %796 = icmp sle i32 4, %795, !dbg !8802
  br i1 %796, label %797, label %802, !dbg !8805

797:                                              ; preds = %793
  %798 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8806
  %799 = call i64 @mbedtls_ssl_get_max_frag_len(%struct.mbedtls_ssl_context* %25), !dbg !8806
  %800 = trunc i64 %799 to i32, !dbg !8806
  %801 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.30, i64 0, i64 0), i8* %798, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 765, i32 %800), !dbg !8806
  br label %802, !dbg !8806

802:                                              ; preds = %797, %793
  br label %803, !dbg !8805

803:                                              ; preds = %802
  %804 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 34, !dbg !8808
  %805 = load i8*, i8** %804, align 8, !dbg !8808
  %806 = icmp ne i8* %805, null, !dbg !8810
  br i1 %806, label %807, label %817, !dbg !8811

807:                                              ; preds = %803
  call void @llvm.dbg.declare(metadata i8** %37, metadata !8812, metadata !DIExpression()), !dbg !8814
  %808 = call i8* @mbedtls_ssl_get_alpn_protocol(%struct.mbedtls_ssl_context* %25), !dbg !8815
  store i8* %808, i8** %37, align 8, !dbg !8814
  %809 = load i8*, i8** %37, align 8, !dbg !8816
  %810 = icmp ne i8* %809, null, !dbg !8816
  br i1 %810, label %811, label %813, !dbg !8816

811:                                              ; preds = %807
  %812 = load i8*, i8** %37, align 8, !dbg !8817
  br label %814, !dbg !8816

813:                                              ; preds = %807
  br label %814, !dbg !8816

814:                                              ; preds = %813, %811
  %815 = phi i8* [ %812, %811 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), %813 ], !dbg !8816
  %816 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i64 0, i64 0), i8* %815), !dbg !8818
  br label %817, !dbg !8819

817:                                              ; preds = %814, %803
  %818 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 30, !dbg !8820
  %819 = load i32, i32* %818, align 4, !dbg !8820
  %820 = icmp ne i32 %819, 0, !dbg !8822
  br i1 %820, label %821, label %855, !dbg !8823

821:                                              ; preds = %817
  br label %822, !dbg !8824

822:                                              ; preds = %821
  %823 = load i8, i8* @log_run_level, align 1, !dbg !8826
  %824 = zext i8 %823 to i32, !dbg !8826
  %825 = icmp sle i32 4, %824, !dbg !8826
  br i1 %825, label %826, label %829, !dbg !8829

826:                                              ; preds = %822
  %827 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8830
  %828 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.33, i64 0, i64 0), i8* %827, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 779), !dbg !8830
  br label %829, !dbg !8830

829:                                              ; preds = %826, %822
  br label %830, !dbg !8829

830:                                              ; preds = %829
  %831 = call i32 @mbedtls_ssl_get_session(%struct.mbedtls_ssl_context* %25, %struct.mbedtls_ssl_session* %27), !dbg !8832
  store i32 %831, i32* %10, align 4, !dbg !8834
  %832 = icmp ne i32 %831, 0, !dbg !8835
  br i1 %832, label %833, label %845, !dbg !8836

833:                                              ; preds = %830
  br label %834, !dbg !8837

834:                                              ; preds = %833
  %835 = load i8, i8* @log_run_level, align 1, !dbg !8839
  %836 = zext i8 %835 to i32, !dbg !8839
  %837 = icmp sle i32 1, %836, !dbg !8839
  br i1 %837, label %838, label %843, !dbg !8842

838:                                              ; preds = %834
  %839 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !8843
  %840 = load i32, i32* %10, align 4, !dbg !8843
  %841 = sub nsw i32 0, %840, !dbg !8843
  %842 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0), i8* %839, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 783, i32 %841), !dbg !8843
  br label %843, !dbg !8843

843:                                              ; preds = %838, %834
  br label %844, !dbg !8842

844:                                              ; preds = %843
  br label %1385, !dbg !8845

845:                                              ; preds = %830
  br label %846, !dbg !8846

846:                                              ; preds = %845
  %847 = load i8, i8* @log_run_level, align 1, !dbg !8847
  %848 = zext i8 %847 to i32, !dbg !8847
  %849 = icmp sle i32 4, %848, !dbg !8847
  br i1 %849, label %850, label %853, !dbg !8850

850:                                              ; preds = %846
  %851 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8851
  %852 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i8* %851, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 787), !dbg !8851
  br label %853, !dbg !8851

853:                                              ; preds = %850, %846
  br label %854, !dbg !8850

854:                                              ; preds = %853
  br label %855, !dbg !8853

855:                                              ; preds = %854, %817
  br label %856, !dbg !8854

856:                                              ; preds = %855
  %857 = load i8, i8* @log_run_level, align 1, !dbg !8855
  %858 = zext i8 %857 to i32, !dbg !8855
  %859 = icmp sle i32 4, %858, !dbg !8855
  br i1 %859, label %860, label %863, !dbg !8858

860:                                              ; preds = %856
  %861 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8859
  %862 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0), i8* %861, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 794), !dbg !8859
  br label %863, !dbg !8859

863:                                              ; preds = %860, %856
  br label %864, !dbg !8858

864:                                              ; preds = %863
  %865 = call i32 @mbedtls_ssl_get_verify_result(%struct.mbedtls_ssl_context* %25), !dbg !8861
  store i32 %865, i32* %28, align 4, !dbg !8863
  %866 = icmp ne i32 %865, 0, !dbg !8864
  br i1 %866, label %867, label %874, !dbg !8865

867:                                              ; preds = %864
  call void @llvm.dbg.declare(metadata [512 x i8]* %38, metadata !8866, metadata !DIExpression()), !dbg !8871
  %868 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)), !dbg !8872
  %869 = getelementptr inbounds [512 x i8], [512 x i8]* %38, i64 0, i64 0, !dbg !8873
  %870 = load i32, i32* %28, align 4, !dbg !8874
  %871 = call i32 @mbedtls_x509_crt_verify_info(i8* %869, i64 512, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i32 %870), !dbg !8875
  %872 = getelementptr inbounds [512 x i8], [512 x i8]* %38, i64 0, i64 0, !dbg !8876
  %873 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i8* %872), !dbg !8877
  br label %884, !dbg !8878

874:                                              ; preds = %864
  br label %875, !dbg !8879

875:                                              ; preds = %874
  %876 = load i8, i8* @log_run_level, align 1, !dbg !8880
  %877 = zext i8 %876 to i32, !dbg !8880
  %878 = icmp sle i32 4, %877, !dbg !8880
  br i1 %878, label %879, label %882, !dbg !8883

879:                                              ; preds = %875
  %880 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !8884
  %881 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i8* %880, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 807), !dbg !8884
  br label %882, !dbg !8884

882:                                              ; preds = %879, %875
  br label %883, !dbg !8883

883:                                              ; preds = %882
  br label %884

884:                                              ; preds = %883, %867
  %885 = call %struct.mbedtls_x509_crt* @mbedtls_ssl_get_peer_cert(%struct.mbedtls_ssl_context* %25), !dbg !8886
  %886 = icmp ne %struct.mbedtls_x509_crt* %885, null, !dbg !8888
  br i1 %886, label %887, label %907, !dbg !8889

887:                                              ; preds = %884
  %888 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 3, !dbg !8890
  %889 = load i32, i32* %888, align 8, !dbg !8890
  %890 = icmp sgt i32 %889, 0, !dbg !8893
  br i1 %890, label %891, label %906, !dbg !8894

891:                                              ; preds = %887
  br label %892, !dbg !8895

892:                                              ; preds = %891
  %893 = load i8, i8* @log_run_level, align 1, !dbg !8897
  %894 = zext i8 %893 to i32, !dbg !8897
  %895 = icmp sle i32 5, %894, !dbg !8897
  br i1 %895, label %896, label %899, !dbg !8900

896:                                              ; preds = %892
  %897 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 5), align 8, !dbg !8901
  %898 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0), i8* %897, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 813), !dbg !8901
  br label %899, !dbg !8901

899:                                              ; preds = %896, %892
  br label %900, !dbg !8900

900:                                              ; preds = %899
  %901 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !8903
  %902 = call %struct.mbedtls_x509_crt* @mbedtls_ssl_get_peer_cert(%struct.mbedtls_ssl_context* %25), !dbg !8904
  %903 = call i32 @mbedtls_x509_crt_info(i8* %901, i64 16384, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %struct.mbedtls_x509_crt* %902), !dbg !8905
  %904 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !8906
  %905 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i8* %904), !dbg !8907
  br label %906, !dbg !8908

906:                                              ; preds = %900, %887
  br label %907, !dbg !8909

907:                                              ; preds = %906, %884
  %908 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 19, !dbg !8910
  %909 = load i32, i32* %908, align 8, !dbg !8910
  %910 = icmp ne i32 %909, 0, !dbg !8912
  br i1 %910, label %911, label %928, !dbg !8913

911:                                              ; preds = %907
  %912 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0)), !dbg !8914
  br label %913, !dbg !8916

913:                                              ; preds = %925, %911
  %914 = call i32 @mbedtls_ssl_renegotiate(%struct.mbedtls_ssl_context* %25), !dbg !8917
  store i32 %914, i32* %10, align 4, !dbg !8918
  %915 = icmp ne i32 %914, 0, !dbg !8919
  br i1 %915, label %916, label %926, !dbg !8916

916:                                              ; preds = %913
  %917 = load i32, i32* %10, align 4, !dbg !8920
  %918 = icmp ne i32 %917, -26880, !dbg !8923
  br i1 %918, label %919, label %925, !dbg !8924

919:                                              ; preds = %916
  %920 = load i32, i32* %10, align 4, !dbg !8925
  %921 = icmp ne i32 %920, -26752, !dbg !8926
  br i1 %921, label %922, label %925, !dbg !8927

922:                                              ; preds = %919
  %923 = load i32, i32* %10, align 4, !dbg !8928
  %924 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.44, i64 0, i64 0), i32 %923), !dbg !8930
  br label %1385, !dbg !8931

925:                                              ; preds = %919, %916
  br label %913, !dbg !8916, !llvm.loop !8932

926:                                              ; preds = %913
  %927 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)), !dbg !8934
  br label %928, !dbg !8935

928:                                              ; preds = %926, %907
  %929 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 6, !dbg !8936
  %930 = load i32, i32* %929, align 4, !dbg !8936
  store i32 %930, i32* %16, align 4, !dbg !8937
  br label %931, !dbg !8938

931:                                              ; preds = %1382, %1293, %1286, %1242, %928
  call void @llvm.dbg.label(metadata !8939), !dbg !8940
  %932 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !8941
  %933 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 7, !dbg !8942
  %934 = load i8*, i8** %933, align 8, !dbg !8942
  %935 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %932, i64 16384, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0), i8* %934), !dbg !8943
  store i32 %935, i32* %11, align 4, !dbg !8944
  %936 = load i8**, i8*** %6, align 8, !dbg !8945
  %937 = icmp ne i8** %936, null, !dbg !8945
  br i1 %937, label %938, label %966, !dbg !8947

938:                                              ; preds = %931
  %939 = load i32, i32* %7, align 4, !dbg !8948
  %940 = icmp sgt i32 %939, 0, !dbg !8949
  br i1 %940, label %941, label %966, !dbg !8950

941:                                              ; preds = %938
  store i32 0, i32* %13, align 4, !dbg !8951
  br label %942, !dbg !8954

942:                                              ; preds = %962, %941
  %943 = load i32, i32* %13, align 4, !dbg !8955
  %944 = load i32, i32* %7, align 4, !dbg !8957
  %945 = icmp slt i32 %943, %944, !dbg !8958
  br i1 %945, label %946, label %965, !dbg !8959

946:                                              ; preds = %942
  %947 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !8960
  %948 = load i32, i32* %11, align 4, !dbg !8962
  %949 = sext i32 %948 to i64, !dbg !8963
  %950 = getelementptr inbounds i8, i8* %947, i64 %949, !dbg !8963
  %951 = load i32, i32* %11, align 4, !dbg !8964
  %952 = sext i32 %951 to i64, !dbg !8964
  %953 = sub i64 16384, %952, !dbg !8965
  %954 = load i8**, i8*** %6, align 8, !dbg !8966
  %955 = load i32, i32* %13, align 4, !dbg !8967
  %956 = sext i32 %955 to i64, !dbg !8966
  %957 = getelementptr inbounds i8*, i8** %954, i64 %956, !dbg !8966
  %958 = load i8*, i8** %957, align 8, !dbg !8966
  %959 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %950, i64 %953, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8* %958), !dbg !8968
  %960 = load i32, i32* %11, align 4, !dbg !8969
  %961 = add nsw i32 %960, %959, !dbg !8969
  store i32 %961, i32* %11, align 4, !dbg !8969
  br label %962, !dbg !8970

962:                                              ; preds = %946
  %963 = load i32, i32* %13, align 4, !dbg !8971
  %964 = add nsw i32 %963, 1, !dbg !8971
  store i32 %964, i32* %13, align 4, !dbg !8971
  br label %942, !dbg !8972, !llvm.loop !8973

965:                                              ; preds = %942
  br label %966, !dbg !8975

966:                                              ; preds = %965, %938, %931
  store i32 2, i32* %12, align 4, !dbg !8976
  %967 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !8977
  %968 = load i32, i32* %967, align 8, !dbg !8977
  %969 = icmp ne i32 %968, -1, !dbg !8979
  br i1 %969, label %970, label %997, !dbg !8980

970:                                              ; preds = %966
  %971 = load i32, i32* %11, align 4, !dbg !8981
  %972 = load i32, i32* %12, align 4, !dbg !8982
  %973 = add nsw i32 %971, %972, !dbg !8983
  %974 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !8984
  %975 = load i32, i32* %974, align 8, !dbg !8984
  %976 = icmp slt i32 %973, %975, !dbg !8985
  br i1 %976, label %977, label %997, !dbg !8986

977:                                              ; preds = %970
  %978 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !8987
  %979 = load i32, i32* %11, align 4, !dbg !8989
  %980 = sext i32 %979 to i64, !dbg !8990
  %981 = getelementptr inbounds i8, i8* %978, i64 %980, !dbg !8990
  %982 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !8991
  %983 = load i32, i32* %982, align 8, !dbg !8991
  %984 = load i32, i32* %11, align 4, !dbg !8992
  %985 = sub nsw i32 %983, %984, !dbg !8993
  %986 = load i32, i32* %12, align 4, !dbg !8994
  %987 = sub nsw i32 %985, %986, !dbg !8995
  %988 = sext i32 %987 to i64, !dbg !8996
  call void @llvm.memset.p0i8.i64(i8* align 1 %981, i8 65, i64 %988, i1 false), !dbg !8997
  %989 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !8998
  %990 = load i32, i32* %989, align 8, !dbg !8998
  %991 = load i32, i32* %11, align 4, !dbg !8999
  %992 = sub nsw i32 %990, %991, !dbg !9000
  %993 = load i32, i32* %12, align 4, !dbg !9001
  %994 = sub nsw i32 %992, %993, !dbg !9002
  %995 = load i32, i32* %11, align 4, !dbg !9003
  %996 = add nsw i32 %995, %994, !dbg !9003
  store i32 %996, i32* %11, align 4, !dbg !9003
  br label %997, !dbg !9004

997:                                              ; preds = %977, %970, %966
  %998 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9005
  %999 = load i32, i32* %11, align 4, !dbg !9006
  %1000 = sext i32 %999 to i64, !dbg !9007
  %1001 = getelementptr inbounds i8, i8* %998, i64 %1000, !dbg !9007
  %1002 = load i32, i32* %11, align 4, !dbg !9008
  %1003 = sext i32 %1002 to i64, !dbg !9008
  %1004 = sub i64 16385, %1003, !dbg !9009
  %1005 = sub i64 %1004, 1, !dbg !9010
  %1006 = call i8* @strncpy(i8* %1001, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i64 %1005), !dbg !9011
  %1007 = load i32, i32* %12, align 4, !dbg !9012
  %1008 = load i32, i32* %11, align 4, !dbg !9013
  %1009 = add nsw i32 %1008, %1007, !dbg !9013
  store i32 %1009, i32* %11, align 4, !dbg !9013
  %1010 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !9014
  %1011 = load i32, i32* %1010, align 8, !dbg !9014
  %1012 = icmp ne i32 %1011, -1, !dbg !9016
  br i1 %1012, label %1013, label %1037, !dbg !9017

1013:                                             ; preds = %997
  %1014 = load i32, i32* %11, align 4, !dbg !9018
  %1015 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !9019
  %1016 = load i32, i32* %1015, align 8, !dbg !9019
  %1017 = icmp sgt i32 %1014, %1016, !dbg !9020
  br i1 %1017, label %1018, label %1037, !dbg !9021

1018:                                             ; preds = %1013
  %1019 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 8, !dbg !9022
  %1020 = load i32, i32* %1019, align 8, !dbg !9022
  store i32 %1020, i32* %11, align 4, !dbg !9024
  %1021 = load i32, i32* %11, align 4, !dbg !9025
  %1022 = icmp sge i32 %1021, 2, !dbg !9027
  br i1 %1022, label %1023, label %1028, !dbg !9028

1023:                                             ; preds = %1018
  %1024 = load i32, i32* %11, align 4, !dbg !9029
  %1025 = sub nsw i32 %1024, 2, !dbg !9030
  %1026 = sext i32 %1025 to i64, !dbg !9031
  %1027 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 %1026, !dbg !9031
  store i8 13, i8* %1027, align 1, !dbg !9032
  br label %1028, !dbg !9031

1028:                                             ; preds = %1023, %1018
  %1029 = load i32, i32* %11, align 4, !dbg !9033
  %1030 = icmp sge i32 %1029, 1, !dbg !9035
  br i1 %1030, label %1031, label %1036, !dbg !9036

1031:                                             ; preds = %1028
  %1032 = load i32, i32* %11, align 4, !dbg !9037
  %1033 = sub nsw i32 %1032, 1, !dbg !9038
  %1034 = sext i32 %1033 to i64, !dbg !9039
  %1035 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 %1034, !dbg !9039
  store i8 10, i8* %1035, align 1, !dbg !9040
  br label %1036, !dbg !9039

1036:                                             ; preds = %1031, %1028
  br label %1037, !dbg !9041

1037:                                             ; preds = %1036, %1013, %997
  %1038 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !9042
  %1039 = load i32, i32* %1038, align 8, !dbg !9042
  %1040 = icmp eq i32 %1039, 0, !dbg !9044
  br i1 %1040, label %1041, label %1077, !dbg !9045

1041:                                             ; preds = %1037
  store i32 0, i32* %14, align 4, !dbg !9046
  store i32 0, i32* %15, align 4, !dbg !9049
  br label %1042, !dbg !9050

1042:                                             ; preds = %1070, %1041
  %1043 = load i32, i32* %14, align 4, !dbg !9051
  %1044 = load i32, i32* %11, align 4, !dbg !9053
  %1045 = icmp slt i32 %1043, %1044, !dbg !9054
  br i1 %1045, label %1046, label %1076, !dbg !9055

1046:                                             ; preds = %1042
  br label %1047, !dbg !9056

1047:                                             ; preds = %1068, %1046
  %1048 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9058
  %1049 = load i32, i32* %14, align 4, !dbg !9059
  %1050 = sext i32 %1049 to i64, !dbg !9060
  %1051 = getelementptr inbounds i8, i8* %1048, i64 %1050, !dbg !9060
  %1052 = load i32, i32* %11, align 4, !dbg !9061
  %1053 = load i32, i32* %14, align 4, !dbg !9062
  %1054 = sub nsw i32 %1052, %1053, !dbg !9063
  %1055 = sext i32 %1054 to i64, !dbg !9061
  %1056 = call i32 @mbedtls_ssl_write(%struct.mbedtls_ssl_context* %25, i8* %1051, i64 %1055), !dbg !9064
  store i32 %1056, i32* %10, align 4, !dbg !9065
  %1057 = icmp sle i32 %1056, 0, !dbg !9066
  br i1 %1057, label %1058, label %1069, !dbg !9056

1058:                                             ; preds = %1047
  %1059 = load i32, i32* %10, align 4, !dbg !9067
  %1060 = icmp ne i32 %1059, -26880, !dbg !9070
  br i1 %1060, label %1061, label %1068, !dbg !9071

1061:                                             ; preds = %1058
  %1062 = load i32, i32* %10, align 4, !dbg !9072
  %1063 = icmp ne i32 %1062, -26752, !dbg !9073
  br i1 %1063, label %1064, label %1068, !dbg !9074

1064:                                             ; preds = %1061
  %1065 = load i32, i32* %10, align 4, !dbg !9075
  %1066 = sub nsw i32 0, %1065, !dbg !9077
  %1067 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i64 0, i64 0), i32 %1066), !dbg !9078
  br label %1385, !dbg !9079

1068:                                             ; preds = %1061, %1058
  br label %1047, !dbg !9056, !llvm.loop !9080

1069:                                             ; preds = %1047
  br label %1070, !dbg !9082

1070:                                             ; preds = %1069
  %1071 = load i32, i32* %10, align 4, !dbg !9083
  %1072 = load i32, i32* %14, align 4, !dbg !9084
  %1073 = add nsw i32 %1072, %1071, !dbg !9084
  store i32 %1073, i32* %14, align 4, !dbg !9084
  %1074 = load i32, i32* %15, align 4, !dbg !9085
  %1075 = add nsw i32 %1074, 1, !dbg !9085
  store i32 %1075, i32* %15, align 4, !dbg !9085
  br label %1042, !dbg !9086, !llvm.loop !9087

1076:                                             ; preds = %1042
  br label %1099, !dbg !9089

1077:                                             ; preds = %1037
  br label %1078, !dbg !9090

1078:                                             ; preds = %1089, %1077
  %1079 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9092
  %1080 = load i32, i32* %11, align 4, !dbg !9093
  %1081 = sext i32 %1080 to i64, !dbg !9093
  %1082 = call i32 @mbedtls_ssl_write(%struct.mbedtls_ssl_context* %25, i8* %1079, i64 %1081), !dbg !9094
  store i32 %1082, i32* %10, align 4, !dbg !9095
  br label %1083, !dbg !9096

1083:                                             ; preds = %1078
  %1084 = load i32, i32* %10, align 4, !dbg !9097
  %1085 = icmp eq i32 %1084, -26880, !dbg !9098
  br i1 %1085, label %1089, label %1086, !dbg !9099

1086:                                             ; preds = %1083
  %1087 = load i32, i32* %10, align 4, !dbg !9100
  %1088 = icmp eq i32 %1087, -26752, !dbg !9101
  br label %1089, !dbg !9099

1089:                                             ; preds = %1086, %1083
  %1090 = phi i1 [ true, %1083 ], [ %1088, %1086 ]
  br i1 %1090, label %1078, label %1091, !dbg !9096, !llvm.loop !9102

1091:                                             ; preds = %1089
  %1092 = load i32, i32* %10, align 4, !dbg !9104
  %1093 = icmp slt i32 %1092, 0, !dbg !9106
  br i1 %1093, label %1094, label %1097, !dbg !9107

1094:                                             ; preds = %1091
  %1095 = load i32, i32* %10, align 4, !dbg !9108
  %1096 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i64 0, i64 0), i32 %1095), !dbg !9110
  br label %1385, !dbg !9111

1097:                                             ; preds = %1091
  store i32 1, i32* %15, align 4, !dbg !9112
  %1098 = load i32, i32* %10, align 4, !dbg !9113
  store i32 %1098, i32* %14, align 4, !dbg !9114
  br label %1099

1099:                                             ; preds = %1097, %1076
  %1100 = load i32, i32* %14, align 4, !dbg !9115
  %1101 = sext i32 %1100 to i64, !dbg !9116
  %1102 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 %1101, !dbg !9116
  store i8 0, i8* %1102, align 1, !dbg !9117
  br label %1103, !dbg !9118

1103:                                             ; preds = %1099
  %1104 = load i8, i8* @log_run_level, align 1, !dbg !9119
  %1105 = zext i8 %1104 to i32, !dbg !9119
  %1106 = icmp sle i32 4, %1105, !dbg !9119
  br i1 %1106, label %1107, label %1112, !dbg !9122

1107:                                             ; preds = %1103
  %1108 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !9123
  %1109 = load i32, i32* %14, align 4, !dbg !9123
  %1110 = load i32, i32* %15, align 4, !dbg !9123
  %1111 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i64 0, i64 0), i8* %1108, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 915, i32 %1109, i32 %1110), !dbg !9123
  br label %1112, !dbg !9123

1112:                                             ; preds = %1107, %1103
  br label %1113, !dbg !9122

1113:                                             ; preds = %1112
  br label %1114, !dbg !9125

1114:                                             ; preds = %1113
  %1115 = load i8, i8* @log_run_level, align 1, !dbg !9126
  %1116 = zext i8 %1115 to i32, !dbg !9126
  %1117 = icmp sle i32 4, %1116, !dbg !9126
  br i1 %1117, label %1118, label %1122, !dbg !9129

1118:                                             ; preds = %1114
  %1119 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !9130
  %1120 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9130
  %1121 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i64 0, i64 0), i8* %1119, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 916, i8* %1120), !dbg !9130
  br label %1122, !dbg !9130

1122:                                             ; preds = %1118, %1114
  br label %1123, !dbg !9129

1123:                                             ; preds = %1122
  %1124 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9132
  %1125 = load i32, i32* %14, align 4, !dbg !9133
  %1126 = sext i32 %1125 to i64, !dbg !9133
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %25, i32 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.53, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i64 0, i64 0), i8* %1124, i64 %1126), !dbg !9134
  %1127 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !9135
  %1128 = load i32, i32* %1127, align 8, !dbg !9135
  %1129 = icmp eq i32 %1128, 0, !dbg !9137
  br i1 %1129, label %1130, label %1217, !dbg !9138

1130:                                             ; preds = %1123
  br label %1131, !dbg !9139

1131:                                             ; preds = %1215, %1130
  %1132 = load i32, i32* %9, align 4, !dbg !9141
  %1133 = sub nsw i32 %1132, 1, !dbg !9143
  store i32 %1133, i32* %11, align 4, !dbg !9144
  %1134 = load i8*, i8** %8, align 8, !dbg !9145
  %1135 = load i32, i32* %9, align 4, !dbg !9146
  %1136 = sext i32 %1135 to i64, !dbg !9146
  call void @llvm.memset.p0i8.i64(i8* align 1 %1134, i8 0, i64 %1136, i1 false), !dbg !9147
  %1137 = load i8*, i8** %8, align 8, !dbg !9148
  %1138 = load i32, i32* %11, align 4, !dbg !9149
  %1139 = sext i32 %1138 to i64, !dbg !9149
  %1140 = call i32 @mbedtls_ssl_read(%struct.mbedtls_ssl_context* %25, i8* %1137, i64 %1139), !dbg !9150
  store i32 %1140, i32* %10, align 4, !dbg !9151
  %1141 = load i32, i32* %10, align 4, !dbg !9152
  %1142 = icmp eq i32 %1141, -26880, !dbg !9154
  br i1 %1142, label %1146, label %1143, !dbg !9155

1143:                                             ; preds = %1131
  %1144 = load i32, i32* %10, align 4, !dbg !9156
  %1145 = icmp eq i32 %1144, -26752, !dbg !9157
  br i1 %1145, label %1146, label %1147, !dbg !9158

1146:                                             ; preds = %1143, %1131
  br label %1215, !dbg !9159

1147:                                             ; preds = %1143
  %1148 = load i32, i32* %10, align 4, !dbg !9160
  %1149 = icmp sle i32 %1148, 0, !dbg !9162
  br i1 %1149, label %1150, label %1160, !dbg !9163

1150:                                             ; preds = %1147
  %1151 = load i32, i32* %10, align 4, !dbg !9164
  switch i32 %1151, label %1156 [
    i32 -30848, label %1152
    i32 0, label %1154
    i32 -80, label %1154
  ], !dbg !9166

1152:                                             ; preds = %1150
  %1153 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.55, i64 0, i64 0)), !dbg !9167
  store i32 0, i32* %10, align 4, !dbg !9169
  br label %1295, !dbg !9170

1154:                                             ; preds = %1150, %1150
  %1155 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.56, i64 0, i64 0)), !dbg !9171
  store i32 0, i32* %10, align 4, !dbg !9172
  br label %1315, !dbg !9173

1156:                                             ; preds = %1150
  %1157 = load i32, i32* %10, align 4, !dbg !9174
  %1158 = sub nsw i32 0, %1157, !dbg !9175
  %1159 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.57, i64 0, i64 0), i32 %1158), !dbg !9176
  br label %1385, !dbg !9177

1160:                                             ; preds = %1147
  %1161 = load i32, i32* %10, align 4, !dbg !9178
  store i32 %1161, i32* %11, align 4, !dbg !9179
  br label %1162, !dbg !9180

1162:                                             ; preds = %1160
  %1163 = load i8, i8* @log_run_level, align 1, !dbg !9181
  %1164 = zext i8 %1163 to i32, !dbg !9181
  %1165 = icmp sle i32 4, %1164, !dbg !9181
  br i1 %1165, label %1166, label %1177, !dbg !9184

1166:                                             ; preds = %1162
  %1167 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !9185
  %1168 = load i32, i32* %11, align 4, !dbg !9185
  %1169 = load i8*, i8** %8, align 8, !dbg !9185
  %1170 = load i32, i32* %11, align 4, !dbg !9185
  %1171 = sub nsw i32 %1170, 1, !dbg !9185
  %1172 = sext i32 %1171 to i64, !dbg !9185
  %1173 = getelementptr inbounds i8, i8* %1169, i64 %1172, !dbg !9185
  %1174 = load i8, i8* %1173, align 1, !dbg !9185
  %1175 = zext i8 %1174 to i32, !dbg !9185
  %1176 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.58, i64 0, i64 0), i8* %1167, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 962, i32 %1168, i32 %1175), !dbg !9185
  br label %1177, !dbg !9185

1177:                                             ; preds = %1166, %1162
  br label %1178, !dbg !9184

1178:                                             ; preds = %1177
  %1179 = load i8*, i8** %8, align 8, !dbg !9187
  %1180 = load i32, i32* %11, align 4, !dbg !9188
  %1181 = sext i32 %1180 to i64, !dbg !9188
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %25, i32 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.53, i64 0, i64 0), i32 963, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i8* %1179, i64 %1181), !dbg !9189
  %1182 = load i32, i32* %10, align 4, !dbg !9190
  %1183 = icmp sgt i32 %1182, 0, !dbg !9192
  br i1 %1183, label %1184, label %1207, !dbg !9193

1184:                                             ; preds = %1178
  %1185 = load i8*, i8** %8, align 8, !dbg !9194
  %1186 = load i32, i32* %11, align 4, !dbg !9195
  %1187 = sub nsw i32 %1186, 1, !dbg !9196
  %1188 = sext i32 %1187 to i64, !dbg !9194
  %1189 = getelementptr inbounds i8, i8* %1185, i64 %1188, !dbg !9194
  %1190 = load i8, i8* %1189, align 1, !dbg !9194
  %1191 = zext i8 %1190 to i32, !dbg !9194
  %1192 = icmp eq i32 %1191, 10, !dbg !9197
  br i1 %1192, label %1202, label %1193, !dbg !9198

1193:                                             ; preds = %1184
  %1194 = load i8*, i8** %8, align 8, !dbg !9199
  %1195 = load i32, i32* %11, align 4, !dbg !9200
  %1196 = sub nsw i32 %1195, 1, !dbg !9201
  %1197 = sext i32 %1196 to i64, !dbg !9199
  %1198 = getelementptr inbounds i8, i8* %1194, i64 %1197, !dbg !9199
  %1199 = load i8, i8* %1198, align 1, !dbg !9199
  %1200 = zext i8 %1199 to i32, !dbg !9199
  %1201 = icmp eq i32 %1200, 125, !dbg !9202
  br i1 %1201, label %1202, label %1207, !dbg !9203

1202:                                             ; preds = %1193, %1184
  store i32 0, i32* %10, align 4, !dbg !9204
  %1203 = load i8*, i8** %8, align 8, !dbg !9206
  %1204 = load i32, i32* %11, align 4, !dbg !9207
  %1205 = sext i32 %1204 to i64, !dbg !9206
  %1206 = getelementptr inbounds i8, i8* %1203, i64 %1205, !dbg !9206
  store i8 0, i8* %1206, align 1, !dbg !9208
  br label %1216, !dbg !9209

1207:                                             ; preds = %1193, %1178
  %1208 = load i32, i32* %11, align 4, !dbg !9210
  %1209 = load i8*, i8** %8, align 8, !dbg !9211
  %1210 = sext i32 %1208 to i64, !dbg !9211
  %1211 = getelementptr inbounds i8, i8* %1209, i64 %1210, !dbg !9211
  store i8* %1211, i8** %8, align 8, !dbg !9211
  %1212 = load i32, i32* %11, align 4, !dbg !9212
  %1213 = load i32, i32* %9, align 4, !dbg !9213
  %1214 = sub nsw i32 %1213, %1212, !dbg !9213
  store i32 %1214, i32* %9, align 4, !dbg !9213
  br label %1215, !dbg !9214

1215:                                             ; preds = %1207, %1146
  br i1 true, label %1131, label %1216, !dbg !9214, !llvm.loop !9215

1216:                                             ; preds = %1215, %1202
  br label %1258, !dbg !9217

1217:                                             ; preds = %1123
  store i32 16384, i32* %11, align 4, !dbg !9218
  %1218 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9220
  call void @llvm.memset.p0i8.i64(i8* align 16 %1218, i8 0, i64 16385, i1 false), !dbg !9220
  br label %1219, !dbg !9221

1219:                                             ; preds = %1230, %1217
  %1220 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9222
  %1221 = load i32, i32* %11, align 4, !dbg !9223
  %1222 = sext i32 %1221 to i64, !dbg !9223
  %1223 = call i32 @mbedtls_ssl_read(%struct.mbedtls_ssl_context* %25, i8* %1220, i64 %1222), !dbg !9224
  store i32 %1223, i32* %10, align 4, !dbg !9225
  br label %1224, !dbg !9226

1224:                                             ; preds = %1219
  %1225 = load i32, i32* %10, align 4, !dbg !9227
  %1226 = icmp eq i32 %1225, -26880, !dbg !9228
  br i1 %1226, label %1230, label %1227, !dbg !9229

1227:                                             ; preds = %1224
  %1228 = load i32, i32* %10, align 4, !dbg !9230
  %1229 = icmp eq i32 %1228, -26752, !dbg !9231
  br label %1230, !dbg !9229

1230:                                             ; preds = %1227, %1224
  %1231 = phi i1 [ true, %1224 ], [ %1229, %1227 ]
  br i1 %1231, label %1219, label %1232, !dbg !9226, !llvm.loop !9232

1232:                                             ; preds = %1230
  %1233 = load i32, i32* %10, align 4, !dbg !9234
  %1234 = icmp sle i32 %1233, 0, !dbg !9236
  br i1 %1234, label %1235, label %1250, !dbg !9237

1235:                                             ; preds = %1232
  %1236 = load i32, i32* %10, align 4, !dbg !9238
  switch i32 %1236, label %1246 [
    i32 -26624, label %1237
    i32 -30848, label %1244
  ], !dbg !9240

1237:                                             ; preds = %1235
  %1238 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0)), !dbg !9241
  %1239 = load i32, i32* %16, align 4, !dbg !9243
  %1240 = add nsw i32 %1239, -1, !dbg !9243
  store i32 %1240, i32* %16, align 4, !dbg !9243
  %1241 = icmp sgt i32 %1239, 0, !dbg !9245
  br i1 %1241, label %1242, label %1243, !dbg !9246

1242:                                             ; preds = %1237
  br label %931, !dbg !9247

1243:                                             ; preds = %1237
  br label %1385, !dbg !9248

1244:                                             ; preds = %1235
  %1245 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.55, i64 0, i64 0)), !dbg !9249
  store i32 0, i32* %10, align 4, !dbg !9250
  br label %1295, !dbg !9251

1246:                                             ; preds = %1235
  %1247 = load i32, i32* %10, align 4, !dbg !9252
  %1248 = sub nsw i32 0, %1247, !dbg !9253
  %1249 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.57, i64 0, i64 0), i32 %1248), !dbg !9254
  br label %1385, !dbg !9255

1250:                                             ; preds = %1232
  %1251 = load i32, i32* %10, align 4, !dbg !9256
  store i32 %1251, i32* %11, align 4, !dbg !9257
  %1252 = load i32, i32* %11, align 4, !dbg !9258
  %1253 = sext i32 %1252 to i64, !dbg !9259
  %1254 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 %1253, !dbg !9259
  store i8 0, i8* %1254, align 1, !dbg !9260
  %1255 = load i32, i32* %11, align 4, !dbg !9261
  %1256 = getelementptr inbounds [16385 x i8], [16385 x i8]* %18, i64 0, i64 0, !dbg !9262
  %1257 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0), i32 %1255, i8* %1256), !dbg !9263
  store i32 0, i32* %10, align 4, !dbg !9264
  br label %1258

1258:                                             ; preds = %1250, %1216
  %1259 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 32, !dbg !9265
  %1260 = load i32, i32* %1259, align 4, !dbg !9265
  %1261 = icmp ne i32 %1260, 0, !dbg !9267
  br i1 %1261, label %1262, label %1288, !dbg !9268

1262:                                             ; preds = %1258
  %1263 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 32, !dbg !9269
  store i32 0, i32* %1263, align 4, !dbg !9271
  %1264 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.62, i64 0, i64 0)), !dbg !9272
  %1265 = call i32 @mbedtls_ssl_session_reset(%struct.mbedtls_ssl_context* %25), !dbg !9273
  store i32 %1265, i32* %10, align 4, !dbg !9275
  %1266 = icmp ne i32 %1265, 0, !dbg !9276
  br i1 %1266, label %1267, label %1271, !dbg !9277

1267:                                             ; preds = %1262
  %1268 = load i32, i32* %10, align 4, !dbg !9278
  %1269 = sub nsw i32 0, %1268, !dbg !9280
  %1270 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.63, i64 0, i64 0), i32 %1269), !dbg !9281
  br label %1385, !dbg !9282

1271:                                             ; preds = %1262
  br label %1272, !dbg !9283

1272:                                             ; preds = %1285, %1271
  %1273 = call i32 @mbedtls_ssl_handshake(%struct.mbedtls_ssl_context* %25), !dbg !9284
  store i32 %1273, i32* %10, align 4, !dbg !9285
  %1274 = icmp ne i32 %1273, 0, !dbg !9286
  br i1 %1274, label %1275, label %1286, !dbg !9283

1275:                                             ; preds = %1272
  %1276 = load i32, i32* %10, align 4, !dbg !9287
  %1277 = icmp ne i32 %1276, -26880, !dbg !9290
  br i1 %1277, label %1278, label %1285, !dbg !9291

1278:                                             ; preds = %1275
  %1279 = load i32, i32* %10, align 4, !dbg !9292
  %1280 = icmp ne i32 %1279, -26752, !dbg !9293
  br i1 %1280, label %1281, label %1285, !dbg !9294

1281:                                             ; preds = %1278
  %1282 = load i32, i32* %10, align 4, !dbg !9295
  %1283 = sub nsw i32 0, %1282, !dbg !9297
  %1284 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.64, i64 0, i64 0), i32 %1283), !dbg !9298
  br label %1385, !dbg !9299

1285:                                             ; preds = %1278, %1275
  br label %1272, !dbg !9283, !llvm.loop !9300

1286:                                             ; preds = %1272
  %1287 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)), !dbg !9302
  br label %931, !dbg !9303

1288:                                             ; preds = %1258
  %1289 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 21, !dbg !9304
  %1290 = load i32, i32* %1289, align 8, !dbg !9306
  %1291 = add nsw i32 %1290, -1, !dbg !9306
  store i32 %1291, i32* %1289, align 8, !dbg !9306
  %1292 = icmp sgt i32 %1291, 0, !dbg !9307
  br i1 %1292, label %1293, label %1294, !dbg !9308

1293:                                             ; preds = %1288
  br label %931, !dbg !9309

1294:                                             ; preds = %1288
  br label %1295, !dbg !9310

1295:                                             ; preds = %1294, %1244, %1152
  call void @llvm.dbg.label(metadata !9311), !dbg !9312
  br label %1296, !dbg !9313

1296:                                             ; preds = %1298, %1295
  %1297 = call i32 @mbedtls_ssl_close_notify(%struct.mbedtls_ssl_context* %25), !dbg !9314
  store i32 %1297, i32* %10, align 4, !dbg !9315
  br label %1298, !dbg !9316

1298:                                             ; preds = %1296
  %1299 = load i32, i32* %10, align 4, !dbg !9317
  %1300 = icmp eq i32 %1299, -26752, !dbg !9318
  br i1 %1300, label %1296, label %1301, !dbg !9316, !llvm.loop !9319

1301:                                             ; preds = %1298
  store i32 0, i32* %10, align 4, !dbg !9321
  br label %1302, !dbg !9322

1302:                                             ; preds = %1301
  %1303 = load i8, i8* @log_run_level, align 1, !dbg !9323
  %1304 = zext i8 %1303 to i32, !dbg !9323
  %1305 = icmp sle i32 4, %1304, !dbg !9323
  br i1 %1305, label %1306, label %1313, !dbg !9326

1306:                                             ; preds = %1302
  %1307 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 4), align 8, !dbg !9327
  %1308 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 1, !dbg !9327
  %1309 = load i8*, i8** %1308, align 8, !dbg !9327
  %1310 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 2, !dbg !9327
  %1311 = load i8*, i8** %1310, align 8, !dbg !9327
  %1312 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0), i8* %1307, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 1063, i8* %1309, i8* %1311), !dbg !9327
  br label %1313, !dbg !9327

1313:                                             ; preds = %1306, %1302
  br label %1314, !dbg !9326

1314:                                             ; preds = %1313
  br label %1315, !dbg !9326

1315:                                             ; preds = %1314, %1154
  call void @llvm.dbg.label(metadata !9329), !dbg !9330
  %1316 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 30, !dbg !9331
  %1317 = load i32, i32* %1316, align 4, !dbg !9331
  %1318 = icmp ne i32 %1317, 0, !dbg !9333
  br i1 %1318, label %1319, label %1384, !dbg !9334

1319:                                             ; preds = %1315
  %1320 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 30, !dbg !9335
  %1321 = load i32, i32* %1320, align 4, !dbg !9337
  %1322 = add nsw i32 %1321, -1, !dbg !9337
  store i32 %1322, i32* %1320, align 4, !dbg !9337
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* %17), !dbg !9338
  %1323 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66, i64 0, i64 0)), !dbg !9339
  %1324 = call i32 @mbedtls_ssl_session_reset(%struct.mbedtls_ssl_context* %25), !dbg !9340
  store i32 %1324, i32* %10, align 4, !dbg !9342
  %1325 = icmp ne i32 %1324, 0, !dbg !9343
  br i1 %1325, label %1326, label %1330, !dbg !9344

1326:                                             ; preds = %1319
  %1327 = load i32, i32* %10, align 4, !dbg !9345
  %1328 = sub nsw i32 0, %1327, !dbg !9347
  %1329 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.63, i64 0, i64 0), i32 %1328), !dbg !9348
  br label %1385, !dbg !9349

1330:                                             ; preds = %1319
  %1331 = call i32 @mbedtls_ssl_set_session(%struct.mbedtls_ssl_context* %25, %struct.mbedtls_ssl_session* %27), !dbg !9350
  store i32 %1331, i32* %10, align 4, !dbg !9352
  %1332 = icmp ne i32 %1331, 0, !dbg !9353
  br i1 %1332, label %1333, label %1336, !dbg !9354

1333:                                             ; preds = %1330
  %1334 = load i32, i32* %10, align 4, !dbg !9355
  %1335 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.67, i64 0, i64 0), i32 %1334), !dbg !9357
  br label %1385, !dbg !9358

1336:                                             ; preds = %1330
  %1337 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 1, !dbg !9359
  %1338 = load i8*, i8** %1337, align 8, !dbg !9359
  %1339 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 2, !dbg !9361
  %1340 = load i8*, i8** %1339, align 8, !dbg !9361
  %1341 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 35, !dbg !9362
  %1342 = load i32, i32* %1341, align 8, !dbg !9362
  %1343 = icmp eq i32 %1342, 0, !dbg !9363
  %1344 = zext i1 %1343 to i64, !dbg !9364
  %1345 = select i1 %1343, i32 0, i32 1, !dbg !9364
  %1346 = call i32 @mbedtls_net_connect_ocall(%struct.mbedtls_net_context* %17, i8* %1338, i8* %1340, i32 %1345), !dbg !9365
  store i32 %1346, i32* %10, align 4, !dbg !9366
  %1347 = icmp ne i32 %1346, 0, !dbg !9367
  br i1 %1347, label %1348, label %1352, !dbg !9368

1348:                                             ; preds = %1336
  %1349 = load i32, i32* %10, align 4, !dbg !9369
  %1350 = sub nsw i32 0, %1349, !dbg !9371
  %1351 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i64 0, i64 0), i32 %1350), !dbg !9372
  br label %1385, !dbg !9373

1352:                                             ; preds = %1336
  %1353 = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 4, !dbg !9374
  %1354 = load i32, i32* %1353, align 4, !dbg !9374
  %1355 = icmp sgt i32 %1354, 0, !dbg !9376
  br i1 %1355, label %1356, label %1358, !dbg !9377

1356:                                             ; preds = %1352
  %1357 = call i32 @mbedtls_net_set_nonblock_ocall(%struct.mbedtls_net_context* %17), !dbg !9378
  store i32 %1357, i32* %10, align 4, !dbg !9379
  br label %1360, !dbg !9380

1358:                                             ; preds = %1352
  %1359 = call i32 @mbedtls_net_set_block_ocall(%struct.mbedtls_net_context* %17), !dbg !9381
  store i32 %1359, i32* %10, align 4, !dbg !9382
  br label %1360

1360:                                             ; preds = %1358, %1356
  %1361 = load i32, i32* %10, align 4, !dbg !9383
  %1362 = icmp ne i32 %1361, 0, !dbg !9385
  br i1 %1362, label %1363, label %1367, !dbg !9386

1363:                                             ; preds = %1360
  %1364 = load i32, i32* %10, align 4, !dbg !9387
  %1365 = sub nsw i32 0, %1364, !dbg !9389
  %1366 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69, i64 0, i64 0), i32 %1365), !dbg !9390
  br label %1385, !dbg !9391

1367:                                             ; preds = %1360
  br label %1368, !dbg !9392

1368:                                             ; preds = %1381, %1367
  %1369 = call i32 @mbedtls_ssl_handshake(%struct.mbedtls_ssl_context* %25), !dbg !9393
  store i32 %1369, i32* %10, align 4, !dbg !9394
  %1370 = icmp ne i32 %1369, 0, !dbg !9395
  br i1 %1370, label %1371, label %1382, !dbg !9392

1371:                                             ; preds = %1368
  %1372 = load i32, i32* %10, align 4, !dbg !9396
  %1373 = icmp ne i32 %1372, -26880, !dbg !9399
  br i1 %1373, label %1374, label %1381, !dbg !9400

1374:                                             ; preds = %1371
  %1375 = load i32, i32* %10, align 4, !dbg !9401
  %1376 = icmp ne i32 %1375, -26752, !dbg !9402
  br i1 %1376, label %1377, label %1381, !dbg !9403

1377:                                             ; preds = %1374
  %1378 = load i32, i32* %10, align 4, !dbg !9404
  %1379 = sub nsw i32 0, %1378, !dbg !9406
  %1380 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.64, i64 0, i64 0), i32 %1379), !dbg !9407
  br label %1385, !dbg !9408

1381:                                             ; preds = %1374, %1371
  br label %1368, !dbg !9392, !llvm.loop !9409

1382:                                             ; preds = %1368
  %1383 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)), !dbg !9411
  br label %931, !dbg !9412

1384:                                             ; preds = %1315
  br label %1385, !dbg !9413

1385:                                             ; preds = %1434, %1384, %1377, %1363, %1348, %1333, %1326, %1281, %1267, %1246, %1243, %1156, %1094, %1064, %922, %844, %755, %698, %682, %643, %629, %571, %519, %488, %462, %439, %389, %374, %349, %256, %200, %143
  call void @llvm.dbg.label(metadata !9414), !dbg !9415
  %1386 = load i32, i32* %10, align 4, !dbg !9416
  %1387 = icmp ne i32 %1386, 0, !dbg !9418
  br i1 %1387, label %1388, label %1403, !dbg !9419

1388:                                             ; preds = %1385
  call void @llvm.dbg.declare(metadata [100 x i8]* %39, metadata !9420, metadata !DIExpression()), !dbg !9425
  %1389 = load i32, i32* %10, align 4, !dbg !9426
  %1390 = getelementptr inbounds [100 x i8], [100 x i8]* %39, i64 0, i64 0, !dbg !9427
  call void @mbedtls_strerror(i32 %1389, i8* %1390, i64 100), !dbg !9428
  br label %1391, !dbg !9429

1391:                                             ; preds = %1388
  %1392 = load i8, i8* @log_run_level, align 1, !dbg !9430
  %1393 = zext i8 %1392 to i32, !dbg !9430
  %1394 = icmp sle i32 1, %1393, !dbg !9430
  br i1 %1394, label %1395, label %1401, !dbg !9433

1395:                                             ; preds = %1391
  %1396 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !9434
  %1397 = load i32, i32* %10, align 4, !dbg !9434
  %1398 = sub nsw i32 0, %1397, !dbg !9434
  %1399 = getelementptr inbounds [100 x i8], [100 x i8]* %39, i64 0, i64 0, !dbg !9434
  %1400 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.70, i64 0, i64 0), i8* %1396, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_client, i64 0, i64 0), i32 1137, i32 %1398, i8* %1399), !dbg !9434
  br label %1401, !dbg !9434

1401:                                             ; preds = %1395, %1391
  br label %1402, !dbg !9433

1402:                                             ; preds = %1401
  br label %1403, !dbg !9436

1403:                                             ; preds = %1402, %1385
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* %17), !dbg !9437
  call void @mbedtls_x509_crt_free(%struct.mbedtls_x509_crt* %30), !dbg !9438
  call void @mbedtls_x509_crt_free(%struct.mbedtls_x509_crt* %29), !dbg !9439
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %31), !dbg !9440
  call void @mbedtls_ssl_session_free(%struct.mbedtls_ssl_session* %27), !dbg !9441
  call void @mbedtls_ssl_free(%struct.mbedtls_ssl_context* %25), !dbg !9442
  call void @mbedtls_ssl_config_free(%struct.mbedtls_ssl_config* %26), !dbg !9443
  call void @mbedtls_ctr_drbg_free(%struct.mbedtls_ctr_drbg_context* %24), !dbg !9444
  call void @mbedtls_entropy_free(%struct.mbedtls_entropy_context* %23), !dbg !9445
  %1404 = load i32, i32* %10, align 4, !dbg !9446
  ret i32 %1404, !dbg !9447

1405:                                             ; preds = %127, %77, %64
  call void @llvm.dbg.label(metadata !9448), !dbg !9449
  %1406 = load i32, i32* %10, align 4, !dbg !9450
  %1407 = icmp eq i32 %1406, 0, !dbg !9452
  br i1 %1407, label %1408, label %1409, !dbg !9453

1408:                                             ; preds = %1405
  store i32 1, i32* %10, align 4, !dbg !9454
  br label %1409, !dbg !9455

1409:                                             ; preds = %1408, %1405
  %1410 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2370 x i8], [2370 x i8]* @.str.71, i64 0, i64 0)), !dbg !9456
  %1411 = call i32* @mbedtls_ssl_list_ciphersuites(), !dbg !9457
  store i32* %1411, i32** %33, align 8, !dbg !9458
  br label %1412, !dbg !9459

1412:                                             ; preds = %1427, %1409
  %1413 = load i32*, i32** %33, align 8, !dbg !9460
  %1414 = load i32, i32* %1413, align 4, !dbg !9461
  %1415 = icmp ne i32 %1414, 0, !dbg !9459
  br i1 %1415, label %1416, label %1434, !dbg !9459

1416:                                             ; preds = %1412
  %1417 = load i32*, i32** %33, align 8, !dbg !9462
  %1418 = load i32, i32* %1417, align 4, !dbg !9464
  %1419 = call i8* @mbedtls_ssl_get_ciphersuite_name(i32 %1418), !dbg !9465
  %1420 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* %1419), !dbg !9466
  %1421 = load i32*, i32** %33, align 8, !dbg !9467
  %1422 = getelementptr inbounds i32, i32* %1421, i32 1, !dbg !9467
  store i32* %1422, i32** %33, align 8, !dbg !9467
  %1423 = load i32*, i32** %33, align 8, !dbg !9468
  %1424 = load i32, i32* %1423, align 4, !dbg !9470
  %1425 = icmp ne i32 %1424, 0, !dbg !9470
  br i1 %1425, label %1427, label %1426, !dbg !9471

1426:                                             ; preds = %1416
  br label %1434, !dbg !9472

1427:                                             ; preds = %1416
  %1428 = load i32*, i32** %33, align 8, !dbg !9473
  %1429 = load i32, i32* %1428, align 4, !dbg !9474
  %1430 = call i8* @mbedtls_ssl_get_ciphersuite_name(i32 %1429), !dbg !9475
  %1431 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), i8* %1430), !dbg !9476
  %1432 = load i32*, i32** %33, align 8, !dbg !9477
  %1433 = getelementptr inbounds i32, i32* %1432, i32 1, !dbg !9477
  store i32* %1433, i32** %33, align 8, !dbg !9477
  br label %1412, !dbg !9459, !llvm.loop !9478

1434:                                             ; preds = %1426, %1412
  %1435 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0)), !dbg !9480
  br label %1385, !dbg !9481
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @my_verify(i8* %0, %struct.mbedtls_x509_crt* %1, i32 %2, i32* %3) #0 !dbg !9482 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mbedtls_x509_crt*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca [1024 x i8], align 16
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9483, metadata !DIExpression()), !dbg !9484
  store %struct.mbedtls_x509_crt* %1, %struct.mbedtls_x509_crt** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt** %6, metadata !9485, metadata !DIExpression()), !dbg !9486
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9487, metadata !DIExpression()), !dbg !9488
  store i32* %3, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !9489, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.declare(metadata [1024 x i8]* %9, metadata !9491, metadata !DIExpression()), !dbg !9493
  %10 = load i8*, i8** %5, align 8, !dbg !9494
  %11 = load i32, i32* %7, align 4, !dbg !9495
  %12 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75, i64 0, i64 0), i32 %11), !dbg !9496
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0, !dbg !9497
  %14 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %6, align 8, !dbg !9498
  %15 = call i32 @mbedtls_x509_crt_info(i8* %13, i64 1023, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i64 0, i64 0), %struct.mbedtls_x509_crt* %14), !dbg !9499
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0, !dbg !9500
  %17 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i64 0, i64 0), i8* %16), !dbg !9501
  %18 = load i32*, i32** %8, align 8, !dbg !9502
  %19 = load i32, i32* %18, align 4, !dbg !9504
  %20 = icmp eq i32 %19, 0, !dbg !9505
  br i1 %20, label %21, label %23, !dbg !9506

21:                                               ; preds = %4
  %22 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i64 0, i64 0)), !dbg !9507
  br label %30, !dbg !9507

23:                                               ; preds = %4
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0, !dbg !9508
  %25 = load i32*, i32** %8, align 8, !dbg !9510
  %26 = load i32, i32* %25, align 4, !dbg !9511
  %27 = call i32 @mbedtls_x509_crt_verify_info(i8* %24, i64 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i32 %26), !dbg !9512
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0, !dbg !9513
  %29 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i8* %28), !dbg !9514
  br label %30

30:                                               ; preds = %23, %21
  ret i32 0, !dbg !9515
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @my_debug(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4) #0 !dbg !9516 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9517, metadata !DIExpression()), !dbg !9518
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9519, metadata !DIExpression()), !dbg !9520
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9521, metadata !DIExpression()), !dbg !9522
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9523, metadata !DIExpression()), !dbg !9524
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !9525, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.declare(metadata i8** %11, metadata !9527, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9529, metadata !DIExpression()), !dbg !9530
  %13 = load i8*, i8** %6, align 8, !dbg !9531
  %14 = load i8*, i8** %8, align 8, !dbg !9532
  store i8* %14, i8** %12, align 8, !dbg !9534
  store i8* %14, i8** %11, align 8, !dbg !9535
  br label %15, !dbg !9536

15:                                               ; preds = %34, %5
  %16 = load i8*, i8** %11, align 8, !dbg !9537
  %17 = load i8, i8* %16, align 1, !dbg !9539
  %18 = sext i8 %17 to i32, !dbg !9539
  %19 = icmp ne i32 %18, 0, !dbg !9540
  br i1 %19, label %20, label %37, !dbg !9541

20:                                               ; preds = %15
  %21 = load i8*, i8** %11, align 8, !dbg !9542
  %22 = load i8, i8* %21, align 1, !dbg !9544
  %23 = sext i8 %22 to i32, !dbg !9544
  %24 = icmp eq i32 %23, 47, !dbg !9545
  br i1 %24, label %30, label %25, !dbg !9546

25:                                               ; preds = %20
  %26 = load i8*, i8** %11, align 8, !dbg !9547
  %27 = load i8, i8* %26, align 1, !dbg !9548
  %28 = sext i8 %27 to i32, !dbg !9548
  %29 = icmp eq i32 %28, 92, !dbg !9549
  br i1 %29, label %30, label %33, !dbg !9550

30:                                               ; preds = %25, %20
  %31 = load i8*, i8** %11, align 8, !dbg !9551
  %32 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !9552
  store i8* %32, i8** %12, align 8, !dbg !9553
  br label %33, !dbg !9554

33:                                               ; preds = %30, %25
  br label %34, !dbg !9555

34:                                               ; preds = %33
  %35 = load i8*, i8** %11, align 8, !dbg !9556
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !9556
  store i8* %36, i8** %11, align 8, !dbg !9556
  br label %15, !dbg !9557, !llvm.loop !9558

37:                                               ; preds = %15
  %38 = load i8*, i8** %12, align 8, !dbg !9560
  %39 = load i32, i32* %9, align 4, !dbg !9561
  %40 = load i32, i32* %7, align 4, !dbg !9562
  %41 = load i8*, i8** %10, align 8, !dbg !9563
  %42 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79, i64 0, i64 0), i8* %38, i32 %39, i32 %40, i8* %41), !dbg !9564
  ret void, !dbg !9565
}

declare i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @my_send(i8* %0, i8* %1, i64 %2) #0 !dbg !2330 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9566, metadata !DIExpression()), !dbg !9567
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9568, metadata !DIExpression()), !dbg !9569
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9572, metadata !DIExpression()), !dbg !9573
  %9 = load i32, i32* @my_send.first_try, align 4, !dbg !9574
  %10 = icmp ne i32 %9, 0, !dbg !9574
  br i1 %10, label %11, label %12, !dbg !9576

11:                                               ; preds = %3
  store i32 0, i32* @my_send.first_try, align 4, !dbg !9577
  store i32 -26752, i32* %4, align 4, !dbg !9579
  br label %22, !dbg !9579

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !9580
  %14 = load i8*, i8** %6, align 8, !dbg !9581
  %15 = load i64, i64* %7, align 8, !dbg !9582
  %16 = call i32 @mbedtls_net_send_ocall(i8* %13, i8* %14, i64 %15), !dbg !9583
  store i32 %16, i32* %8, align 4, !dbg !9584
  %17 = load i32, i32* %8, align 4, !dbg !9585
  %18 = icmp ne i32 %17, -26752, !dbg !9587
  br i1 %18, label %19, label %20, !dbg !9588

19:                                               ; preds = %12
  store i32 1, i32* @my_send.first_try, align 4, !dbg !9589
  br label %20, !dbg !9590

20:                                               ; preds = %19, %12
  %21 = load i32, i32* %8, align 4, !dbg !9591
  store i32 %21, i32* %4, align 4, !dbg !9592
  br label %22, !dbg !9592

22:                                               ; preds = %20, %11
  %23 = load i32, i32* %4, align 4, !dbg !9593
  ret i32 %23, !dbg !9593
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @my_recv(i8* %0, i8* %1, i64 %2) #0 !dbg !2416 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9594, metadata !DIExpression()), !dbg !9595
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9596, metadata !DIExpression()), !dbg !9597
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9598, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9600, metadata !DIExpression()), !dbg !9601
  %9 = load i32, i32* @my_recv.first_try, align 4, !dbg !9602
  %10 = icmp ne i32 %9, 0, !dbg !9602
  br i1 %10, label %11, label %12, !dbg !9604

11:                                               ; preds = %3
  store i32 0, i32* @my_recv.first_try, align 4, !dbg !9605
  store i32 -26880, i32* %4, align 4, !dbg !9607
  br label %22, !dbg !9607

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !9608
  %14 = load i8*, i8** %6, align 8, !dbg !9609
  %15 = load i64, i64* %7, align 8, !dbg !9610
  %16 = call i32 @mbedtls_net_recv_ocall(i8* %13, i8* %14, i64 %15), !dbg !9611
  store i32 %16, i32* %8, align 4, !dbg !9612
  %17 = load i32, i32* %8, align 4, !dbg !9613
  %18 = icmp ne i32 %17, -26880, !dbg !9615
  br i1 %18, label %19, label %20, !dbg !9616

19:                                               ; preds = %12
  store i32 1, i32* @my_recv.first_try, align 4, !dbg !9617
  br label %20, !dbg !9618

20:                                               ; preds = %19, %12
  %21 = load i32, i32* %8, align 4, !dbg !9619
  store i32 %21, i32* %4, align 4, !dbg !9620
  br label %22, !dbg !9620

22:                                               ; preds = %20, %11
  %23 = load i32, i32* %4, align 4, !dbg !9621
  ret i32 %23, !dbg !9621
}

declare i32 @snprintf(i8*, i64, i8*, ...) #2

declare i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @unhexify(i8* %0, i8* %1, i64* %2) #0 !dbg !9622 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9625, metadata !DIExpression()), !dbg !9626
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9627, metadata !DIExpression()), !dbg !9628
  store i64* %2, i64** %7, align 8
  call void @llvm.dbg.declare(metadata i64** %7, metadata !9629, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.declare(metadata i8* %8, metadata !9631, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.declare(metadata i64* %9, metadata !9633, metadata !DIExpression()), !dbg !9634
  %10 = load i8*, i8** %6, align 8, !dbg !9635
  %11 = call i64 @strlen(i8* %10), !dbg !9636
  %12 = load i64*, i64** %7, align 8, !dbg !9637
  store i64 %11, i64* %12, align 8, !dbg !9638
  %13 = load i64*, i64** %7, align 8, !dbg !9639
  %14 = load i64, i64* %13, align 8, !dbg !9641
  %15 = urem i64 %14, 2, !dbg !9642
  %16 = icmp ne i64 %15, 0, !dbg !9643
  br i1 %16, label %22, label %17, !dbg !9644

17:                                               ; preds = %3
  %18 = load i64*, i64** %7, align 8, !dbg !9645
  %19 = load i64, i64* %18, align 8, !dbg !9646
  %20 = udiv i64 %19, 2, !dbg !9647
  %21 = icmp ugt i64 %20, 32, !dbg !9648
  br i1 %21, label %22, label %23, !dbg !9649

22:                                               ; preds = %17, %3
  store i32 -1, i32* %4, align 4, !dbg !9650
  br label %149, !dbg !9650

23:                                               ; preds = %17
  %24 = load i64*, i64** %7, align 8, !dbg !9651
  %25 = load i64, i64* %24, align 8, !dbg !9652
  %26 = udiv i64 %25, 2, !dbg !9652
  store i64 %26, i64* %24, align 8, !dbg !9652
  store i64 0, i64* %9, align 8, !dbg !9653
  br label %27, !dbg !9655

27:                                               ; preds = %145, %23
  %28 = load i64, i64* %9, align 8, !dbg !9656
  %29 = load i64*, i64** %7, align 8, !dbg !9658
  %30 = load i64, i64* %29, align 8, !dbg !9659
  %31 = mul i64 %30, 2, !dbg !9660
  %32 = icmp ult i64 %28, %31, !dbg !9661
  br i1 %32, label %33, label %148, !dbg !9662

33:                                               ; preds = %27
  %34 = load i8*, i8** %6, align 8, !dbg !9663
  %35 = load i64, i64* %9, align 8, !dbg !9665
  %36 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !9663
  %37 = load i8, i8* %36, align 1, !dbg !9663
  store i8 %37, i8* %8, align 1, !dbg !9666
  %38 = load i8, i8* %8, align 1, !dbg !9667
  %39 = zext i8 %38 to i32, !dbg !9667
  %40 = icmp sge i32 %39, 48, !dbg !9667
  br i1 %40, label %41, label %50, !dbg !9667

41:                                               ; preds = %33
  %42 = load i8, i8* %8, align 1, !dbg !9667
  %43 = zext i8 %42 to i32, !dbg !9667
  %44 = icmp sle i32 %43, 57, !dbg !9667
  br i1 %44, label %45, label %50, !dbg !9669

45:                                               ; preds = %41
  %46 = load i8, i8* %8, align 1, !dbg !9667
  %47 = zext i8 %46 to i32, !dbg !9667
  %48 = sub nsw i32 %47, 48, !dbg !9667
  %49 = trunc i32 %48 to i8, !dbg !9667
  store i8 %49, i8* %8, align 1, !dbg !9667
  br label %79, !dbg !9667

50:                                               ; preds = %41, %33
  %51 = load i8, i8* %8, align 1, !dbg !9670
  %52 = zext i8 %51 to i32, !dbg !9670
  %53 = icmp sge i32 %52, 97, !dbg !9670
  br i1 %53, label %54, label %63, !dbg !9670

54:                                               ; preds = %50
  %55 = load i8, i8* %8, align 1, !dbg !9670
  %56 = zext i8 %55 to i32, !dbg !9670
  %57 = icmp sle i32 %56, 102, !dbg !9670
  br i1 %57, label %58, label %63, !dbg !9667

58:                                               ; preds = %54
  %59 = load i8, i8* %8, align 1, !dbg !9670
  %60 = zext i8 %59 to i32, !dbg !9670
  %61 = sub nsw i32 %60, 87, !dbg !9670
  %62 = trunc i32 %61 to i8, !dbg !9670
  store i8 %62, i8* %8, align 1, !dbg !9670
  br label %78, !dbg !9670

63:                                               ; preds = %54, %50
  %64 = load i8, i8* %8, align 1, !dbg !9672
  %65 = zext i8 %64 to i32, !dbg !9672
  %66 = icmp sge i32 %65, 65, !dbg !9672
  br i1 %66, label %67, label %76, !dbg !9672

67:                                               ; preds = %63
  %68 = load i8, i8* %8, align 1, !dbg !9672
  %69 = zext i8 %68 to i32, !dbg !9672
  %70 = icmp sle i32 %69, 70, !dbg !9672
  br i1 %70, label %71, label %76, !dbg !9670

71:                                               ; preds = %67
  %72 = load i8, i8* %8, align 1, !dbg !9672
  %73 = zext i8 %72 to i32, !dbg !9672
  %74 = sub nsw i32 %73, 55, !dbg !9672
  %75 = trunc i32 %74 to i8, !dbg !9672
  store i8 %75, i8* %8, align 1, !dbg !9672
  br label %77, !dbg !9672

76:                                               ; preds = %67, %63
  store i32 -1, i32* %4, align 4, !dbg !9672
  br label %149, !dbg !9672

77:                                               ; preds = %71
  br label %78

78:                                               ; preds = %77, %58
  br label %79

79:                                               ; preds = %78, %45
  %80 = load i8, i8* %8, align 1, !dbg !9674
  %81 = zext i8 %80 to i32, !dbg !9674
  %82 = shl i32 %81, 4, !dbg !9675
  %83 = trunc i32 %82 to i8, !dbg !9674
  %84 = load i8*, i8** %5, align 8, !dbg !9676
  %85 = load i64, i64* %9, align 8, !dbg !9677
  %86 = udiv i64 %85, 2, !dbg !9678
  %87 = getelementptr inbounds i8, i8* %84, i64 %86, !dbg !9676
  store i8 %83, i8* %87, align 1, !dbg !9679
  %88 = load i8*, i8** %6, align 8, !dbg !9680
  %89 = load i64, i64* %9, align 8, !dbg !9681
  %90 = add i64 %89, 1, !dbg !9682
  %91 = getelementptr inbounds i8, i8* %88, i64 %90, !dbg !9680
  %92 = load i8, i8* %91, align 1, !dbg !9680
  store i8 %92, i8* %8, align 1, !dbg !9683
  %93 = load i8, i8* %8, align 1, !dbg !9684
  %94 = zext i8 %93 to i32, !dbg !9684
  %95 = icmp sge i32 %94, 48, !dbg !9684
  br i1 %95, label %96, label %105, !dbg !9684

96:                                               ; preds = %79
  %97 = load i8, i8* %8, align 1, !dbg !9684
  %98 = zext i8 %97 to i32, !dbg !9684
  %99 = icmp sle i32 %98, 57, !dbg !9684
  br i1 %99, label %100, label %105, !dbg !9686

100:                                              ; preds = %96
  %101 = load i8, i8* %8, align 1, !dbg !9684
  %102 = zext i8 %101 to i32, !dbg !9684
  %103 = sub nsw i32 %102, 48, !dbg !9684
  %104 = trunc i32 %103 to i8, !dbg !9684
  store i8 %104, i8* %8, align 1, !dbg !9684
  br label %134, !dbg !9684

105:                                              ; preds = %96, %79
  %106 = load i8, i8* %8, align 1, !dbg !9687
  %107 = zext i8 %106 to i32, !dbg !9687
  %108 = icmp sge i32 %107, 97, !dbg !9687
  br i1 %108, label %109, label %118, !dbg !9687

109:                                              ; preds = %105
  %110 = load i8, i8* %8, align 1, !dbg !9687
  %111 = zext i8 %110 to i32, !dbg !9687
  %112 = icmp sle i32 %111, 102, !dbg !9687
  br i1 %112, label %113, label %118, !dbg !9684

113:                                              ; preds = %109
  %114 = load i8, i8* %8, align 1, !dbg !9687
  %115 = zext i8 %114 to i32, !dbg !9687
  %116 = sub nsw i32 %115, 87, !dbg !9687
  %117 = trunc i32 %116 to i8, !dbg !9687
  store i8 %117, i8* %8, align 1, !dbg !9687
  br label %133, !dbg !9687

118:                                              ; preds = %109, %105
  %119 = load i8, i8* %8, align 1, !dbg !9689
  %120 = zext i8 %119 to i32, !dbg !9689
  %121 = icmp sge i32 %120, 65, !dbg !9689
  br i1 %121, label %122, label %131, !dbg !9689

122:                                              ; preds = %118
  %123 = load i8, i8* %8, align 1, !dbg !9689
  %124 = zext i8 %123 to i32, !dbg !9689
  %125 = icmp sle i32 %124, 70, !dbg !9689
  br i1 %125, label %126, label %131, !dbg !9687

126:                                              ; preds = %122
  %127 = load i8, i8* %8, align 1, !dbg !9689
  %128 = zext i8 %127 to i32, !dbg !9689
  %129 = sub nsw i32 %128, 55, !dbg !9689
  %130 = trunc i32 %129 to i8, !dbg !9689
  store i8 %130, i8* %8, align 1, !dbg !9689
  br label %132, !dbg !9689

131:                                              ; preds = %122, %118
  store i32 -1, i32* %4, align 4, !dbg !9689
  br label %149, !dbg !9689

132:                                              ; preds = %126
  br label %133

133:                                              ; preds = %132, %113
  br label %134

134:                                              ; preds = %133, %100
  %135 = load i8, i8* %8, align 1, !dbg !9691
  %136 = zext i8 %135 to i32, !dbg !9691
  %137 = load i8*, i8** %5, align 8, !dbg !9692
  %138 = load i64, i64* %9, align 8, !dbg !9693
  %139 = udiv i64 %138, 2, !dbg !9694
  %140 = getelementptr inbounds i8, i8* %137, i64 %139, !dbg !9692
  %141 = load i8, i8* %140, align 1, !dbg !9695
  %142 = zext i8 %141 to i32, !dbg !9695
  %143 = or i32 %142, %136, !dbg !9695
  %144 = trunc i32 %143 to i8, !dbg !9695
  store i8 %144, i8* %140, align 1, !dbg !9695
  br label %145, !dbg !9696

145:                                              ; preds = %134
  %146 = load i64, i64* %9, align 8, !dbg !9697
  %147 = add i64 %146, 2, !dbg !9697
  store i64 %147, i64* %9, align 8, !dbg !9697
  br label %27, !dbg !9698, !llvm.loop !9699

148:                                              ; preds = %27
  store i32 0, i32* %4, align 4, !dbg !9701
  br label %149, !dbg !9701

149:                                              ; preds = %148, %131, %76, %22
  %150 = load i32, i32* %4, align 4, !dbg !9702
  ret i32 %150, !dbg !9702
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @psk_free(%struct._psk_entry* %0) #0 !dbg !9703 {
  %2 = alloca %struct._psk_entry*, align 8
  %3 = alloca %struct._psk_entry*, align 8
  store %struct._psk_entry* %0, %struct._psk_entry** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._psk_entry** %2, metadata !9706, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata %struct._psk_entry** %3, metadata !9708, metadata !DIExpression()), !dbg !9709
  br label %4, !dbg !9710

4:                                                ; preds = %7, %1
  %5 = load %struct._psk_entry*, %struct._psk_entry** %2, align 8, !dbg !9711
  %6 = icmp ne %struct._psk_entry* %5, null, !dbg !9712
  br i1 %6, label %7, label %14, !dbg !9710

7:                                                ; preds = %4
  %8 = load %struct._psk_entry*, %struct._psk_entry** %2, align 8, !dbg !9713
  %9 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %8, i32 0, i32 3, !dbg !9715
  %10 = load %struct._psk_entry*, %struct._psk_entry** %9, align 8, !dbg !9715
  store %struct._psk_entry* %10, %struct._psk_entry** %3, align 8, !dbg !9716
  %11 = load %struct._psk_entry*, %struct._psk_entry** %2, align 8, !dbg !9717
  %12 = bitcast %struct._psk_entry* %11 to i8*, !dbg !9717
  call void @free(i8* %12), !dbg !9718
  %13 = load %struct._psk_entry*, %struct._psk_entry** %3, align 8, !dbg !9719
  store %struct._psk_entry* %13, %struct._psk_entry** %2, align 8, !dbg !9720
  br label %4, !dbg !9710, !llvm.loop !9721

14:                                               ; preds = %4
  ret void, !dbg !9723
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden %struct._psk_entry* @psk_parse(i8* %0) #0 !dbg !9724 {
  %2 = alloca %struct._psk_entry*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct._psk_entry*, align 8
  %5 = alloca %struct._psk_entry*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9727, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.declare(metadata %struct._psk_entry** %4, metadata !9729, metadata !DIExpression()), !dbg !9730
  store %struct._psk_entry* null, %struct._psk_entry** %4, align 8, !dbg !9730
  call void @llvm.dbg.declare(metadata %struct._psk_entry** %5, metadata !9731, metadata !DIExpression()), !dbg !9732
  store %struct._psk_entry* null, %struct._psk_entry** %5, align 8, !dbg !9732
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9733, metadata !DIExpression()), !dbg !9734
  %9 = load i8*, i8** %3, align 8, !dbg !9735
  store i8* %9, i8** %6, align 8, !dbg !9734
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9736, metadata !DIExpression()), !dbg !9737
  %10 = load i8*, i8** %6, align 8, !dbg !9738
  store i8* %10, i8** %7, align 8, !dbg !9737
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9739, metadata !DIExpression()), !dbg !9740
  br label %11, !dbg !9741

11:                                               ; preds = %16, %1
  %12 = load i8*, i8** %7, align 8, !dbg !9742
  %13 = load i8, i8* %12, align 1, !dbg !9743
  %14 = sext i8 %13 to i32, !dbg !9743
  %15 = icmp ne i32 %14, 0, !dbg !9744
  br i1 %15, label %16, label %19, !dbg !9741

16:                                               ; preds = %11
  %17 = load i8*, i8** %7, align 8, !dbg !9745
  %18 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9745
  store i8* %18, i8** %7, align 8, !dbg !9745
  br label %11, !dbg !9741, !llvm.loop !9746

19:                                               ; preds = %11
  %20 = load i8*, i8** %7, align 8, !dbg !9748
  store i8 44, i8* %20, align 1, !dbg !9749
  br label %21, !dbg !9750

21:                                               ; preds = %76, %19
  %22 = load i8*, i8** %6, align 8, !dbg !9751
  %23 = load i8*, i8** %7, align 8, !dbg !9752
  %24 = icmp ule i8* %22, %23, !dbg !9753
  br i1 %24, label %25, label %81, !dbg !9750

25:                                               ; preds = %21
  %26 = call align 16 i8* @calloc(i64 1, i64 56), !dbg !9754
  %27 = bitcast i8* %26 to %struct._psk_entry*, !dbg !9754
  store %struct._psk_entry* %27, %struct._psk_entry** %5, align 8, !dbg !9757
  %28 = icmp eq %struct._psk_entry* %27, null, !dbg !9758
  br i1 %28, label %29, label %30, !dbg !9759

29:                                               ; preds = %25
  br label %83, !dbg !9760

30:                                               ; preds = %25
  %31 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9761
  %32 = bitcast %struct._psk_entry* %31 to i8*, !dbg !9762
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 56, i1 false), !dbg !9762
  %33 = load i8*, i8** %6, align 8, !dbg !9763
  %34 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9763
  %35 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %34, i32 0, i32 0, !dbg !9763
  store i8* %33, i8** %35, align 8, !dbg !9763
  br label %36, !dbg !9763

36:                                               ; preds = %47, %30
  %37 = load i8*, i8** %6, align 8, !dbg !9763
  %38 = load i8, i8* %37, align 1, !dbg !9763
  %39 = sext i8 %38 to i32, !dbg !9763
  %40 = icmp ne i32 %39, 44, !dbg !9763
  br i1 %40, label %41, label %48, !dbg !9763

41:                                               ; preds = %36
  %42 = load i8*, i8** %6, align 8, !dbg !9764
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !9764
  store i8* %43, i8** %6, align 8, !dbg !9764
  %44 = load i8*, i8** %7, align 8, !dbg !9764
  %45 = icmp ugt i8* %43, %44, !dbg !9764
  br i1 %45, label %46, label %47, !dbg !9763

46:                                               ; preds = %41
  br label %83, !dbg !9764

47:                                               ; preds = %41
  br label %36, !dbg !9763, !llvm.loop !9766

48:                                               ; preds = %36
  %49 = load i8*, i8** %6, align 8, !dbg !9763
  %50 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !9763
  store i8* %50, i8** %6, align 8, !dbg !9763
  store i8 0, i8* %49, align 1, !dbg !9763
  %51 = load i8*, i8** %6, align 8, !dbg !9767
  store i8* %51, i8** %8, align 8, !dbg !9767
  br label %52, !dbg !9767

52:                                               ; preds = %63, %48
  %53 = load i8*, i8** %6, align 8, !dbg !9767
  %54 = load i8, i8* %53, align 1, !dbg !9767
  %55 = sext i8 %54 to i32, !dbg !9767
  %56 = icmp ne i32 %55, 44, !dbg !9767
  br i1 %56, label %57, label %64, !dbg !9767

57:                                               ; preds = %52
  %58 = load i8*, i8** %6, align 8, !dbg !9768
  %59 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !9768
  store i8* %59, i8** %6, align 8, !dbg !9768
  %60 = load i8*, i8** %7, align 8, !dbg !9768
  %61 = icmp ugt i8* %59, %60, !dbg !9768
  br i1 %61, label %62, label %63, !dbg !9767

62:                                               ; preds = %57
  br label %83, !dbg !9768

63:                                               ; preds = %57
  br label %52, !dbg !9767, !llvm.loop !9770

64:                                               ; preds = %52
  %65 = load i8*, i8** %6, align 8, !dbg !9767
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !9767
  store i8* %66, i8** %6, align 8, !dbg !9767
  store i8 0, i8* %65, align 1, !dbg !9767
  %67 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9771
  %68 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %67, i32 0, i32 2, !dbg !9773
  %69 = getelementptr inbounds [32 x i8], [32 x i8]* %68, i64 0, i64 0, !dbg !9771
  %70 = load i8*, i8** %8, align 8, !dbg !9774
  %71 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9775
  %72 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %71, i32 0, i32 1, !dbg !9776
  %73 = call i32 @unhexify(i8* %69, i8* %70, i64* %72), !dbg !9777
  %74 = icmp ne i32 %73, 0, !dbg !9778
  br i1 %74, label %75, label %76, !dbg !9779

75:                                               ; preds = %64
  br label %83, !dbg !9780

76:                                               ; preds = %64
  %77 = load %struct._psk_entry*, %struct._psk_entry** %4, align 8, !dbg !9781
  %78 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9782
  %79 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %78, i32 0, i32 3, !dbg !9783
  store %struct._psk_entry* %77, %struct._psk_entry** %79, align 8, !dbg !9784
  %80 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9785
  store %struct._psk_entry* %80, %struct._psk_entry** %4, align 8, !dbg !9786
  br label %21, !dbg !9750, !llvm.loop !9787

81:                                               ; preds = %21
  %82 = load %struct._psk_entry*, %struct._psk_entry** %4, align 8, !dbg !9789
  store %struct._psk_entry* %82, %struct._psk_entry** %2, align 8, !dbg !9790
  br label %86, !dbg !9790

83:                                               ; preds = %75, %62, %46, %29
  call void @llvm.dbg.label(metadata !9791), !dbg !9792
  %84 = load %struct._psk_entry*, %struct._psk_entry** %5, align 8, !dbg !9793
  call void @psk_free(%struct._psk_entry* %84), !dbg !9794
  %85 = load %struct._psk_entry*, %struct._psk_entry** %4, align 8, !dbg !9795
  call void @psk_free(%struct._psk_entry* %85), !dbg !9796
  store %struct._psk_entry* null, %struct._psk_entry** %2, align 8, !dbg !9797
  br label %86, !dbg !9797

86:                                               ; preds = %83, %81
  %87 = load %struct._psk_entry*, %struct._psk_entry** %2, align 8, !dbg !9798
  ret %struct._psk_entry* %87, !dbg !9798
}

declare align 16 i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @psk_callback(i8* %0, %struct.mbedtls_ssl_context.61* %1, i8* %2, i64 %3) #0 !dbg !9799 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.mbedtls_ssl_context.61*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct._psk_entry*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10080, metadata !DIExpression()), !dbg !10081
  store %struct.mbedtls_ssl_context.61* %1, %struct.mbedtls_ssl_context.61** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context.61** %7, metadata !10082, metadata !DIExpression()), !dbg !10083
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10084, metadata !DIExpression()), !dbg !10085
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !10086, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.declare(metadata %struct._psk_entry** %10, metadata !10088, metadata !DIExpression()), !dbg !10089
  %11 = load i8*, i8** %6, align 8, !dbg !10090
  %12 = bitcast i8* %11 to %struct._psk_entry*, !dbg !10091
  store %struct._psk_entry* %12, %struct._psk_entry** %10, align 8, !dbg !10089
  br label %13, !dbg !10092

13:                                               ; preds = %40, %4
  %14 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !10093
  %15 = icmp ne %struct._psk_entry* %14, null, !dbg !10094
  br i1 %15, label %16, label %44, !dbg !10092

16:                                               ; preds = %13
  %17 = load i64, i64* %9, align 8, !dbg !10095
  %18 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !10098
  %19 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %18, i32 0, i32 0, !dbg !10099
  %20 = load i8*, i8** %19, align 8, !dbg !10099
  %21 = call i64 @strlen(i8* %20), !dbg !10100
  %22 = icmp eq i64 %17, %21, !dbg !10101
  br i1 %22, label %23, label %40, !dbg !10102

23:                                               ; preds = %16
  %24 = load i8*, i8** %8, align 8, !dbg !10103
  %25 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !10104
  %26 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %25, i32 0, i32 0, !dbg !10105
  %27 = load i8*, i8** %26, align 8, !dbg !10105
  %28 = load i64, i64* %9, align 8, !dbg !10106
  %29 = call i32 @memcmp(i8* %24, i8* %27, i64 %28), !dbg !10107
  %30 = icmp eq i32 %29, 0, !dbg !10108
  br i1 %30, label %31, label %40, !dbg !10109

31:                                               ; preds = %23
  %32 = load %struct.mbedtls_ssl_context.61*, %struct.mbedtls_ssl_context.61** %7, align 8, !dbg !10110
  %33 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !10112
  %34 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %33, i32 0, i32 2, !dbg !10113
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %34, i64 0, i64 0, !dbg !10112
  %36 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !10114
  %37 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %36, i32 0, i32 1, !dbg !10115
  %38 = load i64, i64* %37, align 8, !dbg !10115
  %39 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_set_hs_psk to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %32, i8* %35, i64 %38), !dbg !10116
  store i32 %39, i32* %5, align 4, !dbg !10117
  br label %45, !dbg !10117

40:                                               ; preds = %23, %16
  %41 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !10118
  %42 = getelementptr inbounds %struct._psk_entry, %struct._psk_entry* %41, i32 0, i32 3, !dbg !10119
  %43 = load %struct._psk_entry*, %struct._psk_entry** %42, align 8, !dbg !10119
  store %struct._psk_entry* %43, %struct._psk_entry** %10, align 8, !dbg !10120
  br label %13, !dbg !10092, !llvm.loop !10121

44:                                               ; preds = %13
  store i32 -1, i32* %5, align 4, !dbg !10123
  br label %45, !dbg !10123

45:                                               ; preds = %44, %31
  %46 = load i32, i32* %5, align 4, !dbg !10124
  ret i32 %46, !dbg !10124
}

declare i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @term_handler(i32 %0) #0 !dbg !10125 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10128, metadata !DIExpression()), !dbg !10129
  %3 = load i32, i32* %2, align 4, !dbg !10130
  store i32 1, i32* @received_sigterm, align 4, !dbg !10131
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* @listen_fd), !dbg !10132
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* @client_fd), !dbg !10133
  ret void, !dbg !10134
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @ssl_server() #0 !dbg !10135 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [4 x [2 x i32]], align 16
  %7 = alloca [200 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = alloca i64, align 8
  %10 = alloca %struct._psk_entry*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [16 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca %struct.mbedtls_ssl_cookie_ctx, align 8
  %15 = alloca %struct.mbedtls_entropy_context, align 8
  %16 = alloca %struct.mbedtls_ctr_drbg_context, align 8
  %17 = alloca %struct.mbedtls_ssl_context.61, align 8
  %18 = alloca %struct.mbedtls_ssl_config.58, align 8
  %19 = alloca [8 x i8], align 1
  %20 = alloca i32, align 4
  %21 = alloca %struct.mbedtls_x509_crt, align 8
  %22 = alloca %struct.mbedtls_x509_crt, align 8
  %23 = alloca %struct.mbedtls_pk_context, align 8
  %24 = alloca %struct.mbedtls_x509_crt, align 8
  %25 = alloca %struct.mbedtls_pk_context, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %struct.mbedtls_ssl_ticket_context, align 8
  %29 = alloca [10 x i8*], align 16
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %34 = alloca [4 x i8*], align 16
  %35 = alloca [100 x i8], align 16
  %36 = alloca [512 x i8], align 16
  %37 = alloca i8*, align 8
  %38 = alloca [512 x i8], align 16
  %39 = alloca [512 x i8], align 16
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i8*, align 8
  %44 = alloca [100 x i8], align 16
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10136, metadata !DIExpression()), !dbg !10137
  store i32 0, i32* %1, align 4, !dbg !10137
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10138, metadata !DIExpression()), !dbg !10139
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10140, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10142, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10144, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.declare(metadata [4 x [2 x i32]]* %6, metadata !10146, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.declare(metadata [200 x i8]* %7, metadata !10150, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.declare(metadata [32 x i8]* %8, metadata !10155, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.declare(metadata i64* %9, metadata !10157, metadata !DIExpression()), !dbg !10158
  store i64 0, i64* %9, align 8, !dbg !10158
  call void @llvm.dbg.declare(metadata %struct._psk_entry** %10, metadata !10159, metadata !DIExpression()), !dbg !10160
  store %struct._psk_entry* null, %struct._psk_entry** %10, align 8, !dbg !10160
  call void @llvm.dbg.declare(metadata i8** %11, metadata !10161, metadata !DIExpression()), !dbg !10162
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.80, i64 0, i64 0), i8** %11, align 8, !dbg !10162
  call void @llvm.dbg.declare(metadata [16 x i8]* %12, metadata !10163, metadata !DIExpression()), !dbg !10164
  %45 = bitcast [16 x i8]* %12 to i8*, !dbg !10164
  call void @llvm.memset.p0i8.i64(i8* align 16 %45, i8 0, i64 16, i1 false), !dbg !10164
  call void @llvm.dbg.declare(metadata i64* %13, metadata !10165, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx* %14, metadata !10167, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context* %15, metadata !10186, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context* %16, metadata !10210, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context.61* %17, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_config.58* %18, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata [8 x i8]* %19, metadata !10233, metadata !DIExpression()), !dbg !10234
  %46 = bitcast [8 x i8]* %19 to i8*, !dbg !10234
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 8, i1 false), !dbg !10234
  call void @llvm.dbg.declare(metadata i32* %20, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt* %21, metadata !10237, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt* %22, metadata !10239, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context* %23, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt* %24, metadata !10243, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context* %25, metadata !10245, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.declare(metadata i32* %26, metadata !10247, metadata !DIExpression()), !dbg !10248
  store i32 0, i32* %26, align 4, !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %27, metadata !10249, metadata !DIExpression()), !dbg !10250
  store i32 0, i32* %27, align 4, !dbg !10250
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ticket_context* %28, metadata !10251, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.declare(metadata [10 x i8*]* %29, metadata !10302, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.declare(metadata i32* %30, metadata !10304, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.declare(metadata i8** %31, metadata !10306, metadata !DIExpression()), !dbg !10307
  call void @llvm.dbg.declare(metadata i32** %32, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @mbedtls_net_init_ocall(%struct.mbedtls_net_context* @client_fd), !dbg !10310
  call void @mbedtls_net_init_ocall(%struct.mbedtls_net_context* @listen_fd), !dbg !10311
  call void bitcast (void (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_init to void (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !10312
  call void bitcast (void (%struct.mbedtls_ssl_config*)* @mbedtls_ssl_config_init to void (%struct.mbedtls_ssl_config.58*)*)(%struct.mbedtls_ssl_config.58* %18), !dbg !10313
  call void @mbedtls_ctr_drbg_init(%struct.mbedtls_ctr_drbg_context* %16), !dbg !10314
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %21), !dbg !10315
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %22), !dbg !10316
  call void @mbedtls_pk_init(%struct.mbedtls_pk_context* %23), !dbg !10317
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %24), !dbg !10318
  call void @mbedtls_pk_init(%struct.mbedtls_pk_context* %25), !dbg !10319
  call void @mbedtls_ssl_ticket_init(%struct.mbedtls_ssl_ticket_context* %28), !dbg !10320
  %47 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 0, !dbg !10321
  %48 = bitcast i8** %47 to i8*, !dbg !10321
  call void @llvm.memset.p0i8.i64(i8* align 16 %48, i8 0, i64 80, i1 false), !dbg !10321
  call void @mbedtls_ssl_cookie_init(%struct.mbedtls_ssl_cookie_ctx* %14), !dbg !10322
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.81, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 0), align 8, !dbg !10323
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.82, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 1), align 8, !dbg !10324
  store i32 9, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 2), align 8, !dbg !10325
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 3), align 4, !dbg !10326
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 4), align 8, !dbg !10327
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 5), align 8, !dbg !10328
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 6), align 8, !dbg !10329
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 7), align 8, !dbg !10330
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 8), align 8, !dbg !10331
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 9), align 8, !dbg !10332
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 10), align 8, !dbg !10333
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.83, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 11), align 8, !dbg !10334
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.84, i64 0, i64 0), i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 12), align 8, !dbg !10335
  store i8* null, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 13), align 8, !dbg !10336
  store i8* null, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 14), align 8, !dbg !10337
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 15, i64 0), align 8, !dbg !10338
  store i8* null, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 16), align 8, !dbg !10339
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 17), align 8, !dbg !10340
  store i32 -2, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 18), align 4, !dbg !10341
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 19), align 8, !dbg !10342
  store i32 -2, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 20), align 4, !dbg !10343
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 21), align 8, !dbg !10344
  store i32 1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 22), align 4, !dbg !10345
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10346
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !10347
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 25), align 8, !dbg !10348
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 26), align 4, !dbg !10349
  store i8 0, i8* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 27), align 8, !dbg !10350
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 28), align 4, !dbg !10351
  store i32 1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 29), align 8, !dbg !10352
  store i32 86400, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 30), align 4, !dbg !10353
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 31), align 8, !dbg !10354
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 32), align 4, !dbg !10355
  store i8* null, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 33), align 8, !dbg !10356
  store i8* null, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 34), align 8, !dbg !10357
  store i8* null, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 35), align 8, !dbg !10358
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !10359
  store i32 1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 39), align 4, !dbg !10360
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 40), align 8, !dbg !10361
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 41), align 4, !dbg !10362
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 42), align 8, !dbg !10363
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 43), align 4, !dbg !10364
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 36), align 8, !dbg !10365
  store i32 -1, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 37), align 4, !dbg !10366
  %49 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 2), align 8, !dbg !10367
  call void @mbedtls_debug_set_threshold(i32 %49), !dbg !10368
  %50 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 15, i64 0), align 8, !dbg !10369
  %51 = icmp sgt i32 %50, 0, !dbg !10371
  br i1 %51, label %52, label %118, !dbg !10372

52:                                               ; preds = %0
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %33, metadata !10373, metadata !DIExpression()), !dbg !10390
  %53 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 15, i64 0), align 8, !dbg !10391
  %54 = call %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_id(i32 %53), !dbg !10392
  store %struct.mbedtls_ssl_ciphersuite_t* %54, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10393
  %55 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !10394
  %56 = icmp ne i32 %55, -1, !dbg !10396
  br i1 %56, label %57, label %65, !dbg !10397

57:                                               ; preds = %52
  %58 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10398
  %59 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %58, i32 0, i32 6, !dbg !10399
  %60 = load i32, i32* %59, align 8, !dbg !10399
  %61 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !10400
  %62 = icmp sgt i32 %60, %61, !dbg !10401
  br i1 %62, label %63, label %65, !dbg !10402

63:                                               ; preds = %57
  %64 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5.85, i64 0, i64 0)), !dbg !10403
  store i32 2, i32* %1, align 4, !dbg !10405
  br label %1086, !dbg !10406

65:                                               ; preds = %57, %52
  %66 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10407
  %67 = icmp ne i32 %66, -1, !dbg !10409
  br i1 %67, label %68, label %76, !dbg !10410

68:                                               ; preds = %65
  %69 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10411
  %70 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %69, i32 0, i32 8, !dbg !10412
  %71 = load i32, i32* %70, align 8, !dbg !10412
  %72 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10413
  %73 = icmp slt i32 %71, %72, !dbg !10414
  br i1 %73, label %74, label %76, !dbg !10415

74:                                               ; preds = %68
  %75 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5.85, i64 0, i64 0)), !dbg !10416
  store i32 2, i32* %1, align 4, !dbg !10418
  br label %1086, !dbg !10419

76:                                               ; preds = %68, %65
  %77 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !10420
  %78 = icmp eq i32 %77, -1, !dbg !10422
  br i1 %78, label %85, label %79, !dbg !10423

79:                                               ; preds = %76
  %80 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !10424
  %81 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10425
  %82 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %81, i32 0, i32 8, !dbg !10426
  %83 = load i32, i32* %82, align 8, !dbg !10426
  %84 = icmp sgt i32 %80, %83, !dbg !10427
  br i1 %84, label %85, label %89, !dbg !10428

85:                                               ; preds = %79, %76
  %86 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10429
  %87 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %86, i32 0, i32 8, !dbg !10431
  %88 = load i32, i32* %87, align 8, !dbg !10431
  store i32 %88, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !10432
  br label %89, !dbg !10433

89:                                               ; preds = %85, %79
  %90 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10434
  %91 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10436
  %92 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %91, i32 0, i32 6, !dbg !10437
  %93 = load i32, i32* %92, align 8, !dbg !10437
  %94 = icmp slt i32 %90, %93, !dbg !10438
  br i1 %94, label %95, label %106, !dbg !10439

95:                                               ; preds = %89
  %96 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10440
  %97 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %96, i32 0, i32 6, !dbg !10442
  %98 = load i32, i32* %97, align 8, !dbg !10442
  store i32 %98, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10443
  %99 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !10444
  %100 = icmp eq i32 %99, 1, !dbg !10446
  br i1 %100, label %101, label %105, !dbg !10447

101:                                              ; preds = %95
  %102 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10448
  %103 = icmp slt i32 %102, 2, !dbg !10449
  br i1 %103, label %104, label %105, !dbg !10450

104:                                              ; preds = %101
  store i32 2, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !10451
  br label %105, !dbg !10452

105:                                              ; preds = %104, %101, %95
  br label %106, !dbg !10453

106:                                              ; preds = %105, %89
  %107 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %33, align 8, !dbg !10454
  %108 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %107, i32 0, i32 2, !dbg !10456
  %109 = load i32, i32* %108, align 8, !dbg !10456
  %110 = icmp eq i32 %109, 42, !dbg !10457
  br i1 %110, label %111, label %117, !dbg !10458

111:                                              ; preds = %106
  %112 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 25), align 8, !dbg !10459
  %113 = icmp eq i32 %112, 1, !dbg !10462
  br i1 %113, label %114, label %116, !dbg !10463

114:                                              ; preds = %111
  %115 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.86, i64 0, i64 0)), !dbg !10464
  store i32 2, i32* %1, align 4, !dbg !10466
  br label %1086, !dbg !10467

116:                                              ; preds = %111
  store i32 0, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 25), align 8, !dbg !10468
  br label %117, !dbg !10469

117:                                              ; preds = %116, %106
  br label %118, !dbg !10470

118:                                              ; preds = %117, %0
  %119 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 16), align 8, !dbg !10471
  %120 = icmp ne i8* %119, null, !dbg !10473
  br i1 %120, label %121, label %204, !dbg !10474

121:                                              ; preds = %118
  call void @llvm.dbg.declare(metadata [4 x i8*]* %34, metadata !10475, metadata !DIExpression()), !dbg !10477
  %122 = bitcast [4 x i8*]* %34 to i8*, !dbg !10477
  call void @llvm.memset.p0i8.i64(i8* align 16 %122, i8 0, i64 32, i1 false), !dbg !10477
  store i32 0, i32* %30, align 4, !dbg !10478
  %123 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 16), align 8, !dbg !10480
  store i8* %123, i8** %31, align 8, !dbg !10481
  br label %124, !dbg !10482

124:                                              ; preds = %163, %121
  %125 = load i32, i32* %30, align 4, !dbg !10483
  %126 = icmp slt i32 %125, 4, !dbg !10485
  br i1 %126, label %127, label %132, !dbg !10486

127:                                              ; preds = %124
  %128 = load i8*, i8** %31, align 8, !dbg !10487
  %129 = load i8, i8* %128, align 1, !dbg !10488
  %130 = sext i8 %129 to i32, !dbg !10488
  %131 = icmp ne i32 %130, 0, !dbg !10489
  br label %132

132:                                              ; preds = %127, %124
  %133 = phi i1 [ false, %124 ], [ %131, %127 ], !dbg !10490
  br i1 %133, label %134, label %166, !dbg !10491

134:                                              ; preds = %132
  %135 = load i8*, i8** %31, align 8, !dbg !10492
  %136 = load i32, i32* %30, align 4, !dbg !10494
  %137 = sext i32 %136 to i64, !dbg !10495
  %138 = getelementptr inbounds [4 x i8*], [4 x i8*]* %34, i64 0, i64 %137, !dbg !10495
  store i8* %135, i8** %138, align 8, !dbg !10496
  br label %139, !dbg !10497

139:                                              ; preds = %151, %134
  %140 = load i8*, i8** %31, align 8, !dbg !10498
  %141 = load i8, i8* %140, align 1, !dbg !10499
  %142 = sext i8 %141 to i32, !dbg !10499
  %143 = icmp ne i32 %142, 44, !dbg !10500
  br i1 %143, label %144, label %149, !dbg !10501

144:                                              ; preds = %139
  %145 = load i8*, i8** %31, align 8, !dbg !10502
  %146 = load i8, i8* %145, align 1, !dbg !10503
  %147 = sext i8 %146 to i32, !dbg !10503
  %148 = icmp ne i32 %147, 0, !dbg !10504
  br label %149

149:                                              ; preds = %144, %139
  %150 = phi i1 [ false, %139 ], [ %148, %144 ], !dbg !10505
  br i1 %150, label %151, label %154, !dbg !10497

151:                                              ; preds = %149
  %152 = load i8*, i8** %31, align 8, !dbg !10506
  %153 = getelementptr inbounds i8, i8* %152, i32 1, !dbg !10506
  store i8* %153, i8** %31, align 8, !dbg !10506
  br label %139, !dbg !10497, !llvm.loop !10507

154:                                              ; preds = %149
  %155 = load i8*, i8** %31, align 8, !dbg !10508
  %156 = load i8, i8* %155, align 1, !dbg !10510
  %157 = sext i8 %156 to i32, !dbg !10510
  %158 = icmp eq i32 %157, 44, !dbg !10511
  br i1 %158, label %159, label %162, !dbg !10512

159:                                              ; preds = %154
  %160 = load i8*, i8** %31, align 8, !dbg !10513
  %161 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !10513
  store i8* %161, i8** %31, align 8, !dbg !10513
  store i8 0, i8* %160, align 1, !dbg !10514
  br label %162, !dbg !10515

162:                                              ; preds = %159, %154
  br label %163, !dbg !10516

163:                                              ; preds = %162
  %164 = load i32, i32* %30, align 4, !dbg !10517
  %165 = add nsw i32 %164, 1, !dbg !10517
  store i32 %165, i32* %30, align 4, !dbg !10517
  br label %124, !dbg !10518, !llvm.loop !10519

166:                                              ; preds = %132
  %167 = load i32, i32* %30, align 4, !dbg !10521
  %168 = icmp ne i32 %167, 4, !dbg !10523
  br i1 %168, label %169, label %171, !dbg !10524

169:                                              ; preds = %166
  %170 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.87, i64 0, i64 0)), !dbg !10525
  store i32 1, i32* %1, align 4, !dbg !10527
  br label %1117, !dbg !10528

171:                                              ; preds = %166
  %172 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 0, !dbg !10529
  %173 = bitcast [2 x i32]* %172 to i8*, !dbg !10529
  call void @llvm.memset.p0i8.i64(i8* align 16 %173, i8 0, i64 32, i1 false), !dbg !10529
  store i32 0, i32* %30, align 4, !dbg !10530
  br label %174, !dbg !10532

174:                                              ; preds = %200, %171
  %175 = load i32, i32* %30, align 4, !dbg !10533
  %176 = icmp slt i32 %175, 4, !dbg !10535
  br i1 %176, label %177, label %203, !dbg !10536

177:                                              ; preds = %174
  %178 = load i32, i32* %30, align 4, !dbg !10537
  %179 = sext i32 %178 to i64, !dbg !10539
  %180 = getelementptr inbounds [4 x i8*], [4 x i8*]* %34, i64 0, i64 %179, !dbg !10539
  %181 = load i8*, i8** %180, align 8, !dbg !10539
  %182 = call i32 @mbedtls_ssl_get_ciphersuite_id(i8* %181), !dbg !10540
  %183 = load i32, i32* %30, align 4, !dbg !10541
  %184 = sext i32 %183 to i64, !dbg !10542
  %185 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 %184, !dbg !10542
  %186 = getelementptr inbounds [2 x i32], [2 x i32]* %185, i64 0, i64 0, !dbg !10542
  store i32 %182, i32* %186, align 8, !dbg !10543
  %187 = load i32, i32* %30, align 4, !dbg !10544
  %188 = sext i32 %187 to i64, !dbg !10546
  %189 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 %188, !dbg !10546
  %190 = getelementptr inbounds [2 x i32], [2 x i32]* %189, i64 0, i64 0, !dbg !10546
  %191 = load i32, i32* %190, align 8, !dbg !10546
  %192 = icmp eq i32 %191, 0, !dbg !10547
  br i1 %192, label %193, label %199, !dbg !10548

193:                                              ; preds = %177
  %194 = load i32, i32* %30, align 4, !dbg !10549
  %195 = sext i32 %194 to i64, !dbg !10551
  %196 = getelementptr inbounds [4 x i8*], [4 x i8*]* %34, i64 0, i64 %195, !dbg !10551
  %197 = load i8*, i8** %196, align 8, !dbg !10551
  %198 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.88, i64 0, i64 0), i8* %197), !dbg !10552
  store i32 2, i32* %1, align 4, !dbg !10553
  br label %1086, !dbg !10554

199:                                              ; preds = %177
  br label %200, !dbg !10555

200:                                              ; preds = %199
  %201 = load i32, i32* %30, align 4, !dbg !10556
  %202 = add nsw i32 %201, 1, !dbg !10556
  store i32 %202, i32* %30, align 4, !dbg !10556
  br label %174, !dbg !10557, !llvm.loop !10558

203:                                              ; preds = %174
  br label %204, !dbg !10560

204:                                              ; preds = %203, %118
  %205 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !10561
  %206 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 11), align 8, !dbg !10563
  %207 = call i32 @unhexify(i8* %205, i8* %206, i64* %9), !dbg !10564
  %208 = icmp ne i32 %207, 0, !dbg !10565
  br i1 %208, label %209, label %211, !dbg !10566

209:                                              ; preds = %204
  %210 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9.89, i64 0, i64 0)), !dbg !10567
  br label %1117, !dbg !10569

211:                                              ; preds = %204
  %212 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 13), align 8, !dbg !10570
  %213 = icmp ne i8* %212, null, !dbg !10572
  br i1 %213, label %214, label %221, !dbg !10573

214:                                              ; preds = %211
  %215 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 13), align 8, !dbg !10574
  %216 = call %struct._psk_entry* @psk_parse(i8* %215), !dbg !10577
  store %struct._psk_entry* %216, %struct._psk_entry** %10, align 8, !dbg !10578
  %217 = icmp eq %struct._psk_entry* %216, null, !dbg !10579
  br i1 %217, label %218, label %220, !dbg !10580

218:                                              ; preds = %214
  %219 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10.90, i64 0, i64 0)), !dbg !10581
  br label %1117, !dbg !10583

220:                                              ; preds = %214
  br label %221, !dbg !10584

221:                                              ; preds = %220, %211
  %222 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 34), align 8, !dbg !10585
  %223 = icmp ne i8* %222, null, !dbg !10587
  br i1 %223, label %224, label %267, !dbg !10588

224:                                              ; preds = %221
  %225 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 34), align 8, !dbg !10589
  store i8* %225, i8** %31, align 8, !dbg !10591
  store i32 0, i32* %30, align 4, !dbg !10592
  br label %226, !dbg !10593

226:                                              ; preds = %265, %224
  %227 = load i32, i32* %30, align 4, !dbg !10594
  %228 = icmp slt i32 %227, 79, !dbg !10595
  br i1 %228, label %229, label %234, !dbg !10596

229:                                              ; preds = %226
  %230 = load i8*, i8** %31, align 8, !dbg !10597
  %231 = load i8, i8* %230, align 1, !dbg !10598
  %232 = sext i8 %231 to i32, !dbg !10598
  %233 = icmp ne i32 %232, 0, !dbg !10599
  br label %234

234:                                              ; preds = %229, %226
  %235 = phi i1 [ false, %226 ], [ %233, %229 ], !dbg !10600
  br i1 %235, label %236, label %266, !dbg !10593

236:                                              ; preds = %234
  %237 = load i8*, i8** %31, align 8, !dbg !10601
  %238 = load i32, i32* %30, align 4, !dbg !10603
  %239 = add nsw i32 %238, 1, !dbg !10603
  store i32 %239, i32* %30, align 4, !dbg !10603
  %240 = sext i32 %238 to i64, !dbg !10604
  %241 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %240, !dbg !10604
  store i8* %237, i8** %241, align 8, !dbg !10605
  br label %242, !dbg !10606

242:                                              ; preds = %254, %236
  %243 = load i8*, i8** %31, align 8, !dbg !10607
  %244 = load i8, i8* %243, align 1, !dbg !10608
  %245 = sext i8 %244 to i32, !dbg !10608
  %246 = icmp ne i32 %245, 44, !dbg !10609
  br i1 %246, label %247, label %252, !dbg !10610

247:                                              ; preds = %242
  %248 = load i8*, i8** %31, align 8, !dbg !10611
  %249 = load i8, i8* %248, align 1, !dbg !10612
  %250 = sext i8 %249 to i32, !dbg !10612
  %251 = icmp ne i32 %250, 0, !dbg !10613
  br label %252

252:                                              ; preds = %247, %242
  %253 = phi i1 [ false, %242 ], [ %251, %247 ], !dbg !10614
  br i1 %253, label %254, label %257, !dbg !10606

254:                                              ; preds = %252
  %255 = load i8*, i8** %31, align 8, !dbg !10615
  %256 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !10615
  store i8* %256, i8** %31, align 8, !dbg !10615
  br label %242, !dbg !10606, !llvm.loop !10616

257:                                              ; preds = %252
  %258 = load i8*, i8** %31, align 8, !dbg !10617
  %259 = load i8, i8* %258, align 1, !dbg !10619
  %260 = sext i8 %259 to i32, !dbg !10619
  %261 = icmp eq i32 %260, 44, !dbg !10620
  br i1 %261, label %262, label %265, !dbg !10621

262:                                              ; preds = %257
  %263 = load i8*, i8** %31, align 8, !dbg !10622
  %264 = getelementptr inbounds i8, i8* %263, i32 1, !dbg !10622
  store i8* %264, i8** %31, align 8, !dbg !10622
  store i8 0, i8* %263, align 1, !dbg !10623
  br label %265, !dbg !10624

265:                                              ; preds = %262, %257
  br label %226, !dbg !10593, !llvm.loop !10625

266:                                              ; preds = %234
  br label %267, !dbg !10627

267:                                              ; preds = %266, %221
  %268 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11.91, i64 0, i64 0)), !dbg !10628
  call void @mbedtls_entropy_init(%struct.mbedtls_entropy_context* %15), !dbg !10629
  %269 = bitcast %struct.mbedtls_entropy_context* %15 to i8*, !dbg !10630
  %270 = load i8*, i8** %11, align 8, !dbg !10632
  %271 = load i8*, i8** %11, align 8, !dbg !10633
  %272 = call i64 @strlen(i8* %271), !dbg !10634
  %273 = call i32 @mbedtls_ctr_drbg_seed(%struct.mbedtls_ctr_drbg_context* %16, i32 (i8*, i8*, i64)* @mbedtls_entropy_func, i8* %269, i8* %270, i64 %272), !dbg !10635
  store i32 %273, i32* %1, align 4, !dbg !10636
  %274 = icmp ne i32 %273, 0, !dbg !10637
  br i1 %274, label %275, label %279, !dbg !10638

275:                                              ; preds = %267
  %276 = load i32, i32* %1, align 4, !dbg !10639
  %277 = sub nsw i32 0, %276, !dbg !10641
  %278 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.12.92, i64 0, i64 0), i32 %277), !dbg !10642
  br label %1117, !dbg !10643

279:                                              ; preds = %267
  %280 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !10644
  %281 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14.94, i64 0, i64 0)), !dbg !10645
  store i32 0, i32* %30, align 4, !dbg !10646
  br label %282, !dbg !10648

282:                                              ; preds = %302, %279
  %283 = load i32, i32* %30, align 4, !dbg !10649
  %284 = sext i32 %283 to i64, !dbg !10651
  %285 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @mbedtls_test_cas to [0 x i8*]*), i64 0, i64 %284, !dbg !10651
  %286 = load i8*, i8** %285, align 8, !dbg !10651
  %287 = icmp ne i8* %286, null, !dbg !10652
  br i1 %287, label %288, label %305, !dbg !10653

288:                                              ; preds = %282
  %289 = load i32, i32* %30, align 4, !dbg !10654
  %290 = sext i32 %289 to i64, !dbg !10656
  %291 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @mbedtls_test_cas to [0 x i8*]*), i64 0, i64 %290, !dbg !10656
  %292 = load i8*, i8** %291, align 8, !dbg !10656
  %293 = load i32, i32* %30, align 4, !dbg !10657
  %294 = sext i32 %293 to i64, !dbg !10658
  %295 = getelementptr inbounds [0 x i64], [0 x i64]* bitcast ([4 x i64]* @mbedtls_test_cas_len to [0 x i64]*), i64 0, i64 %294, !dbg !10658
  %296 = load i64, i64* %295, align 8, !dbg !10658
  %297 = call i32 @mbedtls_x509_crt_parse(%struct.mbedtls_x509_crt* %21, i8* %292, i64 %296), !dbg !10659
  store i32 %297, i32* %1, align 4, !dbg !10660
  %298 = load i32, i32* %1, align 4, !dbg !10661
  %299 = icmp ne i32 %298, 0, !dbg !10663
  br i1 %299, label %300, label %301, !dbg !10664

300:                                              ; preds = %288
  br label %305, !dbg !10665

301:                                              ; preds = %288
  br label %302, !dbg !10666

302:                                              ; preds = %301
  %303 = load i32, i32* %30, align 4, !dbg !10667
  %304 = add nsw i32 %303, 1, !dbg !10667
  store i32 %304, i32* %30, align 4, !dbg !10667
  br label %282, !dbg !10668, !llvm.loop !10669

305:                                              ; preds = %300, %282
  %306 = load i32, i32* %1, align 4, !dbg !10671
  %307 = icmp slt i32 %306, 0, !dbg !10673
  br i1 %307, label %308, label %312, !dbg !10674

308:                                              ; preds = %305
  %309 = load i32, i32* %1, align 4, !dbg !10675
  %310 = sub nsw i32 0, %309, !dbg !10677
  %311 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15.95, i64 0, i64 0), i32 %310), !dbg !10678
  br label %1117, !dbg !10679

312:                                              ; preds = %305
  %313 = load i32, i32* %1, align 4, !dbg !10680
  %314 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16.96, i64 0, i64 0), i32 %313), !dbg !10681
  br label %315, !dbg !10682

315:                                              ; preds = %312
  %316 = load i8, i8* @log_run_level, align 1, !dbg !10683
  %317 = zext i8 %316 to i32, !dbg !10683
  %318 = icmp sle i32 3, %317, !dbg !10683
  br i1 %318, label %319, label %322, !dbg !10686

319:                                              ; preds = %315
  %320 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 3), align 8, !dbg !10687
  %321 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17.97, i64 0, i64 0), i8* %320, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_server, i64 0, i64 0), i32 1414), !dbg !10687
  br label %322, !dbg !10687

322:                                              ; preds = %319, %315
  br label %323, !dbg !10686

323:                                              ; preds = %322
  %324 = load i32, i32* %26, align 4, !dbg !10689
  %325 = icmp eq i32 %324, 0, !dbg !10691
  br i1 %325, label %326, label %387, !dbg !10692

326:                                              ; preds = %323
  %327 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 7), align 8, !dbg !10693
  %328 = call i32 @strcmp(i8* %327, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.98, i64 0, i64 0)), !dbg !10694
  %329 = icmp ne i32 %328, 0, !dbg !10695
  br i1 %329, label %330, label %387, !dbg !10696

330:                                              ; preds = %326
  %331 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 8), align 8, !dbg !10697
  %332 = call i32 @strcmp(i8* %331, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.98, i64 0, i64 0)), !dbg !10698
  %333 = icmp ne i32 %332, 0, !dbg !10699
  br i1 %333, label %334, label %387, !dbg !10700

334:                                              ; preds = %330
  %335 = load i32, i32* %27, align 4, !dbg !10701
  %336 = icmp eq i32 %335, 0, !dbg !10702
  br i1 %336, label %337, label %387, !dbg !10703

337:                                              ; preds = %334
  %338 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 9), align 8, !dbg !10704
  %339 = call i32 @strcmp(i8* %338, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.98, i64 0, i64 0)), !dbg !10705
  %340 = icmp ne i32 %339, 0, !dbg !10706
  br i1 %340, label %341, label %387, !dbg !10707

341:                                              ; preds = %337
  %342 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 10), align 8, !dbg !10708
  %343 = call i32 @strcmp(i8* %342, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.98, i64 0, i64 0)), !dbg !10709
  %344 = icmp ne i32 %343, 0, !dbg !10710
  br i1 %344, label %345, label %387, !dbg !10711

345:                                              ; preds = %341
  br label %346, !dbg !10712

346:                                              ; preds = %345
  %347 = load i8, i8* @log_run_level, align 1, !dbg !10714
  %348 = zext i8 %347 to i32, !dbg !10714
  %349 = icmp sle i32 1, %348, !dbg !10714
  br i1 %349, label %350, label %353, !dbg !10717

350:                                              ; preds = %346
  %351 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @log_level_strings, i64 0, i64 1), align 8, !dbg !10718
  %352 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19.99, i64 0, i64 0), i8* %351, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.ssl_server, i64 0, i64 0), i32 1481), !dbg !10718
  br label %353, !dbg !10718

353:                                              ; preds = %350, %346
  br label %354, !dbg !10717

354:                                              ; preds = %353
  %355 = load i64, i64* @mbedtls_test_srv_crt_rsa_len, align 8, !dbg !10720
  %356 = call i32 @mbedtls_x509_crt_parse(%struct.mbedtls_x509_crt* %22, i8* getelementptr inbounds ([1197 x i8], [1197 x i8]* @mbedtls_test_srv_crt_rsa, i64 0, i64 0), i64 %355), !dbg !10722
  store i32 %356, i32* %1, align 4, !dbg !10723
  %357 = icmp ne i32 %356, 0, !dbg !10724
  br i1 %357, label %358, label %362, !dbg !10725

358:                                              ; preds = %354
  %359 = load i32, i32* %1, align 4, !dbg !10726
  %360 = sub nsw i32 0, %359, !dbg !10728
  %361 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15.95, i64 0, i64 0), i32 %360), !dbg !10729
  br label %1117, !dbg !10730

362:                                              ; preds = %354
  %363 = load i64, i64* @mbedtls_test_srv_key_rsa_len, align 8, !dbg !10731
  %364 = call i32 @mbedtls_pk_parse_key(%struct.mbedtls_pk_context* %23, i8* getelementptr inbounds ([1707 x i8], [1707 x i8]* @mbedtls_test_srv_key_rsa, i64 0, i64 0), i64 %363, i8* null, i64 0), !dbg !10733
  store i32 %364, i32* %1, align 4, !dbg !10734
  %365 = icmp ne i32 %364, 0, !dbg !10735
  br i1 %365, label %366, label %370, !dbg !10736

366:                                              ; preds = %362
  %367 = load i32, i32* %1, align 4, !dbg !10737
  %368 = sub nsw i32 0, %367, !dbg !10739
  %369 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.100, i64 0, i64 0), i32 %368), !dbg !10740
  br label %1117, !dbg !10741

370:                                              ; preds = %362
  store i32 2, i32* %26, align 4, !dbg !10742
  %371 = load i64, i64* @mbedtls_test_srv_crt_ec_len, align 8, !dbg !10743
  %372 = call i32 @mbedtls_x509_crt_parse(%struct.mbedtls_x509_crt* %24, i8* getelementptr inbounds ([813 x i8], [813 x i8]* @mbedtls_test_srv_crt_ec, i64 0, i64 0), i64 %371), !dbg !10745
  store i32 %372, i32* %1, align 4, !dbg !10746
  %373 = icmp ne i32 %372, 0, !dbg !10747
  br i1 %373, label %374, label %378, !dbg !10748

374:                                              ; preds = %370
  %375 = load i32, i32* %1, align 4, !dbg !10749
  %376 = sub nsw i32 0, %375, !dbg !10751
  %377 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21.101, i64 0, i64 0), i32 %376), !dbg !10752
  br label %1117, !dbg !10753

378:                                              ; preds = %370
  %379 = load i64, i64* @mbedtls_test_srv_key_ec_len, align 8, !dbg !10754
  %380 = call i32 @mbedtls_pk_parse_key(%struct.mbedtls_pk_context* %25, i8* getelementptr inbounds ([233 x i8], [233 x i8]* @mbedtls_test_srv_key_ec, i64 0, i64 0), i64 %379, i8* null, i64 0), !dbg !10756
  store i32 %380, i32* %1, align 4, !dbg !10757
  %381 = icmp ne i32 %380, 0, !dbg !10758
  br i1 %381, label %382, label %386, !dbg !10759

382:                                              ; preds = %378
  %383 = load i32, i32* %1, align 4, !dbg !10760
  %384 = sub nsw i32 0, %383, !dbg !10762
  %385 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.102, i64 0, i64 0), i32 %384), !dbg !10763
  br label %1117, !dbg !10764

386:                                              ; preds = %378
  store i32 2, i32* %27, align 4, !dbg !10765
  br label %387, !dbg !10766

387:                                              ; preds = %386, %341, %337, %334, %330, %326, %323
  %388 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !10767
  %389 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !10768
  %390 = icmp eq i32 %389, 0, !dbg !10769
  %391 = zext i1 %390 to i64, !dbg !10770
  %392 = select i1 %390, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.103, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.104, i64 0, i64 0), !dbg !10770
  %393 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 0), align 8, !dbg !10771
  %394 = icmp ne i8* %393, null, !dbg !10772
  br i1 %394, label %395, label %397, !dbg !10772

395:                                              ; preds = %387
  %396 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 0), align 8, !dbg !10773
  br label %398, !dbg !10772

397:                                              ; preds = %387
  br label %398, !dbg !10772

398:                                              ; preds = %397, %395
  %399 = phi i8* [ %396, %395 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26.105, i64 0, i64 0), %397 ], !dbg !10772
  %400 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 1), align 8, !dbg !10774
  %401 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23.106, i64 0, i64 0), i8* %392, i8* %399, i8* %400), !dbg !10775
  %402 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 0), align 8, !dbg !10776
  %403 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 1), align 8, !dbg !10778
  %404 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !10779
  %405 = icmp eq i32 %404, 0, !dbg !10780
  %406 = zext i1 %405 to i64, !dbg !10781
  %407 = select i1 %405, i32 0, i32 1, !dbg !10781
  %408 = call i32 @mbedtls_net_bind_ocall(%struct.mbedtls_net_context* @listen_fd, i8* %402, i8* %403, i32 %407), !dbg !10782
  store i32 %408, i32* %1, align 4, !dbg !10783
  %409 = icmp ne i32 %408, 0, !dbg !10784
  br i1 %409, label %410, label %414, !dbg !10785

410:                                              ; preds = %398
  %411 = load i32, i32* %1, align 4, !dbg !10786
  %412 = sub nsw i32 0, %411, !dbg !10788
  %413 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.27.107, i64 0, i64 0), i32 %412), !dbg !10789
  br label %1117, !dbg !10790

414:                                              ; preds = %398
  %415 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !10791
  %416 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28.108, i64 0, i64 0)), !dbg !10792
  %417 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !10793
  %418 = call i32 bitcast (i32 (%struct.mbedtls_ssl_config*, i32, i32, i32)* @mbedtls_ssl_config_defaults to i32 (%struct.mbedtls_ssl_config.58*, i32, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 1, i32 %417, i32 0), !dbg !10795
  store i32 %418, i32* %1, align 4, !dbg !10796
  %419 = icmp ne i32 %418, 0, !dbg !10797
  br i1 %419, label %420, label %424, !dbg !10798

420:                                              ; preds = %414
  %421 = load i32, i32* %1, align 4, !dbg !10799
  %422 = sub nsw i32 0, %421, !dbg !10801
  %423 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.29.109, i64 0, i64 0), i32 %422), !dbg !10802
  br label %1117, !dbg !10803

424:                                              ; preds = %414
  %425 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 26), align 4, !dbg !10804
  %426 = icmp ne i32 %425, -1, !dbg !10806
  br i1 %426, label %427, label %429, !dbg !10807

427:                                              ; preds = %424
  %428 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 26), align 4, !dbg !10808
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_authmode to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %428), !dbg !10809
  br label %429, !dbg !10809

429:                                              ; preds = %427, %424
  %430 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 41), align 4, !dbg !10810
  %431 = icmp ne i32 %430, 0, !dbg !10812
  br i1 %431, label %435, label %432, !dbg !10813

432:                                              ; preds = %429
  %433 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 42), align 8, !dbg !10814
  %434 = icmp ne i32 %433, 0, !dbg !10815
  br i1 %434, label %435, label %438, !dbg !10816

435:                                              ; preds = %432, %429
  %436 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 41), align 4, !dbg !10817
  %437 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 42), align 8, !dbg !10818
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32, i32)* @mbedtls_ssl_conf_handshake_timeout to void (%struct.mbedtls_ssl_config.58*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %436, i32 %437), !dbg !10819
  br label %438, !dbg !10819

438:                                              ; preds = %435, %432
  %439 = load i8, i8* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 27), align 8, !dbg !10820
  %440 = call i32 bitcast (i32 (%struct.mbedtls_ssl_config*, i8)* @mbedtls_ssl_conf_max_frag_len to i32 (%struct.mbedtls_ssl_config.58*, i8)*)(%struct.mbedtls_ssl_config.58* %18, i8 zeroext %439), !dbg !10822
  store i32 %440, i32* %1, align 4, !dbg !10823
  %441 = icmp ne i32 %440, 0, !dbg !10824
  br i1 %441, label %442, label %445, !dbg !10825

442:                                              ; preds = %438
  %443 = load i32, i32* %1, align 4, !dbg !10826
  %444 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.30.110, i64 0, i64 0), i32 %443), !dbg !10828
  br label %1117, !dbg !10829

445:                                              ; preds = %438
  %446 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 28), align 4, !dbg !10830
  %447 = icmp ne i32 %446, -1, !dbg !10832
  br i1 %447, label %448, label %450, !dbg !10833

448:                                              ; preds = %445
  %449 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 28), align 4, !dbg !10834
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_truncated_hmac to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %449), !dbg !10835
  br label %450, !dbg !10835

450:                                              ; preds = %448, %445
  %451 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 36), align 8, !dbg !10836
  %452 = icmp ne i32 %451, -1, !dbg !10838
  br i1 %452, label %453, label %456, !dbg !10839

453:                                              ; preds = %450
  %454 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 36), align 8, !dbg !10840
  %455 = trunc i32 %454 to i8, !dbg !10841
  call void bitcast (void (%struct.mbedtls_ssl_config*, i8)* @mbedtls_ssl_conf_extended_master_secret to void (%struct.mbedtls_ssl_config.58*, i8)*)(%struct.mbedtls_ssl_config.58* %18, i8 signext %455), !dbg !10842
  br label %456, !dbg !10842

456:                                              ; preds = %453, %450
  %457 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 37), align 4, !dbg !10843
  %458 = icmp ne i32 %457, -1, !dbg !10845
  br i1 %458, label %459, label %462, !dbg !10846

459:                                              ; preds = %456
  %460 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 37), align 4, !dbg !10847
  %461 = trunc i32 %460 to i8, !dbg !10848
  call void bitcast (void (%struct.mbedtls_ssl_config*, i8)* @mbedtls_ssl_conf_encrypt_then_mac to void (%struct.mbedtls_ssl_config.58*, i8)*)(%struct.mbedtls_ssl_config.58* %18, i8 signext %461), !dbg !10849
  br label %462, !dbg !10849

462:                                              ; preds = %459, %456
  %463 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 34), align 8, !dbg !10850
  %464 = icmp ne i8* %463, null, !dbg !10852
  br i1 %464, label %465, label %473, !dbg !10853

465:                                              ; preds = %462
  %466 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 0, !dbg !10854
  %467 = call i32 bitcast (i32 (%struct.mbedtls_ssl_config*, i8**)* @mbedtls_ssl_conf_alpn_protocols to i32 (%struct.mbedtls_ssl_config.58*, i8**)*)(%struct.mbedtls_ssl_config.58* %18, i8** %466), !dbg !10856
  store i32 %467, i32* %1, align 4, !dbg !10857
  %468 = icmp ne i32 %467, 0, !dbg !10858
  br i1 %468, label %469, label %472, !dbg !10859

469:                                              ; preds = %465
  %470 = load i32, i32* %1, align 4, !dbg !10860
  %471 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.31.111, i64 0, i64 0), i32 %470), !dbg !10862
  br label %1117, !dbg !10863

472:                                              ; preds = %465
  br label %473, !dbg !10864

473:                                              ; preds = %472, %462
  %474 = bitcast %struct.mbedtls_ctr_drbg_context* %16 to i8*, !dbg !10865
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32 (i8*, i8*, i64)*, i8*)* @mbedtls_ssl_conf_rng to void (%struct.mbedtls_ssl_config.58*, i32 (i8*, i8*, i64)*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, i32 (i8*, i8*, i64)* @mbedtls_ctr_drbg_random, i8* %474), !dbg !10866
  call void bitcast (void (%struct.mbedtls_ssl_config*, void (i8*, i32, i8*, i32, i8*)*, i8*)* @mbedtls_ssl_conf_dbg to void (%struct.mbedtls_ssl_config.58*, void (i8*, i32, i8*, i32, i8*)*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, void (i8*, i32, i8*, i32, i8*)* @my_debug.112, i8* null), !dbg !10867
  %475 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 29), align 8, !dbg !10868
  %476 = icmp eq i32 %475, 1, !dbg !10870
  br i1 %476, label %477, label %487, !dbg !10871

477:                                              ; preds = %473
  %478 = bitcast %struct.mbedtls_ctr_drbg_context* %16 to i8*, !dbg !10872
  %479 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 30), align 4, !dbg !10875
  %480 = call i32 @mbedtls_ssl_ticket_setup(%struct.mbedtls_ssl_ticket_context* %28, i32 (i8*, i8*, i64)* @mbedtls_ctr_drbg_random, i8* %478, i32 16, i32 %479), !dbg !10876
  store i32 %480, i32* %1, align 4, !dbg !10877
  %481 = icmp ne i32 %480, 0, !dbg !10878
  br i1 %481, label %482, label %485, !dbg !10879

482:                                              ; preds = %477
  %483 = load i32, i32* %1, align 4, !dbg !10880
  %484 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.32.113, i64 0, i64 0), i32 %483), !dbg !10882
  br label %1117, !dbg !10883

485:                                              ; preds = %477
  %486 = bitcast %struct.mbedtls_ssl_ticket_context* %28 to i8*, !dbg !10884
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i8*, i64*, i32*)*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i64)*, i8*)* @mbedtls_ssl_conf_session_tickets_cb to void (%struct.mbedtls_ssl_config.58*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i8*, i64*, i32*)*, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i64)*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i8*, i64*, i32*)* @mbedtls_ssl_ticket_write, i32 (i8*, %struct.mbedtls_ssl_session*, i8*, i64)* @mbedtls_ssl_ticket_parse, i8* %486), !dbg !10885
  br label %487, !dbg !10886

487:                                              ; preds = %485, %473
  %488 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !10887
  %489 = icmp eq i32 %488, 1, !dbg !10889
  br i1 %489, label %490, label %520, !dbg !10890

490:                                              ; preds = %487
  %491 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 39), align 4, !dbg !10891
  %492 = icmp sgt i32 %491, 0, !dbg !10894
  br i1 %492, label %493, label %502, !dbg !10895

493:                                              ; preds = %490
  %494 = bitcast %struct.mbedtls_ctr_drbg_context* %16 to i8*, !dbg !10896
  %495 = call i32 @mbedtls_ssl_cookie_setup(%struct.mbedtls_ssl_cookie_ctx* %14, i32 (i8*, i8*, i64)* @mbedtls_ctr_drbg_random, i8* %494), !dbg !10899
  store i32 %495, i32* %1, align 4, !dbg !10900
  %496 = icmp ne i32 %495, 0, !dbg !10901
  br i1 %496, label %497, label %500, !dbg !10902

497:                                              ; preds = %493
  %498 = load i32, i32* %1, align 4, !dbg !10903
  %499 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.33.114, i64 0, i64 0), i32 %498), !dbg !10905
  br label %1117, !dbg !10906

500:                                              ; preds = %493
  %501 = bitcast %struct.mbedtls_ssl_cookie_ctx* %14 to i8*, !dbg !10907
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)*, i8*)* @mbedtls_ssl_conf_dtls_cookies to void (%struct.mbedtls_ssl_config.58*, i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, i32 (i8*, i8**, i8*, i8*, i64)* @mbedtls_ssl_cookie_write, i32 (i8*, i8*, i64, i8*, i64)* @mbedtls_ssl_cookie_check, i8* %501), !dbg !10908
  br label %508, !dbg !10909

502:                                              ; preds = %490
  %503 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 39), align 4, !dbg !10910
  %504 = icmp eq i32 %503, 0, !dbg !10912
  br i1 %504, label %505, label %506, !dbg !10913

505:                                              ; preds = %502
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)*, i8*)* @mbedtls_ssl_conf_dtls_cookies to void (%struct.mbedtls_ssl_config.58*, i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, i32 (i8*, i8**, i8*, i8*, i64)* null, i32 (i8*, i8*, i64, i8*, i64)* null, i8* null), !dbg !10914
  br label %507, !dbg !10916

506:                                              ; preds = %502
  br label %507

507:                                              ; preds = %506, %505
  br label %508

508:                                              ; preds = %507, %500
  %509 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 40), align 8, !dbg !10917
  %510 = icmp ne i32 %509, -1, !dbg !10919
  br i1 %510, label %511, label %514, !dbg !10920

511:                                              ; preds = %508
  %512 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 40), align 8, !dbg !10921
  %513 = trunc i32 %512 to i8, !dbg !10922
  call void bitcast (void (%struct.mbedtls_ssl_config*, i8)* @mbedtls_ssl_conf_dtls_anti_replay to void (%struct.mbedtls_ssl_config.58*, i8)*)(%struct.mbedtls_ssl_config.58* %18, i8 signext %513), !dbg !10923
  br label %514, !dbg !10923

514:                                              ; preds = %511, %508
  %515 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 43), align 4, !dbg !10924
  %516 = icmp ne i32 %515, -1, !dbg !10926
  br i1 %516, label %517, label %519, !dbg !10927

517:                                              ; preds = %514
  %518 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 43), align 4, !dbg !10928
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_dtls_badmac_limit to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %518), !dbg !10929
  br label %519, !dbg !10929

519:                                              ; preds = %517, %514
  br label %520, !dbg !10930

520:                                              ; preds = %519, %487
  %521 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 15, i64 0), align 8, !dbg !10931
  %522 = icmp ne i32 %521, 0, !dbg !10933
  br i1 %522, label %523, label %524, !dbg !10934

523:                                              ; preds = %520
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32*)* @mbedtls_ssl_conf_ciphersuites to void (%struct.mbedtls_ssl_config.58*, i32*)*)(%struct.mbedtls_ssl_config.58* %18, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 15, i64 0)), !dbg !10935
  br label %524, !dbg !10935

524:                                              ; preds = %523, %520
  %525 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 25), align 8, !dbg !10936
  %526 = icmp ne i32 %525, -1, !dbg !10938
  br i1 %526, label %527, label %530, !dbg !10939

527:                                              ; preds = %524
  %528 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 25), align 8, !dbg !10940
  %529 = trunc i32 %528 to i8, !dbg !10941
  call void bitcast (void (%struct.mbedtls_ssl_config*, i8)* @mbedtls_ssl_conf_arc4_support to void (%struct.mbedtls_ssl_config.58*, i8)*)(%struct.mbedtls_ssl_config.58* %18, i8 signext %529), !dbg !10942
  br label %530, !dbg !10942

530:                                              ; preds = %527, %524
  %531 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 16), align 8, !dbg !10943
  %532 = icmp ne i8* %531, null, !dbg !10945
  br i1 %532, label %533, label %542, !dbg !10946

533:                                              ; preds = %530
  %534 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 0, !dbg !10947
  %535 = getelementptr inbounds [2 x i32], [2 x i32]* %534, i64 0, i64 0, !dbg !10947
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32*, i32, i32)* @mbedtls_ssl_conf_ciphersuites_for_version to void (%struct.mbedtls_ssl_config.58*, i32*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32* %535, i32 3, i32 0), !dbg !10949
  %536 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 1, !dbg !10950
  %537 = getelementptr inbounds [2 x i32], [2 x i32]* %536, i64 0, i64 0, !dbg !10950
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32*, i32, i32)* @mbedtls_ssl_conf_ciphersuites_for_version to void (%struct.mbedtls_ssl_config.58*, i32*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32* %537, i32 3, i32 1), !dbg !10951
  %538 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 2, !dbg !10952
  %539 = getelementptr inbounds [2 x i32], [2 x i32]* %538, i64 0, i64 0, !dbg !10952
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32*, i32, i32)* @mbedtls_ssl_conf_ciphersuites_for_version to void (%struct.mbedtls_ssl_config.58*, i32*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32* %539, i32 3, i32 2), !dbg !10953
  %540 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %6, i64 0, i64 3, !dbg !10954
  %541 = getelementptr inbounds [2 x i32], [2 x i32]* %540, i64 0, i64 0, !dbg !10954
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32*, i32, i32)* @mbedtls_ssl_conf_ciphersuites_for_version to void (%struct.mbedtls_ssl_config.58*, i32*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32* %541, i32 3, i32 3), !dbg !10955
  br label %542, !dbg !10956

542:                                              ; preds = %533, %530
  %543 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 18), align 4, !dbg !10957
  %544 = icmp ne i32 %543, -2, !dbg !10959
  br i1 %544, label %545, label %547, !dbg !10960

545:                                              ; preds = %542
  %546 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 18), align 4, !dbg !10961
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_legacy_renegotiation to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %546), !dbg !10962
  br label %547, !dbg !10962

547:                                              ; preds = %545, %542
  %548 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 17), align 8, !dbg !10963
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_renegotiation to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %548), !dbg !10964
  %549 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 20), align 4, !dbg !10965
  %550 = icmp ne i32 %549, -2, !dbg !10967
  br i1 %550, label %551, label %553, !dbg !10968

551:                                              ; preds = %547
  %552 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 20), align 4, !dbg !10969
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_renegotiation_enforced to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %552), !dbg !10970
  br label %553, !dbg !10970

553:                                              ; preds = %551, %547
  %554 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 21), align 8, !dbg !10971
  %555 = icmp ne i32 %554, -1, !dbg !10973
  br i1 %555, label %556, label %561, !dbg !10974

556:                                              ; preds = %553
  %557 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 21), align 8, !dbg !10975
  %558 = trunc i32 %557 to i8, !dbg !10977
  %559 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 7, !dbg !10978
  store i8 %558, i8* %559, align 1, !dbg !10979
  %560 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 0, !dbg !10980
  call void bitcast (void (%struct.mbedtls_ssl_config*, i8*)* @mbedtls_ssl_conf_renegotiation_period to void (%struct.mbedtls_ssl_config.58*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, i8* %560), !dbg !10981
  br label %561, !dbg !10982

561:                                              ; preds = %556, %553
  %562 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 6), align 8, !dbg !10983
  %563 = call i32 @strcmp(i8* %562, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.98, i64 0, i64 0)), !dbg !10985
  %564 = icmp ne i32 %563, 0, !dbg !10986
  br i1 %564, label %565, label %570, !dbg !10987

565:                                              ; preds = %561
  %566 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 5), align 8, !dbg !10988
  %567 = call i32 @strcmp(i8* %566, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.98, i64 0, i64 0)), !dbg !10989
  %568 = icmp ne i32 %567, 0, !dbg !10990
  br i1 %568, label %569, label %570, !dbg !10991

569:                                              ; preds = %565
  call void bitcast (void (%struct.mbedtls_ssl_config*, %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crl*)* @mbedtls_ssl_conf_ca_chain to void (%struct.mbedtls_ssl_config.58*, %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crl*)*)(%struct.mbedtls_ssl_config.58* %18, %struct.mbedtls_x509_crt* %21, %struct.mbedtls_x509_crl* null), !dbg !10992
  br label %570, !dbg !10994

570:                                              ; preds = %569, %565, %561
  %571 = load i32, i32* %26, align 4, !dbg !10995
  %572 = icmp ne i32 %571, 0, !dbg !10995
  br i1 %572, label %573, label %580, !dbg !10997

573:                                              ; preds = %570
  %574 = call i32 bitcast (i32 (%struct.mbedtls_ssl_config*, %struct.mbedtls_x509_crt*, %struct.mbedtls_pk_context*)* @mbedtls_ssl_conf_own_cert to i32 (%struct.mbedtls_ssl_config.58*, %struct.mbedtls_x509_crt*, %struct.mbedtls_pk_context*)*)(%struct.mbedtls_ssl_config.58* %18, %struct.mbedtls_x509_crt* %22, %struct.mbedtls_pk_context* %23), !dbg !10998
  store i32 %574, i32* %1, align 4, !dbg !11000
  %575 = icmp ne i32 %574, 0, !dbg !11001
  br i1 %575, label %576, label %579, !dbg !11002

576:                                              ; preds = %573
  %577 = load i32, i32* %1, align 4, !dbg !11003
  %578 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.34.115, i64 0, i64 0), i32 %577), !dbg !11005
  br label %1117, !dbg !11006

579:                                              ; preds = %573
  br label %580, !dbg !11007

580:                                              ; preds = %579, %570
  %581 = load i32, i32* %27, align 4, !dbg !11008
  %582 = icmp ne i32 %581, 0, !dbg !11008
  br i1 %582, label %583, label %590, !dbg !11010

583:                                              ; preds = %580
  %584 = call i32 bitcast (i32 (%struct.mbedtls_ssl_config*, %struct.mbedtls_x509_crt*, %struct.mbedtls_pk_context*)* @mbedtls_ssl_conf_own_cert to i32 (%struct.mbedtls_ssl_config.58*, %struct.mbedtls_x509_crt*, %struct.mbedtls_pk_context*)*)(%struct.mbedtls_ssl_config.58* %18, %struct.mbedtls_x509_crt* %24, %struct.mbedtls_pk_context* %25), !dbg !11011
  store i32 %584, i32* %1, align 4, !dbg !11013
  %585 = icmp ne i32 %584, 0, !dbg !11014
  br i1 %585, label %586, label %589, !dbg !11015

586:                                              ; preds = %583
  %587 = load i32, i32* %1, align 4, !dbg !11016
  %588 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.34.115, i64 0, i64 0), i32 %587), !dbg !11018
  br label %1117, !dbg !11019

589:                                              ; preds = %583
  br label %590, !dbg !11020

590:                                              ; preds = %589, %580
  %591 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 11), align 8, !dbg !11021
  %592 = call i64 @strlen(i8* %591), !dbg !11023
  %593 = icmp ne i64 %592, 0, !dbg !11024
  br i1 %593, label %594, label %612, !dbg !11025

594:                                              ; preds = %590
  %595 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 12), align 8, !dbg !11026
  %596 = call i64 @strlen(i8* %595), !dbg !11027
  %597 = icmp ne i64 %596, 0, !dbg !11028
  br i1 %597, label %598, label %612, !dbg !11029

598:                                              ; preds = %594
  %599 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !11030
  %600 = load i64, i64* %9, align 8, !dbg !11032
  %601 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 12), align 8, !dbg !11033
  %602 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 12), align 8, !dbg !11034
  %603 = call i64 @strlen(i8* %602), !dbg !11035
  %604 = call i32 bitcast (i32 (%struct.mbedtls_ssl_config*, i8*, i64, i8*, i64)* @mbedtls_ssl_conf_psk to i32 (%struct.mbedtls_ssl_config.58*, i8*, i64, i8*, i64)*)(%struct.mbedtls_ssl_config.58* %18, i8* %599, i64 %600, i8* %601, i64 %603), !dbg !11036
  store i32 %604, i32* %1, align 4, !dbg !11037
  %605 = load i32, i32* %1, align 4, !dbg !11038
  %606 = icmp ne i32 %605, 0, !dbg !11040
  br i1 %606, label %607, label %611, !dbg !11041

607:                                              ; preds = %598
  %608 = load i32, i32* %1, align 4, !dbg !11042
  %609 = sub nsw i32 0, %608, !dbg !11044
  %610 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.35.116, i64 0, i64 0), i32 %609), !dbg !11045
  br label %1117, !dbg !11046

611:                                              ; preds = %598
  br label %612, !dbg !11047

612:                                              ; preds = %611, %594, %590
  %613 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 13), align 8, !dbg !11048
  %614 = icmp ne i8* %613, null, !dbg !11050
  br i1 %614, label %615, label %618, !dbg !11051

615:                                              ; preds = %612
  %616 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !11052
  %617 = bitcast %struct._psk_entry* %616 to i8*, !dbg !11052
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32 (i8*, %struct.mbedtls_ssl_context*, i8*, i64)*, i8*)* @mbedtls_ssl_conf_psk_cb to void (%struct.mbedtls_ssl_config.58*, i32 (i8*, %struct.mbedtls_ssl_context.61*, i8*, i64)*, i8*)*)(%struct.mbedtls_ssl_config.58* %18, i32 (i8*, %struct.mbedtls_ssl_context.61*, i8*, i64)* @psk_callback, i8* %617), !dbg !11053
  br label %618, !dbg !11053

618:                                              ; preds = %615, %612
  %619 = load i32, i32* %1, align 4, !dbg !11054
  %620 = icmp ne i32 %619, 0, !dbg !11056
  br i1 %620, label %621, label %625, !dbg !11057

621:                                              ; preds = %618
  %622 = load i32, i32* %1, align 4, !dbg !11058
  %623 = sub nsw i32 0, %622, !dbg !11060
  %624 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.36.117, i64 0, i64 0), i32 %623), !dbg !11061
  br label %1117, !dbg !11062

625:                                              ; preds = %618
  %626 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !11063
  %627 = icmp ne i32 %626, -1, !dbg !11065
  br i1 %627, label %628, label %630, !dbg !11066

628:                                              ; preds = %625
  %629 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 23), align 8, !dbg !11067
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32, i32)* @mbedtls_ssl_conf_min_version to void (%struct.mbedtls_ssl_config.58*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 3, i32 %629), !dbg !11068
  br label %630, !dbg !11068

630:                                              ; preds = %628, %625
  %631 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !11069
  %632 = icmp ne i32 %631, -1, !dbg !11071
  br i1 %632, label %633, label %635, !dbg !11072

633:                                              ; preds = %630
  %634 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 24), align 4, !dbg !11073
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32, i32)* @mbedtls_ssl_conf_max_version to void (%struct.mbedtls_ssl_config.58*, i32, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 3, i32 %634), !dbg !11074
  br label %635, !dbg !11074

635:                                              ; preds = %633, %630
  %636 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_config*)* @mbedtls_ssl_setup to i32 (%struct.mbedtls_ssl_context.61*, %struct.mbedtls_ssl_config.58*)*)(%struct.mbedtls_ssl_context.61* %17, %struct.mbedtls_ssl_config.58* %18), !dbg !11075
  store i32 %636, i32* %1, align 4, !dbg !11077
  %637 = icmp ne i32 %636, 0, !dbg !11078
  br i1 %637, label %638, label %642, !dbg !11079

638:                                              ; preds = %635
  %639 = load i32, i32* %1, align 4, !dbg !11080
  %640 = sub nsw i32 0, %639, !dbg !11082
  %641 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37.118, i64 0, i64 0), i32 %640), !dbg !11083
  br label %1117, !dbg !11084

642:                                              ; preds = %635
  %643 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 3), align 4, !dbg !11085
  %644 = icmp eq i32 %643, 2, !dbg !11087
  br i1 %644, label %645, label %646, !dbg !11088

645:                                              ; preds = %642
  call void bitcast (void (%struct.mbedtls_ssl_context*, i8*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64, i32)*)* @mbedtls_ssl_set_bio to void (%struct.mbedtls_ssl_context.61*, i8*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64, i32)*)*)(%struct.mbedtls_ssl_context.61* %17, i8* bitcast (%struct.mbedtls_net_context* @client_fd to i8*), i32 (i8*, i8*, i64)* @my_send.119, i32 (i8*, i8*, i64)* @my_recv.120, i32 (i8*, i8*, i64, i32)* null), !dbg !11089
  br label %651, !dbg !11089

646:                                              ; preds = %642
  %647 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 3), align 4, !dbg !11090
  %648 = icmp eq i32 %647, 0, !dbg !11091
  %649 = zext i1 %648 to i64, !dbg !11092
  %650 = select i1 %648, i32 (i8*, i8*, i64, i32)* @mbedtls_net_recv_timeout_ocall, i32 (i8*, i8*, i64, i32)* null, !dbg !11092
  call void bitcast (void (%struct.mbedtls_ssl_context*, i8*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64, i32)*)* @mbedtls_ssl_set_bio to void (%struct.mbedtls_ssl_context.61*, i8*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64, i32)*)*)(%struct.mbedtls_ssl_context.61* %17, i8* bitcast (%struct.mbedtls_net_context* @client_fd to i8*), i32 (i8*, i8*, i64)* @mbedtls_net_send_ocall, i32 (i8*, i8*, i64)* @mbedtls_net_recv_ocall, i32 (i8*, i8*, i64, i32)* %650), !dbg !11093
  br label %651

651:                                              ; preds = %646, %645
  %652 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !11094
  br label %653, !dbg !11094

653:                                              ; preds = %1084, %1059, %1030, %1022, %989, %959, %901, %876, %840, %838, %755, %737, %651
  call void @llvm.dbg.label(metadata !11095), !dbg !11096
  %654 = load i32, i32* @received_sigterm, align 4, !dbg !11097
  %655 = icmp ne i32 %654, 0, !dbg !11097
  br i1 %655, label %656, label %658, !dbg !11099

656:                                              ; preds = %653
  %657 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38.121, i64 0, i64 0)), !dbg !11100
  store i32 0, i32* %1, align 4, !dbg !11102
  br label %1117, !dbg !11103

658:                                              ; preds = %653
  %659 = load i32, i32* %1, align 4, !dbg !11104
  %660 = icmp eq i32 %659, -26496, !dbg !11106
  br i1 %660, label %661, label %663, !dbg !11107

661:                                              ; preds = %658
  %662 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.39.122, i64 0, i64 0)), !dbg !11108
  br label %722, !dbg !11110

663:                                              ; preds = %658
  %664 = load i32, i32* %1, align 4, !dbg !11111
  %665 = icmp ne i32 %664, 0, !dbg !11113
  br i1 %665, label %666, label %672, !dbg !11114

666:                                              ; preds = %663
  call void @llvm.dbg.declare(metadata [100 x i8]* %35, metadata !11115, metadata !DIExpression()), !dbg !11117
  %667 = load i32, i32* %1, align 4, !dbg !11118
  %668 = getelementptr inbounds [100 x i8], [100 x i8]* %35, i64 0, i64 0, !dbg !11119
  call void @mbedtls_strerror(i32 %667, i8* %668, i64 100), !dbg !11120
  %669 = load i32, i32* %1, align 4, !dbg !11121
  %670 = getelementptr inbounds [100 x i8], [100 x i8]* %35, i64 0, i64 0, !dbg !11122
  %671 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40.123, i64 0, i64 0), i32 %669, i8* %670), !dbg !11123
  br label %672, !dbg !11124

672:                                              ; preds = %666, %663
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* @client_fd), !dbg !11125
  %673 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_session_reset to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11126
  %674 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41.124, i64 0, i64 0)), !dbg !11127
  %675 = getelementptr inbounds [16 x i8], [16 x i8]* %12, i64 0, i64 0, !dbg !11128
  %676 = call i32 @mbedtls_net_accept_ocall(%struct.mbedtls_net_context* @listen_fd, %struct.mbedtls_net_context* @client_fd, i8* %675, i64 16, i64* %13), !dbg !11130
  store i32 %676, i32* %1, align 4, !dbg !11131
  %677 = icmp ne i32 %676, 0, !dbg !11132
  br i1 %677, label %678, label %692, !dbg !11133

678:                                              ; preds = %672
  %679 = load i64, i64* %13, align 8, !dbg !11134
  %680 = icmp ugt i64 %679, 16, !dbg !11137
  br i1 %680, label %681, label %683, !dbg !11138

681:                                              ; preds = %678
  %682 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.42.125, i64 0, i64 0)), !dbg !11139
  store i32 0, i32* %1, align 4, !dbg !11141
  br label %1117, !dbg !11142

683:                                              ; preds = %678
  %684 = load i32, i32* @received_sigterm, align 4, !dbg !11143
  %685 = icmp ne i32 %684, 0, !dbg !11143
  br i1 %685, label %686, label %688, !dbg !11145

686:                                              ; preds = %683
  %687 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43.126, i64 0, i64 0)), !dbg !11146
  store i32 0, i32* %1, align 4, !dbg !11148
  br label %1117, !dbg !11149

688:                                              ; preds = %683
  %689 = load i32, i32* %1, align 4, !dbg !11150
  %690 = sub nsw i32 0, %689, !dbg !11151
  %691 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44.127, i64 0, i64 0), i32 %690), !dbg !11152
  br label %1117, !dbg !11153

692:                                              ; preds = %672
  %693 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 3), align 4, !dbg !11154
  %694 = icmp sgt i32 %693, 0, !dbg !11156
  br i1 %694, label %695, label %697, !dbg !11157

695:                                              ; preds = %692
  %696 = call i32 @mbedtls_net_set_nonblock_ocall(%struct.mbedtls_net_context* @client_fd), !dbg !11158
  store i32 %696, i32* %1, align 4, !dbg !11159
  br label %699, !dbg !11160

697:                                              ; preds = %692
  %698 = call i32 @mbedtls_net_set_block_ocall(%struct.mbedtls_net_context* @client_fd), !dbg !11161
  store i32 %698, i32* %1, align 4, !dbg !11162
  br label %699

699:                                              ; preds = %697, %695
  %700 = load i32, i32* %1, align 4, !dbg !11163
  %701 = icmp ne i32 %700, 0, !dbg !11165
  br i1 %701, label %702, label %706, !dbg !11166

702:                                              ; preds = %699
  %703 = load i32, i32* %1, align 4, !dbg !11167
  %704 = sub nsw i32 0, %703, !dbg !11169
  %705 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.45.128, i64 0, i64 0), i32 %704), !dbg !11170
  br label %1117, !dbg !11171

706:                                              ; preds = %699
  %707 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 4), align 8, !dbg !11172
  call void bitcast (void (%struct.mbedtls_ssl_config*, i32)* @mbedtls_ssl_conf_read_timeout to void (%struct.mbedtls_ssl_config.58*, i32)*)(%struct.mbedtls_ssl_config.58* %18, i32 %707), !dbg !11173
  %708 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !11174
  %709 = icmp eq i32 %708, 1, !dbg !11176
  br i1 %709, label %710, label %720, !dbg !11177

710:                                              ; preds = %706
  %711 = getelementptr inbounds [16 x i8], [16 x i8]* %12, i64 0, i64 0, !dbg !11178
  %712 = load i64, i64* %13, align 8, !dbg !11181
  %713 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_set_client_transport_id to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %17, i8* %711, i64 %712), !dbg !11182
  store i32 %713, i32* %1, align 4, !dbg !11183
  %714 = icmp ne i32 %713, 0, !dbg !11184
  br i1 %714, label %715, label %719, !dbg !11185

715:                                              ; preds = %710
  %716 = load i32, i32* %1, align 4, !dbg !11186
  %717 = sub nsw i32 0, %716, !dbg !11188
  %718 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.46.129, i64 0, i64 0), i32 %717), !dbg !11189
  br label %1117, !dbg !11190

719:                                              ; preds = %710
  br label %720, !dbg !11191

720:                                              ; preds = %719, %706
  %721 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !11192
  br label %722, !dbg !11192

722:                                              ; preds = %720, %661
  call void @llvm.dbg.label(metadata !11193), !dbg !11194
  %723 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47.130, i64 0, i64 0)), !dbg !11195
  br label %724, !dbg !11196

724:                                              ; preds = %732, %722
  %725 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_handshake to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11197
  store i32 %725, i32* %1, align 4, !dbg !11198
  br label %726, !dbg !11199

726:                                              ; preds = %724
  %727 = load i32, i32* %1, align 4, !dbg !11200
  %728 = icmp eq i32 %727, -26880, !dbg !11201
  br i1 %728, label %732, label %729, !dbg !11202

729:                                              ; preds = %726
  %730 = load i32, i32* %1, align 4, !dbg !11203
  %731 = icmp eq i32 %730, -26752, !dbg !11204
  br label %732, !dbg !11202

732:                                              ; preds = %729, %726
  %733 = phi i1 [ true, %726 ], [ %731, %729 ]
  br i1 %733, label %724, label %734, !dbg !11199, !llvm.loop !11205

734:                                              ; preds = %732
  %735 = load i32, i32* %1, align 4, !dbg !11207
  %736 = icmp eq i32 %735, -27264, !dbg !11209
  br i1 %736, label %737, label %739, !dbg !11210

737:                                              ; preds = %734
  %738 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48.131, i64 0, i64 0)), !dbg !11211
  store i32 0, i32* %1, align 4, !dbg !11213
  br label %653, !dbg !11214

739:                                              ; preds = %734
  %740 = load i32, i32* %1, align 4, !dbg !11215
  %741 = icmp ne i32 %740, 0, !dbg !11217
  br i1 %741, label %742, label %756, !dbg !11218

742:                                              ; preds = %739
  %743 = load i32, i32* %1, align 4, !dbg !11219
  %744 = sub nsw i32 0, %743, !dbg !11221
  %745 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.49.132, i64 0, i64 0), i32 %744), !dbg !11222
  %746 = load i32, i32* %1, align 4, !dbg !11223
  %747 = icmp eq i32 %746, -9984, !dbg !11225
  br i1 %747, label %748, label %755, !dbg !11226

748:                                              ; preds = %742
  call void @llvm.dbg.declare(metadata [512 x i8]* %36, metadata !11227, metadata !DIExpression()), !dbg !11229
  %749 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_verify_result to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11230
  store i32 %749, i32* %20, align 4, !dbg !11231
  %750 = getelementptr inbounds [512 x i8], [512 x i8]* %36, i64 0, i64 0, !dbg !11232
  %751 = load i32, i32* %20, align 4, !dbg !11233
  %752 = call i32 @mbedtls_x509_crt_verify_info(i8* %750, i64 512, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50.133, i64 0, i64 0), i32 %751), !dbg !11234
  %753 = getelementptr inbounds [512 x i8], [512 x i8]* %36, i64 0, i64 0, !dbg !11235
  %754 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51.134, i64 0, i64 0), i8* %753), !dbg !11236
  br label %755, !dbg !11237

755:                                              ; preds = %748, %742
  br label %653, !dbg !11238

756:                                              ; preds = %739
  %757 = call i8* bitcast (i8* (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_version to i8* (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11239
  %758 = call i8* bitcast (i8* (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_ciphersuite to i8* (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11241
  %759 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.52.135, i64 0, i64 0), i8* %757, i8* %758), !dbg !11242
  br label %760

760:                                              ; preds = %756
  br label %761

761:                                              ; preds = %760
  %762 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_record_expansion to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11243
  store i32 %762, i32* %1, align 4, !dbg !11245
  %763 = icmp sge i32 %762, 0, !dbg !11246
  br i1 %763, label %764, label %767, !dbg !11247

764:                                              ; preds = %761
  %765 = load i32, i32* %1, align 4, !dbg !11248
  %766 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53.136, i64 0, i64 0), i32 %765), !dbg !11249
  br label %769, !dbg !11249

767:                                              ; preds = %761
  %768 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.54.137, i64 0, i64 0)), !dbg !11250
  br label %769

769:                                              ; preds = %767, %764
  %770 = call i64 bitcast (i64 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_max_frag_len to i64 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11251
  %771 = trunc i64 %770 to i32, !dbg !11252
  %772 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55.138, i64 0, i64 0), i32 %771), !dbg !11253
  %773 = load i8*, i8** getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 34), align 8, !dbg !11254
  %774 = icmp ne i8* %773, null, !dbg !11256
  br i1 %774, label %775, label %785, !dbg !11257

775:                                              ; preds = %769
  call void @llvm.dbg.declare(metadata i8** %37, metadata !11258, metadata !DIExpression()), !dbg !11260
  %776 = call i8* bitcast (i8* (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_alpn_protocol to i8* (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11261
  store i8* %776, i8** %37, align 8, !dbg !11260
  %777 = load i8*, i8** %37, align 8, !dbg !11262
  %778 = icmp ne i8* %777, null, !dbg !11262
  br i1 %778, label %779, label %781, !dbg !11262

779:                                              ; preds = %775
  %780 = load i8*, i8** %37, align 8, !dbg !11263
  br label %782, !dbg !11262

781:                                              ; preds = %775
  br label %782, !dbg !11262

782:                                              ; preds = %781, %779
  %783 = phi i8* [ %780, %779 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57.139, i64 0, i64 0), %781 ], !dbg !11262
  %784 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.56.140, i64 0, i64 0), i8* %783), !dbg !11264
  br label %785, !dbg !11265

785:                                              ; preds = %782, %769
  %786 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.58.141, i64 0, i64 0)), !dbg !11266
  %787 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_verify_result to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11267
  store i32 %787, i32* %20, align 4, !dbg !11269
  %788 = icmp ne i32 %787, 0, !dbg !11270
  br i1 %788, label %789, label %796, !dbg !11271

789:                                              ; preds = %785
  call void @llvm.dbg.declare(metadata [512 x i8]* %38, metadata !11272, metadata !DIExpression()), !dbg !11274
  %790 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59.142, i64 0, i64 0)), !dbg !11275
  %791 = getelementptr inbounds [512 x i8], [512 x i8]* %38, i64 0, i64 0, !dbg !11276
  %792 = load i32, i32* %20, align 4, !dbg !11277
  %793 = call i32 @mbedtls_x509_crt_verify_info(i8* %791, i64 512, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50.133, i64 0, i64 0), i32 %792), !dbg !11278
  %794 = getelementptr inbounds [512 x i8], [512 x i8]* %38, i64 0, i64 0, !dbg !11279
  %795 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51.134, i64 0, i64 0), i8* %794), !dbg !11280
  br label %798, !dbg !11281

796:                                              ; preds = %785
  %797 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !11282
  br label %798

798:                                              ; preds = %796, %789
  %799 = call %struct.mbedtls_x509_crt* bitcast (%struct.mbedtls_x509_crt* (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_peer_cert to %struct.mbedtls_x509_crt* (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11283
  %800 = icmp ne %struct.mbedtls_x509_crt* %799, null, !dbg !11285
  br i1 %800, label %801, label %808, !dbg !11286

801:                                              ; preds = %798
  call void @llvm.dbg.declare(metadata [512 x i8]* %39, metadata !11287, metadata !DIExpression()), !dbg !11289
  %802 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60.143, i64 0, i64 0)), !dbg !11290
  %803 = getelementptr inbounds [512 x i8], [512 x i8]* %39, i64 0, i64 0, !dbg !11291
  %804 = call %struct.mbedtls_x509_crt* bitcast (%struct.mbedtls_x509_crt* (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_peer_cert to %struct.mbedtls_x509_crt* (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11292
  %805 = call i32 @mbedtls_x509_crt_info(i8* %803, i64 512, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61.144, i64 0, i64 0), %struct.mbedtls_x509_crt* %804), !dbg !11293
  %806 = getelementptr inbounds [512 x i8], [512 x i8]* %39, i64 0, i64 0, !dbg !11294
  %807 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51.134, i64 0, i64 0), i8* %806), !dbg !11295
  br label %808, !dbg !11296

808:                                              ; preds = %801, %798
  %809 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 22), align 4, !dbg !11297
  %810 = icmp eq i32 %809, 0, !dbg !11299
  br i1 %810, label %811, label %812, !dbg !11300

811:                                              ; preds = %808
  br label %1077, !dbg !11301

812:                                              ; preds = %808
  %813 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 22), align 4, !dbg !11302
  store i32 %813, i32* %5, align 4, !dbg !11303
  br label %814, !dbg !11304

814:                                              ; preds = %1075, %812
  call void @llvm.dbg.label(metadata !11305), !dbg !11306
  %815 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.62.145, i64 0, i64 0)), !dbg !11307
  %816 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !11308
  %817 = icmp eq i32 %816, 0, !dbg !11310
  br i1 %817, label %818, label %937, !dbg !11311

818:                                              ; preds = %814
  br label %819, !dbg !11312

819:                                              ; preds = %935, %818
  call void @llvm.dbg.declare(metadata i32* %40, metadata !11314, metadata !DIExpression()), !dbg !11316
  store i32 0, i32* %40, align 4, !dbg !11316
  store i32 199, i32* %2, align 4, !dbg !11317
  %820 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11318
  call void @llvm.memset.p0i8.i64(i8* align 16 %820, i8 0, i64 200, i1 false), !dbg !11318
  %821 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11319
  %822 = load i32, i32* %2, align 4, !dbg !11320
  %823 = sext i32 %822 to i64, !dbg !11320
  %824 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_read to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %17, i8* %821, i64 %823), !dbg !11321
  store i32 %824, i32* %1, align 4, !dbg !11322
  %825 = load i32, i32* %1, align 4, !dbg !11323
  %826 = icmp eq i32 %825, -26880, !dbg !11325
  br i1 %826, label %830, label %827, !dbg !11326

827:                                              ; preds = %819
  %828 = load i32, i32* %1, align 4, !dbg !11327
  %829 = icmp eq i32 %828, -26752, !dbg !11328
  br i1 %829, label %830, label %831, !dbg !11329

830:                                              ; preds = %827, %819
  br label %935, !dbg !11330

831:                                              ; preds = %827
  %832 = load i32, i32* %1, align 4, !dbg !11331
  %833 = icmp sle i32 %832, 0, !dbg !11333
  br i1 %833, label %834, label %844, !dbg !11334

834:                                              ; preds = %831
  %835 = load i32, i32* %1, align 4, !dbg !11335
  switch i32 %835, label %840 [
    i32 -30848, label %836
    i32 0, label %838
    i32 -80, label %838
  ], !dbg !11337

836:                                              ; preds = %834
  %837 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63.146, i64 0, i64 0)), !dbg !11338
  br label %1077, !dbg !11340

838:                                              ; preds = %834, %834
  %839 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64.147, i64 0, i64 0)), !dbg !11341
  store i32 -80, i32* %1, align 4, !dbg !11342
  br label %653, !dbg !11343

840:                                              ; preds = %834
  %841 = load i32, i32* %1, align 4, !dbg !11344
  %842 = sub nsw i32 0, %841, !dbg !11345
  %843 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65.148, i64 0, i64 0), i32 %842), !dbg !11346
  br label %653, !dbg !11347

844:                                              ; preds = %831
  %845 = call i64 bitcast (i64 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_bytes_avail to i64 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11348
  %846 = icmp eq i64 %845, 0, !dbg !11350
  br i1 %846, label %847, label %864, !dbg !11351

847:                                              ; preds = %844
  %848 = load i32, i32* %1, align 4, !dbg !11352
  store i32 %848, i32* %2, align 4, !dbg !11354
  %849 = load i32, i32* %2, align 4, !dbg !11355
  %850 = sext i32 %849 to i64, !dbg !11356
  %851 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %850, !dbg !11356
  store i8 0, i8* %851, align 1, !dbg !11357
  %852 = load i32, i32* %2, align 4, !dbg !11358
  %853 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11359
  %854 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.149, i64 0, i64 0), i32 %852, i8* %853), !dbg !11360
  %855 = load i32, i32* %2, align 4, !dbg !11361
  %856 = sub nsw i32 %855, 1, !dbg !11363
  %857 = sext i32 %856 to i64, !dbg !11364
  %858 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %857, !dbg !11364
  %859 = load i8, i8* %858, align 1, !dbg !11364
  %860 = zext i8 %859 to i32, !dbg !11364
  %861 = icmp eq i32 %860, 10, !dbg !11365
  br i1 %861, label %862, label %863, !dbg !11366

862:                                              ; preds = %847
  store i32 1, i32* %40, align 4, !dbg !11367
  br label %863, !dbg !11368

863:                                              ; preds = %862, %847
  br label %930, !dbg !11369

864:                                              ; preds = %844
  call void @llvm.dbg.declare(metadata i32* %41, metadata !11370, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.declare(metadata i32* %42, metadata !11373, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.declare(metadata i8** %43, metadata !11375, metadata !DIExpression()), !dbg !11376
  %865 = load i32, i32* %1, align 4, !dbg !11377
  store i32 %865, i32* %42, align 4, !dbg !11378
  %866 = call i64 bitcast (i64 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_bytes_avail to i64 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11379
  %867 = trunc i64 %866 to i32, !dbg !11380
  store i32 %867, i32* %41, align 4, !dbg !11381
  %868 = load i32, i32* %42, align 4, !dbg !11382
  %869 = load i32, i32* %41, align 4, !dbg !11383
  %870 = add nsw i32 %868, %869, !dbg !11384
  %871 = add nsw i32 %870, 1, !dbg !11385
  %872 = sext i32 %871 to i64, !dbg !11382
  %873 = call align 16 i8* @calloc(i64 1, i64 %872), !dbg !11386
  store i8* %873, i8** %43, align 8, !dbg !11387
  %874 = load i8*, i8** %43, align 8, !dbg !11388
  %875 = icmp eq i8* %874, null, !dbg !11390
  br i1 %875, label %876, label %878, !dbg !11391

876:                                              ; preds = %864
  %877 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.67.150, i64 0, i64 0)), !dbg !11392
  store i32 1, i32* %1, align 4, !dbg !11394
  br label %653, !dbg !11395

878:                                              ; preds = %864
  %879 = load i8*, i8** %43, align 8, !dbg !11396
  %880 = load i32, i32* %42, align 4, !dbg !11397
  %881 = load i32, i32* %41, align 4, !dbg !11398
  %882 = add nsw i32 %880, %881, !dbg !11399
  %883 = sext i32 %882 to i64, !dbg !11397
  call void @llvm.memset.p0i8.i64(i8* align 1 %879, i8 0, i64 %883, i1 false), !dbg !11400
  %884 = load i8*, i8** %43, align 8, !dbg !11401
  %885 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11402
  %886 = load i32, i32* %42, align 4, !dbg !11403
  %887 = sext i32 %886 to i64, !dbg !11403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %884, i8* align 16 %885, i64 %887, i1 false), !dbg !11402
  %888 = load i8*, i8** %43, align 8, !dbg !11404
  %889 = load i32, i32* %42, align 4, !dbg !11405
  %890 = sext i32 %889 to i64, !dbg !11406
  %891 = getelementptr inbounds i8, i8* %888, i64 %890, !dbg !11406
  %892 = load i32, i32* %41, align 4, !dbg !11407
  %893 = sext i32 %892 to i64, !dbg !11407
  %894 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_read to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %17, i8* %891, i64 %893), !dbg !11408
  store i32 %894, i32* %1, align 4, !dbg !11409
  %895 = load i32, i32* %1, align 4, !dbg !11410
  %896 = load i32, i32* %41, align 4, !dbg !11412
  %897 = icmp ne i32 %895, %896, !dbg !11413
  br i1 %897, label %901, label %898, !dbg !11414

898:                                              ; preds = %878
  %899 = call i64 bitcast (i64 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_bytes_avail to i64 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11415
  %900 = icmp ne i64 %899, 0, !dbg !11416
  br i1 %900, label %901, label %903, !dbg !11417

901:                                              ; preds = %898, %878
  %902 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68.151, i64 0, i64 0)), !dbg !11418
  store i32 1, i32* %1, align 4, !dbg !11420
  br label %653, !dbg !11421

903:                                              ; preds = %898
  %904 = load i8*, i8** %43, align 8, !dbg !11422
  %905 = load i32, i32* %42, align 4, !dbg !11423
  %906 = load i32, i32* %41, align 4, !dbg !11424
  %907 = add nsw i32 %905, %906, !dbg !11425
  %908 = sext i32 %907 to i64, !dbg !11422
  %909 = getelementptr inbounds i8, i8* %904, i64 %908, !dbg !11422
  store i8 0, i8* %909, align 1, !dbg !11426
  %910 = load i32, i32* %42, align 4, !dbg !11427
  %911 = load i32, i32* %41, align 4, !dbg !11428
  %912 = add nsw i32 %910, %911, !dbg !11429
  %913 = load i32, i32* %42, align 4, !dbg !11430
  %914 = load i32, i32* %41, align 4, !dbg !11431
  %915 = load i8*, i8** %43, align 8, !dbg !11432
  %916 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.69.152, i64 0, i64 0), i32 %912, i32 %913, i32 %914, i8* %915), !dbg !11433
  %917 = load i8*, i8** %43, align 8, !dbg !11434
  %918 = load i32, i32* %42, align 4, !dbg !11436
  %919 = load i32, i32* %41, align 4, !dbg !11437
  %920 = add nsw i32 %918, %919, !dbg !11438
  %921 = sub nsw i32 %920, 1, !dbg !11439
  %922 = sext i32 %921 to i64, !dbg !11434
  %923 = getelementptr inbounds i8, i8* %917, i64 %922, !dbg !11434
  %924 = load i8, i8* %923, align 1, !dbg !11434
  %925 = zext i8 %924 to i32, !dbg !11434
  %926 = icmp eq i32 %925, 10, !dbg !11440
  br i1 %926, label %927, label %928, !dbg !11441

927:                                              ; preds = %903
  store i32 1, i32* %40, align 4, !dbg !11442
  br label %928, !dbg !11443

928:                                              ; preds = %927, %903
  %929 = load i8*, i8** %43, align 8, !dbg !11444
  call void @free(i8* %929), !dbg !11445
  br label %930

930:                                              ; preds = %928, %863
  %931 = load i32, i32* %40, align 4, !dbg !11446
  %932 = icmp ne i32 %931, 0, !dbg !11446
  br i1 %932, label %933, label %934, !dbg !11448

933:                                              ; preds = %930
  store i32 0, i32* %1, align 4, !dbg !11449
  br label %936, !dbg !11451

934:                                              ; preds = %930
  br label %935, !dbg !11452

935:                                              ; preds = %934, %830
  br i1 true, label %819, label %936, !dbg !11452, !llvm.loop !11453

936:                                              ; preds = %935, %933
  br label %971, !dbg !11455

937:                                              ; preds = %814
  store i32 199, i32* %2, align 4, !dbg !11456
  %938 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11458
  call void @llvm.memset.p0i8.i64(i8* align 16 %938, i8 0, i64 200, i1 false), !dbg !11458
  br label %939, !dbg !11459

939:                                              ; preds = %950, %937
  %940 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11460
  %941 = load i32, i32* %2, align 4, !dbg !11461
  %942 = sext i32 %941 to i64, !dbg !11461
  %943 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_read to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %17, i8* %940, i64 %942), !dbg !11462
  store i32 %943, i32* %1, align 4, !dbg !11463
  br label %944, !dbg !11464

944:                                              ; preds = %939
  %945 = load i32, i32* %1, align 4, !dbg !11465
  %946 = icmp eq i32 %945, -26880, !dbg !11466
  br i1 %946, label %950, label %947, !dbg !11467

947:                                              ; preds = %944
  %948 = load i32, i32* %1, align 4, !dbg !11468
  %949 = icmp eq i32 %948, -26752, !dbg !11469
  br label %950, !dbg !11467

950:                                              ; preds = %947, %944
  %951 = phi i1 [ true, %944 ], [ %949, %947 ]
  br i1 %951, label %939, label %952, !dbg !11464, !llvm.loop !11470

952:                                              ; preds = %950
  %953 = load i32, i32* %1, align 4, !dbg !11472
  %954 = icmp sle i32 %953, 0, !dbg !11474
  br i1 %954, label %955, label %963, !dbg !11475

955:                                              ; preds = %952
  %956 = load i32, i32* %1, align 4, !dbg !11476
  switch i32 %956, label %959 [
    i32 -30848, label %957
  ], !dbg !11478

957:                                              ; preds = %955
  %958 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63.146, i64 0, i64 0)), !dbg !11479
  store i32 0, i32* %1, align 4, !dbg !11481
  br label %1077, !dbg !11482

959:                                              ; preds = %955
  %960 = load i32, i32* %1, align 4, !dbg !11483
  %961 = sub nsw i32 0, %960, !dbg !11484
  %962 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65.148, i64 0, i64 0), i32 %961), !dbg !11485
  br label %653, !dbg !11486

963:                                              ; preds = %952
  %964 = load i32, i32* %1, align 4, !dbg !11487
  store i32 %964, i32* %2, align 4, !dbg !11488
  %965 = load i32, i32* %2, align 4, !dbg !11489
  %966 = sext i32 %965 to i64, !dbg !11490
  %967 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %966, !dbg !11490
  store i8 0, i8* %967, align 1, !dbg !11491
  %968 = load i32, i32* %2, align 4, !dbg !11492
  %969 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11493
  %970 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70.153, i64 0, i64 0), i32 %968, i8* %969), !dbg !11494
  store i32 0, i32* %1, align 4, !dbg !11495
  br label %971

971:                                              ; preds = %963, %936
  %972 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 19), align 8, !dbg !11496
  %973 = icmp ne i32 %972, 0, !dbg !11498
  br i1 %973, label %974, label %995, !dbg !11499

974:                                              ; preds = %971
  %975 = load i32, i32* %5, align 4, !dbg !11500
  %976 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 22), align 4, !dbg !11501
  %977 = icmp eq i32 %975, %976, !dbg !11502
  br i1 %977, label %978, label %995, !dbg !11503

978:                                              ; preds = %974
  %979 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.71.154, i64 0, i64 0)), !dbg !11504
  br label %980, !dbg !11506

980:                                              ; preds = %992, %978
  %981 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_renegotiate to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11507
  store i32 %981, i32* %1, align 4, !dbg !11508
  %982 = icmp ne i32 %981, 0, !dbg !11509
  br i1 %982, label %983, label %993, !dbg !11506

983:                                              ; preds = %980
  %984 = load i32, i32* %1, align 4, !dbg !11510
  %985 = icmp ne i32 %984, -26880, !dbg !11513
  br i1 %985, label %986, label %992, !dbg !11514

986:                                              ; preds = %983
  %987 = load i32, i32* %1, align 4, !dbg !11515
  %988 = icmp ne i32 %987, -26752, !dbg !11516
  br i1 %988, label %989, label %992, !dbg !11517

989:                                              ; preds = %986
  %990 = load i32, i32* %1, align 4, !dbg !11518
  %991 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.72.155, i64 0, i64 0), i32 %990), !dbg !11520
  br label %653, !dbg !11521

992:                                              ; preds = %986, %983
  br label %980, !dbg !11506, !llvm.loop !11522

993:                                              ; preds = %980
  %994 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.93, i64 0, i64 0)), !dbg !11524
  br label %995, !dbg !11525

995:                                              ; preds = %993, %974, %971
  %996 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.73.156, i64 0, i64 0)), !dbg !11526
  %997 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11527
  %998 = call i8* bitcast (i8* (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_get_ciphersuite to i8* (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11528
  %999 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %997, i64 199, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.74.157, i64 0, i64 0), i8* %998), !dbg !11529
  store i32 %999, i32* %2, align 4, !dbg !11530
  %1000 = load i32, i32* getelementptr inbounds (%struct.options.44, %struct.options.44* @opt, i32 0, i32 38), align 8, !dbg !11531
  %1001 = icmp eq i32 %1000, 0, !dbg !11533
  br i1 %1001, label %1002, label %1042, !dbg !11534

1002:                                             ; preds = %995
  store i32 0, i32* %3, align 4, !dbg !11535
  store i32 0, i32* %4, align 4, !dbg !11538
  br label %1003, !dbg !11539

1003:                                             ; preds = %1035, %1002
  %1004 = load i32, i32* %3, align 4, !dbg !11540
  %1005 = load i32, i32* %2, align 4, !dbg !11542
  %1006 = icmp slt i32 %1004, %1005, !dbg !11543
  br i1 %1006, label %1007, label %1041, !dbg !11544

1007:                                             ; preds = %1003
  br label %1008, !dbg !11545

1008:                                             ; preds = %1033, %1007
  %1009 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11547
  %1010 = load i32, i32* %3, align 4, !dbg !11548
  %1011 = sext i32 %1010 to i64, !dbg !11549
  %1012 = getelementptr inbounds i8, i8* %1009, i64 %1011, !dbg !11549
  %1013 = load i32, i32* %2, align 4, !dbg !11550
  %1014 = load i32, i32* %3, align 4, !dbg !11551
  %1015 = sub nsw i32 %1013, %1014, !dbg !11552
  %1016 = sext i32 %1015 to i64, !dbg !11550
  %1017 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_write to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %17, i8* %1012, i64 %1016), !dbg !11553
  store i32 %1017, i32* %1, align 4, !dbg !11554
  %1018 = icmp sle i32 %1017, 0, !dbg !11555
  br i1 %1018, label %1019, label %1034, !dbg !11545

1019:                                             ; preds = %1008
  %1020 = load i32, i32* %1, align 4, !dbg !11556
  %1021 = icmp eq i32 %1020, -80, !dbg !11559
  br i1 %1021, label %1022, label %1024, !dbg !11560

1022:                                             ; preds = %1019
  %1023 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.75.158, i64 0, i64 0)), !dbg !11561
  br label %653, !dbg !11563

1024:                                             ; preds = %1019
  %1025 = load i32, i32* %1, align 4, !dbg !11564
  %1026 = icmp ne i32 %1025, -26880, !dbg !11566
  br i1 %1026, label %1027, label %1033, !dbg !11567

1027:                                             ; preds = %1024
  %1028 = load i32, i32* %1, align 4, !dbg !11568
  %1029 = icmp ne i32 %1028, -26752, !dbg !11569
  br i1 %1029, label %1030, label %1033, !dbg !11570

1030:                                             ; preds = %1027
  %1031 = load i32, i32* %1, align 4, !dbg !11571
  %1032 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.76.159, i64 0, i64 0), i32 %1031), !dbg !11573
  br label %653, !dbg !11574

1033:                                             ; preds = %1027, %1024
  br label %1008, !dbg !11545, !llvm.loop !11575

1034:                                             ; preds = %1008
  br label %1035, !dbg !11577

1035:                                             ; preds = %1034
  %1036 = load i32, i32* %1, align 4, !dbg !11578
  %1037 = load i32, i32* %3, align 4, !dbg !11579
  %1038 = add nsw i32 %1037, %1036, !dbg !11579
  store i32 %1038, i32* %3, align 4, !dbg !11579
  %1039 = load i32, i32* %4, align 4, !dbg !11580
  %1040 = add nsw i32 %1039, 1, !dbg !11580
  store i32 %1040, i32* %4, align 4, !dbg !11580
  br label %1003, !dbg !11581, !llvm.loop !11582

1041:                                             ; preds = %1003
  br label %1064, !dbg !11584

1042:                                             ; preds = %995
  br label %1043, !dbg !11585

1043:                                             ; preds = %1054, %1042
  %1044 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11587
  %1045 = load i32, i32* %2, align 4, !dbg !11588
  %1046 = sext i32 %1045 to i64, !dbg !11588
  %1047 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*, i8*, i64)* @mbedtls_ssl_write to i32 (%struct.mbedtls_ssl_context.61*, i8*, i64)*)(%struct.mbedtls_ssl_context.61* %17, i8* %1044, i64 %1046), !dbg !11589
  store i32 %1047, i32* %1, align 4, !dbg !11590
  br label %1048, !dbg !11591

1048:                                             ; preds = %1043
  %1049 = load i32, i32* %1, align 4, !dbg !11592
  %1050 = icmp eq i32 %1049, -26880, !dbg !11593
  br i1 %1050, label %1054, label %1051, !dbg !11594

1051:                                             ; preds = %1048
  %1052 = load i32, i32* %1, align 4, !dbg !11595
  %1053 = icmp eq i32 %1052, -26752, !dbg !11596
  br label %1054, !dbg !11594

1054:                                             ; preds = %1051, %1048
  %1055 = phi i1 [ true, %1048 ], [ %1053, %1051 ]
  br i1 %1055, label %1043, label %1056, !dbg !11591, !llvm.loop !11597

1056:                                             ; preds = %1054
  %1057 = load i32, i32* %1, align 4, !dbg !11599
  %1058 = icmp slt i32 %1057, 0, !dbg !11601
  br i1 %1058, label %1059, label %1062, !dbg !11602

1059:                                             ; preds = %1056
  %1060 = load i32, i32* %1, align 4, !dbg !11603
  %1061 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.76.159, i64 0, i64 0), i32 %1060), !dbg !11605
  br label %653, !dbg !11606

1062:                                             ; preds = %1056
  store i32 1, i32* %4, align 4, !dbg !11607
  %1063 = load i32, i32* %1, align 4, !dbg !11608
  store i32 %1063, i32* %3, align 4, !dbg !11609
  br label %1064

1064:                                             ; preds = %1062, %1041
  %1065 = load i32, i32* %3, align 4, !dbg !11610
  %1066 = sext i32 %1065 to i64, !dbg !11611
  %1067 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %1066, !dbg !11611
  store i8 0, i8* %1067, align 1, !dbg !11612
  %1068 = load i32, i32* %3, align 4, !dbg !11613
  %1069 = load i32, i32* %4, align 4, !dbg !11614
  %1070 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0, !dbg !11615
  %1071 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.77.160, i64 0, i64 0), i32 %1068, i32 %1069, i8* %1070), !dbg !11616
  store i32 0, i32* %1, align 4, !dbg !11617
  %1072 = load i32, i32* %5, align 4, !dbg !11618
  %1073 = add nsw i32 %1072, -1, !dbg !11618
  store i32 %1073, i32* %5, align 4, !dbg !11618
  %1074 = icmp sgt i32 %1073, 0, !dbg !11620
  br i1 %1074, label %1075, label %1076, !dbg !11621

1075:                                             ; preds = %1064
  br label %814, !dbg !11622

1076:                                             ; preds = %1064
  br label %1077, !dbg !11623

1077:                                             ; preds = %1076, %957, %836, %811
  call void @llvm.dbg.label(metadata !11624), !dbg !11625
  %1078 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.78.161, i64 0, i64 0)), !dbg !11626
  br label %1079, !dbg !11627

1079:                                             ; preds = %1081, %1077
  %1080 = call i32 bitcast (i32 (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_close_notify to i32 (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11628
  store i32 %1080, i32* %1, align 4, !dbg !11629
  br label %1081, !dbg !11630

1081:                                             ; preds = %1079
  %1082 = load i32, i32* %1, align 4, !dbg !11631
  %1083 = icmp eq i32 %1082, -26752, !dbg !11632
  br i1 %1083, label %1079, label %1084, !dbg !11630, !llvm.loop !11633

1084:                                             ; preds = %1081
  store i32 0, i32* %1, align 4, !dbg !11635
  %1085 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79.162, i64 0, i64 0)), !dbg !11636
  br label %653, !dbg !11637

1086:                                             ; preds = %193, %114, %74, %63
  call void @llvm.dbg.label(metadata !11638), !dbg !11639
  %1087 = load i32, i32* %1, align 4, !dbg !11640
  %1088 = icmp eq i32 %1087, 0, !dbg !11642
  br i1 %1088, label %1089, label %1090, !dbg !11643

1089:                                             ; preds = %1086
  store i32 1, i32* %1, align 4, !dbg !11644
  br label %1090, !dbg !11645

1090:                                             ; preds = %1089, %1086
  %1091 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2376 x i8], [2376 x i8]* @.str.80.163, i64 0, i64 0)), !dbg !11646
  %1092 = call i32* @mbedtls_ssl_list_ciphersuites(), !dbg !11647
  store i32* %1092, i32** %32, align 8, !dbg !11648
  br label %1093, !dbg !11649

1093:                                             ; preds = %1108, %1090
  %1094 = load i32*, i32** %32, align 8, !dbg !11650
  %1095 = load i32, i32* %1094, align 4, !dbg !11651
  %1096 = icmp ne i32 %1095, 0, !dbg !11649
  br i1 %1096, label %1097, label %1115, !dbg !11649

1097:                                             ; preds = %1093
  %1098 = load i32*, i32** %32, align 8, !dbg !11652
  %1099 = load i32, i32* %1098, align 4, !dbg !11654
  %1100 = call i8* @mbedtls_ssl_get_ciphersuite_name(i32 %1099), !dbg !11655
  %1101 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i64 0, i64 0), i8* %1100), !dbg !11656
  %1102 = load i32*, i32** %32, align 8, !dbg !11657
  %1103 = getelementptr inbounds i32, i32* %1102, i32 1, !dbg !11657
  store i32* %1103, i32** %32, align 8, !dbg !11657
  %1104 = load i32*, i32** %32, align 8, !dbg !11658
  %1105 = load i32, i32* %1104, align 4, !dbg !11660
  %1106 = icmp ne i32 %1105, 0, !dbg !11660
  br i1 %1106, label %1108, label %1107, !dbg !11661

1107:                                             ; preds = %1097
  br label %1115, !dbg !11662

1108:                                             ; preds = %1097
  %1109 = load i32*, i32** %32, align 8, !dbg !11663
  %1110 = load i32, i32* %1109, align 4, !dbg !11664
  %1111 = call i8* @mbedtls_ssl_get_ciphersuite_name(i32 %1110), !dbg !11665
  %1112 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8* %1111), !dbg !11666
  %1113 = load i32*, i32** %32, align 8, !dbg !11667
  %1114 = getelementptr inbounds i32, i32* %1113, i32 1, !dbg !11667
  store i32* %1114, i32** %32, align 8, !dbg !11667
  br label %1093, !dbg !11649, !llvm.loop !11668

1115:                                             ; preds = %1107, %1093
  %1116 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0)), !dbg !11670
  br label %1117, !dbg !11671

1117:                                             ; preds = %1115, %715, %702, %688, %686, %681, %656, %638, %621, %607, %586, %576, %497, %482, %469, %442, %420, %410, %382, %374, %366, %358, %308, %275, %218, %209, %169
  call void @llvm.dbg.label(metadata !11672), !dbg !11673
  %1118 = load i32, i32* %1, align 4, !dbg !11674
  %1119 = icmp ne i32 %1118, 0, !dbg !11676
  br i1 %1119, label %1120, label %1127, !dbg !11677

1120:                                             ; preds = %1117
  call void @llvm.dbg.declare(metadata [100 x i8]* %44, metadata !11678, metadata !DIExpression()), !dbg !11680
  %1121 = load i32, i32* %1, align 4, !dbg !11681
  %1122 = getelementptr inbounds [100 x i8], [100 x i8]* %44, i64 0, i64 0, !dbg !11682
  call void @mbedtls_strerror(i32 %1121, i8* %1122, i64 100), !dbg !11683
  %1123 = load i32, i32* %1, align 4, !dbg !11684
  %1124 = sub nsw i32 0, %1123, !dbg !11685
  %1125 = getelementptr inbounds [100 x i8], [100 x i8]* %44, i64 0, i64 0, !dbg !11686
  %1126 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i64 0, i64 0), i32 %1124, i8* %1125), !dbg !11687
  br label %1127, !dbg !11688

1127:                                             ; preds = %1120, %1117
  %1128 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.85, i64 0, i64 0)), !dbg !11689
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* @client_fd), !dbg !11690
  call void @mbedtls_net_free_ocall(%struct.mbedtls_net_context* @listen_fd), !dbg !11691
  call void @mbedtls_x509_crt_free(%struct.mbedtls_x509_crt* %21), !dbg !11692
  call void @mbedtls_x509_crt_free(%struct.mbedtls_x509_crt* %22), !dbg !11693
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %23), !dbg !11694
  call void @mbedtls_x509_crt_free(%struct.mbedtls_x509_crt* %24), !dbg !11695
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %25), !dbg !11696
  %1129 = load %struct._psk_entry*, %struct._psk_entry** %10, align 8, !dbg !11697
  call void @psk_free(%struct._psk_entry* %1129), !dbg !11698
  call void bitcast (void (%struct.mbedtls_ssl_context*)* @mbedtls_ssl_free to void (%struct.mbedtls_ssl_context.61*)*)(%struct.mbedtls_ssl_context.61* %17), !dbg !11699
  call void bitcast (void (%struct.mbedtls_ssl_config*)* @mbedtls_ssl_config_free to void (%struct.mbedtls_ssl_config.58*)*)(%struct.mbedtls_ssl_config.58* %18), !dbg !11700
  call void @mbedtls_ctr_drbg_free(%struct.mbedtls_ctr_drbg_context* %16), !dbg !11701
  call void @mbedtls_entropy_free(%struct.mbedtls_entropy_context* %15), !dbg !11702
  call void @mbedtls_ssl_ticket_free(%struct.mbedtls_ssl_ticket_context* %28), !dbg !11703
  call void @mbedtls_ssl_cookie_free(%struct.mbedtls_ssl_cookie_ctx* %14), !dbg !11704
  %1130 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0)), !dbg !11705
  %1131 = load i32, i32* %1, align 4, !dbg !11706
  %1132 = icmp slt i32 %1131, 0, !dbg !11708
  br i1 %1132, label %1133, label %1134, !dbg !11709

1133:                                             ; preds = %1127
  store i32 1, i32* %1, align 4, !dbg !11710
  br label %1134, !dbg !11711

1134:                                             ; preds = %1133, %1127
  %1135 = load i32, i32* %1, align 4, !dbg !11712
  ret i32 %1135, !dbg !11713
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @my_debug.112(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4) #0 !dbg !11714 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11715, metadata !DIExpression()), !dbg !11716
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11717, metadata !DIExpression()), !dbg !11718
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !11719, metadata !DIExpression()), !dbg !11720
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11721, metadata !DIExpression()), !dbg !11722
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !11723, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata i8** %11, metadata !11725, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.declare(metadata i8** %12, metadata !11727, metadata !DIExpression()), !dbg !11728
  %13 = load i8*, i8** %6, align 8, !dbg !11729
  %14 = load i8*, i8** %8, align 8, !dbg !11730
  store i8* %14, i8** %12, align 8, !dbg !11732
  store i8* %14, i8** %11, align 8, !dbg !11733
  br label %15, !dbg !11734

15:                                               ; preds = %34, %5
  %16 = load i8*, i8** %11, align 8, !dbg !11735
  %17 = load i8, i8* %16, align 1, !dbg !11737
  %18 = sext i8 %17 to i32, !dbg !11737
  %19 = icmp ne i32 %18, 0, !dbg !11738
  br i1 %19, label %20, label %37, !dbg !11739

20:                                               ; preds = %15
  %21 = load i8*, i8** %11, align 8, !dbg !11740
  %22 = load i8, i8* %21, align 1, !dbg !11742
  %23 = sext i8 %22 to i32, !dbg !11742
  %24 = icmp eq i32 %23, 47, !dbg !11743
  br i1 %24, label %30, label %25, !dbg !11744

25:                                               ; preds = %20
  %26 = load i8*, i8** %11, align 8, !dbg !11745
  %27 = load i8, i8* %26, align 1, !dbg !11746
  %28 = sext i8 %27 to i32, !dbg !11746
  %29 = icmp eq i32 %28, 92, !dbg !11747
  br i1 %29, label %30, label %33, !dbg !11748

30:                                               ; preds = %25, %20
  %31 = load i8*, i8** %11, align 8, !dbg !11749
  %32 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !11750
  store i8* %32, i8** %12, align 8, !dbg !11751
  br label %33, !dbg !11752

33:                                               ; preds = %30, %25
  br label %34, !dbg !11753

34:                                               ; preds = %33
  %35 = load i8*, i8** %11, align 8, !dbg !11754
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !11754
  store i8* %36, i8** %11, align 8, !dbg !11754
  br label %15, !dbg !11755, !llvm.loop !11756

37:                                               ; preds = %15
  %38 = load i8*, i8** %12, align 8, !dbg !11758
  %39 = load i32, i32* %9, align 4, !dbg !11759
  %40 = load i32, i32* %7, align 4, !dbg !11760
  %41 = load i8*, i8** %10, align 8, !dbg !11761
  %42 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0), i8* %38, i32 %39, i32 %40, i8* %41), !dbg !11762
  ret void, !dbg !11763
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @my_send.119(i8* %0, i8* %1, i64 %2) #0 !dbg !2508 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11764, metadata !DIExpression()), !dbg !11765
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11766, metadata !DIExpression()), !dbg !11767
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !11768, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11770, metadata !DIExpression()), !dbg !11771
  %9 = load i32, i32* @my_send.first_try.165, align 4, !dbg !11772
  %10 = icmp ne i32 %9, 0, !dbg !11772
  br i1 %10, label %11, label %12, !dbg !11774

11:                                               ; preds = %3
  store i32 0, i32* @my_send.first_try.165, align 4, !dbg !11775
  store i32 -26752, i32* %4, align 4, !dbg !11777
  br label %22, !dbg !11777

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !11778
  %14 = load i8*, i8** %6, align 8, !dbg !11779
  %15 = load i64, i64* %7, align 8, !dbg !11780
  %16 = call i32 @mbedtls_net_send_ocall(i8* %13, i8* %14, i64 %15), !dbg !11781
  store i32 %16, i32* %8, align 4, !dbg !11782
  %17 = load i32, i32* %8, align 4, !dbg !11783
  %18 = icmp ne i32 %17, -26752, !dbg !11785
  br i1 %18, label %19, label %20, !dbg !11786

19:                                               ; preds = %12
  store i32 1, i32* @my_send.first_try.165, align 4, !dbg !11787
  br label %20, !dbg !11788

20:                                               ; preds = %19, %12
  %21 = load i32, i32* %8, align 4, !dbg !11789
  store i32 %21, i32* %4, align 4, !dbg !11790
  br label %22, !dbg !11790

22:                                               ; preds = %20, %11
  %23 = load i32, i32* %4, align 4, !dbg !11791
  ret i32 %23, !dbg !11791
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @my_recv.120(i8* %0, i8* %1, i64 %2) #0 !dbg !2511 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11792, metadata !DIExpression()), !dbg !11793
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11794, metadata !DIExpression()), !dbg !11795
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !11796, metadata !DIExpression()), !dbg !11797
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11798, metadata !DIExpression()), !dbg !11799
  %9 = load i32, i32* @my_recv.first_try.164, align 4, !dbg !11800
  %10 = icmp ne i32 %9, 0, !dbg !11800
  br i1 %10, label %11, label %12, !dbg !11802

11:                                               ; preds = %3
  store i32 0, i32* @my_recv.first_try.164, align 4, !dbg !11803
  store i32 -26880, i32* %4, align 4, !dbg !11805
  br label %22, !dbg !11805

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !11806
  %14 = load i8*, i8** %6, align 8, !dbg !11807
  %15 = load i64, i64* %7, align 8, !dbg !11808
  %16 = call i32 @mbedtls_net_recv_ocall(i8* %13, i8* %14, i64 %15), !dbg !11809
  store i32 %16, i32* %8, align 4, !dbg !11810
  %17 = load i32, i32* %8, align 4, !dbg !11811
  %18 = icmp ne i32 %17, -26880, !dbg !11813
  br i1 %18, label %19, label %20, !dbg !11814

19:                                               ; preds = %12
  store i32 1, i32* @my_recv.first_try.164, align 4, !dbg !11815
  br label %20, !dbg !11816

20:                                               ; preds = %19, %12
  %21 = load i32, i32* %8, align 4, !dbg !11817
  store i32 %21, i32* %4, align 4, !dbg !11818
  br label %22, !dbg !11818

22:                                               ; preds = %20, %11
  %23 = load i32, i32* %4, align 4, !dbg !11819
  ret i32 %23, !dbg !11819
}

; Function Attrs: noinline ssp uwtable
define internal void @_GLOBAL__sub_I_ssl_conn_hdlr.cpp() #10 section ".text.startup" !dbg !11820 {
  call void @__cxx_global_var_init(), !dbg !11822
  ret void
}

; Function Attrs: noinline ssp uwtable
define internal void @__cxx_global_var_init() #10 section ".text.startup" !dbg !11823 {
  %1 = alloca %"class.std::__1::allocator"*, align 8
  %2 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %3 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %4 = alloca %"class.std::__1::basic_string"*, align 8
  %5 = alloca i8*, align 8
  store %"class.std::__1::basic_string"* @_ZN20TLSConnectionHandler4persE, %"class.std::__1::basic_string"** %4, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %4, metadata !11824, metadata !DIExpression()), !dbg !11827
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.166, i64 0, i64 0), i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11829, metadata !DIExpression()), !dbg !11830
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::allocator"*, !dbg !11831
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i32 0, i32 0, !dbg !11832
  store %"class.std::__1::__compressed_pair"* %8, %"class.std::__1::__compressed_pair"** %3, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %3, metadata !11833, metadata !DIExpression()), !dbg !11836
  %9 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %3, align 8
  %10 = bitcast %"class.std::__1::__compressed_pair"* %9 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !11838
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %10, %"class.std::__1::__libcpp_compressed_pair_imp"** %2, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %2, metadata !11839, metadata !DIExpression()) #3, !dbg !11842
  %11 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %2, align 8
  %12 = bitcast %"class.std::__1::__libcpp_compressed_pair_imp"* %11 to %"class.std::__1::allocator"*, !dbg !11844
  store %"class.std::__1::allocator"* %12, %"class.std::__1::allocator"** %1, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::allocator"** %1, metadata !11845, metadata !DIExpression()), !dbg !11848
  %13 = load %"class.std::__1::allocator"*, %"class.std::__1::allocator"** %1, align 8
  %14 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %11, i32 0, i32 0, !dbg !11850
  %15 = bitcast %"struct.std::__1::basic_string<char>::__rep"* %14 to i8*, !dbg !11850
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #3, !dbg !11850
  %16 = load i8*, i8** %5, align 8, !dbg !11851
  %17 = icmp ne i8* %16, null, !dbg !11851
  br i1 %17, label %18, label %19, !dbg !11851

18:                                               ; preds = %0
  br label %20, !dbg !11851

19:                                               ; preds = %0
  call void @__assert(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31.167, i64 0, i64 0), i32 2062, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2EPKc, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32.168, i64 0, i64 0)), !dbg !11851
  br label %20, !dbg !11851

20:                                               ; preds = %18, %19
  %21 = load i8*, i8** %5, align 8, !dbg !11853
  %22 = load i8*, i8** %5, align 8, !dbg !11854
  %23 = call i64 @_ZNSt3__111char_traitsIcE6lengthEPKc(i8* %22), !dbg !11855
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(%"class.std::__1::basic_string"* nonnull align 8 dereferenceable(24) %6, i8* %21, i64 %23), !dbg !11856
  %24 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__1::basic_string"*)* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev to void (i8*)*), i8* bitcast (%"class.std::__1::basic_string"* @_ZN20TLSConnectionHandler4persE to i8*), i8* @__dso_handle) #3, !dbg !11857
  ret void, !dbg !11858
}

declare void @__assert(i8*, i32, i8*, i8*) #2

; Function Attrs: mustprogress noinline optnone ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__111char_traitsIcE6lengthEPKc(i8* %0) #5 comdat align 2 !dbg !11859 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11860, metadata !DIExpression()), !dbg !11861
  %3 = load i8*, i8** %2, align 8, !dbg !11862
  %4 = call i64 @strlen(i8* %3), !dbg !11863
  ret i64 %4, !dbg !11864
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(%"class.std::__1::basic_string"* nonnull align 8 dereferenceable(24), i8*, i64) #2

; Function Attrs: nounwind
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(%"class.std::__1::basic_string"* nonnull align 8 dereferenceable(24)) unnamed_addr #11

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline optnone ssp uwtable
define hidden void @_ZN20TLSConnectionHandlerC2Ev(%class.TLSConnectionHandler* nonnull align 8 dereferenceable(2868) %0) unnamed_addr #12 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !11865 {
  %2 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %3 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %4 = alloca %"class.std::__1::basic_string"*, align 8
  %5 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %6 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %7 = alloca %"class.std::__1::basic_string"*, align 8
  %8 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %9 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %10 = alloca %"class.std::__1::basic_string"*, align 8
  %11 = alloca %"class.std::__1::basic_string"*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %15 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %16 = alloca %"class.std::__1::__libcpp_compressed_pair_imp"*, align 8
  %17 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %18 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %19 = alloca %"class.std::__1::__compressed_pair"*, align 8
  %20 = alloca %"class.std::__1::basic_string"*, align 8
  %21 = alloca %"class.std::__1::basic_string"*, align 8
  %22 = alloca %"class.std::__1::basic_string"*, align 8
  %23 = alloca %"class.std::__1::basic_string"*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca %"class.std::__1::basic_string"*, align 8
  %26 = alloca %"class.std::__1::basic_string"*, align 8
  %27 = alloca %"class.std::__1::basic_string"*, align 8
  %28 = alloca %class.TLSConnectionHandler*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  store %class.TLSConnectionHandler* %0, %class.TLSConnectionHandler** %28, align 8
  call void @llvm.dbg.declare(metadata %class.TLSConnectionHandler** %28, metadata !11866, metadata !DIExpression()), !dbg !11867
  %32 = load %class.TLSConnectionHandler*, %class.TLSConnectionHandler** %28, align 8
  %33 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 0, !dbg !11868
  %34 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 1, !dbg !11868
  %35 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !11868
  %36 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 3, !dbg !11868
  %37 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 4, !dbg !11868
  %38 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 5, !dbg !11868
  call void @llvm.dbg.declare(metadata i32* %29, metadata !11869, metadata !DIExpression()), !dbg !11871
  %39 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 3, !dbg !11872
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %39), !dbg !11873
  %40 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 4, !dbg !11874
  call void @mbedtls_x509_crt_init(%struct.mbedtls_x509_crt* %40), !dbg !11875
  %41 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !11876
  call void @mbedtls_ssl_config_init(%struct.mbedtls_ssl_config* %41), !dbg !11877
  %42 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 1, !dbg !11878
  call void @mbedtls_ctr_drbg_init(%struct.mbedtls_ctr_drbg_context* %42), !dbg !11879
  %43 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 0, !dbg !11880
  call void @mbedtls_entropy_init(%struct.mbedtls_entropy_context* %43), !dbg !11881
  %44 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.169, i64 0, i64 0)), !dbg !11882
  %45 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 3, !dbg !11883
  %46 = load i8*, i8** @mbedtls_test_srv_crt, align 8, !dbg !11884
  %47 = load i64, i64* @mbedtls_test_srv_crt_len, align 8, !dbg !11885
  %48 = call i32 @mbedtls_x509_crt_parse(%struct.mbedtls_x509_crt* %45, i8* %46, i64 %47), !dbg !11886
  store i32 %48, i32* %29, align 4, !dbg !11887
  %49 = load i32, i32* %29, align 4, !dbg !11888
  %50 = icmp ne i32 %49, 0, !dbg !11890
  br i1 %50, label %51, label %61, !dbg !11891

51:                                               ; preds = %1
  %52 = load i32, i32* %29, align 4, !dbg !11892
  %53 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.170, i64 0, i64 0), i32 %52), !dbg !11894
  %54 = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !11895
  %55 = bitcast i8* %54 to %"class.std::runtime_error"*, !dbg !11895
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16) %55, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.171, i64 0, i64 0))
          to label %56 unwind label %57, !dbg !11896

56:                                               ; preds = %51
  call void @__cxa_throw(i8* %54, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #17, !dbg !11895
  unreachable, !dbg !11895

57:                                               ; preds = %51
  %58 = landingpad { i8*, i32 }
          cleanup, !dbg !11897
  %59 = extractvalue { i8*, i32 } %58, 0, !dbg !11897
  store i8* %59, i8** %30, align 8, !dbg !11897
  %60 = extractvalue { i8*, i32 } %58, 1, !dbg !11897
  store i32 %60, i32* %31, align 4, !dbg !11897
  call void @__cxa_free_exception(i8* %54) #3, !dbg !11895
  br label %251, !dbg !11895

61:                                               ; preds = %1
  %62 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 4, !dbg !11898
  %63 = load i64, i64* @mbedtls_test_cas_pem_len, align 8, !dbg !11899
  %64 = call i32 @mbedtls_x509_crt_parse(%struct.mbedtls_x509_crt* %62, i8* getelementptr inbounds ([3495 x i8], [3495 x i8]* @mbedtls_test_cas_pem, i64 0, i64 0), i64 %63), !dbg !11900
  store i32 %64, i32* %29, align 4, !dbg !11901
  %65 = load i32, i32* %29, align 4, !dbg !11902
  %66 = icmp ne i32 %65, 0, !dbg !11904
  br i1 %66, label %67, label %77, !dbg !11905

67:                                               ; preds = %61
  %68 = load i32, i32* %29, align 4, !dbg !11906
  %69 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.170, i64 0, i64 0), i32 %68), !dbg !11908
  %70 = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !11909
  %71 = bitcast i8* %70 to %"class.std::runtime_error"*, !dbg !11909
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16) %71, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.171, i64 0, i64 0))
          to label %72 unwind label %73, !dbg !11910

72:                                               ; preds = %67
  call void @__cxa_throw(i8* %70, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #17, !dbg !11909
  unreachable, !dbg !11909

73:                                               ; preds = %67
  %74 = landingpad { i8*, i32 }
          cleanup, !dbg !11911
  %75 = extractvalue { i8*, i32 } %74, 0, !dbg !11911
  store i8* %75, i8** %30, align 8, !dbg !11911
  %76 = extractvalue { i8*, i32 } %74, 1, !dbg !11911
  store i32 %76, i32* %31, align 4, !dbg !11911
  call void @__cxa_free_exception(i8* %70) #3, !dbg !11909
  br label %251, !dbg !11909

77:                                               ; preds = %61
  %78 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 5, !dbg !11912
  call void @mbedtls_pk_init(%struct.mbedtls_pk_context* %78), !dbg !11913
  %79 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 5, !dbg !11914
  %80 = load i8*, i8** @mbedtls_test_srv_key, align 8, !dbg !11915
  %81 = load i64, i64* @mbedtls_test_srv_key_len, align 8, !dbg !11916
  %82 = call i32 @mbedtls_pk_parse_key(%struct.mbedtls_pk_context* %79, i8* %80, i64 %81, i8* null, i64 0), !dbg !11917
  store i32 %82, i32* %29, align 4, !dbg !11918
  %83 = load i32, i32* %29, align 4, !dbg !11919
  %84 = icmp ne i32 %83, 0, !dbg !11921
  br i1 %84, label %85, label %95, !dbg !11922

85:                                               ; preds = %77
  %86 = load i32, i32* %29, align 4, !dbg !11923
  %87 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3.172, i64 0, i64 0), i32 %86), !dbg !11925
  %88 = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !11926
  %89 = bitcast i8* %88 to %"class.std::runtime_error"*, !dbg !11926
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16) %89, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.171, i64 0, i64 0))
          to label %90 unwind label %91, !dbg !11927

90:                                               ; preds = %85
  call void @__cxa_throw(i8* %88, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #17, !dbg !11926
  unreachable, !dbg !11926

91:                                               ; preds = %85
  %92 = landingpad { i8*, i32 }
          cleanup, !dbg !11928
  %93 = extractvalue { i8*, i32 } %92, 0, !dbg !11928
  store i8* %93, i8** %30, align 8, !dbg !11928
  %94 = extractvalue { i8*, i32 } %92, 1, !dbg !11928
  store i32 %94, i32* %31, align 4, !dbg !11928
  call void @__cxa_free_exception(i8* %88) #3, !dbg !11926
  br label %251, !dbg !11926

95:                                               ; preds = %77
  %96 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.173, i64 0, i64 0)), !dbg !11929
  %97 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5.174, i64 0, i64 0)), !dbg !11930
  %98 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 1, !dbg !11931
  %99 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 0, !dbg !11933
  %100 = bitcast %struct.mbedtls_entropy_context* %99 to i8*, !dbg !11934
  store %"class.std::__1::basic_string"* @_ZN20TLSConnectionHandler4persE, %"class.std::__1::basic_string"** %27, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %27, metadata !11935, metadata !DIExpression()) #3, !dbg !11938
  %101 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  store %"class.std::__1::basic_string"* %101, %"class.std::__1::basic_string"** %25, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %25, metadata !11940, metadata !DIExpression()) #3, !dbg !11942
  %102 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  store %"class.std::__1::basic_string"* %102, %"class.std::__1::basic_string"** %23, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %23, metadata !11944, metadata !DIExpression()) #3, !dbg !11946
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  store %"class.std::__1::basic_string"* %103, %"class.std::__1::basic_string"** %22, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %22, metadata !11948, metadata !DIExpression()) #3, !dbg !11950
  %104 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i32 0, i32 0, !dbg !11952
  store %"class.std::__1::__compressed_pair"* %105, %"class.std::__1::__compressed_pair"** %17, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %17, metadata !11953, metadata !DIExpression()) #3, !dbg !11956
  %106 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %17, align 8
  %107 = bitcast %"class.std::__1::__compressed_pair"* %106 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !11958
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %107, %"class.std::__1::__libcpp_compressed_pair_imp"** %16, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %16, metadata !11959, metadata !DIExpression()), !dbg !11962
  %108 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %16, align 8
  %109 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %108, i32 0, i32 0, !dbg !11964
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__rep", %"struct.std::__1::basic_string<char>::__rep"* %109, i32 0, i32 0, !dbg !11965
  %111 = bitcast %union.anon* %110 to %"struct.std::__1::basic_string<char>::__short"*, !dbg !11965
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__short", %"struct.std::__1::basic_string<char>::__short"* %111, i32 0, i32 0, !dbg !11966
  %113 = bitcast %"class.std::__1::allocator"* %112 to i8*, !dbg !11966
  %114 = load i8, i8* %113, align 8, !dbg !11966
  %115 = zext i8 %114 to i32, !dbg !11952
  %116 = and i32 %115, 1, !dbg !11967
  %117 = icmp ne i32 %116, 0, !dbg !11952
  br i1 %117, label %118, label %129, !dbg !11968

118:                                              ; preds = %95
  store %"class.std::__1::basic_string"* %103, %"class.std::__1::basic_string"** %21, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %21, metadata !11969, metadata !DIExpression()) #3, !dbg !11971
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i32 0, i32 0, !dbg !11973
  store %"class.std::__1::__compressed_pair"* %120, %"class.std::__1::__compressed_pair"** %18, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %18, metadata !11953, metadata !DIExpression()) #3, !dbg !11974
  %121 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %18, align 8
  %122 = bitcast %"class.std::__1::__compressed_pair"* %121 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !11976
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %122, %"class.std::__1::__libcpp_compressed_pair_imp"** %15, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %15, metadata !11959, metadata !DIExpression()), !dbg !11977
  %123 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %15, align 8
  %124 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %123, i32 0, i32 0, !dbg !11979
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__rep", %"struct.std::__1::basic_string<char>::__rep"* %124, i32 0, i32 0, !dbg !11980
  %126 = bitcast %union.anon* %125 to %"struct.std::__1::basic_string<char>::__long"*, !dbg !11980
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__long", %"struct.std::__1::basic_string<char>::__long"* %126, i32 0, i32 2, !dbg !11981
  %128 = load i8*, i8** %127, align 8, !dbg !11981
  br label %142, !dbg !11968

129:                                              ; preds = %95
  store %"class.std::__1::basic_string"* %103, %"class.std::__1::basic_string"** %20, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %20, metadata !11982, metadata !DIExpression()) #3, !dbg !11984
  %130 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i32 0, i32 0, !dbg !11986
  store %"class.std::__1::__compressed_pair"* %131, %"class.std::__1::__compressed_pair"** %19, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %19, metadata !11953, metadata !DIExpression()) #3, !dbg !11987
  %132 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %19, align 8
  %133 = bitcast %"class.std::__1::__compressed_pair"* %132 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !11989
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %133, %"class.std::__1::__libcpp_compressed_pair_imp"** %14, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %14, metadata !11959, metadata !DIExpression()), !dbg !11990
  %134 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %14, align 8
  %135 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %134, i32 0, i32 0, !dbg !11992
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__rep", %"struct.std::__1::basic_string<char>::__rep"* %135, i32 0, i32 0, !dbg !11993
  %137 = bitcast %union.anon* %136 to %"struct.std::__1::basic_string<char>::__short"*, !dbg !11993
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__short", %"struct.std::__1::basic_string<char>::__short"* %137, i32 0, i32 1, !dbg !11994
  %139 = getelementptr inbounds [23 x i8], [23 x i8]* %138, i64 0, i64 0, !dbg !11986
  store i8* %139, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !11995, metadata !DIExpression()) #3, !dbg !12012
  %140 = load i8*, i8** %13, align 8, !dbg !12014
  store i8* %140, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !12015, metadata !DIExpression()), !dbg !12021
  %141 = load i8*, i8** %12, align 8, !dbg !12023
  br label %142, !dbg !11968

142:                                              ; preds = %118, %129
  %143 = phi i8* [ %128, %118 ], [ %141, %129 ], !dbg !11968
  store i8* %143, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !12024, metadata !DIExpression()), !dbg !12028
  %144 = load i8*, i8** %24, align 8, !dbg !12030
  store %"class.std::__1::basic_string"* @_ZN20TLSConnectionHandler4persE, %"class.std::__1::basic_string"** %26, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %26, metadata !12031, metadata !DIExpression()) #3, !dbg !12033
  %145 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  store %"class.std::__1::basic_string"* %145, %"class.std::__1::basic_string"** %11, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %11, metadata !12035, metadata !DIExpression()) #3, !dbg !12037
  %146 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  store %"class.std::__1::basic_string"* %146, %"class.std::__1::basic_string"** %10, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %10, metadata !11948, metadata !DIExpression()) #3, !dbg !12039
  %147 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i32 0, i32 0, !dbg !12041
  store %"class.std::__1::__compressed_pair"* %148, %"class.std::__1::__compressed_pair"** %9, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %9, metadata !11953, metadata !DIExpression()) #3, !dbg !12042
  %149 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %9, align 8
  %150 = bitcast %"class.std::__1::__compressed_pair"* %149 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !12044
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %150, %"class.std::__1::__libcpp_compressed_pair_imp"** %8, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %8, metadata !11959, metadata !DIExpression()) #3, !dbg !12045
  %151 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %8, align 8
  %152 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %151, i32 0, i32 0, !dbg !12047
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__rep", %"struct.std::__1::basic_string<char>::__rep"* %152, i32 0, i32 0, !dbg !12048
  %154 = bitcast %union.anon* %153 to %"struct.std::__1::basic_string<char>::__short"*, !dbg !12048
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__short", %"struct.std::__1::basic_string<char>::__short"* %154, i32 0, i32 0, !dbg !12049
  %156 = bitcast %"class.std::__1::allocator"* %155 to i8*, !dbg !12049
  %157 = load i8, i8* %156, align 8, !dbg !12049
  %158 = zext i8 %157 to i32, !dbg !12041
  %159 = and i32 %158, 1, !dbg !12050
  %160 = icmp ne i32 %159, 0, !dbg !12041
  br i1 %160, label %161, label %172, !dbg !12051

161:                                              ; preds = %142
  store %"class.std::__1::basic_string"* %146, %"class.std::__1::basic_string"** %7, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %7, metadata !12052, metadata !DIExpression()), !dbg !12054
  %162 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i32 0, i32 0, !dbg !12056
  store %"class.std::__1::__compressed_pair"* %163, %"class.std::__1::__compressed_pair"** %6, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %6, metadata !11953, metadata !DIExpression()) #3, !dbg !12057
  %164 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %6, align 8
  %165 = bitcast %"class.std::__1::__compressed_pair"* %164 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !12059
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %165, %"class.std::__1::__libcpp_compressed_pair_imp"** %5, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %5, metadata !11959, metadata !DIExpression()), !dbg !12060
  %166 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %5, align 8
  %167 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %166, i32 0, i32 0, !dbg !12062
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__rep", %"struct.std::__1::basic_string<char>::__rep"* %167, i32 0, i32 0, !dbg !12063
  %169 = bitcast %union.anon* %168 to %"struct.std::__1::basic_string<char>::__long"*, !dbg !12063
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__long", %"struct.std::__1::basic_string<char>::__long"* %169, i32 0, i32 1, !dbg !12064
  %171 = load i64, i64* %170, align 8, !dbg !12064
  br label %187, !dbg !12051

172:                                              ; preds = %142
  store %"class.std::__1::basic_string"* %146, %"class.std::__1::basic_string"** %4, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::basic_string"** %4, metadata !12065, metadata !DIExpression()), !dbg !12067
  %173 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i32 0, i32 0, !dbg !12069
  store %"class.std::__1::__compressed_pair"* %174, %"class.std::__1::__compressed_pair"** %3, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__compressed_pair"** %3, metadata !11953, metadata !DIExpression()) #3, !dbg !12070
  %175 = load %"class.std::__1::__compressed_pair"*, %"class.std::__1::__compressed_pair"** %3, align 8
  %176 = bitcast %"class.std::__1::__compressed_pair"* %175 to %"class.std::__1::__libcpp_compressed_pair_imp"*, !dbg !12072
  store %"class.std::__1::__libcpp_compressed_pair_imp"* %176, %"class.std::__1::__libcpp_compressed_pair_imp"** %2, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__1::__libcpp_compressed_pair_imp"** %2, metadata !11959, metadata !DIExpression()), !dbg !12073
  %177 = load %"class.std::__1::__libcpp_compressed_pair_imp"*, %"class.std::__1::__libcpp_compressed_pair_imp"** %2, align 8
  %178 = getelementptr inbounds %"class.std::__1::__libcpp_compressed_pair_imp", %"class.std::__1::__libcpp_compressed_pair_imp"* %177, i32 0, i32 0, !dbg !12075
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__rep", %"struct.std::__1::basic_string<char>::__rep"* %178, i32 0, i32 0, !dbg !12076
  %180 = bitcast %union.anon* %179 to %"struct.std::__1::basic_string<char>::__short"*, !dbg !12076
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__short", %"struct.std::__1::basic_string<char>::__short"* %180, i32 0, i32 0, !dbg !12077
  %182 = bitcast %"class.std::__1::allocator"* %181 to i8*, !dbg !12077
  %183 = load i8, i8* %182, align 8, !dbg !12077
  %184 = zext i8 %183 to i32, !dbg !12069
  %185 = ashr i32 %184, 1, !dbg !12078
  %186 = sext i32 %185 to i64, !dbg !12069
  br label %187, !dbg !12051

187:                                              ; preds = %161, %172
  %188 = phi i64 [ %171, %161 ], [ %186, %172 ], !dbg !12051
  %189 = call i32 @mbedtls_ctr_drbg_seed(%struct.mbedtls_ctr_drbg_context* %98, i32 (i8*, i8*, i64)* @mbedtls_entropy_func, i8* %100, i8* %144, i64 %188), !dbg !12079
  store i32 %189, i32* %29, align 4, !dbg !12080
  %190 = icmp ne i32 %189, 0, !dbg !12081
  br i1 %190, label %191, label %202, !dbg !12082

191:                                              ; preds = %187
  %192 = load i32, i32* %29, align 4, !dbg !12083
  %193 = sub nsw i32 0, %192, !dbg !12085
  %194 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6.175, i64 0, i64 0), i32 %193), !dbg !12086
  %195 = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !12087
  %196 = bitcast i8* %195 to %"class.std::runtime_error"*, !dbg !12087
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16) %196, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.171, i64 0, i64 0))
          to label %197 unwind label %198, !dbg !12088

197:                                              ; preds = %191
  call void @__cxa_throw(i8* %195, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #17, !dbg !12087
  unreachable, !dbg !12087

198:                                              ; preds = %191
  %199 = landingpad { i8*, i32 }
          cleanup, !dbg !12089
  %200 = extractvalue { i8*, i32 } %199, 0, !dbg !12089
  store i8* %200, i8** %30, align 8, !dbg !12089
  %201 = extractvalue { i8*, i32 } %199, 1, !dbg !12089
  store i32 %201, i32* %31, align 4, !dbg !12089
  call void @__cxa_free_exception(i8* %195) #3, !dbg !12087
  br label %251, !dbg !12087

202:                                              ; preds = %187
  %203 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.173, i64 0, i64 0)), !dbg !12090
  %204 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.176, i64 0, i64 0)), !dbg !12091
  %205 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !12092
  %206 = call i32 @mbedtls_ssl_config_defaults(%struct.mbedtls_ssl_config* %205, i32 1, i32 0, i32 0), !dbg !12094
  store i32 %206, i32* %29, align 4, !dbg !12095
  %207 = icmp ne i32 %206, 0, !dbg !12096
  br i1 %207, label %208, label %219, !dbg !12097

208:                                              ; preds = %202
  %209 = load i32, i32* %29, align 4, !dbg !12098
  %210 = sub nsw i32 0, %209, !dbg !12100
  %211 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8.177, i64 0, i64 0), i32 %210), !dbg !12101
  %212 = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !12102
  %213 = bitcast i8* %212 to %"class.std::runtime_error"*, !dbg !12102
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16) %213, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.171, i64 0, i64 0))
          to label %214 unwind label %215, !dbg !12103

214:                                              ; preds = %208
  call void @__cxa_throw(i8* %212, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #17, !dbg !12102
  unreachable, !dbg !12102

215:                                              ; preds = %208
  %216 = landingpad { i8*, i32 }
          cleanup, !dbg !12104
  %217 = extractvalue { i8*, i32 } %216, 0, !dbg !12104
  store i8* %217, i8** %30, align 8, !dbg !12104
  %218 = extractvalue { i8*, i32 } %216, 1, !dbg !12104
  store i32 %218, i32* %31, align 4, !dbg !12104
  call void @__cxa_free_exception(i8* %212) #3, !dbg !12102
  br label %251, !dbg !12102

219:                                              ; preds = %202
  %220 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !12105
  %221 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 1, !dbg !12106
  %222 = bitcast %struct.mbedtls_ctr_drbg_context* %221 to i8*, !dbg !12107
  call void @mbedtls_ssl_conf_rng(%struct.mbedtls_ssl_config* %220, i32 (i8*, i8*, i64)* @mbedtls_ctr_drbg_random, i8* %222), !dbg !12108
  %223 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !12109
  call void @mbedtls_ssl_conf_dbg(%struct.mbedtls_ssl_config* %223, void (i8*, i32, i8*, i32, i8*)* @_ZN20TLSConnectionHandler7mydebugEPviPKciS2_, i8* null), !dbg !12110
  %224 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 6, !dbg !12111
  %225 = load i32, i32* %224, align 8, !dbg !12111
  %226 = icmp ult i32 %225, 0, !dbg !12113
  br i1 %226, label %227, label %229, !dbg !12114

227:                                              ; preds = %219
  %228 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 6, !dbg !12115
  store i32 0, i32* %228, align 8, !dbg !12117
  br label %229, !dbg !12118

229:                                              ; preds = %227, %219
  %230 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 6, !dbg !12119
  %231 = load i32, i32* %230, align 8, !dbg !12119
  call void @mbedtls_debug_set_threshold(i32 %231), !dbg !12120
  %232 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !12121
  %233 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 4, !dbg !12122
  call void @mbedtls_ssl_conf_ca_chain(%struct.mbedtls_ssl_config* %232, %struct.mbedtls_x509_crt* %233, %struct.mbedtls_x509_crl* null), !dbg !12123
  %234 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 2, !dbg !12124
  %235 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 3, !dbg !12126
  %236 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %32, i32 0, i32 5, !dbg !12127
  %237 = call i32 @mbedtls_ssl_conf_own_cert(%struct.mbedtls_ssl_config* %234, %struct.mbedtls_x509_crt* %235, %struct.mbedtls_pk_context* %236), !dbg !12128
  store i32 %237, i32* %29, align 4, !dbg !12129
  %238 = icmp ne i32 %237, 0, !dbg !12130
  br i1 %238, label %239, label %249, !dbg !12131

239:                                              ; preds = %229
  %240 = load i32, i32* %29, align 4, !dbg !12132
  %241 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9.178, i64 0, i64 0), i32 %240), !dbg !12134
  %242 = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !12135
  %243 = bitcast i8* %242 to %"class.std::runtime_error"*, !dbg !12135
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16) %243, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.171, i64 0, i64 0))
          to label %244 unwind label %245, !dbg !12136

244:                                              ; preds = %239
  call void @__cxa_throw(i8* %242, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #17, !dbg !12135
  unreachable, !dbg !12135

245:                                              ; preds = %239
  %246 = landingpad { i8*, i32 }
          cleanup, !dbg !12137
  %247 = extractvalue { i8*, i32 } %246, 0, !dbg !12137
  store i8* %247, i8** %30, align 8, !dbg !12137
  %248 = extractvalue { i8*, i32 } %246, 1, !dbg !12137
  store i32 %248, i32* %31, align 4, !dbg !12137
  call void @__cxa_free_exception(i8* %242) #3, !dbg !12135
  br label %251, !dbg !12135

249:                                              ; preds = %229
  %250 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.173, i64 0, i64 0)), !dbg !12138
  ret void, !dbg !12139

251:                                              ; preds = %245, %215, %198, %91, %73, %57
  %252 = load i8*, i8** %30, align 8, !dbg !11895
  %253 = load i32, i32* %31, align 4, !dbg !11895
  %254 = insertvalue { i8*, i32 } undef, i8* %252, 0, !dbg !11895
  %255 = insertvalue { i8*, i32 } %254, i32 %253, 1, !dbg !11895
  resume { i8*, i32 } %255, !dbg !11895
}

declare i8* @__cxa_allocate_exception(i64)

declare void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16), i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD1Ev(%"class.std::runtime_error"* nonnull align 8 dereferenceable(16)) unnamed_addr #11

declare void @__cxa_throw(i8*, i8*, i8*)

declare void @__cxa_free_exception(i8*)

; Function Attrs: mustprogress noinline optnone ssp uwtable
define hidden void @_ZN20TLSConnectionHandler7mydebugEPviPKciS2_(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4) #5 align 2 !dbg !12140 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12141, metadata !DIExpression()), !dbg !12142
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12143, metadata !DIExpression()), !dbg !12144
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12145, metadata !DIExpression()), !dbg !12146
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12147, metadata !DIExpression()), !dbg !12148
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !12149, metadata !DIExpression()), !dbg !12150
  call void @llvm.dbg.declare(metadata i64* %11, metadata !12151, metadata !DIExpression()), !dbg !12152
  store i64 0, i64* %11, align 8, !dbg !12152
  %12 = call i32 @sgx_thread_mutex_lock(%struct._sgx_thread_mutex_t* @_ZN20TLSConnectionHandler5mutexE), !dbg !12153
  %13 = load i8*, i8** %8, align 8, !dbg !12154
  %14 = load i32, i32* %9, align 4, !dbg !12155
  %15 = load i64, i64* %11, align 8, !dbg !12156
  %16 = load i8*, i8** %10, align 8, !dbg !12157
  %17 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30.179, i64 0, i64 0), i8* %13, i32 %14, i64 %15, i8* %16), !dbg !12158
  %18 = call i32 @sgx_thread_mutex_unlock(%struct._sgx_thread_mutex_t* @_ZN20TLSConnectionHandler5mutexE), !dbg !12159
  ret void, !dbg !12160
}

declare i32 @sgx_thread_mutex_lock(%struct._sgx_thread_mutex_t*) #2

declare i32 @sgx_thread_mutex_unlock(%struct._sgx_thread_mutex_t*) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @_ZN20TLSConnectionHandlerD2Ev(%class.TLSConnectionHandler* nonnull align 8 dereferenceable(2868) %0) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !12161 {
  %2 = alloca %class.TLSConnectionHandler*, align 8
  store %class.TLSConnectionHandler* %0, %class.TLSConnectionHandler** %2, align 8
  call void @llvm.dbg.declare(metadata %class.TLSConnectionHandler** %2, metadata !12162, metadata !DIExpression()), !dbg !12163
  %3 = load %class.TLSConnectionHandler*, %class.TLSConnectionHandler** %2, align 8
  %4 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %3, i32 0, i32 3, !dbg !12164
  invoke void @mbedtls_x509_crt_free(%struct.mbedtls_x509_crt* %4)
          to label %5 unwind label %16, !dbg !12166

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %3, i32 0, i32 5, !dbg !12167
  invoke void @mbedtls_pk_free(%struct.mbedtls_pk_context* %6)
          to label %7 unwind label %16, !dbg !12168

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %3, i32 0, i32 1, !dbg !12169
  invoke void @mbedtls_ctr_drbg_free(%struct.mbedtls_ctr_drbg_context* %8)
          to label %9 unwind label %16, !dbg !12170

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %3, i32 0, i32 0, !dbg !12171
  invoke void @mbedtls_entropy_free(%struct.mbedtls_entropy_context* %10)
          to label %11 unwind label %16, !dbg !12172

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %3, i32 0, i32 2, !dbg !12173
  invoke void @mbedtls_ssl_config_free(%struct.mbedtls_ssl_config* %12)
          to label %13 unwind label %16, !dbg !12174

13:                                               ; preds = %11
  %14 = invoke i32 @sgx_thread_mutex_destroy(%struct._sgx_thread_mutex_t* @_ZN20TLSConnectionHandler5mutexE)
          to label %15 unwind label %16, !dbg !12175

15:                                               ; preds = %13
  ret void, !dbg !12176

16:                                               ; preds = %13, %11, %9, %7, %5, %1
  %17 = landingpad { i8*, i32 }
          catch i8* null, !dbg !12166
  %18 = extractvalue { i8*, i32 } %17, 0, !dbg !12166
  call void @__clang_call_terminate(i8* %18) #18, !dbg !12166
  unreachable, !dbg !12166
}

declare i32 @sgx_thread_mutex_destroy(%struct._sgx_thread_mutex_t*) #2

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #13 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #18
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: mustprogress noinline optnone ssp uwtable
define hidden void @_ZN20TLSConnectionHandler6handleElP13thread_info_t(%class.TLSConnectionHandler* nonnull align 8 dereferenceable(2868) %0, i64 %1, %struct.thread_info_t* %2) #5 align 2 !dbg !12177 {
  %4 = alloca %class.TLSConnectionHandler*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.thread_info_t*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.mbedtls_net_context*, align 8
  %10 = alloca [1024 x i8], align 16
  %11 = alloca %struct.mbedtls_ssl_context, align 8
  %12 = alloca %struct.mbedtls_ssl_config, align 8
  %13 = alloca [100 x i8], align 16
  store %class.TLSConnectionHandler* %0, %class.TLSConnectionHandler** %4, align 8
  call void @llvm.dbg.declare(metadata %class.TLSConnectionHandler** %4, metadata !12178, metadata !DIExpression()), !dbg !12179
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !12180, metadata !DIExpression()), !dbg !12181
  store %struct.thread_info_t* %2, %struct.thread_info_t** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info_t** %6, metadata !12182, metadata !DIExpression()), !dbg !12183
  %14 = load %class.TLSConnectionHandler*, %class.TLSConnectionHandler** %4, align 8
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12184, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12186, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.declare(metadata %struct.mbedtls_net_context** %9, metadata !12188, metadata !DIExpression()), !dbg !12190
  %15 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !12191
  %16 = getelementptr inbounds %struct.thread_info_t, %struct.thread_info_t* %15, i32 0, i32 0, !dbg !12192
  store %struct.mbedtls_net_context* %16, %struct.mbedtls_net_context** %9, align 8, !dbg !12190
  call void @llvm.dbg.declare(metadata [1024 x i8]* %10, metadata !12193, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context* %11, metadata !12195, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_config* %12, metadata !12197, metadata !DIExpression()), !dbg !12198
  %17 = bitcast %struct.mbedtls_ssl_config* %12 to i8*, !dbg !12199
  %18 = getelementptr inbounds %class.TLSConnectionHandler, %class.TLSConnectionHandler* %14, i32 0, i32 2, !dbg !12200
  %19 = bitcast %struct.mbedtls_ssl_config* %18 to i8*, !dbg !12199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 376, i1 false), !dbg !12199
  %20 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !12201
  %21 = getelementptr inbounds %struct.thread_info_t, %struct.thread_info_t* %20, i32 0, i32 2, !dbg !12202
  store %struct.mbedtls_ssl_config* %12, %struct.mbedtls_ssl_config** %21, align 8, !dbg !12203
  %22 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !12204
  %23 = getelementptr inbounds %struct.thread_info_t, %struct.thread_info_t* %22, i32 0, i32 1, !dbg !12205
  store i32 0, i32* %23, align 4, !dbg !12206
  call void @mbedtls_ssl_init(%struct.mbedtls_ssl_context* %11), !dbg !12207
  %24 = load i64, i64* %5, align 8, !dbg !12208
  %25 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.182, i64 0, i64 0), i64 %24), !dbg !12209
  %26 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !12210
  %27 = getelementptr inbounds %struct.thread_info_t, %struct.thread_info_t* %26, i32 0, i32 2, !dbg !12212
  %28 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %27, align 8, !dbg !12212
  %29 = call i32 @mbedtls_ssl_setup(%struct.mbedtls_ssl_context* %11, %struct.mbedtls_ssl_config* %28), !dbg !12213
  store i32 %29, i32* %7, align 4, !dbg !12214
  %30 = icmp ne i32 %29, 0, !dbg !12215
  br i1 %30, label %31, label %36, !dbg !12216

31:                                               ; preds = %3
  %32 = load i64, i64* %5, align 8, !dbg !12217
  %33 = load i32, i32* %7, align 4, !dbg !12219
  %34 = sub nsw i32 0, %33, !dbg !12220
  %35 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.11.183, i64 0, i64 0), i64 %32, i32 %34), !dbg !12221
  br label %157, !dbg !12222

36:                                               ; preds = %3
  %37 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !12223
  %38 = getelementptr inbounds %struct.mbedtls_net_context, %struct.mbedtls_net_context* %37, i32 0, i32 0, !dbg !12224
  %39 = load i32, i32* %38, align 4, !dbg !12224
  %40 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.184, i64 0, i64 0), i32 %39), !dbg !12225
  %41 = load %struct.mbedtls_net_context*, %struct.mbedtls_net_context** %9, align 8, !dbg !12226
  %42 = bitcast %struct.mbedtls_net_context* %41 to i8*, !dbg !12226
  call void @mbedtls_ssl_set_bio(%struct.mbedtls_ssl_context* %11, i8* %42, i32 (i8*, i8*, i64)* @mbedtls_net_send_ocall, i32 (i8*, i8*, i64)* @mbedtls_net_recv_ocall, i32 (i8*, i8*, i64, i32)* null), !dbg !12227
  %43 = load i64, i64* %5, align 8, !dbg !12228
  %44 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.185, i64 0, i64 0), i64 %43), !dbg !12229
  br label %45, !dbg !12230

45:                                               ; preds = %59, %36
  %46 = call i32 @mbedtls_ssl_handshake(%struct.mbedtls_ssl_context* %11), !dbg !12231
  store i32 %46, i32* %7, align 4, !dbg !12232
  %47 = icmp ne i32 %46, 0, !dbg !12233
  br i1 %47, label %48, label %60, !dbg !12230

48:                                               ; preds = %45
  %49 = load i32, i32* %7, align 4, !dbg !12234
  %50 = icmp ne i32 %49, -26880, !dbg !12237
  br i1 %50, label %51, label %59, !dbg !12238

51:                                               ; preds = %48
  %52 = load i32, i32* %7, align 4, !dbg !12239
  %53 = icmp ne i32 %52, -26752, !dbg !12240
  br i1 %53, label %54, label %59, !dbg !12241

54:                                               ; preds = %51
  %55 = load i64, i64* %5, align 8, !dbg !12242
  %56 = load i32, i32* %7, align 4, !dbg !12244
  %57 = sub nsw i32 0, %56, !dbg !12245
  %58 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14.186, i64 0, i64 0), i64 %55, i32 %57), !dbg !12246
  br label %157, !dbg !12247

59:                                               ; preds = %51, %48
  br label %45, !dbg !12230, !llvm.loop !12248

60:                                               ; preds = %45
  %61 = load i64, i64* %5, align 8, !dbg !12250
  %62 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.187, i64 0, i64 0), i64 %61), !dbg !12251
  %63 = load i64, i64* %5, align 8, !dbg !12252
  %64 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.188, i64 0, i64 0), i64 %63), !dbg !12253
  br label %65, !dbg !12254

65:                                               ; preds = %103, %60
  store i32 1023, i32* %8, align 4, !dbg !12255
  %66 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0, !dbg !12257
  call void @llvm.memset.p0i8.i64(i8* align 16 %66, i8 0, i64 1024, i1 false), !dbg !12257
  %67 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0, !dbg !12258
  %68 = load i32, i32* %8, align 4, !dbg !12259
  %69 = sext i32 %68 to i64, !dbg !12259
  %70 = call i32 @mbedtls_ssl_read(%struct.mbedtls_ssl_context* %11, i8* %67, i64 %69), !dbg !12260
  store i32 %70, i32* %7, align 4, !dbg !12261
  %71 = load i32, i32* %7, align 4, !dbg !12262
  %72 = icmp eq i32 %71, -26880, !dbg !12264
  br i1 %72, label %76, label %73, !dbg !12265

73:                                               ; preds = %65
  %74 = load i32, i32* %7, align 4, !dbg !12266
  %75 = icmp eq i32 %74, -26752, !dbg !12267
  br i1 %75, label %76, label %77, !dbg !12268

76:                                               ; preds = %73, %65
  br label %103, !dbg !12269

77:                                               ; preds = %73
  %78 = load i32, i32* %7, align 4, !dbg !12270
  %79 = icmp sle i32 %78, 0, !dbg !12272
  br i1 %79, label %80, label %93, !dbg !12273

80:                                               ; preds = %77
  %81 = load i32, i32* %7, align 4, !dbg !12274
  switch i32 %81, label %88 [
    i32 -30848, label %82
    i32 -80, label %85
  ], !dbg !12276

82:                                               ; preds = %80
  %83 = load i64, i64* %5, align 8, !dbg !12277
  %84 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.17.189, i64 0, i64 0), i64 %83), !dbg !12279
  br label %157, !dbg !12280

85:                                               ; preds = %80
  %86 = load i64, i64* %5, align 8, !dbg !12281
  %87 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18.190, i64 0, i64 0), i64 %86), !dbg !12282
  br label %157, !dbg !12283

88:                                               ; preds = %80
  %89 = load i64, i64* %5, align 8, !dbg !12284
  %90 = load i32, i32* %7, align 4, !dbg !12285
  %91 = sub nsw i32 0, %90, !dbg !12286
  %92 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.19.191, i64 0, i64 0), i64 %89, i32 %91), !dbg !12287
  br label %157, !dbg !12288

93:                                               ; preds = %77
  %94 = load i32, i32* %7, align 4, !dbg !12289
  store i32 %94, i32* %8, align 4, !dbg !12290
  %95 = load i64, i64* %5, align 8, !dbg !12291
  %96 = load i32, i32* %8, align 4, !dbg !12292
  %97 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0, !dbg !12293
  %98 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20.192, i64 0, i64 0), i64 %95, i32 %96, i8* %97), !dbg !12294
  %99 = load i32, i32* %7, align 4, !dbg !12295
  %100 = icmp sgt i32 %99, 0, !dbg !12297
  br i1 %100, label %101, label %102, !dbg !12298

101:                                              ; preds = %93
  br label %104, !dbg !12299

102:                                              ; preds = %93
  br label %103, !dbg !12300

103:                                              ; preds = %102, %76
  br i1 true, label %65, label %104, !dbg !12300, !llvm.loop !12301

104:                                              ; preds = %103, %101
  %105 = load i64, i64* %5, align 8, !dbg !12303
  %106 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.193, i64 0, i64 0), i64 %105), !dbg !12304
  %107 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0, !dbg !12305
  %108 = call i8* @mbedtls_ssl_get_ciphersuite(%struct.mbedtls_ssl_context* %11), !dbg !12306
  %109 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %107, i64 1024, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.22.194, i64 0, i64 0), i8* %108), !dbg !12307
  store i32 %109, i32* %8, align 4, !dbg !12308
  br label %110, !dbg !12309

110:                                              ; preds = %132, %104
  %111 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0, !dbg !12310
  %112 = load i32, i32* %8, align 4, !dbg !12311
  %113 = sext i32 %112 to i64, !dbg !12311
  %114 = call i32 @mbedtls_ssl_write(%struct.mbedtls_ssl_context* %11, i8* %111, i64 %113), !dbg !12312
  store i32 %114, i32* %7, align 4, !dbg !12313
  %115 = icmp sle i32 %114, 0, !dbg !12314
  br i1 %115, label %116, label %133, !dbg !12309

116:                                              ; preds = %110
  %117 = load i32, i32* %7, align 4, !dbg !12315
  %118 = icmp eq i32 %117, -80, !dbg !12318
  br i1 %118, label %119, label %122, !dbg !12319

119:                                              ; preds = %116
  %120 = load i64, i64* %5, align 8, !dbg !12320
  %121 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.23.195, i64 0, i64 0), i64 %120), !dbg !12322
  br label %157, !dbg !12323

122:                                              ; preds = %116
  %123 = load i32, i32* %7, align 4, !dbg !12324
  %124 = icmp ne i32 %123, -26880, !dbg !12326
  br i1 %124, label %125, label %132, !dbg !12327

125:                                              ; preds = %122
  %126 = load i32, i32* %7, align 4, !dbg !12328
  %127 = icmp ne i32 %126, -26752, !dbg !12329
  br i1 %127, label %128, label %132, !dbg !12330

128:                                              ; preds = %125
  %129 = load i64, i64* %5, align 8, !dbg !12331
  %130 = load i32, i32* %7, align 4, !dbg !12333
  %131 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.24.196, i64 0, i64 0), i64 %129, i32 %130), !dbg !12334
  br label %157, !dbg !12335

132:                                              ; preds = %125, %122
  br label %110, !dbg !12309, !llvm.loop !12336

133:                                              ; preds = %110
  %134 = load i32, i32* %7, align 4, !dbg !12338
  store i32 %134, i32* %8, align 4, !dbg !12339
  %135 = load i64, i64* %5, align 8, !dbg !12340
  %136 = load i32, i32* %8, align 4, !dbg !12341
  %137 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0, !dbg !12342
  %138 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25.197, i64 0, i64 0), i64 %135, i32 %136, i8* %137), !dbg !12343
  %139 = load i64, i64* %5, align 8, !dbg !12344
  %140 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26.198, i64 0, i64 0), i64 %139), !dbg !12345
  br label %141, !dbg !12346

141:                                              ; preds = %154, %133
  %142 = call i32 @mbedtls_ssl_close_notify(%struct.mbedtls_ssl_context* %11), !dbg !12347
  store i32 %142, i32* %7, align 4, !dbg !12348
  %143 = icmp slt i32 %142, 0, !dbg !12349
  br i1 %143, label %144, label %155, !dbg !12346

144:                                              ; preds = %141
  %145 = load i32, i32* %7, align 4, !dbg !12350
  %146 = icmp ne i32 %145, -26880, !dbg !12353
  br i1 %146, label %147, label %154, !dbg !12354

147:                                              ; preds = %144
  %148 = load i32, i32* %7, align 4, !dbg !12355
  %149 = icmp ne i32 %148, -26752, !dbg !12356
  br i1 %149, label %150, label %154, !dbg !12357

150:                                              ; preds = %147
  %151 = load i64, i64* %5, align 8, !dbg !12358
  %152 = load i32, i32* %7, align 4, !dbg !12360
  %153 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.27.199, i64 0, i64 0), i64 %151, i32 %152), !dbg !12361
  br label %157, !dbg !12362

154:                                              ; preds = %147, %144
  br label %141, !dbg !12346, !llvm.loop !12363

155:                                              ; preds = %141
  %156 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.173, i64 0, i64 0)), !dbg !12365
  store i32 0, i32* %7, align 4, !dbg !12366
  br label %157, !dbg !12367

157:                                              ; preds = %155, %150, %128, %119, %88, %85, %82, %54, %31
  call void @llvm.dbg.label(metadata !12368), !dbg !12369
  %158 = load i32, i32* %7, align 4, !dbg !12370
  %159 = icmp ne i32 %158, 0, !dbg !12372
  br i1 %159, label %160, label %168, !dbg !12373

160:                                              ; preds = %157
  call void @llvm.dbg.declare(metadata [100 x i8]* %13, metadata !12374, metadata !DIExpression()), !dbg !12376
  %161 = load i32, i32* %7, align 4, !dbg !12377
  %162 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0, !dbg !12378
  call void @mbedtls_strerror(i32 %161, i8* %162, i64 100), !dbg !12379
  %163 = load i64, i64* %5, align 8, !dbg !12380
  %164 = load i32, i32* %7, align 4, !dbg !12381
  %165 = sub nsw i32 0, %164, !dbg !12382
  %166 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0, !dbg !12383
  %167 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28.200, i64 0, i64 0), i64 %163, i32 %165, i8* %166), !dbg !12384
  br label %168, !dbg !12385

168:                                              ; preds = %160, %157
  call void @mbedtls_ssl_free(%struct.mbedtls_ssl_context* %11), !dbg !12386
  %169 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !12387
  %170 = getelementptr inbounds %struct.thread_info_t, %struct.thread_info_t* %169, i32 0, i32 2, !dbg !12388
  store %struct.mbedtls_ssl_config* null, %struct.mbedtls_ssl_config** %170, align 8, !dbg !12389
  %171 = load %struct.thread_info_t*, %struct.thread_info_t** %6, align 8, !dbg !12390
  %172 = getelementptr inbounds %struct.thread_info_t, %struct.thread_info_t* %171, i32 0, i32 1, !dbg !12391
  store i32 1, i32* %172, align 4, !dbg !12392
  ret void, !dbg !12393
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ctr_drbg_init(%struct.mbedtls_ctr_drbg_context* %0) #0 !dbg !12394 {
  %2 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %2, metadata !12397, metadata !DIExpression()), !dbg !12398
  %3 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %2, align 8, !dbg !12399
  %4 = bitcast %struct.mbedtls_ctr_drbg_context* %3 to i8*, !dbg !12400
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 344, i1 false), !dbg !12400
  ret void, !dbg !12401
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ctr_drbg_seed_entropy_len(%struct.mbedtls_ctr_drbg_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i8* %3, i64 %4, i64 %5) #0 !dbg !12402 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %9 = alloca i32 (i8*, i8*, i64)*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca [32 x i8], align 16
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %8, metadata !12405, metadata !DIExpression()), !dbg !12406
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %9, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %9, metadata !12407, metadata !DIExpression()), !dbg !12408
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !12409, metadata !DIExpression()), !dbg !12410
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !12411, metadata !DIExpression()), !dbg !12412
  store i64 %4, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12413, metadata !DIExpression()), !dbg !12414
  store i64 %5, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !12415, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12417, metadata !DIExpression()), !dbg !12418
  call void @llvm.dbg.declare(metadata [32 x i8]* %15, metadata !12419, metadata !DIExpression()), !dbg !12420
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0, !dbg !12421
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 32, i1 false), !dbg !12421
  %17 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12422
  %18 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %17, i32 0, i32 5, !dbg !12423
  call void @mbedtls_aes_init(%struct.mbedtls_aes_context* %18), !dbg !12424
  %19 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %9, align 8, !dbg !12425
  %20 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12426
  %21 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %20, i32 0, i32 6, !dbg !12427
  store i32 (i8*, i8*, i64)* %19, i32 (i8*, i8*, i64)** %21, align 8, !dbg !12428
  %22 = load i8*, i8** %10, align 8, !dbg !12429
  %23 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12430
  %24 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %23, i32 0, i32 7, !dbg !12431
  store i8* %22, i8** %24, align 8, !dbg !12432
  %25 = load i64, i64* %13, align 8, !dbg !12433
  %26 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12434
  %27 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %26, i32 0, i32 3, !dbg !12435
  store i64 %25, i64* %27, align 8, !dbg !12436
  %28 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12437
  %29 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %28, i32 0, i32 4, !dbg !12438
  store i32 10000, i32* %29, align 8, !dbg !12439
  %30 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12440
  %31 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %30, i32 0, i32 5, !dbg !12441
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0, !dbg !12442
  %33 = call i32 @mbedtls_aes_setkey_enc(%struct.mbedtls_aes_context* %31, i8* %32, i32 256), !dbg !12443
  %34 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !12444
  %35 = load i8*, i8** %11, align 8, !dbg !12446
  %36 = load i64, i64* %12, align 8, !dbg !12447
  %37 = call i32 @mbedtls_ctr_drbg_reseed(%struct.mbedtls_ctr_drbg_context* %34, i8* %35, i64 %36), !dbg !12448
  store i32 %37, i32* %14, align 4, !dbg !12449
  %38 = icmp ne i32 %37, 0, !dbg !12450
  br i1 %38, label %39, label %41, !dbg !12451

39:                                               ; preds = %6
  %40 = load i32, i32* %14, align 4, !dbg !12452
  store i32 %40, i32* %7, align 4, !dbg !12453
  br label %42, !dbg !12453

41:                                               ; preds = %6
  store i32 0, i32* %7, align 4, !dbg !12454
  br label %42, !dbg !12454

42:                                               ; preds = %41, %39
  %43 = load i32, i32* %7, align 4, !dbg !12455
  ret i32 %43, !dbg !12455
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ctr_drbg_reseed(%struct.mbedtls_ctr_drbg_context* %0, i8* %1, i64 %2) #0 !dbg !12456 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [384 x i8], align 16
  %9 = alloca i64, align 8
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %5, metadata !12459, metadata !DIExpression()), !dbg !12460
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12461, metadata !DIExpression()), !dbg !12462
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !12463, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.declare(metadata [384 x i8]* %8, metadata !12465, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.declare(metadata i64* %9, metadata !12470, metadata !DIExpression()), !dbg !12471
  store i64 0, i64* %9, align 8, !dbg !12471
  %10 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12472
  %11 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %10, i32 0, i32 3, !dbg !12474
  %12 = load i64, i64* %11, align 8, !dbg !12474
  %13 = icmp ugt i64 %12, 384, !dbg !12475
  br i1 %13, label %21, label %14, !dbg !12476

14:                                               ; preds = %3
  %15 = load i64, i64* %7, align 8, !dbg !12477
  %16 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12478
  %17 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %16, i32 0, i32 3, !dbg !12479
  %18 = load i64, i64* %17, align 8, !dbg !12479
  %19 = sub i64 384, %18, !dbg !12480
  %20 = icmp ugt i64 %15, %19, !dbg !12481
  br i1 %20, label %21, label %22, !dbg !12482

21:                                               ; preds = %14, %3
  store i32 -56, i32* %4, align 4, !dbg !12483
  br label %67, !dbg !12483

22:                                               ; preds = %14
  %23 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i64 0, !dbg !12484
  call void @llvm.memset.p0i8.i64(i8* align 16 %23, i8 0, i64 384, i1 false), !dbg !12484
  %24 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12485
  %25 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %24, i32 0, i32 6, !dbg !12487
  %26 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %25, align 8, !dbg !12487
  %27 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12488
  %28 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %27, i32 0, i32 7, !dbg !12489
  %29 = load i8*, i8** %28, align 8, !dbg !12489
  %30 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i64 0, !dbg !12490
  %31 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12491
  %32 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %31, i32 0, i32 3, !dbg !12492
  %33 = load i64, i64* %32, align 8, !dbg !12492
  %34 = call i32 %26(i8* %29, i8* %30, i64 %33), !dbg !12485
  %35 = icmp ne i32 0, %34, !dbg !12493
  br i1 %35, label %36, label %37, !dbg !12494

36:                                               ; preds = %22
  store i32 -52, i32* %4, align 4, !dbg !12495
  br label %67, !dbg !12495

37:                                               ; preds = %22
  %38 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12497
  %39 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %38, i32 0, i32 3, !dbg !12498
  %40 = load i64, i64* %39, align 8, !dbg !12498
  %41 = load i64, i64* %9, align 8, !dbg !12499
  %42 = add i64 %41, %40, !dbg !12499
  store i64 %42, i64* %9, align 8, !dbg !12499
  %43 = load i8*, i8** %6, align 8, !dbg !12500
  %44 = icmp ne i8* %43, null, !dbg !12500
  br i1 %44, label %45, label %57, !dbg !12502

45:                                               ; preds = %37
  %46 = load i64, i64* %7, align 8, !dbg !12503
  %47 = icmp ne i64 %46, 0, !dbg !12503
  br i1 %47, label %48, label %57, !dbg !12504

48:                                               ; preds = %45
  %49 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i64 0, !dbg !12505
  %50 = load i64, i64* %9, align 8, !dbg !12507
  %51 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !12508
  %52 = load i8*, i8** %6, align 8, !dbg !12509
  %53 = load i64, i64* %7, align 8, !dbg !12510
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %52, i64 %53, i1 false), !dbg !12511
  %54 = load i64, i64* %7, align 8, !dbg !12512
  %55 = load i64, i64* %9, align 8, !dbg !12513
  %56 = add i64 %55, %54, !dbg !12513
  store i64 %56, i64* %9, align 8, !dbg !12513
  br label %57, !dbg !12514

57:                                               ; preds = %48, %45, %37
  %58 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i64 0, !dbg !12515
  %59 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i64 0, !dbg !12516
  %60 = load i64, i64* %9, align 8, !dbg !12517
  %61 = call i32 @block_cipher_df(i8* %58, i8* %59, i64 %60), !dbg !12518
  %62 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12519
  %63 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i64 0, !dbg !12520
  %64 = call i32 @ctr_drbg_update_internal(%struct.mbedtls_ctr_drbg_context* %62, i8* %63), !dbg !12521
  %65 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %5, align 8, !dbg !12522
  %66 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %65, i32 0, i32 1, !dbg !12523
  store i32 1, i32* %66, align 8, !dbg !12524
  store i32 0, i32* %4, align 4, !dbg !12525
  br label %67, !dbg !12525

67:                                               ; preds = %57, %36, %21
  %68 = load i32, i32* %4, align 4, !dbg !12526
  ret i32 %68, !dbg !12526
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @block_cipher_df(i8* %0, i8* %1, i64 %2) #0 !dbg !12527 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [416 x i8], align 16
  %9 = alloca [48 x i8], align 16
  %10 = alloca [32 x i8], align 16
  %11 = alloca [16 x i8], align 16
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.mbedtls_aes_context, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12530, metadata !DIExpression()), !dbg !12531
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12532, metadata !DIExpression()), !dbg !12533
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata [416 x i8]* %8, metadata !12536, metadata !DIExpression()), !dbg !12540
  call void @llvm.dbg.declare(metadata [48 x i8]* %9, metadata !12541, metadata !DIExpression()), !dbg !12542
  call void @llvm.dbg.declare(metadata [32 x i8]* %10, metadata !12543, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.declare(metadata [16 x i8]* %11, metadata !12545, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.declare(metadata i8** %12, metadata !12547, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.declare(metadata i8** %13, metadata !12549, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.declare(metadata %struct.mbedtls_aes_context* %14, metadata !12551, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i32* %16, metadata !12555, metadata !DIExpression()), !dbg !12556
  call void @llvm.dbg.declare(metadata i64* %17, metadata !12557, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.declare(metadata i64* %18, metadata !12559, metadata !DIExpression()), !dbg !12560
  %19 = load i64, i64* %7, align 8, !dbg !12561
  %20 = icmp ugt i64 %19, 384, !dbg !12563
  br i1 %20, label %21, label %22, !dbg !12564

21:                                               ; preds = %3
  store i32 -56, i32* %4, align 4, !dbg !12565
  br label %156, !dbg !12565

22:                                               ; preds = %3
  %23 = getelementptr inbounds [416 x i8], [416 x i8]* %8, i64 0, i64 0, !dbg !12566
  call void @llvm.memset.p0i8.i64(i8* align 16 %23, i8 0, i64 416, i1 false), !dbg !12566
  call void @mbedtls_aes_init(%struct.mbedtls_aes_context* %14), !dbg !12567
  %24 = getelementptr inbounds [416 x i8], [416 x i8]* %8, i64 0, i64 0, !dbg !12568
  %25 = getelementptr inbounds i8, i8* %24, i64 16, !dbg !12569
  store i8* %25, i8** %12, align 8, !dbg !12570
  %26 = load i64, i64* %7, align 8, !dbg !12571
  %27 = lshr i64 %26, 24, !dbg !12572
  %28 = and i64 %27, 255, !dbg !12573
  %29 = trunc i64 %28 to i8, !dbg !12574
  %30 = load i8*, i8** %12, align 8, !dbg !12575
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !12575
  store i8* %31, i8** %12, align 8, !dbg !12575
  store i8 %29, i8* %30, align 1, !dbg !12576
  %32 = load i64, i64* %7, align 8, !dbg !12577
  %33 = lshr i64 %32, 16, !dbg !12578
  %34 = and i64 %33, 255, !dbg !12579
  %35 = trunc i64 %34 to i8, !dbg !12580
  %36 = load i8*, i8** %12, align 8, !dbg !12581
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !12581
  store i8* %37, i8** %12, align 8, !dbg !12581
  store i8 %35, i8* %36, align 1, !dbg !12582
  %38 = load i64, i64* %7, align 8, !dbg !12583
  %39 = lshr i64 %38, 8, !dbg !12584
  %40 = and i64 %39, 255, !dbg !12585
  %41 = trunc i64 %40 to i8, !dbg !12586
  %42 = load i8*, i8** %12, align 8, !dbg !12587
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !12587
  store i8* %43, i8** %12, align 8, !dbg !12587
  store i8 %41, i8* %42, align 1, !dbg !12588
  %44 = load i64, i64* %7, align 8, !dbg !12589
  %45 = and i64 %44, 255, !dbg !12590
  %46 = trunc i64 %45 to i8, !dbg !12591
  %47 = load i8*, i8** %12, align 8, !dbg !12592
  %48 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !12592
  store i8* %48, i8** %12, align 8, !dbg !12592
  store i8 %46, i8* %47, align 1, !dbg !12593
  %49 = load i8*, i8** %12, align 8, !dbg !12594
  %50 = getelementptr inbounds i8, i8* %49, i64 3, !dbg !12594
  store i8* %50, i8** %12, align 8, !dbg !12594
  %51 = load i8*, i8** %12, align 8, !dbg !12595
  %52 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !12595
  store i8* %52, i8** %12, align 8, !dbg !12595
  store i8 48, i8* %51, align 1, !dbg !12596
  %53 = load i8*, i8** %12, align 8, !dbg !12597
  %54 = load i8*, i8** %6, align 8, !dbg !12598
  %55 = load i64, i64* %7, align 8, !dbg !12599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 %55, i1 false), !dbg !12600
  %56 = load i8*, i8** %12, align 8, !dbg !12601
  %57 = load i64, i64* %7, align 8, !dbg !12602
  %58 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !12601
  store i8 -128, i8* %58, align 1, !dbg !12603
  %59 = load i64, i64* %7, align 8, !dbg !12604
  %60 = add i64 24, %59, !dbg !12605
  %61 = add i64 %60, 1, !dbg !12606
  store i64 %61, i64* %17, align 8, !dbg !12607
  store i32 0, i32* %15, align 4, !dbg !12608
  br label %62, !dbg !12610

62:                                               ; preds = %71, %22
  %63 = load i32, i32* %15, align 4, !dbg !12611
  %64 = icmp slt i32 %63, 32, !dbg !12613
  br i1 %64, label %65, label %74, !dbg !12614

65:                                               ; preds = %62
  %66 = load i32, i32* %15, align 4, !dbg !12615
  %67 = trunc i32 %66 to i8, !dbg !12615
  %68 = load i32, i32* %15, align 4, !dbg !12616
  %69 = sext i32 %68 to i64, !dbg !12617
  %70 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %69, !dbg !12617
  store i8 %67, i8* %70, align 1, !dbg !12618
  br label %71, !dbg !12617

71:                                               ; preds = %65
  %72 = load i32, i32* %15, align 4, !dbg !12619
  %73 = add nsw i32 %72, 1, !dbg !12619
  store i32 %73, i32* %15, align 4, !dbg !12619
  br label %62, !dbg !12620, !llvm.loop !12621

74:                                               ; preds = %62
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0, !dbg !12623
  %76 = call i32 @mbedtls_aes_setkey_enc(%struct.mbedtls_aes_context* %14, i8* %75, i32 256), !dbg !12624
  store i32 0, i32* %16, align 4, !dbg !12625
  br label %77, !dbg !12627

77:                                               ; preds = %132, %74
  %78 = load i32, i32* %16, align 4, !dbg !12628
  %79 = icmp slt i32 %78, 48, !dbg !12630
  br i1 %79, label %80, label %135, !dbg !12631

80:                                               ; preds = %77
  %81 = getelementptr inbounds [416 x i8], [416 x i8]* %8, i64 0, i64 0, !dbg !12632
  store i8* %81, i8** %12, align 8, !dbg !12634
  %82 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0, !dbg !12635
  call void @llvm.memset.p0i8.i64(i8* align 16 %82, i8 0, i64 16, i1 false), !dbg !12635
  %83 = load i64, i64* %17, align 8, !dbg !12636
  store i64 %83, i64* %18, align 8, !dbg !12637
  br label %84, !dbg !12638

84:                                               ; preds = %116, %80
  %85 = load i64, i64* %18, align 8, !dbg !12639
  %86 = icmp ugt i64 %85, 0, !dbg !12640
  br i1 %86, label %87, label %123, !dbg !12638

87:                                               ; preds = %84
  store i32 0, i32* %15, align 4, !dbg !12641
  br label %88, !dbg !12644

88:                                               ; preds = %105, %87
  %89 = load i32, i32* %15, align 4, !dbg !12645
  %90 = icmp slt i32 %89, 16, !dbg !12647
  br i1 %90, label %91, label %108, !dbg !12648

91:                                               ; preds = %88
  %92 = load i8*, i8** %12, align 8, !dbg !12649
  %93 = load i32, i32* %15, align 4, !dbg !12650
  %94 = sext i32 %93 to i64, !dbg !12649
  %95 = getelementptr inbounds i8, i8* %92, i64 %94, !dbg !12649
  %96 = load i8, i8* %95, align 1, !dbg !12649
  %97 = zext i8 %96 to i32, !dbg !12649
  %98 = load i32, i32* %15, align 4, !dbg !12651
  %99 = sext i32 %98 to i64, !dbg !12652
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 %99, !dbg !12652
  %101 = load i8, i8* %100, align 1, !dbg !12653
  %102 = zext i8 %101 to i32, !dbg !12653
  %103 = xor i32 %102, %97, !dbg !12653
  %104 = trunc i32 %103 to i8, !dbg !12653
  store i8 %104, i8* %100, align 1, !dbg !12653
  br label %105, !dbg !12652

105:                                              ; preds = %91
  %106 = load i32, i32* %15, align 4, !dbg !12654
  %107 = add nsw i32 %106, 1, !dbg !12654
  store i32 %107, i32* %15, align 4, !dbg !12654
  br label %88, !dbg !12655, !llvm.loop !12656

108:                                              ; preds = %88
  %109 = load i8*, i8** %12, align 8, !dbg !12658
  %110 = getelementptr inbounds i8, i8* %109, i64 16, !dbg !12658
  store i8* %110, i8** %12, align 8, !dbg !12658
  %111 = load i64, i64* %18, align 8, !dbg !12659
  %112 = icmp uge i64 %111, 16, !dbg !12660
  br i1 %112, label %113, label %114, !dbg !12661

113:                                              ; preds = %108
  br label %116, !dbg !12661

114:                                              ; preds = %108
  %115 = load i64, i64* %18, align 8, !dbg !12662
  br label %116, !dbg !12661

116:                                              ; preds = %114, %113
  %117 = phi i64 [ 16, %113 ], [ %115, %114 ], !dbg !12661
  %118 = load i64, i64* %18, align 8, !dbg !12663
  %119 = sub i64 %118, %117, !dbg !12663
  store i64 %119, i64* %18, align 8, !dbg !12663
  %120 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0, !dbg !12664
  %121 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0, !dbg !12665
  %122 = call i32 @mbedtls_aes_crypt_ecb(%struct.mbedtls_aes_context* %14, i32 1, i8* %120, i8* %121), !dbg !12666
  br label %84, !dbg !12638, !llvm.loop !12667

123:                                              ; preds = %84
  %124 = getelementptr inbounds [48 x i8], [48 x i8]* %9, i64 0, i64 0, !dbg !12669
  %125 = load i32, i32* %16, align 4, !dbg !12670
  %126 = sext i32 %125 to i64, !dbg !12671
  %127 = getelementptr inbounds i8, i8* %124, i64 %126, !dbg !12671
  %128 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0, !dbg !12672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %127, i8* align 16 %128, i64 16, i1 false), !dbg !12672
  %129 = getelementptr inbounds [416 x i8], [416 x i8]* %8, i64 0, i64 3, !dbg !12673
  %130 = load i8, i8* %129, align 1, !dbg !12674
  %131 = add i8 %130, 1, !dbg !12674
  store i8 %131, i8* %129, align 1, !dbg !12674
  br label %132, !dbg !12675

132:                                              ; preds = %123
  %133 = load i32, i32* %16, align 4, !dbg !12676
  %134 = add nsw i32 %133, 16, !dbg !12676
  store i32 %134, i32* %16, align 4, !dbg !12676
  br label %77, !dbg !12677, !llvm.loop !12678

135:                                              ; preds = %77
  %136 = getelementptr inbounds [48 x i8], [48 x i8]* %9, i64 0, i64 0, !dbg !12680
  %137 = call i32 @mbedtls_aes_setkey_enc(%struct.mbedtls_aes_context* %14, i8* %136, i32 256), !dbg !12681
  %138 = getelementptr inbounds [48 x i8], [48 x i8]* %9, i64 0, i64 0, !dbg !12682
  %139 = getelementptr inbounds i8, i8* %138, i64 32, !dbg !12683
  store i8* %139, i8** %13, align 8, !dbg !12684
  %140 = load i8*, i8** %5, align 8, !dbg !12685
  store i8* %140, i8** %12, align 8, !dbg !12686
  store i32 0, i32* %16, align 4, !dbg !12687
  br label %141, !dbg !12689

141:                                              ; preds = %152, %135
  %142 = load i32, i32* %16, align 4, !dbg !12690
  %143 = icmp slt i32 %142, 48, !dbg !12692
  br i1 %143, label %144, label %155, !dbg !12693

144:                                              ; preds = %141
  %145 = load i8*, i8** %13, align 8, !dbg !12694
  %146 = load i8*, i8** %13, align 8, !dbg !12696
  %147 = call i32 @mbedtls_aes_crypt_ecb(%struct.mbedtls_aes_context* %14, i32 1, i8* %145, i8* %146), !dbg !12697
  %148 = load i8*, i8** %12, align 8, !dbg !12698
  %149 = load i8*, i8** %13, align 8, !dbg !12699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %148, i8* align 1 %149, i64 16, i1 false), !dbg !12700
  %150 = load i8*, i8** %12, align 8, !dbg !12701
  %151 = getelementptr inbounds i8, i8* %150, i64 16, !dbg !12701
  store i8* %151, i8** %12, align 8, !dbg !12701
  br label %152, !dbg !12702

152:                                              ; preds = %144
  %153 = load i32, i32* %16, align 4, !dbg !12703
  %154 = add nsw i32 %153, 16, !dbg !12703
  store i32 %154, i32* %16, align 4, !dbg !12703
  br label %141, !dbg !12704, !llvm.loop !12705

155:                                              ; preds = %141
  call void @mbedtls_aes_free(%struct.mbedtls_aes_context* %14), !dbg !12707
  store i32 0, i32* %4, align 4, !dbg !12708
  br label %156, !dbg !12708

156:                                              ; preds = %155, %21
  %157 = load i32, i32* %4, align 4, !dbg !12709
  ret i32 %157, !dbg !12709
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ctr_drbg_update_internal(%struct.mbedtls_ctr_drbg_context* %0, i8* %1) #0 !dbg !12710 {
  %3 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [48 x i8], align 16
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %3, metadata !12713, metadata !DIExpression()), !dbg !12714
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12715, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.declare(metadata [48 x i8]* %5, metadata !12717, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12719, metadata !DIExpression()), !dbg !12720
  %9 = getelementptr inbounds [48 x i8], [48 x i8]* %5, i64 0, i64 0, !dbg !12721
  store i8* %9, i8** %6, align 8, !dbg !12720
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12722, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12724, metadata !DIExpression()), !dbg !12725
  %10 = getelementptr inbounds [48 x i8], [48 x i8]* %5, i64 0, i64 0, !dbg !12726
  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 48, i1 false), !dbg !12726
  store i32 0, i32* %8, align 4, !dbg !12727
  br label %11, !dbg !12729

11:                                               ; preds = %44, %2
  %12 = load i32, i32* %8, align 4, !dbg !12730
  %13 = icmp slt i32 %12, 48, !dbg !12732
  br i1 %13, label %14, label %47, !dbg !12733

14:                                               ; preds = %11
  store i32 16, i32* %7, align 4, !dbg !12734
  br label %15, !dbg !12737

15:                                               ; preds = %31, %14
  %16 = load i32, i32* %7, align 4, !dbg !12738
  %17 = icmp sgt i32 %16, 0, !dbg !12740
  br i1 %17, label %18, label %34, !dbg !12741

18:                                               ; preds = %15
  %19 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12742
  %20 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %19, i32 0, i32 0, !dbg !12744
  %21 = load i32, i32* %7, align 4, !dbg !12745
  %22 = sub nsw i32 %21, 1, !dbg !12746
  %23 = sext i32 %22 to i64, !dbg !12742
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %20, i64 0, i64 %23, !dbg !12742
  %25 = load i8, i8* %24, align 1, !dbg !12747
  %26 = add i8 %25, 1, !dbg !12747
  store i8 %26, i8* %24, align 1, !dbg !12747
  %27 = zext i8 %26 to i32, !dbg !12747
  %28 = icmp ne i32 %27, 0, !dbg !12748
  br i1 %28, label %29, label %30, !dbg !12749

29:                                               ; preds = %18
  br label %34, !dbg !12750

30:                                               ; preds = %18
  br label %31, !dbg !12751

31:                                               ; preds = %30
  %32 = load i32, i32* %7, align 4, !dbg !12752
  %33 = add nsw i32 %32, -1, !dbg !12752
  store i32 %33, i32* %7, align 4, !dbg !12752
  br label %15, !dbg !12753, !llvm.loop !12754

34:                                               ; preds = %29, %15
  %35 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12756
  %36 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %35, i32 0, i32 5, !dbg !12757
  %37 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12758
  %38 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %37, i32 0, i32 0, !dbg !12759
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %38, i64 0, i64 0, !dbg !12758
  %40 = load i8*, i8** %6, align 8, !dbg !12760
  %41 = call i32 @mbedtls_aes_crypt_ecb(%struct.mbedtls_aes_context* %36, i32 1, i8* %39, i8* %40), !dbg !12761
  %42 = load i8*, i8** %6, align 8, !dbg !12762
  %43 = getelementptr inbounds i8, i8* %42, i64 16, !dbg !12762
  store i8* %43, i8** %6, align 8, !dbg !12762
  br label %44, !dbg !12763

44:                                               ; preds = %34
  %45 = load i32, i32* %8, align 4, !dbg !12764
  %46 = add nsw i32 %45, 16, !dbg !12764
  store i32 %46, i32* %8, align 4, !dbg !12764
  br label %11, !dbg !12765, !llvm.loop !12766

47:                                               ; preds = %11
  store i32 0, i32* %7, align 4, !dbg !12768
  br label %48, !dbg !12770

48:                                               ; preds = %65, %47
  %49 = load i32, i32* %7, align 4, !dbg !12771
  %50 = icmp slt i32 %49, 48, !dbg !12773
  br i1 %50, label %51, label %68, !dbg !12774

51:                                               ; preds = %48
  %52 = load i8*, i8** %4, align 8, !dbg !12775
  %53 = load i32, i32* %7, align 4, !dbg !12776
  %54 = sext i32 %53 to i64, !dbg !12775
  %55 = getelementptr inbounds i8, i8* %52, i64 %54, !dbg !12775
  %56 = load i8, i8* %55, align 1, !dbg !12775
  %57 = zext i8 %56 to i32, !dbg !12775
  %58 = load i32, i32* %7, align 4, !dbg !12777
  %59 = sext i32 %58 to i64, !dbg !12778
  %60 = getelementptr inbounds [48 x i8], [48 x i8]* %5, i64 0, i64 %59, !dbg !12778
  %61 = load i8, i8* %60, align 1, !dbg !12779
  %62 = zext i8 %61 to i32, !dbg !12779
  %63 = xor i32 %62, %57, !dbg !12779
  %64 = trunc i32 %63 to i8, !dbg !12779
  store i8 %64, i8* %60, align 1, !dbg !12779
  br label %65, !dbg !12778

65:                                               ; preds = %51
  %66 = load i32, i32* %7, align 4, !dbg !12780
  %67 = add nsw i32 %66, 1, !dbg !12780
  store i32 %67, i32* %7, align 4, !dbg !12780
  br label %48, !dbg !12781, !llvm.loop !12782

68:                                               ; preds = %48
  %69 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12784
  %70 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %69, i32 0, i32 5, !dbg !12785
  %71 = getelementptr inbounds [48 x i8], [48 x i8]* %5, i64 0, i64 0, !dbg !12786
  %72 = call i32 @mbedtls_aes_setkey_enc(%struct.mbedtls_aes_context* %70, i8* %71, i32 256), !dbg !12787
  %73 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12788
  %74 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %73, i32 0, i32 0, !dbg !12789
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %74, i64 0, i64 0, !dbg !12790
  %76 = getelementptr inbounds [48 x i8], [48 x i8]* %5, i64 0, i64 0, !dbg !12791
  %77 = getelementptr inbounds i8, i8* %76, i64 32, !dbg !12792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 1 %77, i64 16, i1 false), !dbg !12790
  ret i32 0, !dbg !12793
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ctr_drbg_seed(%struct.mbedtls_ctr_drbg_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i8* %3, i64 %4) #0 !dbg !12794 {
  %6 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %7 = alloca i32 (i8*, i8*, i64)*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %6, metadata !12797, metadata !DIExpression()), !dbg !12798
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %7, metadata !12799, metadata !DIExpression()), !dbg !12800
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12801, metadata !DIExpression()), !dbg !12802
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !12803, metadata !DIExpression()), !dbg !12804
  store i64 %4, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !12805, metadata !DIExpression()), !dbg !12806
  %11 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %6, align 8, !dbg !12807
  %12 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %7, align 8, !dbg !12808
  %13 = load i8*, i8** %8, align 8, !dbg !12809
  %14 = load i8*, i8** %9, align 8, !dbg !12810
  %15 = load i64, i64* %10, align 8, !dbg !12811
  %16 = call i32 @mbedtls_ctr_drbg_seed_entropy_len(%struct.mbedtls_ctr_drbg_context* %11, i32 (i8*, i8*, i64)* %12, i8* %13, i8* %14, i64 %15, i64 48), !dbg !12812
  ret i32 %16, !dbg !12813
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ctr_drbg_free(%struct.mbedtls_ctr_drbg_context* %0) #0 !dbg !12814 {
  %2 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %2, metadata !12815, metadata !DIExpression()), !dbg !12816
  %3 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %2, align 8, !dbg !12817
  %4 = icmp eq %struct.mbedtls_ctr_drbg_context* %3, null, !dbg !12819
  br i1 %4, label %5, label %6, !dbg !12820

5:                                                ; preds = %1
  br label %11, !dbg !12821

6:                                                ; preds = %1
  %7 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %2, align 8, !dbg !12822
  %8 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %7, i32 0, i32 5, !dbg !12823
  call void @mbedtls_aes_free(%struct.mbedtls_aes_context* %8), !dbg !12824
  %9 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %2, align 8, !dbg !12825
  %10 = bitcast %struct.mbedtls_ctr_drbg_context* %9 to i8*, !dbg !12825
  call void @mbedtls_zeroize(i8* %10, i64 344), !dbg !12826
  br label %11, !dbg !12827

11:                                               ; preds = %6, %5
  ret void, !dbg !12827
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize(i8* %0, i64 %1) #0 !dbg !12828 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !12831, metadata !DIExpression()), !dbg !12832
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !12833, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12835, metadata !DIExpression()), !dbg !12838
  %6 = load i8*, i8** %3, align 8, !dbg !12839
  store i8* %6, i8** %5, align 8, !dbg !12838
  br label %7, !dbg !12840

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !12841
  %9 = add i64 %8, -1, !dbg !12841
  store i64 %9, i64* %4, align 8, !dbg !12841
  %10 = icmp ne i64 %8, 0, !dbg !12840
  br i1 %10, label %11, label %14, !dbg !12840

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !12842
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !12842
  store i8* %13, i8** %5, align 8, !dbg !12842
  store volatile i8 0, i8* %12, align 1, !dbg !12843
  br label %7, !dbg !12840, !llvm.loop !12844

14:                                               ; preds = %7
  ret void, !dbg !12846
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ctr_drbg_set_prediction_resistance(%struct.mbedtls_ctr_drbg_context* %0, i32 %1) #0 !dbg !12847 {
  %3 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %4 = alloca i32, align 4
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %3, metadata !12850, metadata !DIExpression()), !dbg !12851
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12852, metadata !DIExpression()), !dbg !12853
  %5 = load i32, i32* %4, align 4, !dbg !12854
  %6 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12855
  %7 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %6, i32 0, i32 2, !dbg !12856
  store i32 %5, i32* %7, align 4, !dbg !12857
  ret void, !dbg !12858
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ctr_drbg_set_entropy_len(%struct.mbedtls_ctr_drbg_context* %0, i64 %1) #0 !dbg !12859 {
  %3 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %4 = alloca i64, align 8
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %3, metadata !12862, metadata !DIExpression()), !dbg !12863
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !12864, metadata !DIExpression()), !dbg !12865
  %5 = load i64, i64* %4, align 8, !dbg !12866
  %6 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12867
  %7 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %6, i32 0, i32 3, !dbg !12868
  store i64 %5, i64* %7, align 8, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ctr_drbg_set_reseed_interval(%struct.mbedtls_ctr_drbg_context* %0, i32 %1) #0 !dbg !12871 {
  %3 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %4 = alloca i32, align 4
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %3, metadata !12872, metadata !DIExpression()), !dbg !12873
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12874, metadata !DIExpression()), !dbg !12875
  %5 = load i32, i32* %4, align 4, !dbg !12876
  %6 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %3, align 8, !dbg !12877
  %7 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %6, i32 0, i32 4, !dbg !12878
  store i32 %5, i32* %7, align 8, !dbg !12879
  ret void, !dbg !12880
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ctr_drbg_update(%struct.mbedtls_ctr_drbg_context* %0, i8* %1, i64 %2) #0 !dbg !12881 {
  %4 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca [48 x i8], align 16
  store %struct.mbedtls_ctr_drbg_context* %0, %struct.mbedtls_ctr_drbg_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %4, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12886, metadata !DIExpression()), !dbg !12887
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !12888, metadata !DIExpression()), !dbg !12889
  call void @llvm.dbg.declare(metadata [48 x i8]* %7, metadata !12890, metadata !DIExpression()), !dbg !12891
  %8 = load i64, i64* %6, align 8, !dbg !12892
  %9 = icmp ugt i64 %8, 0, !dbg !12894
  br i1 %9, label %10, label %22, !dbg !12895

10:                                               ; preds = %3
  %11 = load i64, i64* %6, align 8, !dbg !12896
  %12 = icmp ugt i64 %11, 384, !dbg !12899
  br i1 %12, label %13, label %14, !dbg !12900

13:                                               ; preds = %10
  store i64 384, i64* %6, align 8, !dbg !12901
  br label %14, !dbg !12902

14:                                               ; preds = %13, %10
  %15 = getelementptr inbounds [48 x i8], [48 x i8]* %7, i64 0, i64 0, !dbg !12903
  %16 = load i8*, i8** %5, align 8, !dbg !12904
  %17 = load i64, i64* %6, align 8, !dbg !12905
  %18 = call i32 @block_cipher_df(i8* %15, i8* %16, i64 %17), !dbg !12906
  %19 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %4, align 8, !dbg !12907
  %20 = getelementptr inbounds [48 x i8], [48 x i8]* %7, i64 0, i64 0, !dbg !12908
  %21 = call i32 @ctr_drbg_update_internal(%struct.mbedtls_ctr_drbg_context* %19, i8* %20), !dbg !12909
  br label %22, !dbg !12910

22:                                               ; preds = %14, %3
  ret void, !dbg !12911
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ctr_drbg_random_with_add(i8* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 !dbg !12912 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  %14 = alloca [48 x i8], align 16
  %15 = alloca i8*, align 8
  %16 = alloca [16 x i8], align 16
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12915, metadata !DIExpression()), !dbg !12916
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12917, metadata !DIExpression()), !dbg !12918
  store i64 %2, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !12919, metadata !DIExpression()), !dbg !12920
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !12921, metadata !DIExpression()), !dbg !12922
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !12923, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12925, metadata !DIExpression()), !dbg !12926
  store i32 0, i32* %12, align 4, !dbg !12926
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %13, metadata !12927, metadata !DIExpression()), !dbg !12928
  %19 = load i8*, i8** %7, align 8, !dbg !12929
  %20 = bitcast i8* %19 to %struct.mbedtls_ctr_drbg_context*, !dbg !12930
  store %struct.mbedtls_ctr_drbg_context* %20, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !12928
  call void @llvm.dbg.declare(metadata [48 x i8]* %14, metadata !12931, metadata !DIExpression()), !dbg !12932
  call void @llvm.dbg.declare(metadata i8** %15, metadata !12933, metadata !DIExpression()), !dbg !12934
  %21 = load i8*, i8** %8, align 8, !dbg !12935
  store i8* %21, i8** %15, align 8, !dbg !12934
  call void @llvm.dbg.declare(metadata [16 x i8]* %16, metadata !12936, metadata !DIExpression()), !dbg !12937
  call void @llvm.dbg.declare(metadata i32* %17, metadata !12938, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.declare(metadata i64* %18, metadata !12940, metadata !DIExpression()), !dbg !12941
  %22 = load i64, i64* %9, align 8, !dbg !12942
  %23 = icmp ugt i64 %22, 1024, !dbg !12944
  br i1 %23, label %24, label %25, !dbg !12945

24:                                               ; preds = %5
  store i32 -54, i32* %6, align 4, !dbg !12946
  br label %119, !dbg !12946

25:                                               ; preds = %5
  %26 = load i64, i64* %11, align 8, !dbg !12947
  %27 = icmp ugt i64 %26, 256, !dbg !12949
  br i1 %27, label %28, label %29, !dbg !12950

28:                                               ; preds = %25
  store i32 -56, i32* %6, align 4, !dbg !12951
  br label %119, !dbg !12951

29:                                               ; preds = %25
  %30 = getelementptr inbounds [48 x i8], [48 x i8]* %14, i64 0, i64 0, !dbg !12952
  call void @llvm.memset.p0i8.i64(i8* align 16 %30, i8 0, i64 48, i1 false), !dbg !12952
  %31 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !12953
  %32 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %31, i32 0, i32 1, !dbg !12955
  %33 = load i32, i32* %32, align 8, !dbg !12955
  %34 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !12956
  %35 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %34, i32 0, i32 4, !dbg !12957
  %36 = load i32, i32* %35, align 8, !dbg !12957
  %37 = icmp sgt i32 %33, %36, !dbg !12958
  br i1 %37, label %43, label %38, !dbg !12959

38:                                               ; preds = %29
  %39 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !12960
  %40 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %39, i32 0, i32 2, !dbg !12961
  %41 = load i32, i32* %40, align 4, !dbg !12961
  %42 = icmp ne i32 %41, 0, !dbg !12960
  br i1 %42, label %43, label %52, !dbg !12962

43:                                               ; preds = %38, %29
  %44 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !12963
  %45 = load i8*, i8** %10, align 8, !dbg !12966
  %46 = load i64, i64* %11, align 8, !dbg !12967
  %47 = call i32 @mbedtls_ctr_drbg_reseed(%struct.mbedtls_ctr_drbg_context* %44, i8* %45, i64 %46), !dbg !12968
  store i32 %47, i32* %12, align 4, !dbg !12969
  %48 = icmp ne i32 %47, 0, !dbg !12970
  br i1 %48, label %49, label %51, !dbg !12971

49:                                               ; preds = %43
  %50 = load i32, i32* %12, align 4, !dbg !12972
  store i32 %50, i32* %6, align 4, !dbg !12973
  br label %119, !dbg !12973

51:                                               ; preds = %43
  store i64 0, i64* %11, align 8, !dbg !12974
  br label %52, !dbg !12975

52:                                               ; preds = %51, %38
  %53 = load i64, i64* %11, align 8, !dbg !12976
  %54 = icmp ugt i64 %53, 0, !dbg !12978
  br i1 %54, label %55, label %63, !dbg !12979

55:                                               ; preds = %52
  %56 = getelementptr inbounds [48 x i8], [48 x i8]* %14, i64 0, i64 0, !dbg !12980
  %57 = load i8*, i8** %10, align 8, !dbg !12982
  %58 = load i64, i64* %11, align 8, !dbg !12983
  %59 = call i32 @block_cipher_df(i8* %56, i8* %57, i64 %58), !dbg !12984
  %60 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !12985
  %61 = getelementptr inbounds [48 x i8], [48 x i8]* %14, i64 0, i64 0, !dbg !12986
  %62 = call i32 @ctr_drbg_update_internal(%struct.mbedtls_ctr_drbg_context* %60, i8* %61), !dbg !12987
  br label %63, !dbg !12988

63:                                               ; preds = %55, %52
  br label %64, !dbg !12989

64:                                               ; preds = %100, %63
  %65 = load i64, i64* %9, align 8, !dbg !12990
  %66 = icmp ugt i64 %65, 0, !dbg !12991
  br i1 %66, label %67, label %111, !dbg !12989

67:                                               ; preds = %64
  store i32 16, i32* %17, align 4, !dbg !12992
  br label %68, !dbg !12995

68:                                               ; preds = %84, %67
  %69 = load i32, i32* %17, align 4, !dbg !12996
  %70 = icmp sgt i32 %69, 0, !dbg !12998
  br i1 %70, label %71, label %87, !dbg !12999

71:                                               ; preds = %68
  %72 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !13000
  %73 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %72, i32 0, i32 0, !dbg !13002
  %74 = load i32, i32* %17, align 4, !dbg !13003
  %75 = sub nsw i32 %74, 1, !dbg !13004
  %76 = sext i32 %75 to i64, !dbg !13000
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %73, i64 0, i64 %76, !dbg !13000
  %78 = load i8, i8* %77, align 1, !dbg !13005
  %79 = add i8 %78, 1, !dbg !13005
  store i8 %79, i8* %77, align 1, !dbg !13005
  %80 = zext i8 %79 to i32, !dbg !13005
  %81 = icmp ne i32 %80, 0, !dbg !13006
  br i1 %81, label %82, label %83, !dbg !13007

82:                                               ; preds = %71
  br label %87, !dbg !13008

83:                                               ; preds = %71
  br label %84, !dbg !13009

84:                                               ; preds = %83
  %85 = load i32, i32* %17, align 4, !dbg !13010
  %86 = add nsw i32 %85, -1, !dbg !13010
  store i32 %86, i32* %17, align 4, !dbg !13010
  br label %68, !dbg !13011, !llvm.loop !13012

87:                                               ; preds = %82, %68
  %88 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !13014
  %89 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %88, i32 0, i32 5, !dbg !13015
  %90 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !13016
  %91 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %90, i32 0, i32 0, !dbg !13017
  %92 = getelementptr inbounds [16 x i8], [16 x i8]* %91, i64 0, i64 0, !dbg !13016
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 0, !dbg !13018
  %94 = call i32 @mbedtls_aes_crypt_ecb(%struct.mbedtls_aes_context* %89, i32 1, i8* %92, i8* %93), !dbg !13019
  %95 = load i64, i64* %9, align 8, !dbg !13020
  %96 = icmp ugt i64 %95, 16, !dbg !13021
  br i1 %96, label %97, label %98, !dbg !13022

97:                                               ; preds = %87
  br label %100, !dbg !13022

98:                                               ; preds = %87
  %99 = load i64, i64* %9, align 8, !dbg !13023
  br label %100, !dbg !13022

100:                                              ; preds = %98, %97
  %101 = phi i64 [ 16, %97 ], [ %99, %98 ], !dbg !13022
  store i64 %101, i64* %18, align 8, !dbg !13024
  %102 = load i8*, i8** %15, align 8, !dbg !13025
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i64 0, i64 0, !dbg !13026
  %104 = load i64, i64* %18, align 8, !dbg !13027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 16 %103, i64 %104, i1 false), !dbg !13026
  %105 = load i64, i64* %18, align 8, !dbg !13028
  %106 = load i8*, i8** %15, align 8, !dbg !13029
  %107 = getelementptr inbounds i8, i8* %106, i64 %105, !dbg !13029
  store i8* %107, i8** %15, align 8, !dbg !13029
  %108 = load i64, i64* %18, align 8, !dbg !13030
  %109 = load i64, i64* %9, align 8, !dbg !13031
  %110 = sub i64 %109, %108, !dbg !13031
  store i64 %110, i64* %9, align 8, !dbg !13031
  br label %64, !dbg !12989, !llvm.loop !13032

111:                                              ; preds = %64
  %112 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !13034
  %113 = getelementptr inbounds [48 x i8], [48 x i8]* %14, i64 0, i64 0, !dbg !13035
  %114 = call i32 @ctr_drbg_update_internal(%struct.mbedtls_ctr_drbg_context* %112, i8* %113), !dbg !13036
  %115 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %13, align 8, !dbg !13037
  %116 = getelementptr inbounds %struct.mbedtls_ctr_drbg_context, %struct.mbedtls_ctr_drbg_context* %115, i32 0, i32 1, !dbg !13038
  %117 = load i32, i32* %116, align 8, !dbg !13039
  %118 = add nsw i32 %117, 1, !dbg !13039
  store i32 %118, i32* %116, align 8, !dbg !13039
  store i32 0, i32* %6, align 4, !dbg !13040
  br label %119, !dbg !13040

119:                                              ; preds = %111, %49, %28, %24
  %120 = load i32, i32* %6, align 4, !dbg !13041
  ret i32 %120, !dbg !13041
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ctr_drbg_random(i8* %0, i8* %1, i64 %2) #0 !dbg !13042 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mbedtls_ctr_drbg_context*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !13043, metadata !DIExpression()), !dbg !13044
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13045, metadata !DIExpression()), !dbg !13046
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !13047, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context** %8, metadata !13051, metadata !DIExpression()), !dbg !13052
  %9 = load i8*, i8** %4, align 8, !dbg !13053
  %10 = bitcast i8* %9 to %struct.mbedtls_ctr_drbg_context*, !dbg !13054
  store %struct.mbedtls_ctr_drbg_context* %10, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !13052
  %11 = load %struct.mbedtls_ctr_drbg_context*, %struct.mbedtls_ctr_drbg_context** %8, align 8, !dbg !13055
  %12 = bitcast %struct.mbedtls_ctr_drbg_context* %11 to i8*, !dbg !13055
  %13 = load i8*, i8** %5, align 8, !dbg !13056
  %14 = load i64, i64* %6, align 8, !dbg !13057
  %15 = call i32 @mbedtls_ctr_drbg_random_with_add(i8* %12, i8* %13, i64 %14, i8* null, i64 0), !dbg !13058
  store i32 %15, i32* %7, align 4, !dbg !13059
  %16 = load i32, i32* %7, align 4, !dbg !13060
  ret i32 %16, !dbg !13061
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ctr_drbg_self_test(i32 %0) #0 !dbg !13062 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_ctr_drbg_context, align 8
  %5 = alloca [16 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ctr_drbg_context* %4, metadata !13065, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !13067, metadata !DIExpression()), !dbg !13068
  call void @mbedtls_ctr_drbg_init(%struct.mbedtls_ctr_drbg_context* %4), !dbg !13069
  %6 = load i32, i32* %3, align 4, !dbg !13070
  %7 = icmp ne i32 %6, 0, !dbg !13072
  br i1 %7, label %8, label %10, !dbg !13073

8:                                                ; preds = %1
  %9 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.245, i64 0, i64 0)), !dbg !13074
  br label %10, !dbg !13074

10:                                               ; preds = %8, %1
  store i64 0, i64* @test_offset, align 8, !dbg !13075
  %11 = call i32 @mbedtls_ctr_drbg_seed_entropy_len(%struct.mbedtls_ctr_drbg_context* %4, i32 (i8*, i8*, i64)* @ctr_drbg_self_test_entropy, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @entropy_source_pr, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @nonce_pers_pr, i64 0, i64 0), i64 16, i64 32), !dbg !13076
  %12 = icmp ne i32 %11, 0, !dbg !13076
  br i1 %12, label %13, label %19, !dbg !13078

13:                                               ; preds = %10
  %14 = load i32, i32* %3, align 4, !dbg !13079
  %15 = icmp ne i32 %14, 0, !dbg !13079
  br i1 %15, label %16, label %18, !dbg !13082

16:                                               ; preds = %13
  %17 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13079
  br label %18, !dbg !13079

18:                                               ; preds = %16, %13
  store i32 1, i32* %2, align 4, !dbg !13082
  br label %122, !dbg !13082

19:                                               ; preds = %10
  call void @mbedtls_ctr_drbg_set_prediction_resistance(%struct.mbedtls_ctr_drbg_context* %4, i32 1), !dbg !13083
  %20 = bitcast %struct.mbedtls_ctr_drbg_context* %4 to i8*, !dbg !13084
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !13084
  %22 = call i32 @mbedtls_ctr_drbg_random(i8* %20, i8* %21, i64 16), !dbg !13084
  %23 = icmp ne i32 %22, 0, !dbg !13084
  br i1 %23, label %24, label %30, !dbg !13086

24:                                               ; preds = %19
  %25 = load i32, i32* %3, align 4, !dbg !13087
  %26 = icmp ne i32 %25, 0, !dbg !13087
  br i1 %26, label %27, label %29, !dbg !13090

27:                                               ; preds = %24
  %28 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13087
  br label %29, !dbg !13087

29:                                               ; preds = %27, %24
  store i32 1, i32* %2, align 4, !dbg !13090
  br label %122, !dbg !13090

30:                                               ; preds = %19
  %31 = bitcast %struct.mbedtls_ctr_drbg_context* %4 to i8*, !dbg !13091
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !13091
  %33 = call i32 @mbedtls_ctr_drbg_random(i8* %31, i8* %32, i64 16), !dbg !13091
  %34 = icmp ne i32 %33, 0, !dbg !13091
  br i1 %34, label %35, label %41, !dbg !13093

35:                                               ; preds = %30
  %36 = load i32, i32* %3, align 4, !dbg !13094
  %37 = icmp ne i32 %36, 0, !dbg !13094
  br i1 %37, label %38, label %40, !dbg !13097

38:                                               ; preds = %35
  %39 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13094
  br label %40, !dbg !13094

40:                                               ; preds = %38, %35
  store i32 1, i32* %2, align 4, !dbg !13097
  br label %122, !dbg !13097

41:                                               ; preds = %30
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !13098
  %43 = call i32 @memcmp(i8* %42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @result_pr, i64 0, i64 0), i64 16), !dbg !13098
  %44 = icmp ne i32 %43, 0, !dbg !13098
  br i1 %44, label %45, label %51, !dbg !13100

45:                                               ; preds = %41
  %46 = load i32, i32* %3, align 4, !dbg !13101
  %47 = icmp ne i32 %46, 0, !dbg !13101
  br i1 %47, label %48, label %50, !dbg !13104

48:                                               ; preds = %45
  %49 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13101
  br label %50, !dbg !13101

50:                                               ; preds = %48, %45
  store i32 1, i32* %2, align 4, !dbg !13104
  br label %122, !dbg !13104

51:                                               ; preds = %41
  call void @mbedtls_ctr_drbg_free(%struct.mbedtls_ctr_drbg_context* %4), !dbg !13105
  %52 = load i32, i32* %3, align 4, !dbg !13106
  %53 = icmp ne i32 %52, 0, !dbg !13108
  br i1 %53, label %54, label %56, !dbg !13109

54:                                               ; preds = %51
  %55 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.247, i64 0, i64 0)), !dbg !13110
  br label %56, !dbg !13110

56:                                               ; preds = %54, %51
  %57 = load i32, i32* %3, align 4, !dbg !13111
  %58 = icmp ne i32 %57, 0, !dbg !13113
  br i1 %58, label %59, label %61, !dbg !13114

59:                                               ; preds = %56
  %60 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.248, i64 0, i64 0)), !dbg !13115
  br label %61, !dbg !13115

61:                                               ; preds = %59, %56
  call void @mbedtls_ctr_drbg_init(%struct.mbedtls_ctr_drbg_context* %4), !dbg !13116
  store i64 0, i64* @test_offset, align 8, !dbg !13117
  %62 = call i32 @mbedtls_ctr_drbg_seed_entropy_len(%struct.mbedtls_ctr_drbg_context* %4, i32 (i8*, i8*, i64)* @ctr_drbg_self_test_entropy, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @entropy_source_nopr, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @nonce_pers_nopr, i64 0, i64 0), i64 16, i64 32), !dbg !13118
  %63 = icmp ne i32 %62, 0, !dbg !13118
  br i1 %63, label %64, label %70, !dbg !13120

64:                                               ; preds = %61
  %65 = load i32, i32* %3, align 4, !dbg !13121
  %66 = icmp ne i32 %65, 0, !dbg !13121
  br i1 %66, label %67, label %69, !dbg !13124

67:                                               ; preds = %64
  %68 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13121
  br label %69, !dbg !13121

69:                                               ; preds = %67, %64
  store i32 1, i32* %2, align 4, !dbg !13124
  br label %122, !dbg !13124

70:                                               ; preds = %61
  %71 = bitcast %struct.mbedtls_ctr_drbg_context* %4 to i8*, !dbg !13125
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !13125
  %73 = call i32 @mbedtls_ctr_drbg_random(i8* %71, i8* %72, i64 16), !dbg !13125
  %74 = icmp ne i32 %73, 0, !dbg !13125
  br i1 %74, label %75, label %81, !dbg !13127

75:                                               ; preds = %70
  %76 = load i32, i32* %3, align 4, !dbg !13128
  %77 = icmp ne i32 %76, 0, !dbg !13128
  br i1 %77, label %78, label %80, !dbg !13131

78:                                               ; preds = %75
  %79 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13128
  br label %80, !dbg !13128

80:                                               ; preds = %78, %75
  store i32 1, i32* %2, align 4, !dbg !13131
  br label %122, !dbg !13131

81:                                               ; preds = %70
  %82 = call i32 @mbedtls_ctr_drbg_reseed(%struct.mbedtls_ctr_drbg_context* %4, i8* null, i64 0), !dbg !13132
  %83 = icmp ne i32 %82, 0, !dbg !13132
  br i1 %83, label %84, label %90, !dbg !13134

84:                                               ; preds = %81
  %85 = load i32, i32* %3, align 4, !dbg !13135
  %86 = icmp ne i32 %85, 0, !dbg !13135
  br i1 %86, label %87, label %89, !dbg !13138

87:                                               ; preds = %84
  %88 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13135
  br label %89, !dbg !13135

89:                                               ; preds = %87, %84
  store i32 1, i32* %2, align 4, !dbg !13138
  br label %122, !dbg !13138

90:                                               ; preds = %81
  %91 = bitcast %struct.mbedtls_ctr_drbg_context* %4 to i8*, !dbg !13139
  %92 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !13139
  %93 = call i32 @mbedtls_ctr_drbg_random(i8* %91, i8* %92, i64 16), !dbg !13139
  %94 = icmp ne i32 %93, 0, !dbg !13139
  br i1 %94, label %95, label %101, !dbg !13141

95:                                               ; preds = %90
  %96 = load i32, i32* %3, align 4, !dbg !13142
  %97 = icmp ne i32 %96, 0, !dbg !13142
  br i1 %97, label %98, label %100, !dbg !13145

98:                                               ; preds = %95
  %99 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13142
  br label %100, !dbg !13142

100:                                              ; preds = %98, %95
  store i32 1, i32* %2, align 4, !dbg !13145
  br label %122, !dbg !13145

101:                                              ; preds = %90
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !13146
  %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @result_nopr, i64 0, i64 0), i64 16), !dbg !13146
  %104 = icmp ne i32 %103, 0, !dbg !13146
  br i1 %104, label %105, label %111, !dbg !13148

105:                                              ; preds = %101
  %106 = load i32, i32* %3, align 4, !dbg !13149
  %107 = icmp ne i32 %106, 0, !dbg !13149
  br i1 %107, label %108, label %110, !dbg !13152

108:                                              ; preds = %105
  %109 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)), !dbg !13149
  br label %110, !dbg !13149

110:                                              ; preds = %108, %105
  store i32 1, i32* %2, align 4, !dbg !13152
  br label %122, !dbg !13152

111:                                              ; preds = %101
  call void @mbedtls_ctr_drbg_free(%struct.mbedtls_ctr_drbg_context* %4), !dbg !13153
  %112 = load i32, i32* %3, align 4, !dbg !13154
  %113 = icmp ne i32 %112, 0, !dbg !13156
  br i1 %113, label %114, label %116, !dbg !13157

114:                                              ; preds = %111
  %115 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.247, i64 0, i64 0)), !dbg !13158
  br label %116, !dbg !13158

116:                                              ; preds = %114, %111
  %117 = load i32, i32* %3, align 4, !dbg !13159
  %118 = icmp ne i32 %117, 0, !dbg !13161
  br i1 %118, label %119, label %121, !dbg !13162

119:                                              ; preds = %116
  %120 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.249, i64 0, i64 0)), !dbg !13163
  br label %121, !dbg !13163

121:                                              ; preds = %119, %116
  store i32 0, i32* %2, align 4, !dbg !13164
  br label %122, !dbg !13164

122:                                              ; preds = %121, %110, %100, %89, %80, %69, %50, %40, %29, %18
  %123 = load i32, i32* %2, align 4, !dbg !13165
  ret i32 %123, !dbg !13165
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ctr_drbg_self_test_entropy(i8* %0, i8* %1, i64 %2) #0 !dbg !13166 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !13167, metadata !DIExpression()), !dbg !13168
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i8** %7, metadata !13173, metadata !DIExpression()), !dbg !13174
  %8 = load i8*, i8** %4, align 8, !dbg !13175
  store i8* %8, i8** %7, align 8, !dbg !13174
  %9 = load i8*, i8** %5, align 8, !dbg !13176
  %10 = load i8*, i8** %7, align 8, !dbg !13177
  %11 = load i64, i64* @test_offset, align 8, !dbg !13178
  %12 = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !13179
  %13 = load i64, i64* %6, align 8, !dbg !13180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %12, i64 %13, i1 false), !dbg !13181
  %14 = load i64, i64* %6, align 8, !dbg !13182
  %15 = load i64, i64* @test_offset, align 8, !dbg !13183
  %16 = add i64 %15, %14, !dbg !13183
  store i64 %16, i64* @test_offset, align 8, !dbg !13183
  ret i32 0, !dbg !13184
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_set_threshold(i32 %0) #0 !dbg !13185 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13186, metadata !DIExpression()), !dbg !13187
  %3 = load i32, i32* %2, align 4, !dbg !13188
  store i32 %3, i32* @debug_threshold, align 4, !dbg !13189
  ret void, !dbg !13190
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, ...) #0 !dbg !13191 {
  %6 = alloca %struct.mbedtls_ssl_context*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca [1 x %struct.__va_list_tag], align 16
  %12 = alloca [512 x i8], align 16
  %13 = alloca i32, align 4
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %6, metadata !13501, metadata !DIExpression()), !dbg !13502
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13503, metadata !DIExpression()), !dbg !13504
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !13505, metadata !DIExpression()), !dbg !13506
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13507, metadata !DIExpression()), !dbg !13508
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !13509, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %11, metadata !13511, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.declare(metadata [512 x i8]* %12, metadata !13524, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13526, metadata !DIExpression()), !dbg !13527
  %14 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !13528
  %15 = icmp eq %struct.mbedtls_ssl_context* null, %14, !dbg !13530
  br i1 %15, label %32, label %16, !dbg !13531

16:                                               ; preds = %5
  %17 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !13532
  %18 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %17, i32 0, i32 0, !dbg !13533
  %19 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %18, align 8, !dbg !13533
  %20 = icmp eq %struct.mbedtls_ssl_config* null, %19, !dbg !13534
  br i1 %20, label %32, label %21, !dbg !13535

21:                                               ; preds = %16
  %22 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !13536
  %23 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %22, i32 0, i32 0, !dbg !13537
  %24 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %23, align 8, !dbg !13537
  %25 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %24, i32 0, i32 1, !dbg !13538
  %26 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %25, align 8, !dbg !13538
  %27 = icmp eq void (i8*, i32, i8*, i32, i8*)* null, %26, !dbg !13539
  br i1 %27, label %32, label %28, !dbg !13540

28:                                               ; preds = %21
  %29 = load i32, i32* %7, align 4, !dbg !13541
  %30 = load i32, i32* @debug_threshold, align 4, !dbg !13542
  %31 = icmp sgt i32 %29, %30, !dbg !13543
  br i1 %31, label %32, label %33, !dbg !13544

32:                                               ; preds = %28, %21, %16, %5
  br label %61, !dbg !13545

33:                                               ; preds = %28
  %34 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i64 0, i64 0, !dbg !13546
  %35 = bitcast %struct.__va_list_tag* %34 to i8*, !dbg !13546
  call void @llvm.va_start(i8* %35), !dbg !13546
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %12, i64 0, i64 0, !dbg !13547
  %37 = load i8*, i8** %10, align 8, !dbg !13548
  %38 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i64 0, i64 0, !dbg !13549
  %39 = call i32 @vsnprintf(i8* %36, i64 512, i8* %37, %struct.__va_list_tag* %38), !dbg !13550
  store i32 %39, i32* %13, align 4, !dbg !13551
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i64 0, i64 0, !dbg !13552
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !13552
  call void @llvm.va_end(i8* %41), !dbg !13552
  %42 = load i32, i32* %13, align 4, !dbg !13553
  %43 = icmp sge i32 %42, 0, !dbg !13555
  br i1 %43, label %44, label %55, !dbg !13556

44:                                               ; preds = %33
  %45 = load i32, i32* %13, align 4, !dbg !13557
  %46 = icmp slt i32 %45, 511, !dbg !13558
  br i1 %46, label %47, label %55, !dbg !13559

47:                                               ; preds = %44
  %48 = load i32, i32* %13, align 4, !dbg !13560
  %49 = sext i32 %48 to i64, !dbg !13562
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* %12, i64 0, i64 %49, !dbg !13562
  store i8 10, i8* %50, align 1, !dbg !13563
  %51 = load i32, i32* %13, align 4, !dbg !13564
  %52 = add nsw i32 %51, 1, !dbg !13565
  %53 = sext i32 %52 to i64, !dbg !13566
  %54 = getelementptr inbounds [512 x i8], [512 x i8]* %12, i64 0, i64 %53, !dbg !13566
  store i8 0, i8* %54, align 1, !dbg !13567
  br label %55, !dbg !13568

55:                                               ; preds = %47, %44, %33
  %56 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !13569
  %57 = load i32, i32* %7, align 4, !dbg !13570
  %58 = load i8*, i8** %8, align 8, !dbg !13571
  %59 = load i32, i32* %9, align 4, !dbg !13572
  %60 = getelementptr inbounds [512 x i8], [512 x i8]* %12, i64 0, i64 0, !dbg !13573
  call void @debug_send_line(%struct.mbedtls_ssl_context* %56, i32 %57, i8* %58, i32 %59, i8* %60), !dbg !13574
  br label %61, !dbg !13575

61:                                               ; preds = %55, %32
  ret void, !dbg !13575
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #14

declare i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #14

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @debug_send_line(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4) #0 !dbg !13576 {
  %6 = alloca %struct.mbedtls_ssl_context*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %6, metadata !13579, metadata !DIExpression()), !dbg !13580
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13581, metadata !DIExpression()), !dbg !13582
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !13583, metadata !DIExpression()), !dbg !13584
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13585, metadata !DIExpression()), !dbg !13586
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !13587, metadata !DIExpression()), !dbg !13588
  %11 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !13589
  %12 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %11, i32 0, i32 0, !dbg !13590
  %13 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %12, align 8, !dbg !13590
  %14 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %13, i32 0, i32 1, !dbg !13591
  %15 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %14, align 8, !dbg !13591
  %16 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !13592
  %17 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %16, i32 0, i32 0, !dbg !13593
  %18 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %17, align 8, !dbg !13593
  %19 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %18, i32 0, i32 2, !dbg !13594
  %20 = load i8*, i8** %19, align 8, !dbg !13594
  %21 = load i32, i32* %7, align 4, !dbg !13595
  %22 = load i8*, i8** %8, align 8, !dbg !13596
  %23 = load i32, i32* %9, align 4, !dbg !13597
  %24 = load i8*, i8** %10, align 8, !dbg !13598
  call void %15(i8* %20, i32 %21, i8* %22, i32 %23, i8* %24), !dbg !13589
  ret void, !dbg !13599
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #0 !dbg !13600 {
  %7 = alloca %struct.mbedtls_ssl_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca [512 x i8], align 16
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %7, metadata !13603, metadata !DIExpression()), !dbg !13604
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13605, metadata !DIExpression()), !dbg !13606
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !13607, metadata !DIExpression()), !dbg !13608
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13609, metadata !DIExpression()), !dbg !13610
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !13611, metadata !DIExpression()), !dbg !13612
  store i32 %5, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !13613, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.declare(metadata [512 x i8]* %13, metadata !13615, metadata !DIExpression()), !dbg !13616
  %14 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13617
  %15 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %14, i32 0, i32 0, !dbg !13619
  %16 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %15, align 8, !dbg !13619
  %17 = icmp eq %struct.mbedtls_ssl_config* %16, null, !dbg !13620
  br i1 %17, label %29, label %18, !dbg !13621

18:                                               ; preds = %6
  %19 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13622
  %20 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %19, i32 0, i32 0, !dbg !13623
  %21 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %20, align 8, !dbg !13623
  %22 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %21, i32 0, i32 1, !dbg !13624
  %23 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %22, align 8, !dbg !13624
  %24 = icmp eq void (i8*, i32, i8*, i32, i8*)* %23, null, !dbg !13625
  br i1 %24, label %29, label %25, !dbg !13626

25:                                               ; preds = %18
  %26 = load i32, i32* %8, align 4, !dbg !13627
  %27 = load i32, i32* @debug_threshold, align 4, !dbg !13628
  %28 = icmp sgt i32 %26, %27, !dbg !13629
  br i1 %28, label %29, label %30, !dbg !13630

29:                                               ; preds = %25, %18, %6
  br label %46, !dbg !13631

30:                                               ; preds = %25
  %31 = load i32, i32* %12, align 4, !dbg !13632
  %32 = icmp eq i32 %31, -26880, !dbg !13634
  br i1 %32, label %33, label %34, !dbg !13635

33:                                               ; preds = %30
  br label %46, !dbg !13636

34:                                               ; preds = %30
  %35 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13637
  %36 = load i8*, i8** %11, align 8, !dbg !13638
  %37 = load i32, i32* %12, align 4, !dbg !13639
  %38 = load i32, i32* %12, align 4, !dbg !13640
  %39 = sub nsw i32 0, %38, !dbg !13641
  %40 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %35, i64 512, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.252, i64 0, i64 0), i8* %36, i32 %37, i32 %39), !dbg !13642
  %41 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13643
  %42 = load i32, i32* %8, align 4, !dbg !13644
  %43 = load i8*, i8** %9, align 8, !dbg !13645
  %44 = load i32, i32* %10, align 4, !dbg !13646
  %45 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13647
  call void @debug_send_line(%struct.mbedtls_ssl_context* %41, i32 %42, i8* %43, i32 %44, i8* %45), !dbg !13648
  br label %46, !dbg !13649

46:                                               ; preds = %34, %33, %29
  ret void, !dbg !13649
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, i8* %5, i64 %6) #0 !dbg !13650 {
  %8 = alloca %struct.mbedtls_ssl_context*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca [512 x i8], align 16
  %16 = alloca [17 x i8], align 16
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %8, metadata !13653, metadata !DIExpression()), !dbg !13654
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13655, metadata !DIExpression()), !dbg !13656
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !13657, metadata !DIExpression()), !dbg !13658
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13659, metadata !DIExpression()), !dbg !13660
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !13661, metadata !DIExpression()), !dbg !13662
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !13663, metadata !DIExpression()), !dbg !13664
  store i64 %6, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !13665, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.declare(metadata [512 x i8]* %15, metadata !13667, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.declare(metadata [17 x i8]* %16, metadata !13669, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.declare(metadata i64* %17, metadata !13674, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.declare(metadata i64* %18, metadata !13676, metadata !DIExpression()), !dbg !13677
  store i64 0, i64* %18, align 8, !dbg !13677
  %19 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %8, align 8, !dbg !13678
  %20 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %19, i32 0, i32 0, !dbg !13680
  %21 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %20, align 8, !dbg !13680
  %22 = icmp eq %struct.mbedtls_ssl_config* %21, null, !dbg !13681
  br i1 %22, label %34, label %23, !dbg !13682

23:                                               ; preds = %7
  %24 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %8, align 8, !dbg !13683
  %25 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %24, i32 0, i32 0, !dbg !13684
  %26 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %25, align 8, !dbg !13684
  %27 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %26, i32 0, i32 1, !dbg !13685
  %28 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %27, align 8, !dbg !13685
  %29 = icmp eq void (i8*, i32, i8*, i32, i8*)* %28, null, !dbg !13686
  br i1 %29, label %34, label %30, !dbg !13687

30:                                               ; preds = %23
  %31 = load i32, i32* %9, align 4, !dbg !13688
  %32 = load i32, i32* @debug_threshold, align 4, !dbg !13689
  %33 = icmp sgt i32 %31, %32, !dbg !13690
  br i1 %33, label %34, label %35, !dbg !13691

34:                                               ; preds = %30, %23, %7
  br label %170, !dbg !13692

35:                                               ; preds = %30
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13693
  %37 = load i64, i64* %18, align 8, !dbg !13694
  %38 = getelementptr inbounds i8, i8* %36, i64 %37, !dbg !13695
  %39 = load i64, i64* %18, align 8, !dbg !13696
  %40 = sub i64 512, %39, !dbg !13697
  %41 = load i8*, i8** %12, align 8, !dbg !13698
  %42 = load i64, i64* %14, align 8, !dbg !13699
  %43 = trunc i64 %42 to i32, !dbg !13700
  %44 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %38, i64 %40, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.255, i64 0, i64 0), i8* %41, i32 %43), !dbg !13701
  %45 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %8, align 8, !dbg !13702
  %46 = load i32, i32* %9, align 4, !dbg !13703
  %47 = load i8*, i8** %10, align 8, !dbg !13704
  %48 = load i32, i32* %11, align 4, !dbg !13705
  %49 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13706
  call void @debug_send_line(%struct.mbedtls_ssl_context* %45, i32 %46, i8* %47, i32 %48, i8* %49), !dbg !13707
  store i64 0, i64* %18, align 8, !dbg !13708
  %50 = getelementptr inbounds [17 x i8], [17 x i8]* %16, i64 0, i64 0, !dbg !13709
  call void @llvm.memset.p0i8.i64(i8* align 16 %50, i8 0, i64 17, i1 false), !dbg !13709
  store i64 0, i64* %17, align 8, !dbg !13710
  br label %51, !dbg !13712

51:                                               ; preds = %133, %35
  %52 = load i64, i64* %17, align 8, !dbg !13713
  %53 = load i64, i64* %14, align 8, !dbg !13715
  %54 = icmp ult i64 %52, %53, !dbg !13716
  br i1 %54, label %55, label %136, !dbg !13717

55:                                               ; preds = %51
  %56 = load i64, i64* %17, align 8, !dbg !13718
  %57 = icmp uge i64 %56, 4096, !dbg !13721
  br i1 %57, label %58, label %59, !dbg !13722

58:                                               ; preds = %55
  br label %136, !dbg !13723

59:                                               ; preds = %55
  %60 = load i64, i64* %17, align 8, !dbg !13724
  %61 = urem i64 %60, 16, !dbg !13726
  %62 = icmp eq i64 %61, 0, !dbg !13727
  br i1 %62, label %63, label %92, !dbg !13728

63:                                               ; preds = %59
  %64 = load i64, i64* %17, align 8, !dbg !13729
  %65 = icmp ugt i64 %64, 0, !dbg !13732
  br i1 %65, label %66, label %80, !dbg !13733

66:                                               ; preds = %63
  %67 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13734
  %68 = load i64, i64* %18, align 8, !dbg !13736
  %69 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13737
  %70 = load i64, i64* %18, align 8, !dbg !13738
  %71 = sub i64 512, %70, !dbg !13739
  %72 = getelementptr inbounds [17 x i8], [17 x i8]* %16, i64 0, i64 0, !dbg !13740
  %73 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %69, i64 %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.256, i64 0, i64 0), i8* %72), !dbg !13741
  %74 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %8, align 8, !dbg !13742
  %75 = load i32, i32* %9, align 4, !dbg !13743
  %76 = load i8*, i8** %10, align 8, !dbg !13744
  %77 = load i32, i32* %11, align 4, !dbg !13745
  %78 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13746
  call void @debug_send_line(%struct.mbedtls_ssl_context* %74, i32 %75, i8* %76, i32 %77, i8* %78), !dbg !13747
  store i64 0, i64* %18, align 8, !dbg !13748
  %79 = getelementptr inbounds [17 x i8], [17 x i8]* %16, i64 0, i64 0, !dbg !13749
  call void @llvm.memset.p0i8.i64(i8* align 16 %79, i8 0, i64 17, i1 false), !dbg !13749
  br label %80, !dbg !13750

80:                                               ; preds = %66, %63
  %81 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13751
  %82 = load i64, i64* %18, align 8, !dbg !13752
  %83 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !13753
  %84 = load i64, i64* %18, align 8, !dbg !13754
  %85 = sub i64 512, %84, !dbg !13755
  %86 = load i64, i64* %17, align 8, !dbg !13756
  %87 = trunc i64 %86 to i32, !dbg !13757
  %88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %83, i64 %85, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.257, i64 0, i64 0), i32 %87), !dbg !13758
  %89 = sext i32 %88 to i64, !dbg !13758
  %90 = load i64, i64* %18, align 8, !dbg !13759
  %91 = add i64 %90, %89, !dbg !13759
  store i64 %91, i64* %18, align 8, !dbg !13759
  br label %92, !dbg !13760

92:                                               ; preds = %80, %59
  %93 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13761
  %94 = load i64, i64* %18, align 8, !dbg !13762
  %95 = getelementptr inbounds i8, i8* %93, i64 %94, !dbg !13763
  %96 = load i64, i64* %18, align 8, !dbg !13764
  %97 = sub i64 512, %96, !dbg !13765
  %98 = load i8*, i8** %13, align 8, !dbg !13766
  %99 = load i64, i64* %17, align 8, !dbg !13767
  %100 = getelementptr inbounds i8, i8* %98, i64 %99, !dbg !13766
  %101 = load i8, i8* %100, align 1, !dbg !13766
  %102 = zext i8 %101 to i32, !dbg !13768
  %103 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %95, i64 %97, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.258, i64 0, i64 0), i32 %102), !dbg !13769
  %104 = sext i32 %103 to i64, !dbg !13769
  %105 = load i64, i64* %18, align 8, !dbg !13770
  %106 = add i64 %105, %104, !dbg !13770
  store i64 %106, i64* %18, align 8, !dbg !13770
  %107 = load i8*, i8** %13, align 8, !dbg !13771
  %108 = load i64, i64* %17, align 8, !dbg !13772
  %109 = getelementptr inbounds i8, i8* %107, i64 %108, !dbg !13771
  %110 = load i8, i8* %109, align 1, !dbg !13771
  %111 = zext i8 %110 to i32, !dbg !13771
  %112 = icmp sgt i32 %111, 31, !dbg !13773
  br i1 %112, label %113, label %126, !dbg !13774

113:                                              ; preds = %92
  %114 = load i8*, i8** %13, align 8, !dbg !13775
  %115 = load i64, i64* %17, align 8, !dbg !13776
  %116 = getelementptr inbounds i8, i8* %114, i64 %115, !dbg !13775
  %117 = load i8, i8* %116, align 1, !dbg !13775
  %118 = zext i8 %117 to i32, !dbg !13775
  %119 = icmp slt i32 %118, 127, !dbg !13777
  br i1 %119, label %120, label %126, !dbg !13778

120:                                              ; preds = %113
  %121 = load i8*, i8** %13, align 8, !dbg !13779
  %122 = load i64, i64* %17, align 8, !dbg !13780
  %123 = getelementptr inbounds i8, i8* %121, i64 %122, !dbg !13779
  %124 = load i8, i8* %123, align 1, !dbg !13779
  %125 = zext i8 %124 to i32, !dbg !13779
  br label %127, !dbg !13778

126:                                              ; preds = %113, %92
  br label %127, !dbg !13778

127:                                              ; preds = %126, %120
  %128 = phi i32 [ %125, %120 ], [ 46, %126 ], !dbg !13778
  %129 = trunc i32 %128 to i8, !dbg !13778
  %130 = load i64, i64* %17, align 8, !dbg !13781
  %131 = urem i64 %130, 16, !dbg !13782
  %132 = getelementptr inbounds [17 x i8], [17 x i8]* %16, i64 0, i64 %131, !dbg !13783
  store i8 %129, i8* %132, align 1, !dbg !13784
  br label %133, !dbg !13785

133:                                              ; preds = %127
  %134 = load i64, i64* %17, align 8, !dbg !13786
  %135 = add i64 %134, 1, !dbg !13786
  store i64 %135, i64* %17, align 8, !dbg !13786
  br label %51, !dbg !13787, !llvm.loop !13788

136:                                              ; preds = %58, %51
  %137 = load i64, i64* %14, align 8, !dbg !13790
  %138 = icmp ugt i64 %137, 0, !dbg !13792
  br i1 %138, label %139, label %170, !dbg !13793

139:                                              ; preds = %136
  br label %140, !dbg !13794

140:                                              ; preds = %154, %139
  %141 = load i64, i64* %17, align 8, !dbg !13796
  %142 = urem i64 %141, 16, !dbg !13799
  %143 = icmp ne i64 %142, 0, !dbg !13800
  br i1 %143, label %144, label %157, !dbg !13801

144:                                              ; preds = %140
  %145 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13802
  %146 = load i64, i64* %18, align 8, !dbg !13803
  %147 = getelementptr inbounds i8, i8* %145, i64 %146, !dbg !13804
  %148 = load i64, i64* %18, align 8, !dbg !13805
  %149 = sub i64 512, %148, !dbg !13806
  %150 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %147, i64 %149, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.259, i64 0, i64 0)), !dbg !13807
  %151 = sext i32 %150 to i64, !dbg !13807
  %152 = load i64, i64* %18, align 8, !dbg !13808
  %153 = add i64 %152, %151, !dbg !13808
  store i64 %153, i64* %18, align 8, !dbg !13808
  br label %154, !dbg !13809

154:                                              ; preds = %144
  %155 = load i64, i64* %17, align 8, !dbg !13810
  %156 = add i64 %155, 1, !dbg !13810
  store i64 %156, i64* %17, align 8, !dbg !13810
  br label %140, !dbg !13811, !llvm.loop !13812

157:                                              ; preds = %140
  %158 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13814
  %159 = load i64, i64* %18, align 8, !dbg !13815
  %160 = getelementptr inbounds i8, i8* %158, i64 %159, !dbg !13816
  %161 = load i64, i64* %18, align 8, !dbg !13817
  %162 = sub i64 512, %161, !dbg !13818
  %163 = getelementptr inbounds [17 x i8], [17 x i8]* %16, i64 0, i64 0, !dbg !13819
  %164 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %160, i64 %162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.256, i64 0, i64 0), i8* %163), !dbg !13820
  %165 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %8, align 8, !dbg !13821
  %166 = load i32, i32* %9, align 4, !dbg !13822
  %167 = load i8*, i8** %10, align 8, !dbg !13823
  %168 = load i32, i32* %11, align 4, !dbg !13824
  %169 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0, !dbg !13825
  call void @debug_send_line(%struct.mbedtls_ssl_context* %165, i32 %166, i8* %167, i32 %168, i8* %169), !dbg !13826
  br label %170, !dbg !13827

170:                                              ; preds = %34, %157, %136
  ret void, !dbg !13828
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_print_ecp(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, %struct.mbedtls_ecp_point* %5) #0 !dbg !13829 {
  %7 = alloca %struct.mbedtls_ssl_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.mbedtls_ecp_point*, align 8
  %13 = alloca [512 x i8], align 16
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %7, metadata !13840, metadata !DIExpression()), !dbg !13841
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13842, metadata !DIExpression()), !dbg !13843
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !13844, metadata !DIExpression()), !dbg !13845
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13846, metadata !DIExpression()), !dbg !13847
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !13848, metadata !DIExpression()), !dbg !13849
  store %struct.mbedtls_ecp_point* %5, %struct.mbedtls_ecp_point** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_point** %12, metadata !13850, metadata !DIExpression()), !dbg !13851
  call void @llvm.dbg.declare(metadata [512 x i8]* %13, metadata !13852, metadata !DIExpression()), !dbg !13853
  %14 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13854
  %15 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %14, i32 0, i32 0, !dbg !13856
  %16 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %15, align 8, !dbg !13856
  %17 = icmp eq %struct.mbedtls_ssl_config* %16, null, !dbg !13857
  br i1 %17, label %29, label %18, !dbg !13858

18:                                               ; preds = %6
  %19 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13859
  %20 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %19, i32 0, i32 0, !dbg !13860
  %21 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %20, align 8, !dbg !13860
  %22 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %21, i32 0, i32 1, !dbg !13861
  %23 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %22, align 8, !dbg !13861
  %24 = icmp eq void (i8*, i32, i8*, i32, i8*)* %23, null, !dbg !13862
  br i1 %24, label %29, label %25, !dbg !13863

25:                                               ; preds = %18
  %26 = load i32, i32* %8, align 4, !dbg !13864
  %27 = load i32, i32* @debug_threshold, align 4, !dbg !13865
  %28 = icmp sgt i32 %26, %27, !dbg !13866
  br i1 %28, label %29, label %30, !dbg !13867

29:                                               ; preds = %25, %18, %6
  br label %51, !dbg !13868

30:                                               ; preds = %25
  %31 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13869
  %32 = load i8*, i8** %11, align 8, !dbg !13870
  %33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %31, i64 512, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.260, i64 0, i64 0), i8* %32), !dbg !13871
  %34 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13872
  %35 = load i32, i32* %8, align 4, !dbg !13873
  %36 = load i8*, i8** %9, align 8, !dbg !13874
  %37 = load i32, i32* %10, align 4, !dbg !13875
  %38 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13876
  %39 = load %struct.mbedtls_ecp_point*, %struct.mbedtls_ecp_point** %12, align 8, !dbg !13877
  %40 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %39, i32 0, i32 0, !dbg !13878
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %34, i32 %35, i8* %36, i32 %37, i8* %38, %struct.mbedtls_mpi* %40), !dbg !13879
  %41 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13880
  %42 = load i8*, i8** %11, align 8, !dbg !13881
  %43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %41, i64 512, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.261, i64 0, i64 0), i8* %42), !dbg !13882
  %44 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13883
  %45 = load i32, i32* %8, align 4, !dbg !13884
  %46 = load i8*, i8** %9, align 8, !dbg !13885
  %47 = load i32, i32* %10, align 4, !dbg !13886
  %48 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13887
  %49 = load %struct.mbedtls_ecp_point*, %struct.mbedtls_ecp_point** %12, align 8, !dbg !13888
  %50 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %49, i32 0, i32 1, !dbg !13889
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %44, i32 %45, i8* %46, i32 %47, i8* %48, %struct.mbedtls_mpi* %50), !dbg !13890
  br label %51, !dbg !13891

51:                                               ; preds = %30, %29
  ret void, !dbg !13891
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, %struct.mbedtls_mpi* %5) #0 !dbg !13892 {
  %7 = alloca %struct.mbedtls_ssl_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.mbedtls_mpi*, align 8
  %13 = alloca [512 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %7, metadata !13897, metadata !DIExpression()), !dbg !13898
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13899, metadata !DIExpression()), !dbg !13900
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !13901, metadata !DIExpression()), !dbg !13902
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13903, metadata !DIExpression()), !dbg !13904
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !13905, metadata !DIExpression()), !dbg !13906
  store %struct.mbedtls_mpi* %5, %struct.mbedtls_mpi** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi** %12, metadata !13907, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.declare(metadata [512 x i8]* %13, metadata !13909, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13911, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.declare(metadata i32* %15, metadata !13913, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.declare(metadata i32* %16, metadata !13915, metadata !DIExpression()), !dbg !13916
  store i32 1, i32* %16, align 4, !dbg !13916
  call void @llvm.dbg.declare(metadata i64* %17, metadata !13917, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.declare(metadata i64* %18, metadata !13919, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.declare(metadata i64* %19, metadata !13921, metadata !DIExpression()), !dbg !13922
  store i64 0, i64* %19, align 8, !dbg !13922
  %20 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13923
  %21 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %20, i32 0, i32 0, !dbg !13925
  %22 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %21, align 8, !dbg !13925
  %23 = icmp eq %struct.mbedtls_ssl_config* %22, null, !dbg !13926
  br i1 %23, label %38, label %24, !dbg !13927

24:                                               ; preds = %6
  %25 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13928
  %26 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %25, i32 0, i32 0, !dbg !13929
  %27 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %26, align 8, !dbg !13929
  %28 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %27, i32 0, i32 1, !dbg !13930
  %29 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %28, align 8, !dbg !13930
  %30 = icmp eq void (i8*, i32, i8*, i32, i8*)* %29, null, !dbg !13931
  br i1 %30, label %38, label %31, !dbg !13932

31:                                               ; preds = %24
  %32 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !13933
  %33 = icmp eq %struct.mbedtls_mpi* %32, null, !dbg !13934
  br i1 %33, label %38, label %34, !dbg !13935

34:                                               ; preds = %31
  %35 = load i32, i32* %8, align 4, !dbg !13936
  %36 = load i32, i32* @debug_threshold, align 4, !dbg !13937
  %37 = icmp sgt i32 %35, %36, !dbg !13938
  br i1 %37, label %38, label %39, !dbg !13939

38:                                               ; preds = %34, %31, %24, %6
  br label %219, !dbg !13940

39:                                               ; preds = %34
  %40 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !13941
  %41 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %40, i32 0, i32 1, !dbg !13943
  %42 = load i64, i64* %41, align 8, !dbg !13943
  %43 = sub i64 %42, 1, !dbg !13944
  store i64 %43, i64* %18, align 8, !dbg !13945
  br label %44, !dbg !13946

44:                                               ; preds = %57, %39
  %45 = load i64, i64* %18, align 8, !dbg !13947
  %46 = icmp ugt i64 %45, 0, !dbg !13949
  br i1 %46, label %47, label %60, !dbg !13950

47:                                               ; preds = %44
  %48 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !13951
  %49 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %48, i32 0, i32 2, !dbg !13953
  %50 = load i64*, i64** %49, align 8, !dbg !13953
  %51 = load i64, i64* %18, align 8, !dbg !13954
  %52 = getelementptr inbounds i64, i64* %50, i64 %51, !dbg !13951
  %53 = load i64, i64* %52, align 8, !dbg !13951
  %54 = icmp ne i64 %53, 0, !dbg !13955
  br i1 %54, label %55, label %56, !dbg !13956

55:                                               ; preds = %47
  br label %60, !dbg !13957

56:                                               ; preds = %47
  br label %57, !dbg !13958

57:                                               ; preds = %56
  %58 = load i64, i64* %18, align 8, !dbg !13959
  %59 = add i64 %58, -1, !dbg !13959
  store i64 %59, i64* %18, align 8, !dbg !13959
  br label %44, !dbg !13960, !llvm.loop !13961

60:                                               ; preds = %55, %44
  store i32 63, i32* %14, align 4, !dbg !13963
  br label %61, !dbg !13965

61:                                               ; preds = %78, %60
  %62 = load i32, i32* %14, align 4, !dbg !13966
  %63 = icmp sge i32 %62, 0, !dbg !13968
  br i1 %63, label %64, label %81, !dbg !13969

64:                                               ; preds = %61
  %65 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !13970
  %66 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %65, i32 0, i32 2, !dbg !13972
  %67 = load i64*, i64** %66, align 8, !dbg !13972
  %68 = load i64, i64* %18, align 8, !dbg !13973
  %69 = getelementptr inbounds i64, i64* %67, i64 %68, !dbg !13970
  %70 = load i64, i64* %69, align 8, !dbg !13970
  %71 = load i32, i32* %14, align 4, !dbg !13974
  %72 = zext i32 %71 to i64, !dbg !13975
  %73 = lshr i64 %70, %72, !dbg !13975
  %74 = and i64 %73, 1, !dbg !13976
  %75 = icmp ne i64 %74, 0, !dbg !13977
  br i1 %75, label %76, label %77, !dbg !13978

76:                                               ; preds = %64
  br label %81, !dbg !13979

77:                                               ; preds = %64
  br label %78, !dbg !13980

78:                                               ; preds = %77
  %79 = load i32, i32* %14, align 4, !dbg !13981
  %80 = add nsw i32 %79, -1, !dbg !13981
  store i32 %80, i32* %14, align 4, !dbg !13981
  br label %61, !dbg !13982, !llvm.loop !13983

81:                                               ; preds = %76, %61
  %82 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !13985
  %83 = load i64, i64* %19, align 8, !dbg !13986
  %84 = getelementptr inbounds i8, i8* %82, i64 %83, !dbg !13987
  %85 = load i64, i64* %19, align 8, !dbg !13988
  %86 = sub i64 512, %85, !dbg !13989
  %87 = load i8*, i8** %11, align 8, !dbg !13990
  %88 = load i64, i64* %18, align 8, !dbg !13991
  %89 = mul i64 %88, 64, !dbg !13992
  %90 = load i32, i32* %14, align 4, !dbg !13993
  %91 = sext i32 %90 to i64, !dbg !13993
  %92 = add i64 %89, %91, !dbg !13994
  %93 = add i64 %92, 1, !dbg !13995
  %94 = trunc i64 %93 to i32, !dbg !13996
  %95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %84, i64 %86, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.262, i64 0, i64 0), i8* %87, i32 %94), !dbg !13997
  %96 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !13998
  %97 = load i32, i32* %8, align 4, !dbg !13999
  %98 = load i8*, i8** %9, align 8, !dbg !14000
  %99 = load i32, i32* %10, align 4, !dbg !14001
  %100 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14002
  call void @debug_send_line(%struct.mbedtls_ssl_context* %96, i32 %97, i8* %98, i32 %99, i8* %100), !dbg !14003
  store i64 0, i64* %19, align 8, !dbg !14004
  %101 = load i64, i64* %18, align 8, !dbg !14005
  %102 = add i64 %101, 1, !dbg !14007
  store i64 %102, i64* %17, align 8, !dbg !14008
  store i32 0, i32* %14, align 4, !dbg !14009
  br label %103, !dbg !14010

103:                                              ; preds = %191, %81
  %104 = load i64, i64* %17, align 8, !dbg !14011
  %105 = icmp ugt i64 %104, 0, !dbg !14013
  br i1 %105, label %106, label %194, !dbg !14014

106:                                              ; preds = %103
  %107 = load i32, i32* %16, align 4, !dbg !14015
  %108 = icmp ne i32 %107, 0, !dbg !14015
  br i1 %108, label %109, label %119, !dbg !14018

109:                                              ; preds = %106
  %110 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !14019
  %111 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %110, i32 0, i32 2, !dbg !14020
  %112 = load i64*, i64** %111, align 8, !dbg !14020
  %113 = load i64, i64* %17, align 8, !dbg !14021
  %114 = sub i64 %113, 1, !dbg !14022
  %115 = getelementptr inbounds i64, i64* %112, i64 %114, !dbg !14019
  %116 = load i64, i64* %115, align 8, !dbg !14019
  %117 = icmp eq i64 %116, 0, !dbg !14023
  br i1 %117, label %118, label %119, !dbg !14024

118:                                              ; preds = %109
  br label %191, !dbg !14025

119:                                              ; preds = %109, %106
  store i32 7, i32* %15, align 4, !dbg !14026
  br label %120, !dbg !14028

120:                                              ; preds = %187, %119
  %121 = load i32, i32* %15, align 4, !dbg !14029
  %122 = icmp sge i32 %121, 0, !dbg !14031
  br i1 %122, label %123, label %190, !dbg !14032

123:                                              ; preds = %120
  %124 = load i32, i32* %16, align 4, !dbg !14033
  %125 = icmp ne i32 %124, 0, !dbg !14033
  br i1 %125, label %126, label %141, !dbg !14036

126:                                              ; preds = %123
  %127 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !14037
  %128 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %127, i32 0, i32 2, !dbg !14038
  %129 = load i64*, i64** %128, align 8, !dbg !14038
  %130 = load i64, i64* %17, align 8, !dbg !14039
  %131 = sub i64 %130, 1, !dbg !14040
  %132 = getelementptr inbounds i64, i64* %129, i64 %131, !dbg !14037
  %133 = load i64, i64* %132, align 8, !dbg !14037
  %134 = load i32, i32* %15, align 4, !dbg !14041
  %135 = shl i32 %134, 3, !dbg !14042
  %136 = zext i32 %135 to i64, !dbg !14043
  %137 = lshr i64 %133, %136, !dbg !14043
  %138 = and i64 %137, 255, !dbg !14044
  %139 = icmp eq i64 %138, 0, !dbg !14045
  br i1 %139, label %140, label %141, !dbg !14046

140:                                              ; preds = %126
  br label %187, !dbg !14047

141:                                              ; preds = %126, %123
  store i32 0, i32* %16, align 4, !dbg !14048
  br label %142

142:                                              ; preds = %141
  %143 = load i32, i32* %14, align 4, !dbg !14049
  %144 = srem i32 %143, 16, !dbg !14051
  %145 = icmp eq i32 %144, 0, !dbg !14052
  br i1 %145, label %146, label %162, !dbg !14053

146:                                              ; preds = %142
  %147 = load i32, i32* %14, align 4, !dbg !14054
  %148 = icmp sgt i32 %147, 0, !dbg !14057
  br i1 %148, label %149, label %161, !dbg !14058

149:                                              ; preds = %146
  %150 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14059
  %151 = load i64, i64* %19, align 8, !dbg !14061
  %152 = getelementptr inbounds i8, i8* %150, i64 %151, !dbg !14062
  %153 = load i64, i64* %19, align 8, !dbg !14063
  %154 = sub i64 512, %153, !dbg !14064
  %155 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %152, i64 %154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.263, i64 0, i64 0)), !dbg !14065
  %156 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14066
  %157 = load i32, i32* %8, align 4, !dbg !14067
  %158 = load i8*, i8** %9, align 8, !dbg !14068
  %159 = load i32, i32* %10, align 4, !dbg !14069
  %160 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14070
  call void @debug_send_line(%struct.mbedtls_ssl_context* %156, i32 %157, i8* %158, i32 %159, i8* %160), !dbg !14071
  store i64 0, i64* %19, align 8, !dbg !14072
  br label %161, !dbg !14073

161:                                              ; preds = %149, %146
  br label %162, !dbg !14074

162:                                              ; preds = %161, %142
  %163 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14075
  %164 = load i64, i64* %19, align 8, !dbg !14076
  %165 = getelementptr inbounds i8, i8* %163, i64 %164, !dbg !14077
  %166 = load i64, i64* %19, align 8, !dbg !14078
  %167 = sub i64 512, %166, !dbg !14079
  %168 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %12, align 8, !dbg !14080
  %169 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %168, i32 0, i32 2, !dbg !14081
  %170 = load i64*, i64** %169, align 8, !dbg !14081
  %171 = load i64, i64* %17, align 8, !dbg !14082
  %172 = sub i64 %171, 1, !dbg !14083
  %173 = getelementptr inbounds i64, i64* %170, i64 %172, !dbg !14080
  %174 = load i64, i64* %173, align 8, !dbg !14080
  %175 = load i32, i32* %15, align 4, !dbg !14084
  %176 = shl i32 %175, 3, !dbg !14085
  %177 = zext i32 %176 to i64, !dbg !14086
  %178 = lshr i64 %174, %177, !dbg !14086
  %179 = trunc i64 %178 to i32, !dbg !14087
  %180 = and i32 %179, 255, !dbg !14088
  %181 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %165, i64 %167, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.258, i64 0, i64 0), i32 %180), !dbg !14089
  %182 = sext i32 %181 to i64, !dbg !14089
  %183 = load i64, i64* %19, align 8, !dbg !14090
  %184 = add i64 %183, %182, !dbg !14090
  store i64 %184, i64* %19, align 8, !dbg !14090
  %185 = load i32, i32* %14, align 4, !dbg !14091
  %186 = add nsw i32 %185, 1, !dbg !14091
  store i32 %186, i32* %14, align 4, !dbg !14091
  br label %187, !dbg !14092

187:                                              ; preds = %162, %140
  %188 = load i32, i32* %15, align 4, !dbg !14093
  %189 = add nsw i32 %188, -1, !dbg !14093
  store i32 %189, i32* %15, align 4, !dbg !14093
  br label %120, !dbg !14094, !llvm.loop !14095

190:                                              ; preds = %120
  br label %191, !dbg !14097

191:                                              ; preds = %190, %118
  %192 = load i64, i64* %17, align 8, !dbg !14098
  %193 = add i64 %192, -1, !dbg !14098
  store i64 %193, i64* %17, align 8, !dbg !14098
  br label %103, !dbg !14099, !llvm.loop !14100

194:                                              ; preds = %103
  %195 = load i32, i32* %16, align 4, !dbg !14102
  %196 = icmp eq i32 %195, 1, !dbg !14104
  br i1 %196, label %197, label %207, !dbg !14105

197:                                              ; preds = %194
  %198 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14106
  %199 = load i64, i64* %19, align 8, !dbg !14107
  %200 = getelementptr inbounds i8, i8* %198, i64 %199, !dbg !14108
  %201 = load i64, i64* %19, align 8, !dbg !14109
  %202 = sub i64 512, %201, !dbg !14110
  %203 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %200, i64 %202, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.264, i64 0, i64 0)), !dbg !14111
  %204 = sext i32 %203 to i64, !dbg !14111
  %205 = load i64, i64* %19, align 8, !dbg !14112
  %206 = add i64 %205, %204, !dbg !14112
  store i64 %206, i64* %19, align 8, !dbg !14112
  br label %207, !dbg !14113

207:                                              ; preds = %197, %194
  %208 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14114
  %209 = load i64, i64* %19, align 8, !dbg !14115
  %210 = getelementptr inbounds i8, i8* %208, i64 %209, !dbg !14116
  %211 = load i64, i64* %19, align 8, !dbg !14117
  %212 = sub i64 512, %211, !dbg !14118
  %213 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %210, i64 %212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.263, i64 0, i64 0)), !dbg !14119
  %214 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14120
  %215 = load i32, i32* %8, align 4, !dbg !14121
  %216 = load i8*, i8** %9, align 8, !dbg !14122
  %217 = load i32, i32* %10, align 4, !dbg !14123
  %218 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14124
  call void @debug_send_line(%struct.mbedtls_ssl_context* %214, i32 %215, i8* %216, i32 %217, i8* %218), !dbg !14125
  br label %219, !dbg !14126

219:                                              ; preds = %207, %38
  ret void, !dbg !14126
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_debug_print_crt(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, %struct.mbedtls_x509_crt* %5) #0 !dbg !14127 {
  %7 = alloca %struct.mbedtls_ssl_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.mbedtls_x509_crt*, align 8
  %13 = alloca [512 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca [1024 x i8], align 16
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %7, metadata !14132, metadata !DIExpression()), !dbg !14133
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14134, metadata !DIExpression()), !dbg !14135
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !14136, metadata !DIExpression()), !dbg !14137
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14138, metadata !DIExpression()), !dbg !14139
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !14140, metadata !DIExpression()), !dbg !14141
  store %struct.mbedtls_x509_crt* %5, %struct.mbedtls_x509_crt** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt** %12, metadata !14142, metadata !DIExpression()), !dbg !14143
  call void @llvm.dbg.declare(metadata [512 x i8]* %13, metadata !14144, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14146, metadata !DIExpression()), !dbg !14147
  store i32 0, i32* %14, align 4, !dbg !14147
  %16 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14148
  %17 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %16, i32 0, i32 0, !dbg !14150
  %18 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %17, align 8, !dbg !14150
  %19 = icmp eq %struct.mbedtls_ssl_config* %18, null, !dbg !14151
  br i1 %19, label %34, label %20, !dbg !14152

20:                                               ; preds = %6
  %21 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14153
  %22 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %21, i32 0, i32 0, !dbg !14154
  %23 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %22, align 8, !dbg !14154
  %24 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %23, i32 0, i32 1, !dbg !14155
  %25 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %24, align 8, !dbg !14155
  %26 = icmp eq void (i8*, i32, i8*, i32, i8*)* %25, null, !dbg !14156
  br i1 %26, label %34, label %27, !dbg !14157

27:                                               ; preds = %20
  %28 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %12, align 8, !dbg !14158
  %29 = icmp eq %struct.mbedtls_x509_crt* %28, null, !dbg !14159
  br i1 %29, label %34, label %30, !dbg !14160

30:                                               ; preds = %27
  %31 = load i32, i32* %8, align 4, !dbg !14161
  %32 = load i32, i32* @debug_threshold, align 4, !dbg !14162
  %33 = icmp sgt i32 %31, %32, !dbg !14163
  br i1 %33, label %34, label %35, !dbg !14164

34:                                               ; preds = %30, %27, %20, %6
  br label %67, !dbg !14165

35:                                               ; preds = %30
  br label %36, !dbg !14166

36:                                               ; preds = %39, %35
  %37 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %12, align 8, !dbg !14167
  %38 = icmp ne %struct.mbedtls_x509_crt* %37, null, !dbg !14168
  br i1 %38, label %39, label %67, !dbg !14166

39:                                               ; preds = %36
  call void @llvm.dbg.declare(metadata [1024 x i8]* %15, metadata !14169, metadata !DIExpression()), !dbg !14171
  %40 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14172
  %41 = load i8*, i8** %11, align 8, !dbg !14173
  %42 = load i32, i32* %14, align 4, !dbg !14174
  %43 = add nsw i32 %42, 1, !dbg !14174
  store i32 %43, i32* %14, align 4, !dbg !14174
  %44 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %40, i64 512, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.265, i64 0, i64 0), i8* %41, i32 %43), !dbg !14175
  %45 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14176
  %46 = load i32, i32* %8, align 4, !dbg !14177
  %47 = load i8*, i8** %9, align 8, !dbg !14178
  %48 = load i32, i32* %10, align 4, !dbg !14179
  %49 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0, !dbg !14180
  call void @debug_send_line(%struct.mbedtls_ssl_context* %45, i32 %46, i8* %47, i32 %48, i8* %49), !dbg !14181
  %50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 0, !dbg !14182
  %51 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %12, align 8, !dbg !14183
  %52 = call i32 @mbedtls_x509_crt_info(i8* %50, i64 1023, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12.266, i64 0, i64 0), %struct.mbedtls_x509_crt* %51), !dbg !14184
  %53 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14185
  %54 = load i32, i32* %8, align 4, !dbg !14186
  %55 = load i8*, i8** %9, align 8, !dbg !14187
  %56 = load i32, i32* %10, align 4, !dbg !14188
  %57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 0, !dbg !14189
  call void @debug_print_line_by_line(%struct.mbedtls_ssl_context* %53, i32 %54, i8* %55, i32 %56, i8* %57), !dbg !14190
  %58 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14191
  %59 = load i32, i32* %8, align 4, !dbg !14192
  %60 = load i8*, i8** %9, align 8, !dbg !14193
  %61 = load i32, i32* %10, align 4, !dbg !14194
  %62 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %12, align 8, !dbg !14195
  %63 = getelementptr inbounds %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt* %62, i32 0, i32 11, !dbg !14196
  call void @debug_print_pk(%struct.mbedtls_ssl_context* %58, i32 %59, i8* %60, i32 %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.267, i64 0, i64 0), %struct.mbedtls_pk_context* %63), !dbg !14197
  %64 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %12, align 8, !dbg !14198
  %65 = getelementptr inbounds %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt* %64, i32 0, i32 26, !dbg !14199
  %66 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %65, align 8, !dbg !14199
  store %struct.mbedtls_x509_crt* %66, %struct.mbedtls_x509_crt** %12, align 8, !dbg !14200
  br label %36, !dbg !14166, !llvm.loop !14201

67:                                               ; preds = %34, %36
  ret void, !dbg !14203
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @debug_print_line_by_line(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4) #0 !dbg !14204 {
  %6 = alloca %struct.mbedtls_ssl_context*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca [512 x i8], align 16
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %6, metadata !14205, metadata !DIExpression()), !dbg !14206
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14207, metadata !DIExpression()), !dbg !14208
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !14209, metadata !DIExpression()), !dbg !14210
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14211, metadata !DIExpression()), !dbg !14212
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !14213, metadata !DIExpression()), !dbg !14214
  call void @llvm.dbg.declare(metadata [512 x i8]* %11, metadata !14215, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.declare(metadata i8** %12, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.declare(metadata i8** %13, metadata !14219, metadata !DIExpression()), !dbg !14220
  %15 = load i8*, i8** %10, align 8, !dbg !14221
  store i8* %15, i8** %12, align 8, !dbg !14222
  %16 = load i8*, i8** %10, align 8, !dbg !14223
  store i8* %16, i8** %13, align 8, !dbg !14225
  br label %17, !dbg !14226

17:                                               ; preds = %51, %5
  %18 = load i8*, i8** %13, align 8, !dbg !14227
  %19 = load i8, i8* %18, align 1, !dbg !14229
  %20 = sext i8 %19 to i32, !dbg !14229
  %21 = icmp ne i32 %20, 0, !dbg !14230
  br i1 %21, label %22, label %54, !dbg !14231

22:                                               ; preds = %17
  %23 = load i8*, i8** %13, align 8, !dbg !14232
  %24 = load i8, i8* %23, align 1, !dbg !14235
  %25 = sext i8 %24 to i32, !dbg !14235
  %26 = icmp eq i32 %25, 10, !dbg !14236
  br i1 %26, label %27, label %50, !dbg !14237

27:                                               ; preds = %22
  call void @llvm.dbg.declare(metadata i64* %14, metadata !14238, metadata !DIExpression()), !dbg !14240
  %28 = load i8*, i8** %13, align 8, !dbg !14241
  %29 = load i8*, i8** %12, align 8, !dbg !14242
  %30 = ptrtoint i8* %28 to i64, !dbg !14243
  %31 = ptrtoint i8* %29 to i64, !dbg !14243
  %32 = sub i64 %30, %31, !dbg !14243
  %33 = add nsw i64 %32, 1, !dbg !14244
  store i64 %33, i64* %14, align 8, !dbg !14240
  %34 = load i64, i64* %14, align 8, !dbg !14245
  %35 = icmp ugt i64 %34, 511, !dbg !14247
  br i1 %35, label %36, label %37, !dbg !14248

36:                                               ; preds = %27
  store i64 511, i64* %14, align 8, !dbg !14249
  br label %37, !dbg !14250

37:                                               ; preds = %36, %27
  %38 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0, !dbg !14251
  %39 = load i8*, i8** %12, align 8, !dbg !14252
  %40 = load i64, i64* %14, align 8, !dbg !14253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %38, i8* align 1 %39, i64 %40, i1 false), !dbg !14251
  %41 = load i64, i64* %14, align 8, !dbg !14254
  %42 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 %41, !dbg !14255
  store i8 0, i8* %42, align 1, !dbg !14256
  %43 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %6, align 8, !dbg !14257
  %44 = load i32, i32* %7, align 4, !dbg !14258
  %45 = load i8*, i8** %8, align 8, !dbg !14259
  %46 = load i32, i32* %9, align 4, !dbg !14260
  %47 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0, !dbg !14261
  call void @debug_send_line(%struct.mbedtls_ssl_context* %43, i32 %44, i8* %45, i32 %46, i8* %47), !dbg !14262
  %48 = load i8*, i8** %13, align 8, !dbg !14263
  %49 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !14264
  store i8* %49, i8** %12, align 8, !dbg !14265
  br label %50, !dbg !14266

50:                                               ; preds = %37, %22
  br label %51, !dbg !14267

51:                                               ; preds = %50
  %52 = load i8*, i8** %13, align 8, !dbg !14268
  %53 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !14268
  store i8* %53, i8** %13, align 8, !dbg !14268
  br label %17, !dbg !14269, !llvm.loop !14270

54:                                               ; preds = %17
  ret void, !dbg !14272
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @debug_print_pk(%struct.mbedtls_ssl_context* %0, i32 %1, i8* %2, i32 %3, i8* %4, %struct.mbedtls_pk_context* %5) #0 !dbg !14273 {
  %7 = alloca %struct.mbedtls_ssl_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.mbedtls_pk_context*, align 8
  %13 = alloca i64, align 8
  %14 = alloca [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], align 16
  %15 = alloca [16 x i8], align 16
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %7, metadata !14278, metadata !DIExpression()), !dbg !14279
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14280, metadata !DIExpression()), !dbg !14281
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !14282, metadata !DIExpression()), !dbg !14283
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14284, metadata !DIExpression()), !dbg !14285
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !14286, metadata !DIExpression()), !dbg !14287
  store %struct.mbedtls_pk_context* %5, %struct.mbedtls_pk_context** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %12, metadata !14288, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.declare(metadata i64* %13, metadata !14290, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.declare(metadata [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, metadata !14292, metadata !DIExpression()), !dbg !14300
  call void @llvm.dbg.declare(metadata [16 x i8]* %15, metadata !14301, metadata !DIExpression()), !dbg !14303
  %16 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 0, !dbg !14304
  %17 = bitcast %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %16 to i8*, !dbg !14304
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 72, i1 false), !dbg !14304
  %18 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !14305
  %19 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 0, !dbg !14307
  %20 = call i32 @mbedtls_pk_debug(%struct.mbedtls_pk_context* %18, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %19), !dbg !14308
  %21 = icmp ne i32 %20, 0, !dbg !14309
  br i1 %21, label %22, label %27, !dbg !14310

22:                                               ; preds = %6
  %23 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14311
  %24 = load i32, i32* %8, align 4, !dbg !14313
  %25 = load i8*, i8** %9, align 8, !dbg !14314
  %26 = load i32, i32* %10, align 4, !dbg !14315
  call void @debug_send_line(%struct.mbedtls_ssl_context* %23, i32 %24, i8* %25, i32 %26, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14.268, i64 0, i64 0)), !dbg !14316
  br label %90, !dbg !14317

27:                                               ; preds = %6
  store i64 0, i64* %13, align 8, !dbg !14318
  br label %28, !dbg !14320

28:                                               ; preds = %87, %27
  %29 = load i64, i64* %13, align 8, !dbg !14321
  %30 = icmp ult i64 %29, 3, !dbg !14323
  br i1 %30, label %31, label %90, !dbg !14324

31:                                               ; preds = %28
  %32 = load i64, i64* %13, align 8, !dbg !14325
  %33 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 %32, !dbg !14328
  %34 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %33, i32 0, i32 0, !dbg !14329
  %35 = load i32, i32* %34, align 8, !dbg !14329
  %36 = icmp eq i32 %35, 0, !dbg !14330
  br i1 %36, label %37, label %38, !dbg !14331

37:                                               ; preds = %31
  br label %90, !dbg !14332

38:                                               ; preds = %31
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %15, i64 0, i64 0, !dbg !14333
  %40 = load i8*, i8** %11, align 8, !dbg !14334
  %41 = load i64, i64* %13, align 8, !dbg !14335
  %42 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 %41, !dbg !14336
  %43 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %42, i32 0, i32 1, !dbg !14337
  %44 = load i8*, i8** %43, align 8, !dbg !14337
  %45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %39, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.269, i64 0, i64 0), i8* %40, i8* %44), !dbg !14338
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %15, i64 0, i64 15, !dbg !14339
  store i8 0, i8* %46, align 1, !dbg !14340
  %47 = load i64, i64* %13, align 8, !dbg !14341
  %48 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 %47, !dbg !14343
  %49 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %48, i32 0, i32 0, !dbg !14344
  %50 = load i32, i32* %49, align 8, !dbg !14344
  %51 = icmp eq i32 %50, 1, !dbg !14345
  br i1 %51, label %52, label %63, !dbg !14346

52:                                               ; preds = %38
  %53 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14347
  %54 = load i32, i32* %8, align 4, !dbg !14348
  %55 = load i8*, i8** %9, align 8, !dbg !14349
  %56 = load i32, i32* %10, align 4, !dbg !14350
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %15, i64 0, i64 0, !dbg !14351
  %58 = load i64, i64* %13, align 8, !dbg !14352
  %59 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 %58, !dbg !14353
  %60 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %59, i32 0, i32 2, !dbg !14354
  %61 = load i8*, i8** %60, align 8, !dbg !14354
  %62 = bitcast i8* %61 to %struct.mbedtls_mpi*, !dbg !14353
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %53, i32 %54, i8* %55, i32 %56, i8* %57, %struct.mbedtls_mpi* %62), !dbg !14355
  br label %86, !dbg !14355

63:                                               ; preds = %38
  %64 = load i64, i64* %13, align 8, !dbg !14356
  %65 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 %64, !dbg !14358
  %66 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %65, i32 0, i32 0, !dbg !14359
  %67 = load i32, i32* %66, align 8, !dbg !14359
  %68 = icmp eq i32 %67, 2, !dbg !14360
  br i1 %68, label %69, label %80, !dbg !14361

69:                                               ; preds = %63
  %70 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14362
  %71 = load i32, i32* %8, align 4, !dbg !14363
  %72 = load i8*, i8** %9, align 8, !dbg !14364
  %73 = load i32, i32* %10, align 4, !dbg !14365
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %15, i64 0, i64 0, !dbg !14366
  %75 = load i64, i64* %13, align 8, !dbg !14367
  %76 = getelementptr inbounds [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t], [3 x %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t]* %14, i64 0, i64 %75, !dbg !14368
  %77 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %76, i32 0, i32 2, !dbg !14369
  %78 = load i8*, i8** %77, align 8, !dbg !14369
  %79 = bitcast i8* %78 to %struct.mbedtls_ecp_point*, !dbg !14368
  call void @mbedtls_debug_print_ecp(%struct.mbedtls_ssl_context* %70, i32 %71, i8* %72, i32 %73, i8* %74, %struct.mbedtls_ecp_point* %79), !dbg !14370
  br label %85, !dbg !14370

80:                                               ; preds = %63
  %81 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %7, align 8, !dbg !14371
  %82 = load i32, i32* %8, align 4, !dbg !14372
  %83 = load i8*, i8** %9, align 8, !dbg !14373
  %84 = load i32, i32* %10, align 4, !dbg !14374
  call void @debug_send_line(%struct.mbedtls_ssl_context* %81, i32 %82, i8* %83, i32 %84, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.270, i64 0, i64 0)), !dbg !14375
  br label %85

85:                                               ; preds = %80, %69
  br label %86

86:                                               ; preds = %85, %52
  br label %87, !dbg !14376

87:                                               ; preds = %86
  %88 = load i64, i64* %13, align 8, !dbg !14377
  %89 = add i64 %88, 1, !dbg !14377
  store i64 %89, i64* %13, align 8, !dbg !14377
  br label %28, !dbg !14378, !llvm.loop !14379

90:                                               ; preds = %22, %37, %28
  ret void, !dbg !14381
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_entropy_init(%struct.mbedtls_entropy_context* %0) #0 !dbg !14382 {
  %2 = alloca %struct.mbedtls_entropy_context*, align 8
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %2, metadata !14386, metadata !DIExpression()), !dbg !14387
  %3 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %2, align 8, !dbg !14388
  %4 = bitcast %struct.mbedtls_entropy_context* %3 to i8*, !dbg !14389
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 1024, i1 false), !dbg !14389
  %5 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %2, align 8, !dbg !14390
  %6 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %5, i32 0, i32 0, !dbg !14391
  call void @mbedtls_sha512_starts(%struct.mbedtls_sha512_context* %6, i32 0), !dbg !14392
  %7 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %2, align 8, !dbg !14393
  %8 = call i32 @mbedtls_entropy_add_source(%struct.mbedtls_entropy_context* %7, i32 (i8*, i8*, i64, i64*)* @mbedtls_hardware_poll, i8* null, i64 32, i32 1), !dbg !14394
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_entropy_add_source(%struct.mbedtls_entropy_context* %0, i32 (i8*, i8*, i64, i64*)* %1, i8* %2, i64 %3, i32 %4) #0 !dbg !14396 {
  %6 = alloca %struct.mbedtls_entropy_context*, align 8
  %7 = alloca i32 (i8*, i8*, i64, i64*)*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %6, metadata !14399, metadata !DIExpression()), !dbg !14400
  store i32 (i8*, i8*, i64, i64*)* %1, i32 (i8*, i8*, i64, i64*)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64, i64*)** %7, metadata !14401, metadata !DIExpression()), !dbg !14402
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !14403, metadata !DIExpression()), !dbg !14404
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !14405, metadata !DIExpression()), !dbg !14406
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14407, metadata !DIExpression()), !dbg !14408
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14409, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14411, metadata !DIExpression()), !dbg !14412
  store i32 0, i32* %12, align 4, !dbg !14412
  %13 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %6, align 8, !dbg !14413
  %14 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %13, i32 0, i32 1, !dbg !14414
  %15 = load i32, i32* %14, align 8, !dbg !14414
  store i32 %15, i32* %11, align 4, !dbg !14415
  %16 = load i32, i32* %11, align 4, !dbg !14416
  %17 = icmp sge i32 %16, 20, !dbg !14418
  br i1 %17, label %18, label %19, !dbg !14419

18:                                               ; preds = %5
  store i32 -62, i32* %12, align 4, !dbg !14420
  br label %52, !dbg !14422

19:                                               ; preds = %5
  %20 = load i32 (i8*, i8*, i64, i64*)*, i32 (i8*, i8*, i64, i64*)** %7, align 8, !dbg !14423
  %21 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %6, align 8, !dbg !14424
  %22 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %21, i32 0, i32 2, !dbg !14425
  %23 = load i32, i32* %11, align 4, !dbg !14426
  %24 = sext i32 %23 to i64, !dbg !14424
  %25 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %22, i64 0, i64 %24, !dbg !14424
  %26 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %25, i32 0, i32 0, !dbg !14427
  store i32 (i8*, i8*, i64, i64*)* %20, i32 (i8*, i8*, i64, i64*)** %26, align 8, !dbg !14428
  %27 = load i8*, i8** %8, align 8, !dbg !14429
  %28 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %6, align 8, !dbg !14430
  %29 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %28, i32 0, i32 2, !dbg !14431
  %30 = load i32, i32* %11, align 4, !dbg !14432
  %31 = sext i32 %30 to i64, !dbg !14430
  %32 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %29, i64 0, i64 %31, !dbg !14430
  %33 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %32, i32 0, i32 1, !dbg !14433
  store i8* %27, i8** %33, align 8, !dbg !14434
  %34 = load i64, i64* %9, align 8, !dbg !14435
  %35 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %6, align 8, !dbg !14436
  %36 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %35, i32 0, i32 2, !dbg !14437
  %37 = load i32, i32* %11, align 4, !dbg !14438
  %38 = sext i32 %37 to i64, !dbg !14436
  %39 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %36, i64 0, i64 %38, !dbg !14436
  %40 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %39, i32 0, i32 3, !dbg !14439
  store i64 %34, i64* %40, align 8, !dbg !14440
  %41 = load i32, i32* %10, align 4, !dbg !14441
  %42 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %6, align 8, !dbg !14442
  %43 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %42, i32 0, i32 2, !dbg !14443
  %44 = load i32, i32* %11, align 4, !dbg !14444
  %45 = sext i32 %44 to i64, !dbg !14442
  %46 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %43, i64 0, i64 %45, !dbg !14442
  %47 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %46, i32 0, i32 4, !dbg !14445
  store i32 %41, i32* %47, align 8, !dbg !14446
  %48 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %6, align 8, !dbg !14447
  %49 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %48, i32 0, i32 1, !dbg !14448
  %50 = load i32, i32* %49, align 8, !dbg !14449
  %51 = add nsw i32 %50, 1, !dbg !14449
  store i32 %51, i32* %49, align 8, !dbg !14449
  br label %52, !dbg !14447

52:                                               ; preds = %19, %18
  call void @llvm.dbg.label(metadata !14450), !dbg !14451
  %53 = load i32, i32* %12, align 4, !dbg !14452
  ret i32 %53, !dbg !14453
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_entropy_free(%struct.mbedtls_entropy_context* %0) #0 !dbg !14454 {
  %2 = alloca %struct.mbedtls_entropy_context*, align 8
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %2, metadata !14455, metadata !DIExpression()), !dbg !14456
  %3 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %2, align 8, !dbg !14457
  %4 = bitcast %struct.mbedtls_entropy_context* %3 to i8*, !dbg !14457
  call void @mbedtls_zeroize.275(i8* %4, i64 1024), !dbg !14458
  ret void, !dbg !14459
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize.275(i8* %0, i64 %1) #0 !dbg !14460 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !14461, metadata !DIExpression()), !dbg !14462
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !14463, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.declare(metadata i8** %5, metadata !14465, metadata !DIExpression()), !dbg !14466
  %6 = load i8*, i8** %3, align 8, !dbg !14467
  store i8* %6, i8** %5, align 8, !dbg !14466
  br label %7, !dbg !14468

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !14469
  %9 = add i64 %8, -1, !dbg !14469
  store i64 %9, i64* %4, align 8, !dbg !14469
  %10 = icmp ne i64 %8, 0, !dbg !14468
  br i1 %10, label %11, label %14, !dbg !14468

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !14470
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !14470
  store i8* %13, i8** %5, align 8, !dbg !14470
  store volatile i8 0, i8* %12, align 1, !dbg !14471
  br label %7, !dbg !14468, !llvm.loop !14472

14:                                               ; preds = %7
  ret void, !dbg !14474
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_entropy_update_manual(%struct.mbedtls_entropy_context* %0, i8* %1, i64 %2) #0 !dbg !14475 {
  %4 = alloca %struct.mbedtls_entropy_context*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %4, metadata !14478, metadata !DIExpression()), !dbg !14479
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !14480, metadata !DIExpression()), !dbg !14481
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !14482, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14484, metadata !DIExpression()), !dbg !14485
  %8 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %4, align 8, !dbg !14486
  %9 = load i8*, i8** %5, align 8, !dbg !14487
  %10 = load i64, i64* %6, align 8, !dbg !14488
  %11 = call i32 @entropy_update(%struct.mbedtls_entropy_context* %8, i8 zeroext 20, i8* %9, i64 %10), !dbg !14489
  store i32 %11, i32* %7, align 4, !dbg !14490
  %12 = load i32, i32* %7, align 4, !dbg !14491
  ret i32 %12, !dbg !14492
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @entropy_update(%struct.mbedtls_entropy_context* %0, i8 zeroext %1, i8* %2, i64 %3) #0 !dbg !14493 {
  %5 = alloca %struct.mbedtls_entropy_context*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca [2 x i8], align 1
  %10 = alloca [64 x i8], align 16
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %5, metadata !14496, metadata !DIExpression()), !dbg !14497
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !14498, metadata !DIExpression()), !dbg !14499
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !14500, metadata !DIExpression()), !dbg !14501
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !14502, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.declare(metadata [2 x i8]* %9, metadata !14504, metadata !DIExpression()), !dbg !14506
  call void @llvm.dbg.declare(metadata [64 x i8]* %10, metadata !14507, metadata !DIExpression()), !dbg !14508
  call void @llvm.dbg.declare(metadata i64* %11, metadata !14509, metadata !DIExpression()), !dbg !14510
  %13 = load i64, i64* %8, align 8, !dbg !14511
  store i64 %13, i64* %11, align 8, !dbg !14510
  call void @llvm.dbg.declare(metadata i8** %12, metadata !14512, metadata !DIExpression()), !dbg !14513
  %14 = load i8*, i8** %7, align 8, !dbg !14514
  store i8* %14, i8** %12, align 8, !dbg !14513
  %15 = load i64, i64* %11, align 8, !dbg !14515
  %16 = icmp ugt i64 %15, 64, !dbg !14517
  br i1 %16, label %17, label %22, !dbg !14518

17:                                               ; preds = %4
  %18 = load i8*, i8** %7, align 8, !dbg !14519
  %19 = load i64, i64* %8, align 8, !dbg !14521
  %20 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0, !dbg !14522
  call void @mbedtls_sha512(i8* %18, i64 %19, i8* %20, i32 0), !dbg !14523
  %21 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0, !dbg !14524
  store i8* %21, i8** %12, align 8, !dbg !14525
  store i64 64, i64* %11, align 8, !dbg !14526
  br label %22, !dbg !14527

22:                                               ; preds = %17, %4
  %23 = load i8, i8* %6, align 1, !dbg !14528
  %24 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 0, !dbg !14529
  store i8 %23, i8* %24, align 1, !dbg !14530
  %25 = load i64, i64* %11, align 8, !dbg !14531
  %26 = and i64 %25, 255, !dbg !14532
  %27 = trunc i64 %26 to i8, !dbg !14531
  %28 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 1, !dbg !14533
  store i8 %27, i8* %28, align 1, !dbg !14534
  %29 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %5, align 8, !dbg !14535
  %30 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %29, i32 0, i32 0, !dbg !14536
  %31 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 0, !dbg !14537
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %30, i8* %31, i64 2), !dbg !14538
  %32 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %5, align 8, !dbg !14539
  %33 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %32, i32 0, i32 0, !dbg !14540
  %34 = load i8*, i8** %12, align 8, !dbg !14541
  %35 = load i64, i64* %11, align 8, !dbg !14542
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %33, i8* %34, i64 %35), !dbg !14543
  ret i32 0, !dbg !14544
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_entropy_gather(%struct.mbedtls_entropy_context* %0) #0 !dbg !14545 {
  %2 = alloca %struct.mbedtls_entropy_context*, align 8
  %3 = alloca i32, align 4
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %2, metadata !14548, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14550, metadata !DIExpression()), !dbg !14551
  %4 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %2, align 8, !dbg !14552
  %5 = call i32 @entropy_gather_internal(%struct.mbedtls_entropy_context* %4), !dbg !14553
  store i32 %5, i32* %3, align 4, !dbg !14554
  %6 = load i32, i32* %3, align 4, !dbg !14555
  ret i32 %6, !dbg !14556
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @entropy_gather_internal(%struct.mbedtls_entropy_context* %0) #0 !dbg !14557 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_entropy_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [128 x i8], align 16
  %8 = alloca i64, align 8
  store %struct.mbedtls_entropy_context* %0, %struct.mbedtls_entropy_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %3, metadata !14558, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14560, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14562, metadata !DIExpression()), !dbg !14563
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14564, metadata !DIExpression()), !dbg !14565
  store i32 0, i32* %6, align 4, !dbg !14565
  call void @llvm.dbg.declare(metadata [128 x i8]* %7, metadata !14566, metadata !DIExpression()), !dbg !14567
  call void @llvm.dbg.declare(metadata i64* %8, metadata !14568, metadata !DIExpression()), !dbg !14569
  %9 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14570
  %10 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %9, i32 0, i32 1, !dbg !14572
  %11 = load i32, i32* %10, align 8, !dbg !14572
  %12 = icmp eq i32 %11, 0, !dbg !14573
  br i1 %12, label %13, label %14, !dbg !14574

13:                                               ; preds = %1
  store i32 -64, i32* %2, align 4, !dbg !14575
  br label %79, !dbg !14575

14:                                               ; preds = %1
  store i32 0, i32* %5, align 4, !dbg !14576
  br label %15, !dbg !14578

15:                                               ; preds = %71, %14
  %16 = load i32, i32* %5, align 4, !dbg !14579
  %17 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14581
  %18 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %17, i32 0, i32 1, !dbg !14582
  %19 = load i32, i32* %18, align 8, !dbg !14582
  %20 = icmp slt i32 %16, %19, !dbg !14583
  br i1 %20, label %21, label %74, !dbg !14584

21:                                               ; preds = %15
  %22 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14585
  %23 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %22, i32 0, i32 2, !dbg !14588
  %24 = load i32, i32* %5, align 4, !dbg !14589
  %25 = sext i32 %24 to i64, !dbg !14585
  %26 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %23, i64 0, i64 %25, !dbg !14585
  %27 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %26, i32 0, i32 4, !dbg !14590
  %28 = load i32, i32* %27, align 8, !dbg !14590
  %29 = icmp eq i32 %28, 1, !dbg !14591
  br i1 %29, label %30, label %31, !dbg !14592

30:                                               ; preds = %21
  store i32 1, i32* %6, align 4, !dbg !14593
  br label %31, !dbg !14594

31:                                               ; preds = %30, %21
  store i64 0, i64* %8, align 8, !dbg !14595
  %32 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14596
  %33 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %32, i32 0, i32 2, !dbg !14598
  %34 = load i32, i32* %5, align 4, !dbg !14599
  %35 = sext i32 %34 to i64, !dbg !14596
  %36 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %33, i64 0, i64 %35, !dbg !14596
  %37 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %36, i32 0, i32 0, !dbg !14600
  %38 = load i32 (i8*, i8*, i64, i64*)*, i32 (i8*, i8*, i64, i64*)** %37, align 8, !dbg !14600
  %39 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14601
  %40 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %39, i32 0, i32 2, !dbg !14602
  %41 = load i32, i32* %5, align 4, !dbg !14603
  %42 = sext i32 %41 to i64, !dbg !14601
  %43 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %40, i64 0, i64 %42, !dbg !14601
  %44 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %43, i32 0, i32 1, !dbg !14604
  %45 = load i8*, i8** %44, align 8, !dbg !14604
  %46 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0, !dbg !14605
  %47 = call i32 %38(i8* %45, i8* %46, i64 128, i64* %8), !dbg !14596
  store i32 %47, i32* %4, align 4, !dbg !14606
  %48 = icmp ne i32 %47, 0, !dbg !14607
  br i1 %48, label %49, label %51, !dbg !14608

49:                                               ; preds = %31
  %50 = load i32, i32* %4, align 4, !dbg !14609
  store i32 %50, i32* %2, align 4, !dbg !14611
  br label %79, !dbg !14611

51:                                               ; preds = %31
  %52 = load i64, i64* %8, align 8, !dbg !14612
  %53 = icmp ugt i64 %52, 0, !dbg !14614
  br i1 %53, label %54, label %70, !dbg !14615

54:                                               ; preds = %51
  %55 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14616
  %56 = load i32, i32* %5, align 4, !dbg !14618
  %57 = trunc i32 %56 to i8, !dbg !14619
  %58 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0, !dbg !14620
  %59 = load i64, i64* %8, align 8, !dbg !14621
  %60 = call i32 @entropy_update(%struct.mbedtls_entropy_context* %55, i8 zeroext %57, i8* %58, i64 %59), !dbg !14622
  %61 = load i64, i64* %8, align 8, !dbg !14623
  %62 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %3, align 8, !dbg !14624
  %63 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %62, i32 0, i32 2, !dbg !14625
  %64 = load i32, i32* %5, align 4, !dbg !14626
  %65 = sext i32 %64 to i64, !dbg !14624
  %66 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %63, i64 0, i64 %65, !dbg !14624
  %67 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %66, i32 0, i32 2, !dbg !14627
  %68 = load i64, i64* %67, align 8, !dbg !14628
  %69 = add i64 %68, %61, !dbg !14628
  store i64 %69, i64* %67, align 8, !dbg !14628
  br label %70, !dbg !14629

70:                                               ; preds = %54, %51
  br label %71, !dbg !14630

71:                                               ; preds = %70
  %72 = load i32, i32* %5, align 4, !dbg !14631
  %73 = add nsw i32 %72, 1, !dbg !14631
  store i32 %73, i32* %5, align 4, !dbg !14631
  br label %15, !dbg !14632, !llvm.loop !14633

74:                                               ; preds = %15
  %75 = load i32, i32* %6, align 4, !dbg !14635
  %76 = icmp eq i32 %75, 0, !dbg !14637
  br i1 %76, label %77, label %78, !dbg !14638

77:                                               ; preds = %74
  store i32 -61, i32* %2, align 4, !dbg !14639
  br label %79, !dbg !14639

78:                                               ; preds = %74
  store i32 0, i32* %2, align 4, !dbg !14640
  br label %79, !dbg !14640

79:                                               ; preds = %78, %77, %49, %13
  %80 = load i32, i32* %2, align 4, !dbg !14641
  ret i32 %80, !dbg !14641
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_entropy_func(i8* %0, i8* %1, i64 %2) #0 !dbg !14642 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mbedtls_entropy_context*, align 8
  %13 = alloca [64 x i8], align 16
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !14643, metadata !DIExpression()), !dbg !14644
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !14645, metadata !DIExpression()), !dbg !14646
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14647, metadata !DIExpression()), !dbg !14648
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14649, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14651, metadata !DIExpression()), !dbg !14652
  store i32 0, i32* %9, align 4, !dbg !14652
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14653, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14655, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context** %12, metadata !14657, metadata !DIExpression()), !dbg !14658
  %14 = load i8*, i8** %5, align 8, !dbg !14659
  %15 = bitcast i8* %14 to %struct.mbedtls_entropy_context*, !dbg !14660
  store %struct.mbedtls_entropy_context* %15, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14658
  call void @llvm.dbg.declare(metadata [64 x i8]* %13, metadata !14661, metadata !DIExpression()), !dbg !14662
  %16 = load i64, i64* %7, align 8, !dbg !14663
  %17 = icmp ugt i64 %16, 64, !dbg !14665
  br i1 %17, label %18, label %19, !dbg !14666

18:                                               ; preds = %3
  store i32 -60, i32* %4, align 4, !dbg !14667
  br label %100, !dbg !14667

19:                                               ; preds = %3
  br label %20, !dbg !14668

20:                                               ; preds = %59, %19
  %21 = load i32, i32* %9, align 4, !dbg !14669
  %22 = add nsw i32 %21, 1, !dbg !14669
  store i32 %22, i32* %9, align 4, !dbg !14669
  %23 = icmp sgt i32 %21, 256, !dbg !14672
  br i1 %23, label %24, label %25, !dbg !14673

24:                                               ; preds = %20
  store i32 -60, i32* %8, align 4, !dbg !14674
  br label %98, !dbg !14676

25:                                               ; preds = %20
  %26 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14677
  %27 = call i32 @entropy_gather_internal(%struct.mbedtls_entropy_context* %26), !dbg !14679
  store i32 %27, i32* %8, align 4, !dbg !14680
  %28 = icmp ne i32 %27, 0, !dbg !14681
  br i1 %28, label %29, label %30, !dbg !14682

29:                                               ; preds = %25
  br label %98, !dbg !14683

30:                                               ; preds = %25
  store i32 1, i32* %11, align 4, !dbg !14684
  store i32 0, i32* %10, align 4, !dbg !14685
  br label %31, !dbg !14687

31:                                               ; preds = %55, %30
  %32 = load i32, i32* %10, align 4, !dbg !14688
  %33 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14690
  %34 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %33, i32 0, i32 1, !dbg !14691
  %35 = load i32, i32* %34, align 8, !dbg !14691
  %36 = icmp slt i32 %32, %35, !dbg !14692
  br i1 %36, label %37, label %58, !dbg !14693

37:                                               ; preds = %31
  %38 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14694
  %39 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %38, i32 0, i32 2, !dbg !14696
  %40 = load i32, i32* %10, align 4, !dbg !14697
  %41 = sext i32 %40 to i64, !dbg !14694
  %42 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %39, i64 0, i64 %41, !dbg !14694
  %43 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %42, i32 0, i32 2, !dbg !14698
  %44 = load i64, i64* %43, align 8, !dbg !14698
  %45 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14699
  %46 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %45, i32 0, i32 2, !dbg !14700
  %47 = load i32, i32* %10, align 4, !dbg !14701
  %48 = sext i32 %47 to i64, !dbg !14699
  %49 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %46, i64 0, i64 %48, !dbg !14699
  %50 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %49, i32 0, i32 3, !dbg !14702
  %51 = load i64, i64* %50, align 8, !dbg !14702
  %52 = icmp ult i64 %44, %51, !dbg !14703
  br i1 %52, label %53, label %54, !dbg !14704

53:                                               ; preds = %37
  store i32 0, i32* %11, align 4, !dbg !14705
  br label %54, !dbg !14706

54:                                               ; preds = %53, %37
  br label %55, !dbg !14702

55:                                               ; preds = %54
  %56 = load i32, i32* %10, align 4, !dbg !14707
  %57 = add nsw i32 %56, 1, !dbg !14707
  store i32 %57, i32* %10, align 4, !dbg !14707
  br label %31, !dbg !14708, !llvm.loop !14709

58:                                               ; preds = %31
  br label %59, !dbg !14711

59:                                               ; preds = %58
  %60 = load i32, i32* %11, align 4, !dbg !14712
  %61 = icmp ne i32 %60, 0, !dbg !14713
  %62 = xor i1 %61, true, !dbg !14713
  br i1 %62, label %20, label %63, !dbg !14711, !llvm.loop !14714

63:                                               ; preds = %59
  %64 = getelementptr inbounds [64 x i8], [64 x i8]* %13, i64 0, i64 0, !dbg !14716
  call void @llvm.memset.p0i8.i64(i8* align 16 %64, i8 0, i64 64, i1 false), !dbg !14716
  %65 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14717
  %66 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %65, i32 0, i32 0, !dbg !14718
  %67 = getelementptr inbounds [64 x i8], [64 x i8]* %13, i64 0, i64 0, !dbg !14719
  call void @mbedtls_sha512_finish(%struct.mbedtls_sha512_context* %66, i8* %67), !dbg !14720
  %68 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14721
  %69 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %68, i32 0, i32 0, !dbg !14722
  %70 = bitcast %struct.mbedtls_sha512_context* %69 to i8*, !dbg !14723
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 216, i1 false), !dbg !14723
  %71 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14724
  %72 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %71, i32 0, i32 0, !dbg !14725
  call void @mbedtls_sha512_starts(%struct.mbedtls_sha512_context* %72, i32 0), !dbg !14726
  %73 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14727
  %74 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %73, i32 0, i32 0, !dbg !14728
  %75 = getelementptr inbounds [64 x i8], [64 x i8]* %13, i64 0, i64 0, !dbg !14729
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %74, i8* %75, i64 64), !dbg !14730
  %76 = getelementptr inbounds [64 x i8], [64 x i8]* %13, i64 0, i64 0, !dbg !14731
  %77 = getelementptr inbounds [64 x i8], [64 x i8]* %13, i64 0, i64 0, !dbg !14732
  call void @mbedtls_sha512(i8* %76, i64 64, i8* %77, i32 0), !dbg !14733
  store i32 0, i32* %10, align 4, !dbg !14734
  br label %78, !dbg !14736

78:                                               ; preds = %91, %63
  %79 = load i32, i32* %10, align 4, !dbg !14737
  %80 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14739
  %81 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %80, i32 0, i32 1, !dbg !14740
  %82 = load i32, i32* %81, align 8, !dbg !14740
  %83 = icmp slt i32 %79, %82, !dbg !14741
  br i1 %83, label %84, label %94, !dbg !14742

84:                                               ; preds = %78
  %85 = load %struct.mbedtls_entropy_context*, %struct.mbedtls_entropy_context** %12, align 8, !dbg !14743
  %86 = getelementptr inbounds %struct.mbedtls_entropy_context, %struct.mbedtls_entropy_context* %85, i32 0, i32 2, !dbg !14744
  %87 = load i32, i32* %10, align 4, !dbg !14745
  %88 = sext i32 %87 to i64, !dbg !14743
  %89 = getelementptr inbounds [20 x %struct.mbedtls_entropy_source_state], [20 x %struct.mbedtls_entropy_source_state]* %86, i64 0, i64 %88, !dbg !14743
  %90 = getelementptr inbounds %struct.mbedtls_entropy_source_state, %struct.mbedtls_entropy_source_state* %89, i32 0, i32 2, !dbg !14746
  store i64 0, i64* %90, align 8, !dbg !14747
  br label %91, !dbg !14743

91:                                               ; preds = %84
  %92 = load i32, i32* %10, align 4, !dbg !14748
  %93 = add nsw i32 %92, 1, !dbg !14748
  store i32 %93, i32* %10, align 4, !dbg !14748
  br label %78, !dbg !14749, !llvm.loop !14750

94:                                               ; preds = %78
  %95 = load i8*, i8** %6, align 8, !dbg !14752
  %96 = getelementptr inbounds [64 x i8], [64 x i8]* %13, i64 0, i64 0, !dbg !14753
  %97 = load i64, i64* %7, align 8, !dbg !14754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 16 %96, i64 %97, i1 false), !dbg !14753
  store i32 0, i32* %8, align 4, !dbg !14755
  br label %98, !dbg !14756

98:                                               ; preds = %94, %29, %24
  call void @llvm.dbg.label(metadata !14757), !dbg !14758
  %99 = load i32, i32* %8, align 4, !dbg !14759
  store i32 %99, i32* %4, align 4, !dbg !14760
  br label %100, !dbg !14760

100:                                              ; preds = %98, %18
  %101 = load i32, i32* %4, align 4, !dbg !14761
  ret i32 %101, !dbg !14761
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_entropy_source_self_test(i32 %0) #0 !dbg !14762 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [16 x i8], align 16
  %5 = alloca [16 x i8], align 16
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14763, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14765, metadata !DIExpression()), !dbg !14766
  store i32 0, i32* %3, align 4, !dbg !14766
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !14767, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !14769, metadata !DIExpression()), !dbg !14770
  %6 = load i32, i32* %2, align 4, !dbg !14771
  %7 = icmp ne i32 %6, 0, !dbg !14773
  br i1 %7, label %8, label %10, !dbg !14774

8:                                                ; preds = %1
  %9 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.278, i64 0, i64 0)), !dbg !14775
  br label %10, !dbg !14775

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0, !dbg !14776
  call void @llvm.memset.p0i8.i64(i8* align 16 %11, i8 0, i64 16, i1 false), !dbg !14776
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !14777
  call void @llvm.memset.p0i8.i64(i8* align 16 %12, i8 0, i64 16, i1 false), !dbg !14777
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0, !dbg !14778
  %14 = call i32 @mbedtls_entropy_source_self_test_gather(i8* %13, i64 16), !dbg !14780
  store i32 %14, i32* %3, align 4, !dbg !14781
  %15 = icmp ne i32 %14, 0, !dbg !14782
  br i1 %15, label %16, label %17, !dbg !14783

16:                                               ; preds = %10
  br label %38, !dbg !14784

17:                                               ; preds = %10
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !14785
  %19 = call i32 @mbedtls_entropy_source_self_test_gather(i8* %18, i64 16), !dbg !14787
  store i32 %19, i32* %3, align 4, !dbg !14788
  %20 = icmp ne i32 %19, 0, !dbg !14789
  br i1 %20, label %21, label %22, !dbg !14790

21:                                               ; preds = %17
  br label %38, !dbg !14791

22:                                               ; preds = %17
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0, !dbg !14792
  %24 = call i32 @mbedtls_entropy_source_self_test_check_bits(i8* %23, i64 16), !dbg !14794
  store i32 %24, i32* %3, align 4, !dbg !14795
  %25 = icmp ne i32 %24, 0, !dbg !14796
  br i1 %25, label %26, label %27, !dbg !14797

26:                                               ; preds = %22
  br label %38, !dbg !14798

27:                                               ; preds = %22
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !14799
  %29 = call i32 @mbedtls_entropy_source_self_test_check_bits(i8* %28, i64 16), !dbg !14801
  store i32 %29, i32* %3, align 4, !dbg !14802
  %30 = icmp ne i32 %29, 0, !dbg !14803
  br i1 %30, label %31, label %32, !dbg !14804

31:                                               ; preds = %27
  br label %38, !dbg !14805

32:                                               ; preds = %27
  %33 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0, !dbg !14806
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0, !dbg !14807
  %35 = call i32 @memcmp(i8* %33, i8* %34, i64 16), !dbg !14808
  %36 = icmp eq i32 %35, 0, !dbg !14809
  %37 = zext i1 %36 to i32, !dbg !14809
  store i32 %37, i32* %3, align 4, !dbg !14810
  br label %38, !dbg !14811

38:                                               ; preds = %32, %31, %26, %21, %16
  call void @llvm.dbg.label(metadata !14812), !dbg !14813
  %39 = load i32, i32* %2, align 4, !dbg !14814
  %40 = icmp ne i32 %39, 0, !dbg !14816
  br i1 %40, label %41, label %50, !dbg !14817

41:                                               ; preds = %38
  %42 = load i32, i32* %3, align 4, !dbg !14818
  %43 = icmp ne i32 %42, 0, !dbg !14821
  br i1 %43, label %44, label %46, !dbg !14822

44:                                               ; preds = %41
  %45 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.279, i64 0, i64 0)), !dbg !14823
  br label %48, !dbg !14823

46:                                               ; preds = %41
  %47 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.280, i64 0, i64 0)), !dbg !14824
  br label %48

48:                                               ; preds = %46, %44
  %49 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.281, i64 0, i64 0)), !dbg !14825
  br label %50, !dbg !14826

50:                                               ; preds = %48, %38
  %51 = load i32, i32* %3, align 4, !dbg !14827
  %52 = icmp ne i32 %51, 0, !dbg !14828
  %53 = zext i1 %52 to i32, !dbg !14828
  ret i32 %53, !dbg !14829
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mbedtls_entropy_source_self_test_gather(i8* %0, i64 %1) #0 !dbg !14830 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !14833, metadata !DIExpression()), !dbg !14834
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !14835, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14837, metadata !DIExpression()), !dbg !14838
  store i32 0, i32* %6, align 4, !dbg !14838
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14839, metadata !DIExpression()), !dbg !14840
  store i64 0, i64* %7, align 8, !dbg !14840
  call void @llvm.dbg.declare(metadata i64* %8, metadata !14841, metadata !DIExpression()), !dbg !14842
  store i64 0, i64* %8, align 8, !dbg !14842
  call void @llvm.dbg.declare(metadata i64* %9, metadata !14843, metadata !DIExpression()), !dbg !14844
  %10 = load i64, i64* %5, align 8, !dbg !14845
  store i64 %10, i64* %9, align 8, !dbg !14844
  br label %11, !dbg !14846

11:                                               ; preds = %31, %2
  %12 = load i64, i64* %9, align 8, !dbg !14847
  %13 = icmp ugt i64 %12, 0, !dbg !14848
  br i1 %13, label %14, label %18, !dbg !14849

14:                                               ; preds = %11
  %15 = load i64, i64* %7, align 8, !dbg !14850
  %16 = load i64, i64* %5, align 8, !dbg !14851
  %17 = icmp ult i64 %15, %16, !dbg !14852
  br label %18

18:                                               ; preds = %14, %11
  %19 = phi i1 [ false, %11 ], [ %17, %14 ], !dbg !14853
  br i1 %19, label %20, label %37, !dbg !14846

20:                                               ; preds = %18
  %21 = load i8*, i8** %4, align 8, !dbg !14854
  %22 = load i64, i64* %7, align 8, !dbg !14857
  %23 = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !14858
  %24 = load i64, i64* %5, align 8, !dbg !14859
  %25 = load i64, i64* %7, align 8, !dbg !14860
  %26 = sub i64 %24, %25, !dbg !14861
  %27 = call i32 @mbedtls_hardware_poll(i8* null, i8* %23, i64 %26, i64* %8), !dbg !14862
  store i32 %27, i32* %6, align 4, !dbg !14863
  %28 = icmp ne i32 %27, 0, !dbg !14864
  br i1 %28, label %29, label %31, !dbg !14865

29:                                               ; preds = %20
  %30 = load i32, i32* %6, align 4, !dbg !14866
  store i32 %30, i32* %3, align 4, !dbg !14867
  br label %44, !dbg !14867

31:                                               ; preds = %20
  %32 = load i64, i64* %8, align 8, !dbg !14868
  %33 = load i64, i64* %7, align 8, !dbg !14869
  %34 = add i64 %33, %32, !dbg !14869
  store i64 %34, i64* %7, align 8, !dbg !14869
  %35 = load i64, i64* %9, align 8, !dbg !14870
  %36 = add i64 %35, -1, !dbg !14870
  store i64 %36, i64* %9, align 8, !dbg !14870
  br label %11, !dbg !14846, !llvm.loop !14871

37:                                               ; preds = %18
  %38 = load i64, i64* %7, align 8, !dbg !14873
  %39 = load i64, i64* %5, align 8, !dbg !14875
  %40 = icmp ult i64 %38, %39, !dbg !14876
  br i1 %40, label %41, label %42, !dbg !14877

41:                                               ; preds = %37
  store i32 1, i32* %6, align 4, !dbg !14878
  br label %42, !dbg !14880

42:                                               ; preds = %41, %37
  %43 = load i32, i32* %6, align 4, !dbg !14881
  store i32 %43, i32* %3, align 4, !dbg !14882
  br label %44, !dbg !14882

44:                                               ; preds = %42, %29
  %45 = load i32, i32* %3, align 4, !dbg !14883
  ret i32 %45, !dbg !14883
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mbedtls_entropy_source_self_test_check_bits(i8* %0, i64 %1) #0 !dbg !14884 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !14887, metadata !DIExpression()), !dbg !14888
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !14889, metadata !DIExpression()), !dbg !14890
  call void @llvm.dbg.declare(metadata i8* %5, metadata !14891, metadata !DIExpression()), !dbg !14892
  store i8 -1, i8* %5, align 1, !dbg !14892
  call void @llvm.dbg.declare(metadata i8* %6, metadata !14893, metadata !DIExpression()), !dbg !14894
  store i8 0, i8* %6, align 1, !dbg !14894
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14895, metadata !DIExpression()), !dbg !14896
  store i64 0, i64* %7, align 8, !dbg !14897
  br label %8, !dbg !14899

8:                                                ; preds = %31, %2
  %9 = load i64, i64* %7, align 8, !dbg !14900
  %10 = load i64, i64* %4, align 8, !dbg !14902
  %11 = icmp ult i64 %9, %10, !dbg !14903
  br i1 %11, label %12, label %34, !dbg !14904

12:                                               ; preds = %8
  %13 = load i8*, i8** %3, align 8, !dbg !14905
  %14 = load i64, i64* %7, align 8, !dbg !14907
  %15 = getelementptr inbounds i8, i8* %13, i64 %14, !dbg !14905
  %16 = load i8, i8* %15, align 1, !dbg !14905
  %17 = zext i8 %16 to i32, !dbg !14905
  %18 = load i8, i8* %5, align 1, !dbg !14908
  %19 = zext i8 %18 to i32, !dbg !14908
  %20 = and i32 %19, %17, !dbg !14908
  %21 = trunc i32 %20 to i8, !dbg !14908
  store i8 %21, i8* %5, align 1, !dbg !14908
  %22 = load i8*, i8** %3, align 8, !dbg !14909
  %23 = load i64, i64* %7, align 8, !dbg !14910
  %24 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !14909
  %25 = load i8, i8* %24, align 1, !dbg !14909
  %26 = zext i8 %25 to i32, !dbg !14909
  %27 = load i8, i8* %6, align 1, !dbg !14911
  %28 = zext i8 %27 to i32, !dbg !14911
  %29 = or i32 %28, %26, !dbg !14911
  %30 = trunc i32 %29 to i8, !dbg !14911
  store i8 %30, i8* %6, align 1, !dbg !14911
  br label %31, !dbg !14912

31:                                               ; preds = %12
  %32 = load i64, i64* %7, align 8, !dbg !14913
  %33 = add i64 %32, 1, !dbg !14913
  store i64 %33, i64* %7, align 8, !dbg !14913
  br label %8, !dbg !14914, !llvm.loop !14915

34:                                               ; preds = %8
  %35 = load i8, i8* %5, align 1, !dbg !14917
  %36 = zext i8 %35 to i32, !dbg !14917
  %37 = icmp eq i32 %36, 255, !dbg !14918
  br i1 %37, label %42, label %38, !dbg !14919

38:                                               ; preds = %34
  %39 = load i8, i8* %6, align 1, !dbg !14920
  %40 = zext i8 %39 to i32, !dbg !14920
  %41 = icmp eq i32 %40, 0, !dbg !14921
  br label %42, !dbg !14919

42:                                               ; preds = %38, %34
  %43 = phi i1 [ true, %34 ], [ %41, %38 ]
  %44 = zext i1 %43 to i32, !dbg !14919
  ret i32 %44, !dbg !14922
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_entropy_self_test(i32 %0) #0 !dbg !14923 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_entropy_context, align 8
  %5 = alloca [64 x i8], align 16
  %6 = alloca [64 x i8], align 16
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14924, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14926, metadata !DIExpression()), !dbg !14927
  store i32 1, i32* %3, align 4, !dbg !14927
  call void @llvm.dbg.declare(metadata %struct.mbedtls_entropy_context* %4, metadata !14928, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.declare(metadata [64 x i8]* %5, metadata !14930, metadata !DIExpression()), !dbg !14931
  %9 = bitcast [64 x i8]* %5 to i8*, !dbg !14931
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 64, i1 false), !dbg !14931
  call void @llvm.dbg.declare(metadata [64 x i8]* %6, metadata !14932, metadata !DIExpression()), !dbg !14933
  %10 = bitcast [64 x i8]* %6 to i8*, !dbg !14933
  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 64, i1 false), !dbg !14933
  call void @llvm.dbg.declare(metadata i64* %7, metadata !14934, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.declare(metadata i64* %8, metadata !14936, metadata !DIExpression()), !dbg !14937
  %11 = load i32, i32* %2, align 4, !dbg !14938
  %12 = icmp ne i32 %11, 0, !dbg !14940
  br i1 %12, label %13, label %15, !dbg !14941

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.282, i64 0, i64 0)), !dbg !14942
  br label %15, !dbg !14942

15:                                               ; preds = %13, %1
  call void @mbedtls_entropy_init(%struct.mbedtls_entropy_context* %4), !dbg !14943
  %16 = call i32 @mbedtls_entropy_gather(%struct.mbedtls_entropy_context* %4), !dbg !14944
  store i32 %16, i32* %3, align 4, !dbg !14946
  %17 = icmp ne i32 %16, 0, !dbg !14947
  br i1 %17, label %18, label %19, !dbg !14948

18:                                               ; preds = %15
  br label %81, !dbg !14949

19:                                               ; preds = %15
  %20 = call i32 @mbedtls_entropy_add_source(%struct.mbedtls_entropy_context* %4, i32 (i8*, i8*, i64, i64*)* @entropy_dummy_source, i8* null, i64 16, i32 0), !dbg !14950
  store i32 %20, i32* %3, align 4, !dbg !14951
  %21 = load i32, i32* %3, align 4, !dbg !14952
  %22 = icmp ne i32 %21, 0, !dbg !14954
  br i1 %22, label %23, label %24, !dbg !14955

23:                                               ; preds = %19
  br label %81, !dbg !14956

24:                                               ; preds = %19
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0, !dbg !14957
  %26 = call i32 @mbedtls_entropy_update_manual(%struct.mbedtls_entropy_context* %4, i8* %25, i64 64), !dbg !14959
  store i32 %26, i32* %3, align 4, !dbg !14960
  %27 = icmp ne i32 %26, 0, !dbg !14961
  br i1 %27, label %28, label %29, !dbg !14962

28:                                               ; preds = %24
  br label %81, !dbg !14963

29:                                               ; preds = %24
  store i64 0, i64* %7, align 8, !dbg !14964
  br label %30, !dbg !14966

30:                                               ; preds = %58, %29
  %31 = load i64, i64* %7, align 8, !dbg !14967
  %32 = icmp ult i64 %31, 8, !dbg !14969
  br i1 %32, label %33, label %61, !dbg !14970

33:                                               ; preds = %30
  %34 = bitcast %struct.mbedtls_entropy_context* %4 to i8*, !dbg !14971
  %35 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0, !dbg !14974
  %36 = call i32 @mbedtls_entropy_func(i8* %34, i8* %35, i64 64), !dbg !14975
  store i32 %36, i32* %3, align 4, !dbg !14976
  %37 = icmp ne i32 %36, 0, !dbg !14977
  br i1 %37, label %38, label %39, !dbg !14978

38:                                               ; preds = %33
  br label %81, !dbg !14979

39:                                               ; preds = %33
  store i64 0, i64* %8, align 8, !dbg !14980
  br label %40, !dbg !14982

40:                                               ; preds = %54, %39
  %41 = load i64, i64* %8, align 8, !dbg !14983
  %42 = icmp ult i64 %41, 64, !dbg !14985
  br i1 %42, label %43, label %57, !dbg !14986

43:                                               ; preds = %40
  %44 = load i64, i64* %8, align 8, !dbg !14987
  %45 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %44, !dbg !14988
  %46 = load i8, i8* %45, align 1, !dbg !14988
  %47 = zext i8 %46 to i32, !dbg !14988
  %48 = load i64, i64* %8, align 8, !dbg !14989
  %49 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 %48, !dbg !14990
  %50 = load i8, i8* %49, align 1, !dbg !14991
  %51 = zext i8 %50 to i32, !dbg !14991
  %52 = or i32 %51, %47, !dbg !14991
  %53 = trunc i32 %52 to i8, !dbg !14991
  store i8 %53, i8* %49, align 1, !dbg !14991
  br label %54, !dbg !14990

54:                                               ; preds = %43
  %55 = load i64, i64* %8, align 8, !dbg !14992
  %56 = add i64 %55, 1, !dbg !14992
  store i64 %56, i64* %8, align 8, !dbg !14992
  br label %40, !dbg !14993, !llvm.loop !14994

57:                                               ; preds = %40
  br label %58, !dbg !14996

58:                                               ; preds = %57
  %59 = load i64, i64* %7, align 8, !dbg !14997
  %60 = add i64 %59, 1, !dbg !14997
  store i64 %60, i64* %7, align 8, !dbg !14997
  br label %30, !dbg !14998, !llvm.loop !14999

61:                                               ; preds = %30
  store i64 0, i64* %8, align 8, !dbg !15001
  br label %62, !dbg !15003

62:                                               ; preds = %73, %61
  %63 = load i64, i64* %8, align 8, !dbg !15004
  %64 = icmp ult i64 %63, 64, !dbg !15006
  br i1 %64, label %65, label %76, !dbg !15007

65:                                               ; preds = %62
  %66 = load i64, i64* %8, align 8, !dbg !15008
  %67 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 %66, !dbg !15011
  %68 = load i8, i8* %67, align 1, !dbg !15011
  %69 = zext i8 %68 to i32, !dbg !15011
  %70 = icmp eq i32 %69, 0, !dbg !15012
  br i1 %70, label %71, label %72, !dbg !15013

71:                                               ; preds = %65
  store i32 1, i32* %3, align 4, !dbg !15014
  br label %81, !dbg !15016

72:                                               ; preds = %65
  br label %73, !dbg !15017

73:                                               ; preds = %72
  %74 = load i64, i64* %8, align 8, !dbg !15018
  %75 = add i64 %74, 1, !dbg !15018
  store i64 %75, i64* %8, align 8, !dbg !15018
  br label %62, !dbg !15019, !llvm.loop !15020

76:                                               ; preds = %62
  %77 = call i32 @mbedtls_entropy_source_self_test(i32 0), !dbg !15022
  store i32 %77, i32* %3, align 4, !dbg !15024
  %78 = icmp ne i32 %77, 0, !dbg !15025
  br i1 %78, label %79, label %80, !dbg !15026

79:                                               ; preds = %76
  br label %81, !dbg !15027

80:                                               ; preds = %76
  br label %81, !dbg !15028

81:                                               ; preds = %80, %79, %71, %38, %28, %23, %18
  call void @llvm.dbg.label(metadata !15029), !dbg !15030
  call void @mbedtls_entropy_free(%struct.mbedtls_entropy_context* %4), !dbg !15031
  %82 = load i32, i32* %2, align 4, !dbg !15032
  %83 = icmp ne i32 %82, 0, !dbg !15034
  br i1 %83, label %84, label %93, !dbg !15035

84:                                               ; preds = %81
  %85 = load i32, i32* %3, align 4, !dbg !15036
  %86 = icmp ne i32 %85, 0, !dbg !15039
  br i1 %86, label %87, label %89, !dbg !15040

87:                                               ; preds = %84
  %88 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.279, i64 0, i64 0)), !dbg !15041
  br label %91, !dbg !15041

89:                                               ; preds = %84
  %90 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.280, i64 0, i64 0)), !dbg !15042
  br label %91

91:                                               ; preds = %89, %87
  %92 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.281, i64 0, i64 0)), !dbg !15043
  br label %93, !dbg !15044

93:                                               ; preds = %91, %81
  %94 = load i32, i32* %3, align 4, !dbg !15045
  %95 = icmp ne i32 %94, 0, !dbg !15046
  %96 = zext i1 %95 to i32, !dbg !15046
  ret i32 %96, !dbg !15047
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @entropy_dummy_source(i8* %0, i8* %1, i64 %2, i64* %3) #0 !dbg !15048 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15049, metadata !DIExpression()), !dbg !15050
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !15051, metadata !DIExpression()), !dbg !15052
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !15053, metadata !DIExpression()), !dbg !15054
  store i64* %3, i64** %8, align 8
  call void @llvm.dbg.declare(metadata i64** %8, metadata !15055, metadata !DIExpression()), !dbg !15056
  %9 = load i8*, i8** %5, align 8, !dbg !15057
  %10 = load i8*, i8** %6, align 8, !dbg !15058
  %11 = load i64, i64* %7, align 8, !dbg !15059
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 42, i64 %11, i1 false), !dbg !15060
  %12 = load i64, i64* %7, align 8, !dbg !15061
  %13 = load i64*, i64** %8, align 8, !dbg !15062
  store i64 %12, i64* %13, align 8, !dbg !15063
  ret i32 0, !dbg !15064
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_strerror(i32 %0, i8* %1, i64 %2) #0 !dbg !15065 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15069, metadata !DIExpression()), !dbg !15070
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15071, metadata !DIExpression()), !dbg !15072
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !15073, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.declare(metadata i64* %7, metadata !15075, metadata !DIExpression()), !dbg !15076
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15077, metadata !DIExpression()), !dbg !15078
  %9 = load i64, i64* %6, align 8, !dbg !15079
  %10 = icmp eq i64 %9, 0, !dbg !15081
  br i1 %10, label %11, label %12, !dbg !15082

11:                                               ; preds = %3
  br label %1367, !dbg !15083

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !15084
  %14 = load i64, i64* %6, align 8, !dbg !15085
  call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 %14, i1 false), !dbg !15086
  %15 = load i32, i32* %4, align 4, !dbg !15087
  %16 = icmp slt i32 %15, 0, !dbg !15089
  br i1 %16, label %17, label %20, !dbg !15090

17:                                               ; preds = %12
  %18 = load i32, i32* %4, align 4, !dbg !15091
  %19 = sub nsw i32 0, %18, !dbg !15092
  store i32 %19, i32* %4, align 4, !dbg !15093
  br label %20, !dbg !15094

20:                                               ; preds = %17, %12
  %21 = load i32, i32* %4, align 4, !dbg !15095
  %22 = and i32 %21, 65408, !dbg !15097
  %23 = icmp ne i32 %22, 0, !dbg !15097
  br i1 %23, label %24, label %1009, !dbg !15098

24:                                               ; preds = %20
  %25 = load i32, i32* %4, align 4, !dbg !15099
  %26 = and i32 %25, 65408, !dbg !15101
  store i32 %26, i32* %8, align 4, !dbg !15102
  %27 = load i32, i32* %8, align 4, !dbg !15103
  %28 = icmp eq i32 %27, 24704, !dbg !15105
  br i1 %28, label %29, label %33, !dbg !15106

29:                                               ; preds = %24
  %30 = load i8*, i8** %5, align 8, !dbg !15107
  %31 = load i64, i64* %6, align 8, !dbg !15108
  %32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %30, i64 %31, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.285, i64 0, i64 0)), !dbg !15109
  br label %33, !dbg !15109

33:                                               ; preds = %29, %24
  %34 = load i32, i32* %8, align 4, !dbg !15110
  %35 = icmp eq i32 %34, 24832, !dbg !15112
  br i1 %35, label %36, label %40, !dbg !15113

36:                                               ; preds = %33
  %37 = load i8*, i8** %5, align 8, !dbg !15114
  %38 = load i64, i64* %6, align 8, !dbg !15115
  %39 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %37, i64 %38, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1.286, i64 0, i64 0)), !dbg !15116
  br label %40, !dbg !15116

40:                                               ; preds = %36, %33
  %41 = load i32, i32* %8, align 4, !dbg !15117
  %42 = icmp eq i32 %41, 24960, !dbg !15119
  br i1 %42, label %43, label %47, !dbg !15120

43:                                               ; preds = %40
  %44 = load i8*, i8** %5, align 8, !dbg !15121
  %45 = load i64, i64* %6, align 8, !dbg !15122
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %44, i64 %45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2.287, i64 0, i64 0)), !dbg !15123
  br label %47, !dbg !15123

47:                                               ; preds = %43, %40
  %48 = load i32, i32* %8, align 4, !dbg !15124
  %49 = icmp eq i32 %48, 25088, !dbg !15126
  br i1 %49, label %50, label %54, !dbg !15127

50:                                               ; preds = %47
  %51 = load i8*, i8** %5, align 8, !dbg !15128
  %52 = load i64, i64* %6, align 8, !dbg !15129
  %53 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %51, i64 %52, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.288, i64 0, i64 0)), !dbg !15130
  br label %54, !dbg !15130

54:                                               ; preds = %50, %47
  %55 = load i32, i32* %8, align 4, !dbg !15131
  %56 = icmp eq i32 %55, 25216, !dbg !15133
  br i1 %56, label %57, label %61, !dbg !15134

57:                                               ; preds = %54
  %58 = load i8*, i8** %5, align 8, !dbg !15135
  %59 = load i64, i64* %6, align 8, !dbg !15136
  %60 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %58, i64 %59, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.289, i64 0, i64 0)), !dbg !15137
  br label %61, !dbg !15137

61:                                               ; preds = %57, %54
  %62 = load i32, i32* %8, align 4, !dbg !15138
  %63 = icmp eq i32 %62, 25344, !dbg !15140
  br i1 %63, label %64, label %68, !dbg !15141

64:                                               ; preds = %61
  %65 = load i8*, i8** %5, align 8, !dbg !15142
  %66 = load i64, i64* %6, align 8, !dbg !15143
  %67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %65, i64 %66, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5.290, i64 0, i64 0)), !dbg !15144
  br label %68, !dbg !15144

68:                                               ; preds = %64, %61
  %69 = load i32, i32* %8, align 4, !dbg !15145
  %70 = icmp eq i32 %69, 25472, !dbg !15147
  br i1 %70, label %71, label %75, !dbg !15148

71:                                               ; preds = %68
  %72 = load i8*, i8** %5, align 8, !dbg !15149
  %73 = load i64, i64* %6, align 8, !dbg !15150
  %74 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %72, i64 %73, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6.291, i64 0, i64 0)), !dbg !15151
  br label %75, !dbg !15151

75:                                               ; preds = %71, %68
  %76 = load i32, i32* %8, align 4, !dbg !15152
  %77 = icmp eq i32 %76, 12416, !dbg !15154
  br i1 %77, label %78, label %82, !dbg !15155

78:                                               ; preds = %75
  %79 = load i8*, i8** %5, align 8, !dbg !15156
  %80 = load i64, i64* %6, align 8, !dbg !15157
  %81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %79, i64 %80, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7.292, i64 0, i64 0)), !dbg !15158
  br label %82, !dbg !15158

82:                                               ; preds = %78, %75
  %83 = load i32, i32* %8, align 4, !dbg !15159
  %84 = icmp eq i32 %83, 12544, !dbg !15161
  br i1 %84, label %85, label %89, !dbg !15162

85:                                               ; preds = %82
  %86 = load i8*, i8** %5, align 8, !dbg !15163
  %87 = load i64, i64* %6, align 8, !dbg !15164
  %88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %86, i64 %87, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8.293, i64 0, i64 0)), !dbg !15165
  br label %89, !dbg !15165

89:                                               ; preds = %85, %82
  %90 = load i32, i32* %8, align 4, !dbg !15166
  %91 = icmp eq i32 %90, 12672, !dbg !15168
  br i1 %91, label %92, label %96, !dbg !15169

92:                                               ; preds = %89
  %93 = load i8*, i8** %5, align 8, !dbg !15170
  %94 = load i64, i64* %6, align 8, !dbg !15171
  %95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %93, i64 %94, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9.294, i64 0, i64 0)), !dbg !15172
  br label %96, !dbg !15172

96:                                               ; preds = %92, %89
  %97 = load i32, i32* %8, align 4, !dbg !15173
  %98 = icmp eq i32 %97, 12800, !dbg !15175
  br i1 %98, label %99, label %103, !dbg !15176

99:                                               ; preds = %96
  %100 = load i8*, i8** %5, align 8, !dbg !15177
  %101 = load i64, i64* %6, align 8, !dbg !15178
  %102 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %100, i64 %101, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10.295, i64 0, i64 0)), !dbg !15179
  br label %103, !dbg !15179

103:                                              ; preds = %99, %96
  %104 = load i32, i32* %8, align 4, !dbg !15180
  %105 = icmp eq i32 %104, 12928, !dbg !15182
  br i1 %105, label %106, label %110, !dbg !15183

106:                                              ; preds = %103
  %107 = load i8*, i8** %5, align 8, !dbg !15184
  %108 = load i64, i64* %6, align 8, !dbg !15185
  %109 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %107, i64 %108, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.296, i64 0, i64 0)), !dbg !15186
  br label %110, !dbg !15186

110:                                              ; preds = %106, %103
  %111 = load i32, i32* %8, align 4, !dbg !15187
  %112 = icmp eq i32 %111, 13056, !dbg !15189
  br i1 %112, label %113, label %117, !dbg !15190

113:                                              ; preds = %110
  %114 = load i8*, i8** %5, align 8, !dbg !15191
  %115 = load i64, i64* %6, align 8, !dbg !15192
  %116 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %114, i64 %115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.297, i64 0, i64 0)), !dbg !15193
  br label %117, !dbg !15193

117:                                              ; preds = %113, %110
  %118 = load i32, i32* %8, align 4, !dbg !15194
  %119 = icmp eq i32 %118, 13184, !dbg !15196
  br i1 %119, label %120, label %124, !dbg !15197

120:                                              ; preds = %117
  %121 = load i8*, i8** %5, align 8, !dbg !15198
  %122 = load i64, i64* %6, align 8, !dbg !15199
  %123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %121, i64 %122, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.298, i64 0, i64 0)), !dbg !15200
  br label %124, !dbg !15200

124:                                              ; preds = %120, %117
  %125 = load i32, i32* %8, align 4, !dbg !15201
  %126 = icmp eq i32 %125, 13312, !dbg !15203
  br i1 %126, label %127, label %131, !dbg !15204

127:                                              ; preds = %124
  %128 = load i8*, i8** %5, align 8, !dbg !15205
  %129 = load i64, i64* %6, align 8, !dbg !15206
  %130 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %128, i64 %129, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14.299, i64 0, i64 0)), !dbg !15207
  br label %131, !dbg !15207

131:                                              ; preds = %127, %124
  %132 = load i32, i32* %8, align 4, !dbg !15208
  %133 = icmp eq i32 %132, 13440, !dbg !15210
  br i1 %133, label %134, label %138, !dbg !15211

134:                                              ; preds = %131
  %135 = load i8*, i8** %5, align 8, !dbg !15212
  %136 = load i64, i64* %6, align 8, !dbg !15213
  %137 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %135, i64 %136, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15.300, i64 0, i64 0)), !dbg !15214
  br label %138, !dbg !15214

138:                                              ; preds = %134, %131
  %139 = load i32, i32* %8, align 4, !dbg !15215
  %140 = icmp eq i32 %139, 20352, !dbg !15217
  br i1 %140, label %141, label %145, !dbg !15218

141:                                              ; preds = %138
  %142 = load i8*, i8** %5, align 8, !dbg !15219
  %143 = load i64, i64* %6, align 8, !dbg !15220
  %144 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %142, i64 %143, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16.301, i64 0, i64 0)), !dbg !15221
  br label %145, !dbg !15221

145:                                              ; preds = %141, %138
  %146 = load i32, i32* %8, align 4, !dbg !15222
  %147 = icmp eq i32 %146, 20224, !dbg !15224
  br i1 %147, label %148, label %152, !dbg !15225

148:                                              ; preds = %145
  %149 = load i8*, i8** %5, align 8, !dbg !15226
  %150 = load i64, i64* %6, align 8, !dbg !15227
  %151 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %149, i64 %150, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17.302, i64 0, i64 0)), !dbg !15228
  br label %152, !dbg !15228

152:                                              ; preds = %148, %145
  %153 = load i32, i32* %8, align 4, !dbg !15229
  %154 = icmp eq i32 %153, 20096, !dbg !15231
  br i1 %154, label %155, label %159, !dbg !15232

155:                                              ; preds = %152
  %156 = load i8*, i8** %5, align 8, !dbg !15233
  %157 = load i64, i64* %6, align 8, !dbg !15234
  %158 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %156, i64 %157, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18.303, i64 0, i64 0)), !dbg !15235
  br label %159, !dbg !15235

159:                                              ; preds = %155, %152
  %160 = load i32, i32* %8, align 4, !dbg !15236
  %161 = icmp eq i32 %160, 19968, !dbg !15238
  br i1 %161, label %162, label %166, !dbg !15239

162:                                              ; preds = %159
  %163 = load i8*, i8** %5, align 8, !dbg !15240
  %164 = load i64, i64* %6, align 8, !dbg !15241
  %165 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %163, i64 %164, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19.304, i64 0, i64 0)), !dbg !15242
  br label %166, !dbg !15242

166:                                              ; preds = %162, %159
  %167 = load i32, i32* %8, align 4, !dbg !15243
  %168 = icmp eq i32 %167, 19840, !dbg !15245
  br i1 %168, label %169, label %173, !dbg !15246

169:                                              ; preds = %166
  %170 = load i8*, i8** %5, align 8, !dbg !15247
  %171 = load i64, i64* %6, align 8, !dbg !15248
  %172 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %170, i64 %171, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20.305, i64 0, i64 0)), !dbg !15249
  br label %173, !dbg !15249

173:                                              ; preds = %169, %166
  %174 = load i32, i32* %8, align 4, !dbg !15250
  %175 = icmp eq i32 %174, 19712, !dbg !15252
  br i1 %175, label %176, label %180, !dbg !15253

176:                                              ; preds = %173
  %177 = load i8*, i8** %5, align 8, !dbg !15254
  %178 = load i64, i64* %6, align 8, !dbg !15255
  %179 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %177, i64 %178, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.21.306, i64 0, i64 0)), !dbg !15256
  br label %180, !dbg !15256

180:                                              ; preds = %176, %173
  %181 = load i32, i32* %8, align 4, !dbg !15257
  %182 = icmp eq i32 %181, 19584, !dbg !15259
  br i1 %182, label %183, label %187, !dbg !15260

183:                                              ; preds = %180
  %184 = load i8*, i8** %5, align 8, !dbg !15261
  %185 = load i64, i64* %6, align 8, !dbg !15262
  %186 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %184, i64 %185, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22.307, i64 0, i64 0)), !dbg !15263
  br label %187, !dbg !15263

187:                                              ; preds = %183, %180
  %188 = load i32, i32* %8, align 4, !dbg !15264
  %189 = icmp eq i32 %188, 19456, !dbg !15266
  br i1 %189, label %190, label %194, !dbg !15267

190:                                              ; preds = %187
  %191 = load i8*, i8** %5, align 8, !dbg !15268
  %192 = load i64, i64* %6, align 8, !dbg !15269
  %193 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %191, i64 %192, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.23.308, i64 0, i64 0)), !dbg !15270
  br label %194, !dbg !15270

194:                                              ; preds = %190, %187
  %195 = load i32, i32* %8, align 4, !dbg !15271
  %196 = icmp eq i32 %195, 20608, !dbg !15273
  br i1 %196, label %197, label %201, !dbg !15274

197:                                              ; preds = %194
  %198 = load i8*, i8** %5, align 8, !dbg !15275
  %199 = load i64, i64* %6, align 8, !dbg !15276
  %200 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %198, i64 %199, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24.309, i64 0, i64 0)), !dbg !15277
  br label %201, !dbg !15277

201:                                              ; preds = %197, %194
  %202 = load i32, i32* %8, align 4, !dbg !15278
  %203 = icmp eq i32 %202, 20736, !dbg !15280
  br i1 %203, label %204, label %208, !dbg !15281

204:                                              ; preds = %201
  %205 = load i8*, i8** %5, align 8, !dbg !15282
  %206 = load i64, i64* %6, align 8, !dbg !15283
  %207 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %205, i64 %206, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25.310, i64 0, i64 0)), !dbg !15284
  br label %208, !dbg !15284

208:                                              ; preds = %204, %201
  %209 = load i32, i32* %8, align 4, !dbg !15285
  %210 = icmp eq i32 %209, 20864, !dbg !15287
  br i1 %210, label %211, label %215, !dbg !15288

211:                                              ; preds = %208
  %212 = load i8*, i8** %5, align 8, !dbg !15289
  %213 = load i64, i64* %6, align 8, !dbg !15290
  %214 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %212, i64 %213, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26.311, i64 0, i64 0)), !dbg !15291
  br label %215, !dbg !15291

215:                                              ; preds = %211, %208
  %216 = load i32, i32* %8, align 4, !dbg !15292
  %217 = icmp eq i32 %216, 20992, !dbg !15294
  br i1 %217, label %218, label %222, !dbg !15295

218:                                              ; preds = %215
  %219 = load i8*, i8** %5, align 8, !dbg !15296
  %220 = load i64, i64* %6, align 8, !dbg !15297
  %221 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %219, i64 %220, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27.312, i64 0, i64 0)), !dbg !15298
  br label %222, !dbg !15298

222:                                              ; preds = %218, %215
  %223 = load i32, i32* %8, align 4, !dbg !15299
  %224 = icmp eq i32 %223, 4224, !dbg !15301
  br i1 %224, label %225, label %229, !dbg !15302

225:                                              ; preds = %222
  %226 = load i8*, i8** %5, align 8, !dbg !15303
  %227 = load i64, i64* %6, align 8, !dbg !15304
  %228 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %226, i64 %227, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.313, i64 0, i64 0)), !dbg !15305
  br label %229, !dbg !15305

229:                                              ; preds = %225, %222
  %230 = load i32, i32* %8, align 4, !dbg !15306
  %231 = icmp eq i32 %230, 4352, !dbg !15308
  br i1 %231, label %232, label %236, !dbg !15309

232:                                              ; preds = %229
  %233 = load i8*, i8** %5, align 8, !dbg !15310
  %234 = load i64, i64* %6, align 8, !dbg !15311
  %235 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %233, i64 %234, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29.314, i64 0, i64 0)), !dbg !15312
  br label %236, !dbg !15312

236:                                              ; preds = %232, %229
  %237 = load i32, i32* %8, align 4, !dbg !15313
  %238 = icmp eq i32 %237, 4480, !dbg !15315
  br i1 %238, label %239, label %243, !dbg !15316

239:                                              ; preds = %236
  %240 = load i8*, i8** %5, align 8, !dbg !15317
  %241 = load i64, i64* %6, align 8, !dbg !15318
  %242 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %240, i64 %241, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30.315, i64 0, i64 0)), !dbg !15319
  br label %243, !dbg !15319

243:                                              ; preds = %239, %236
  %244 = load i32, i32* %8, align 4, !dbg !15320
  %245 = icmp eq i32 %244, 4608, !dbg !15322
  br i1 %245, label %246, label %250, !dbg !15323

246:                                              ; preds = %243
  %247 = load i8*, i8** %5, align 8, !dbg !15324
  %248 = load i64, i64* %6, align 8, !dbg !15325
  %249 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %247, i64 %248, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31.316, i64 0, i64 0)), !dbg !15326
  br label %250, !dbg !15326

250:                                              ; preds = %246, %243
  %251 = load i32, i32* %8, align 4, !dbg !15327
  %252 = icmp eq i32 %251, 4736, !dbg !15329
  br i1 %252, label %253, label %257, !dbg !15330

253:                                              ; preds = %250
  %254 = load i8*, i8** %5, align 8, !dbg !15331
  %255 = load i64, i64* %6, align 8, !dbg !15332
  %256 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %254, i64 %255, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.32.317, i64 0, i64 0)), !dbg !15333
  br label %257, !dbg !15333

257:                                              ; preds = %253, %250
  %258 = load i32, i32* %8, align 4, !dbg !15334
  %259 = icmp eq i32 %258, 4864, !dbg !15336
  br i1 %259, label %260, label %264, !dbg !15337

260:                                              ; preds = %257
  %261 = load i8*, i8** %5, align 8, !dbg !15338
  %262 = load i64, i64* %6, align 8, !dbg !15339
  %263 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %261, i64 %262, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.33.318, i64 0, i64 0)), !dbg !15340
  br label %264, !dbg !15340

264:                                              ; preds = %260, %257
  %265 = load i32, i32* %8, align 4, !dbg !15341
  %266 = icmp eq i32 %265, 4992, !dbg !15343
  br i1 %266, label %267, label %271, !dbg !15344

267:                                              ; preds = %264
  %268 = load i8*, i8** %5, align 8, !dbg !15345
  %269 = load i64, i64* %6, align 8, !dbg !15346
  %270 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %268, i64 %269, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.34.319, i64 0, i64 0)), !dbg !15347
  br label %271, !dbg !15347

271:                                              ; preds = %267, %264
  %272 = load i32, i32* %8, align 4, !dbg !15348
  %273 = icmp eq i32 %272, 5120, !dbg !15350
  br i1 %273, label %274, label %278, !dbg !15351

274:                                              ; preds = %271
  %275 = load i8*, i8** %5, align 8, !dbg !15352
  %276 = load i64, i64* %6, align 8, !dbg !15353
  %277 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %275, i64 %276, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.35.320, i64 0, i64 0)), !dbg !15354
  br label %278, !dbg !15354

278:                                              ; preds = %274, %271
  %279 = load i32, i32* %8, align 4, !dbg !15355
  %280 = icmp eq i32 %279, 5248, !dbg !15357
  br i1 %280, label %281, label %285, !dbg !15358

281:                                              ; preds = %278
  %282 = load i8*, i8** %5, align 8, !dbg !15359
  %283 = load i64, i64* %6, align 8, !dbg !15360
  %284 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %282, i64 %283, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36.321, i64 0, i64 0)), !dbg !15361
  br label %285, !dbg !15361

285:                                              ; preds = %281, %278
  %286 = load i32, i32* %8, align 4, !dbg !15362
  %287 = icmp eq i32 %286, 16256, !dbg !15364
  br i1 %287, label %288, label %292, !dbg !15365

288:                                              ; preds = %285
  %289 = load i8*, i8** %5, align 8, !dbg !15366
  %290 = load i64, i64* %6, align 8, !dbg !15367
  %291 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %289, i64 %290, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37.322, i64 0, i64 0)), !dbg !15368
  br label %292, !dbg !15368

292:                                              ; preds = %288, %285
  %293 = load i32, i32* %8, align 4, !dbg !15369
  %294 = icmp eq i32 %293, 16128, !dbg !15371
  br i1 %294, label %295, label %299, !dbg !15372

295:                                              ; preds = %292
  %296 = load i8*, i8** %5, align 8, !dbg !15373
  %297 = load i64, i64* %6, align 8, !dbg !15374
  %298 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %296, i64 %297, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.38.323, i64 0, i64 0)), !dbg !15375
  br label %299, !dbg !15375

299:                                              ; preds = %295, %292
  %300 = load i32, i32* %8, align 4, !dbg !15376
  %301 = icmp eq i32 %300, 16000, !dbg !15378
  br i1 %301, label %302, label %306, !dbg !15379

302:                                              ; preds = %299
  %303 = load i8*, i8** %5, align 8, !dbg !15380
  %304 = load i64, i64* %6, align 8, !dbg !15381
  %305 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %303, i64 %304, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39.324, i64 0, i64 0)), !dbg !15382
  br label %306, !dbg !15382

306:                                              ; preds = %302, %299
  %307 = load i32, i32* %8, align 4, !dbg !15383
  %308 = icmp eq i32 %307, 15872, !dbg !15385
  br i1 %308, label %309, label %313, !dbg !15386

309:                                              ; preds = %306
  %310 = load i8*, i8** %5, align 8, !dbg !15387
  %311 = load i64, i64* %6, align 8, !dbg !15388
  %312 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %310, i64 %311, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40.325, i64 0, i64 0)), !dbg !15389
  br label %313, !dbg !15389

313:                                              ; preds = %309, %306
  %314 = load i32, i32* %8, align 4, !dbg !15390
  %315 = icmp eq i32 %314, 15744, !dbg !15392
  br i1 %315, label %316, label %320, !dbg !15393

316:                                              ; preds = %313
  %317 = load i8*, i8** %5, align 8, !dbg !15394
  %318 = load i64, i64* %6, align 8, !dbg !15395
  %319 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %317, i64 %318, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41.326, i64 0, i64 0)), !dbg !15396
  br label %320, !dbg !15396

320:                                              ; preds = %316, %313
  %321 = load i32, i32* %8, align 4, !dbg !15397
  %322 = icmp eq i32 %321, 15616, !dbg !15399
  br i1 %322, label %323, label %327, !dbg !15400

323:                                              ; preds = %320
  %324 = load i8*, i8** %5, align 8, !dbg !15401
  %325 = load i64, i64* %6, align 8, !dbg !15402
  %326 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %324, i64 %325, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42.327, i64 0, i64 0)), !dbg !15403
  br label %327, !dbg !15403

327:                                              ; preds = %323, %320
  %328 = load i32, i32* %8, align 4, !dbg !15404
  %329 = icmp eq i32 %328, 15488, !dbg !15406
  br i1 %329, label %330, label %334, !dbg !15407

330:                                              ; preds = %327
  %331 = load i8*, i8** %5, align 8, !dbg !15408
  %332 = load i64, i64* %6, align 8, !dbg !15409
  %333 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %331, i64 %332, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.43.328, i64 0, i64 0)), !dbg !15410
  br label %334, !dbg !15410

334:                                              ; preds = %330, %327
  %335 = load i32, i32* %8, align 4, !dbg !15411
  %336 = icmp eq i32 %335, 15360, !dbg !15413
  br i1 %336, label %337, label %341, !dbg !15414

337:                                              ; preds = %334
  %338 = load i8*, i8** %5, align 8, !dbg !15415
  %339 = load i64, i64* %6, align 8, !dbg !15416
  %340 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %338, i64 %339, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44.329, i64 0, i64 0)), !dbg !15417
  br label %341, !dbg !15417

341:                                              ; preds = %337, %334
  %342 = load i32, i32* %8, align 4, !dbg !15418
  %343 = icmp eq i32 %342, 15232, !dbg !15420
  br i1 %343, label %344, label %348, !dbg !15421

344:                                              ; preds = %341
  %345 = load i8*, i8** %5, align 8, !dbg !15422
  %346 = load i64, i64* %6, align 8, !dbg !15423
  %347 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %345, i64 %346, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.45.330, i64 0, i64 0)), !dbg !15424
  br label %348, !dbg !15424

348:                                              ; preds = %344, %341
  %349 = load i32, i32* %8, align 4, !dbg !15425
  %350 = icmp eq i32 %349, 15104, !dbg !15427
  br i1 %350, label %351, label %355, !dbg !15428

351:                                              ; preds = %348
  %352 = load i8*, i8** %5, align 8, !dbg !15429
  %353 = load i64, i64* %6, align 8, !dbg !15430
  %354 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %352, i64 %353, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.46.331, i64 0, i64 0)), !dbg !15431
  br label %355, !dbg !15431

355:                                              ; preds = %351, %348
  %356 = load i32, i32* %8, align 4, !dbg !15432
  %357 = icmp eq i32 %356, 14976, !dbg !15434
  br i1 %357, label %358, label %362, !dbg !15435

358:                                              ; preds = %355
  %359 = load i8*, i8** %5, align 8, !dbg !15436
  %360 = load i64, i64* %6, align 8, !dbg !15437
  %361 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %359, i64 %360, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.47.332, i64 0, i64 0)), !dbg !15438
  br label %362, !dbg !15438

362:                                              ; preds = %358, %355
  %363 = load i32, i32* %8, align 4, !dbg !15439
  %364 = icmp eq i32 %363, 14848, !dbg !15441
  br i1 %364, label %365, label %369, !dbg !15442

365:                                              ; preds = %362
  %366 = load i8*, i8** %5, align 8, !dbg !15443
  %367 = load i64, i64* %6, align 8, !dbg !15444
  %368 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %366, i64 %367, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.48.333, i64 0, i64 0)), !dbg !15445
  br label %369, !dbg !15445

369:                                              ; preds = %365, %362
  %370 = load i32, i32* %8, align 4, !dbg !15446
  %371 = icmp eq i32 %370, 14720, !dbg !15448
  br i1 %371, label %372, label %376, !dbg !15449

372:                                              ; preds = %369
  %373 = load i8*, i8** %5, align 8, !dbg !15450
  %374 = load i64, i64* %6, align 8, !dbg !15451
  %375 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %373, i64 %374, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.49.334, i64 0, i64 0)), !dbg !15452
  br label %376, !dbg !15452

376:                                              ; preds = %372, %369
  %377 = load i32, i32* %8, align 4, !dbg !15453
  %378 = icmp eq i32 %377, 14592, !dbg !15455
  br i1 %378, label %379, label %383, !dbg !15456

379:                                              ; preds = %376
  %380 = load i8*, i8** %5, align 8, !dbg !15457
  %381 = load i64, i64* %6, align 8, !dbg !15458
  %382 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %380, i64 %381, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.50.335, i64 0, i64 0)), !dbg !15459
  br label %383, !dbg !15459

383:                                              ; preds = %379, %376
  %384 = load i32, i32* %8, align 4, !dbg !15460
  %385 = icmp eq i32 %384, 8064, !dbg !15462
  br i1 %385, label %386, label %390, !dbg !15463

386:                                              ; preds = %383
  %387 = load i8*, i8** %5, align 8, !dbg !15464
  %388 = load i64, i64* %6, align 8, !dbg !15465
  %389 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %387, i64 %388, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51.336, i64 0, i64 0)), !dbg !15466
  br label %390, !dbg !15466

390:                                              ; preds = %386, %383
  %391 = load i32, i32* %8, align 4, !dbg !15467
  %392 = icmp eq i32 %391, 7936, !dbg !15469
  br i1 %392, label %393, label %397, !dbg !15470

393:                                              ; preds = %390
  %394 = load i8*, i8** %5, align 8, !dbg !15471
  %395 = load i64, i64* %6, align 8, !dbg !15472
  %396 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %394, i64 %395, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.52.337, i64 0, i64 0)), !dbg !15473
  br label %397, !dbg !15473

397:                                              ; preds = %393, %390
  %398 = load i32, i32* %8, align 4, !dbg !15474
  %399 = icmp eq i32 %398, 7808, !dbg !15476
  br i1 %399, label %400, label %404, !dbg !15477

400:                                              ; preds = %397
  %401 = load i8*, i8** %5, align 8, !dbg !15478
  %402 = load i64, i64* %6, align 8, !dbg !15479
  %403 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %401, i64 %402, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.53.338, i64 0, i64 0)), !dbg !15480
  br label %404, !dbg !15480

404:                                              ; preds = %400, %397
  %405 = load i32, i32* %8, align 4, !dbg !15481
  %406 = icmp eq i32 %405, 7680, !dbg !15483
  br i1 %406, label %407, label %411, !dbg !15484

407:                                              ; preds = %404
  %408 = load i8*, i8** %5, align 8, !dbg !15485
  %409 = load i64, i64* %6, align 8, !dbg !15486
  %410 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %408, i64 %409, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.54.339, i64 0, i64 0)), !dbg !15487
  br label %411, !dbg !15487

411:                                              ; preds = %407, %404
  %412 = load i32, i32* %8, align 4, !dbg !15488
  %413 = icmp eq i32 %412, 12160, !dbg !15490
  br i1 %413, label %414, label %418, !dbg !15491

414:                                              ; preds = %411
  %415 = load i8*, i8** %5, align 8, !dbg !15492
  %416 = load i64, i64* %6, align 8, !dbg !15493
  %417 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %415, i64 %416, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.55.340, i64 0, i64 0)), !dbg !15494
  br label %418, !dbg !15494

418:                                              ; preds = %414, %411
  %419 = load i32, i32* %8, align 4, !dbg !15495
  %420 = icmp eq i32 %419, 12032, !dbg !15497
  br i1 %420, label %421, label %425, !dbg !15498

421:                                              ; preds = %418
  %422 = load i8*, i8** %5, align 8, !dbg !15499
  %423 = load i64, i64* %6, align 8, !dbg !15500
  %424 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %422, i64 %423, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.56.341, i64 0, i64 0)), !dbg !15501
  br label %425, !dbg !15501

425:                                              ; preds = %421, %418
  %426 = load i32, i32* %8, align 4, !dbg !15502
  %427 = icmp eq i32 %426, 11904, !dbg !15504
  br i1 %427, label %428, label %432, !dbg !15505

428:                                              ; preds = %425
  %429 = load i8*, i8** %5, align 8, !dbg !15506
  %430 = load i64, i64* %6, align 8, !dbg !15507
  %431 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %429, i64 %430, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.57.342, i64 0, i64 0)), !dbg !15508
  br label %432, !dbg !15508

432:                                              ; preds = %428, %425
  %433 = load i32, i32* %8, align 4, !dbg !15509
  %434 = icmp eq i32 %433, 11776, !dbg !15511
  br i1 %434, label %435, label %439, !dbg !15512

435:                                              ; preds = %432
  %436 = load i8*, i8** %5, align 8, !dbg !15513
  %437 = load i64, i64* %6, align 8, !dbg !15514
  %438 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %436, i64 %437, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.58.343, i64 0, i64 0)), !dbg !15515
  br label %439, !dbg !15515

439:                                              ; preds = %435, %432
  %440 = load i32, i32* %8, align 4, !dbg !15516
  %441 = icmp eq i32 %440, 16512, !dbg !15518
  br i1 %441, label %442, label %446, !dbg !15519

442:                                              ; preds = %439
  %443 = load i8*, i8** %5, align 8, !dbg !15520
  %444 = load i64, i64* %6, align 8, !dbg !15521
  %445 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %443, i64 %444, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59.344, i64 0, i64 0)), !dbg !15522
  br label %446, !dbg !15522

446:                                              ; preds = %442, %439
  %447 = load i32, i32* %8, align 4, !dbg !15523
  %448 = icmp eq i32 %447, 16640, !dbg !15525
  br i1 %448, label %449, label %453, !dbg !15526

449:                                              ; preds = %446
  %450 = load i8*, i8** %5, align 8, !dbg !15527
  %451 = load i64, i64* %6, align 8, !dbg !15528
  %452 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %450, i64 %451, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.60.345, i64 0, i64 0)), !dbg !15529
  br label %453, !dbg !15529

453:                                              ; preds = %449, %446
  %454 = load i32, i32* %8, align 4, !dbg !15530
  %455 = icmp eq i32 %454, 16768, !dbg !15532
  br i1 %455, label %456, label %460, !dbg !15533

456:                                              ; preds = %453
  %457 = load i8*, i8** %5, align 8, !dbg !15534
  %458 = load i64, i64* %6, align 8, !dbg !15535
  %459 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %457, i64 %458, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.61.346, i64 0, i64 0)), !dbg !15536
  br label %460, !dbg !15536

460:                                              ; preds = %456, %453
  %461 = load i32, i32* %8, align 4, !dbg !15537
  %462 = icmp eq i32 %461, 16896, !dbg !15539
  br i1 %462, label %463, label %467, !dbg !15540

463:                                              ; preds = %460
  %464 = load i8*, i8** %5, align 8, !dbg !15541
  %465 = load i64, i64* %6, align 8, !dbg !15542
  %466 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %464, i64 %465, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.62.347, i64 0, i64 0)), !dbg !15543
  br label %467, !dbg !15543

467:                                              ; preds = %463, %460
  %468 = load i32, i32* %8, align 4, !dbg !15544
  %469 = icmp eq i32 %468, 17024, !dbg !15546
  br i1 %469, label %470, label %474, !dbg !15547

470:                                              ; preds = %467
  %471 = load i8*, i8** %5, align 8, !dbg !15548
  %472 = load i64, i64* %6, align 8, !dbg !15549
  %473 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %471, i64 %472, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63.348, i64 0, i64 0)), !dbg !15550
  br label %474, !dbg !15550

474:                                              ; preds = %470, %467
  %475 = load i32, i32* %8, align 4, !dbg !15551
  %476 = icmp eq i32 %475, 17152, !dbg !15553
  br i1 %476, label %477, label %481, !dbg !15554

477:                                              ; preds = %474
  %478 = load i8*, i8** %5, align 8, !dbg !15555
  %479 = load i64, i64* %6, align 8, !dbg !15556
  %480 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %478, i64 %479, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.64.349, i64 0, i64 0)), !dbg !15557
  br label %481, !dbg !15557

481:                                              ; preds = %477, %474
  %482 = load i32, i32* %8, align 4, !dbg !15558
  %483 = icmp eq i32 %482, 17280, !dbg !15560
  br i1 %483, label %484, label %488, !dbg !15561

484:                                              ; preds = %481
  %485 = load i8*, i8** %5, align 8, !dbg !15562
  %486 = load i64, i64* %6, align 8, !dbg !15563
  %487 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %485, i64 %486, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.65.350, i64 0, i64 0)), !dbg !15564
  br label %488, !dbg !15564

488:                                              ; preds = %484, %481
  %489 = load i32, i32* %8, align 4, !dbg !15565
  %490 = icmp eq i32 %489, 17408, !dbg !15567
  br i1 %490, label %491, label %495, !dbg !15568

491:                                              ; preds = %488
  %492 = load i8*, i8** %5, align 8, !dbg !15569
  %493 = load i64, i64* %6, align 8, !dbg !15570
  %494 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %492, i64 %493, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.66.351, i64 0, i64 0)), !dbg !15571
  br label %495, !dbg !15571

495:                                              ; preds = %491, %488
  %496 = load i32, i32* %8, align 4, !dbg !15572
  %497 = icmp eq i32 %496, 17536, !dbg !15574
  br i1 %497, label %498, label %502, !dbg !15575

498:                                              ; preds = %495
  %499 = load i8*, i8** %5, align 8, !dbg !15576
  %500 = load i64, i64* %6, align 8, !dbg !15577
  %501 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %499, i64 %500, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.67.352, i64 0, i64 0)), !dbg !15578
  br label %502, !dbg !15578

502:                                              ; preds = %498, %495
  %503 = load i32, i32* %8, align 4, !dbg !15579
  %504 = icmp eq i32 %503, 28800, !dbg !15581
  br i1 %504, label %505, label %509, !dbg !15582

505:                                              ; preds = %502
  %506 = load i8*, i8** %5, align 8, !dbg !15583
  %507 = load i64, i64* %6, align 8, !dbg !15584
  %508 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %506, i64 %507, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.68.353, i64 0, i64 0)), !dbg !15585
  br label %509, !dbg !15585

509:                                              ; preds = %505, %502
  %510 = load i32, i32* %8, align 4, !dbg !15586
  %511 = icmp eq i32 %510, 28928, !dbg !15588
  br i1 %511, label %512, label %516, !dbg !15589

512:                                              ; preds = %509
  %513 = load i8*, i8** %5, align 8, !dbg !15590
  %514 = load i64, i64* %6, align 8, !dbg !15591
  %515 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %513, i64 %514, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.69.354, i64 0, i64 0)), !dbg !15592
  br label %516, !dbg !15592

516:                                              ; preds = %512, %509
  %517 = load i32, i32* %8, align 4, !dbg !15593
  %518 = icmp eq i32 %517, 29056, !dbg !15595
  br i1 %518, label %519, label %523, !dbg !15596

519:                                              ; preds = %516
  %520 = load i8*, i8** %5, align 8, !dbg !15597
  %521 = load i64, i64* %6, align 8, !dbg !15598
  %522 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %520, i64 %521, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.70.355, i64 0, i64 0)), !dbg !15599
  br label %523, !dbg !15599

523:                                              ; preds = %519, %516
  %524 = load i32, i32* %8, align 4, !dbg !15600
  %525 = icmp eq i32 %524, 29184, !dbg !15602
  br i1 %525, label %526, label %530, !dbg !15603

526:                                              ; preds = %523
  %527 = load i8*, i8** %5, align 8, !dbg !15604
  %528 = load i64, i64* %6, align 8, !dbg !15605
  %529 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %527, i64 %528, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.71.356, i64 0, i64 0)), !dbg !15606
  br label %530, !dbg !15606

530:                                              ; preds = %526, %523
  %531 = load i32, i32* %8, align 4, !dbg !15607
  %532 = icmp eq i32 %531, 29312, !dbg !15609
  br i1 %532, label %533, label %537, !dbg !15610

533:                                              ; preds = %530
  %534 = load i8*, i8** %5, align 8, !dbg !15611
  %535 = load i64, i64* %6, align 8, !dbg !15612
  %536 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %534, i64 %535, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72.357, i64 0, i64 0)), !dbg !15613
  br label %537, !dbg !15613

537:                                              ; preds = %533, %530
  %538 = load i32, i32* %8, align 4, !dbg !15614
  %539 = icmp eq i32 %538, 29440, !dbg !15616
  br i1 %539, label %540, label %544, !dbg !15617

540:                                              ; preds = %537
  %541 = load i8*, i8** %5, align 8, !dbg !15618
  %542 = load i64, i64* %6, align 8, !dbg !15619
  %543 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %541, i64 %542, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73.358, i64 0, i64 0)), !dbg !15620
  br label %544, !dbg !15620

544:                                              ; preds = %540, %537
  %545 = load i32, i32* %8, align 4, !dbg !15621
  %546 = icmp eq i32 %545, 29568, !dbg !15623
  br i1 %546, label %547, label %551, !dbg !15624

547:                                              ; preds = %544
  %548 = load i8*, i8** %5, align 8, !dbg !15625
  %549 = load i64, i64* %6, align 8, !dbg !15626
  %550 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %548, i64 %549, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.74.359, i64 0, i64 0)), !dbg !15627
  br label %551, !dbg !15627

551:                                              ; preds = %547, %544
  %552 = load i32, i32* %8, align 4, !dbg !15628
  %553 = icmp eq i32 %552, 29696, !dbg !15630
  br i1 %553, label %554, label %558, !dbg !15631

554:                                              ; preds = %551
  %555 = load i8*, i8** %5, align 8, !dbg !15632
  %556 = load i64, i64* %6, align 8, !dbg !15633
  %557 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %555, i64 %556, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.75.360, i64 0, i64 0)), !dbg !15634
  br label %558, !dbg !15634

558:                                              ; preds = %554, %551
  %559 = load i32, i32* %8, align 4, !dbg !15635
  %560 = icmp eq i32 %559, 29824, !dbg !15637
  br i1 %560, label %561, label %565, !dbg !15638

561:                                              ; preds = %558
  %562 = load i8*, i8** %5, align 8, !dbg !15639
  %563 = load i64, i64* %6, align 8, !dbg !15640
  %564 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %562, i64 %563, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.76.361, i64 0, i64 0)), !dbg !15641
  br label %565, !dbg !15641

565:                                              ; preds = %561, %558
  %566 = load i32, i32* %8, align 4, !dbg !15642
  %567 = icmp eq i32 %566, 29952, !dbg !15644
  br i1 %567, label %568, label %572, !dbg !15645

568:                                              ; preds = %565
  %569 = load i8*, i8** %5, align 8, !dbg !15646
  %570 = load i64, i64* %6, align 8, !dbg !15647
  %571 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %569, i64 %570, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.77.362, i64 0, i64 0)), !dbg !15648
  br label %572, !dbg !15648

572:                                              ; preds = %568, %565
  %573 = load i32, i32* %8, align 4, !dbg !15649
  %574 = icmp eq i32 %573, 30080, !dbg !15651
  br i1 %574, label %575, label %579, !dbg !15652

575:                                              ; preds = %572
  %576 = load i8*, i8** %5, align 8, !dbg !15653
  %577 = load i64, i64* %6, align 8, !dbg !15654
  %578 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %576, i64 %577, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.78.363, i64 0, i64 0)), !dbg !15655
  br label %579, !dbg !15655

579:                                              ; preds = %575, %572
  %580 = load i32, i32* %8, align 4, !dbg !15656
  %581 = icmp eq i32 %580, 30208, !dbg !15658
  br i1 %581, label %582, label %586, !dbg !15659

582:                                              ; preds = %579
  %583 = load i8*, i8** %5, align 8, !dbg !15660
  %584 = load i64, i64* %6, align 8, !dbg !15661
  %585 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %583, i64 %584, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.79.364, i64 0, i64 0)), !dbg !15662
  br label %586, !dbg !15662

586:                                              ; preds = %582, %579
  %587 = load i32, i32* %8, align 4, !dbg !15663
  %588 = icmp eq i32 %587, 30336, !dbg !15665
  br i1 %588, label %589, label %593, !dbg !15666

589:                                              ; preds = %586
  %590 = load i8*, i8** %5, align 8, !dbg !15667
  %591 = load i64, i64* %6, align 8, !dbg !15668
  %592 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %590, i64 %591, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.80.365, i64 0, i64 0)), !dbg !15669
  br label %593, !dbg !15669

593:                                              ; preds = %589, %586
  %594 = load i32, i32* %8, align 4, !dbg !15670
  %595 = icmp eq i32 %594, 30464, !dbg !15672
  br i1 %595, label %596, label %600, !dbg !15673

596:                                              ; preds = %593
  %597 = load i8*, i8** %5, align 8, !dbg !15674
  %598 = load i64, i64* %6, align 8, !dbg !15675
  %599 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %597, i64 %598, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.81.366, i64 0, i64 0)), !dbg !15676
  br label %600, !dbg !15676

600:                                              ; preds = %596, %593
  %601 = load i32, i32* %8, align 4, !dbg !15677
  %602 = icmp eq i32 %601, 30592, !dbg !15679
  br i1 %602, label %603, label %607, !dbg !15680

603:                                              ; preds = %600
  %604 = load i8*, i8** %5, align 8, !dbg !15681
  %605 = load i64, i64* %6, align 8, !dbg !15683
  %606 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %604, i64 %605, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82.367, i64 0, i64 0)), !dbg !15684
  br label %1367, !dbg !15685

607:                                              ; preds = %600
  %608 = load i32, i32* %8, align 4, !dbg !15686
  %609 = icmp eq i32 %608, 30720, !dbg !15688
  br i1 %609, label %610, label %614, !dbg !15689

610:                                              ; preds = %607
  %611 = load i8*, i8** %5, align 8, !dbg !15690
  %612 = load i64, i64* %6, align 8, !dbg !15691
  %613 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %611, i64 %612, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.83.368, i64 0, i64 0)), !dbg !15692
  br label %614, !dbg !15692

614:                                              ; preds = %610, %607
  %615 = load i32, i32* %8, align 4, !dbg !15693
  %616 = icmp eq i32 %615, 30848, !dbg !15695
  br i1 %616, label %617, label %621, !dbg !15696

617:                                              ; preds = %614
  %618 = load i8*, i8** %5, align 8, !dbg !15697
  %619 = load i64, i64* %6, align 8, !dbg !15698
  %620 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %618, i64 %619, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.84.369, i64 0, i64 0)), !dbg !15699
  br label %621, !dbg !15699

621:                                              ; preds = %617, %614
  %622 = load i32, i32* %8, align 4, !dbg !15700
  %623 = icmp eq i32 %622, 30976, !dbg !15702
  br i1 %623, label %624, label %628, !dbg !15703

624:                                              ; preds = %621
  %625 = load i8*, i8** %5, align 8, !dbg !15704
  %626 = load i64, i64* %6, align 8, !dbg !15705
  %627 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %625, i64 %626, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.85.370, i64 0, i64 0)), !dbg !15706
  br label %628, !dbg !15706

628:                                              ; preds = %624, %621
  %629 = load i32, i32* %8, align 4, !dbg !15707
  %630 = icmp eq i32 %629, 31104, !dbg !15709
  br i1 %630, label %631, label %635, !dbg !15710

631:                                              ; preds = %628
  %632 = load i8*, i8** %5, align 8, !dbg !15711
  %633 = load i64, i64* %6, align 8, !dbg !15712
  %634 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %632, i64 %633, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.86.371, i64 0, i64 0)), !dbg !15713
  br label %635, !dbg !15713

635:                                              ; preds = %631, %628
  %636 = load i32, i32* %8, align 4, !dbg !15714
  %637 = icmp eq i32 %636, 31232, !dbg !15716
  br i1 %637, label %638, label %642, !dbg !15717

638:                                              ; preds = %635
  %639 = load i8*, i8** %5, align 8, !dbg !15718
  %640 = load i64, i64* %6, align 8, !dbg !15719
  %641 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %639, i64 %640, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.87.372, i64 0, i64 0)), !dbg !15720
  br label %642, !dbg !15720

642:                                              ; preds = %638, %635
  %643 = load i32, i32* %8, align 4, !dbg !15721
  %644 = icmp eq i32 %643, 31360, !dbg !15723
  br i1 %644, label %645, label %649, !dbg !15724

645:                                              ; preds = %642
  %646 = load i8*, i8** %5, align 8, !dbg !15725
  %647 = load i64, i64* %6, align 8, !dbg !15726
  %648 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %646, i64 %647, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.88, i64 0, i64 0)), !dbg !15727
  br label %649, !dbg !15727

649:                                              ; preds = %645, %642
  %650 = load i32, i32* %8, align 4, !dbg !15728
  %651 = icmp eq i32 %650, 31488, !dbg !15730
  br i1 %651, label %652, label %656, !dbg !15731

652:                                              ; preds = %649
  %653 = load i8*, i8** %5, align 8, !dbg !15732
  %654 = load i64, i64* %6, align 8, !dbg !15733
  %655 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %653, i64 %654, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.89, i64 0, i64 0)), !dbg !15734
  br label %656, !dbg !15734

656:                                              ; preds = %652, %649
  %657 = load i32, i32* %8, align 4, !dbg !15735
  %658 = icmp eq i32 %657, 31616, !dbg !15737
  br i1 %658, label %659, label %663, !dbg !15738

659:                                              ; preds = %656
  %660 = load i8*, i8** %5, align 8, !dbg !15739
  %661 = load i64, i64* %6, align 8, !dbg !15740
  %662 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %660, i64 %661, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.90, i64 0, i64 0)), !dbg !15741
  br label %663, !dbg !15741

663:                                              ; preds = %659, %656
  %664 = load i32, i32* %8, align 4, !dbg !15742
  %665 = icmp eq i32 %664, 31744, !dbg !15744
  br i1 %665, label %666, label %670, !dbg !15745

666:                                              ; preds = %663
  %667 = load i8*, i8** %5, align 8, !dbg !15746
  %668 = load i64, i64* %6, align 8, !dbg !15747
  %669 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %667, i64 %668, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.91, i64 0, i64 0)), !dbg !15748
  br label %670, !dbg !15748

670:                                              ; preds = %666, %663
  %671 = load i32, i32* %8, align 4, !dbg !15749
  %672 = icmp eq i32 %671, 31872, !dbg !15751
  br i1 %672, label %673, label %677, !dbg !15752

673:                                              ; preds = %670
  %674 = load i8*, i8** %5, align 8, !dbg !15753
  %675 = load i64, i64* %6, align 8, !dbg !15754
  %676 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %674, i64 %675, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.92, i64 0, i64 0)), !dbg !15755
  br label %677, !dbg !15755

677:                                              ; preds = %673, %670
  %678 = load i32, i32* %8, align 4, !dbg !15756
  %679 = icmp eq i32 %678, 32000, !dbg !15758
  br i1 %679, label %680, label %684, !dbg !15759

680:                                              ; preds = %677
  %681 = load i8*, i8** %5, align 8, !dbg !15760
  %682 = load i64, i64* %6, align 8, !dbg !15761
  %683 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %681, i64 %682, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.93, i64 0, i64 0)), !dbg !15762
  br label %684, !dbg !15762

684:                                              ; preds = %680, %677
  %685 = load i32, i32* %8, align 4, !dbg !15763
  %686 = icmp eq i32 %685, 32128, !dbg !15765
  br i1 %686, label %687, label %691, !dbg !15766

687:                                              ; preds = %684
  %688 = load i8*, i8** %5, align 8, !dbg !15767
  %689 = load i64, i64* %6, align 8, !dbg !15768
  %690 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %688, i64 %689, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.94, i64 0, i64 0)), !dbg !15769
  br label %691, !dbg !15769

691:                                              ; preds = %687, %684
  %692 = load i32, i32* %8, align 4, !dbg !15770
  %693 = icmp eq i32 %692, 32256, !dbg !15772
  br i1 %693, label %694, label %698, !dbg !15773

694:                                              ; preds = %691
  %695 = load i8*, i8** %5, align 8, !dbg !15774
  %696 = load i64, i64* %6, align 8, !dbg !15775
  %697 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %695, i64 %696, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.95, i64 0, i64 0)), !dbg !15776
  br label %698, !dbg !15776

698:                                              ; preds = %694, %691
  %699 = load i32, i32* %8, align 4, !dbg !15777
  %700 = icmp eq i32 %699, 32384, !dbg !15779
  br i1 %700, label %701, label %705, !dbg !15780

701:                                              ; preds = %698
  %702 = load i8*, i8** %5, align 8, !dbg !15781
  %703 = load i64, i64* %6, align 8, !dbg !15782
  %704 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %702, i64 %703, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.96, i64 0, i64 0)), !dbg !15783
  br label %705, !dbg !15783

705:                                              ; preds = %701, %698
  %706 = load i32, i32* %8, align 4, !dbg !15784
  %707 = icmp eq i32 %706, 32512, !dbg !15786
  br i1 %707, label %708, label %712, !dbg !15787

708:                                              ; preds = %705
  %709 = load i8*, i8** %5, align 8, !dbg !15788
  %710 = load i64, i64* %6, align 8, !dbg !15789
  %711 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %709, i64 %710, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.97, i64 0, i64 0)), !dbg !15790
  br label %712, !dbg !15790

712:                                              ; preds = %708, %705
  %713 = load i32, i32* %8, align 4, !dbg !15791
  %714 = icmp eq i32 %713, 32640, !dbg !15793
  br i1 %714, label %715, label %719, !dbg !15794

715:                                              ; preds = %712
  %716 = load i8*, i8** %5, align 8, !dbg !15795
  %717 = load i64, i64* %6, align 8, !dbg !15796
  %718 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %716, i64 %717, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.98, i64 0, i64 0)), !dbg !15797
  br label %719, !dbg !15797

719:                                              ; preds = %715, %712
  %720 = load i32, i32* %8, align 4, !dbg !15798
  %721 = icmp eq i32 %720, 28544, !dbg !15800
  br i1 %721, label %722, label %726, !dbg !15801

722:                                              ; preds = %719
  %723 = load i8*, i8** %5, align 8, !dbg !15802
  %724 = load i64, i64* %6, align 8, !dbg !15803
  %725 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %723, i64 %724, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.99, i64 0, i64 0)), !dbg !15804
  br label %726, !dbg !15804

726:                                              ; preds = %722, %719
  %727 = load i32, i32* %8, align 4, !dbg !15805
  %728 = icmp eq i32 %727, 28416, !dbg !15807
  br i1 %728, label %729, label %733, !dbg !15808

729:                                              ; preds = %726
  %730 = load i8*, i8** %5, align 8, !dbg !15809
  %731 = load i64, i64* %6, align 8, !dbg !15810
  %732 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %730, i64 %731, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.100, i64 0, i64 0)), !dbg !15811
  br label %733, !dbg !15811

733:                                              ; preds = %729, %726
  %734 = load i32, i32* %8, align 4, !dbg !15812
  %735 = icmp eq i32 %734, 28288, !dbg !15814
  br i1 %735, label %736, label %740, !dbg !15815

736:                                              ; preds = %733
  %737 = load i8*, i8** %5, align 8, !dbg !15816
  %738 = load i64, i64* %6, align 8, !dbg !15817
  %739 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %737, i64 %738, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.101, i64 0, i64 0)), !dbg !15818
  br label %740, !dbg !15818

740:                                              ; preds = %736, %733
  %741 = load i32, i32* %8, align 4, !dbg !15819
  %742 = icmp eq i32 %741, 28160, !dbg !15821
  br i1 %742, label %743, label %747, !dbg !15822

743:                                              ; preds = %740
  %744 = load i8*, i8** %5, align 8, !dbg !15823
  %745 = load i64, i64* %6, align 8, !dbg !15824
  %746 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %744, i64 %745, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.102, i64 0, i64 0)), !dbg !15825
  br label %747, !dbg !15825

747:                                              ; preds = %743, %740
  %748 = load i32, i32* %8, align 4, !dbg !15826
  %749 = icmp eq i32 %748, 28032, !dbg !15828
  br i1 %749, label %750, label %754, !dbg !15829

750:                                              ; preds = %747
  %751 = load i8*, i8** %5, align 8, !dbg !15830
  %752 = load i64, i64* %6, align 8, !dbg !15831
  %753 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %751, i64 %752, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.103, i64 0, i64 0)), !dbg !15832
  br label %754, !dbg !15832

754:                                              ; preds = %750, %747
  %755 = load i32, i32* %8, align 4, !dbg !15833
  %756 = icmp eq i32 %755, 27904, !dbg !15835
  br i1 %756, label %757, label %761, !dbg !15836

757:                                              ; preds = %754
  %758 = load i8*, i8** %5, align 8, !dbg !15837
  %759 = load i64, i64* %6, align 8, !dbg !15838
  %760 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %758, i64 %759, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.104, i64 0, i64 0)), !dbg !15839
  br label %761, !dbg !15839

761:                                              ; preds = %757, %754
  %762 = load i32, i32* %8, align 4, !dbg !15840
  %763 = icmp eq i32 %762, 27776, !dbg !15842
  br i1 %763, label %764, label %768, !dbg !15843

764:                                              ; preds = %761
  %765 = load i8*, i8** %5, align 8, !dbg !15844
  %766 = load i64, i64* %6, align 8, !dbg !15845
  %767 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %765, i64 %766, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.105, i64 0, i64 0)), !dbg !15846
  br label %768, !dbg !15846

768:                                              ; preds = %764, %761
  %769 = load i32, i32* %8, align 4, !dbg !15847
  %770 = icmp eq i32 %769, 27648, !dbg !15849
  br i1 %770, label %771, label %775, !dbg !15850

771:                                              ; preds = %768
  %772 = load i8*, i8** %5, align 8, !dbg !15851
  %773 = load i64, i64* %6, align 8, !dbg !15852
  %774 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %772, i64 %773, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.106, i64 0, i64 0)), !dbg !15853
  br label %775, !dbg !15853

775:                                              ; preds = %771, %768
  %776 = load i32, i32* %8, align 4, !dbg !15854
  %777 = icmp eq i32 %776, 27520, !dbg !15856
  br i1 %777, label %778, label %782, !dbg !15857

778:                                              ; preds = %775
  %779 = load i8*, i8** %5, align 8, !dbg !15858
  %780 = load i64, i64* %6, align 8, !dbg !15859
  %781 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %779, i64 %780, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.107, i64 0, i64 0)), !dbg !15860
  br label %782, !dbg !15860

782:                                              ; preds = %778, %775
  %783 = load i32, i32* %8, align 4, !dbg !15861
  %784 = icmp eq i32 %783, 27392, !dbg !15863
  br i1 %784, label %785, label %789, !dbg !15864

785:                                              ; preds = %782
  %786 = load i8*, i8** %5, align 8, !dbg !15865
  %787 = load i64, i64* %6, align 8, !dbg !15866
  %788 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %786, i64 %787, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.108, i64 0, i64 0)), !dbg !15867
  br label %789, !dbg !15867

789:                                              ; preds = %785, %782
  %790 = load i32, i32* %8, align 4, !dbg !15868
  %791 = icmp eq i32 %790, 27264, !dbg !15870
  br i1 %791, label %792, label %796, !dbg !15871

792:                                              ; preds = %789
  %793 = load i8*, i8** %5, align 8, !dbg !15872
  %794 = load i64, i64* %6, align 8, !dbg !15873
  %795 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %793, i64 %794, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.109, i64 0, i64 0)), !dbg !15874
  br label %796, !dbg !15874

796:                                              ; preds = %792, %789
  %797 = load i32, i32* %8, align 4, !dbg !15875
  %798 = icmp eq i32 %797, 27136, !dbg !15877
  br i1 %798, label %799, label %803, !dbg !15878

799:                                              ; preds = %796
  %800 = load i8*, i8** %5, align 8, !dbg !15879
  %801 = load i64, i64* %6, align 8, !dbg !15880
  %802 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %800, i64 %801, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.110, i64 0, i64 0)), !dbg !15881
  br label %803, !dbg !15881

803:                                              ; preds = %799, %796
  %804 = load i32, i32* %8, align 4, !dbg !15882
  %805 = icmp eq i32 %804, 27008, !dbg !15884
  br i1 %805, label %806, label %810, !dbg !15885

806:                                              ; preds = %803
  %807 = load i8*, i8** %5, align 8, !dbg !15886
  %808 = load i64, i64* %6, align 8, !dbg !15887
  %809 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %807, i64 %808, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.111, i64 0, i64 0)), !dbg !15888
  br label %810, !dbg !15888

810:                                              ; preds = %806, %803
  %811 = load i32, i32* %8, align 4, !dbg !15889
  %812 = icmp eq i32 %811, 26880, !dbg !15891
  br i1 %812, label %813, label %817, !dbg !15892

813:                                              ; preds = %810
  %814 = load i8*, i8** %5, align 8, !dbg !15893
  %815 = load i64, i64* %6, align 8, !dbg !15894
  %816 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %814, i64 %815, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.112, i64 0, i64 0)), !dbg !15895
  br label %817, !dbg !15895

817:                                              ; preds = %813, %810
  %818 = load i32, i32* %8, align 4, !dbg !15896
  %819 = icmp eq i32 %818, 26752, !dbg !15898
  br i1 %819, label %820, label %824, !dbg !15899

820:                                              ; preds = %817
  %821 = load i8*, i8** %5, align 8, !dbg !15900
  %822 = load i64, i64* %6, align 8, !dbg !15901
  %823 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %821, i64 %822, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.113, i64 0, i64 0)), !dbg !15902
  br label %824, !dbg !15902

824:                                              ; preds = %820, %817
  %825 = load i32, i32* %8, align 4, !dbg !15903
  %826 = icmp eq i32 %825, 26624, !dbg !15905
  br i1 %826, label %827, label %831, !dbg !15906

827:                                              ; preds = %824
  %828 = load i8*, i8** %5, align 8, !dbg !15907
  %829 = load i64, i64* %6, align 8, !dbg !15908
  %830 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %828, i64 %829, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.114, i64 0, i64 0)), !dbg !15909
  br label %831, !dbg !15909

831:                                              ; preds = %827, %824
  %832 = load i32, i32* %8, align 4, !dbg !15910
  %833 = icmp eq i32 %832, 26496, !dbg !15912
  br i1 %833, label %834, label %838, !dbg !15913

834:                                              ; preds = %831
  %835 = load i8*, i8** %5, align 8, !dbg !15914
  %836 = load i64, i64* %6, align 8, !dbg !15915
  %837 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %835, i64 %836, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i64 0, i64 0)), !dbg !15916
  br label %838, !dbg !15916

838:                                              ; preds = %834, %831
  %839 = load i32, i32* %8, align 4, !dbg !15917
  %840 = icmp eq i32 %839, 26368, !dbg !15919
  br i1 %840, label %841, label %845, !dbg !15920

841:                                              ; preds = %838
  %842 = load i8*, i8** %5, align 8, !dbg !15921
  %843 = load i64, i64* %6, align 8, !dbg !15922
  %844 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %842, i64 %843, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.116, i64 0, i64 0)), !dbg !15923
  br label %845, !dbg !15923

845:                                              ; preds = %841, %838
  %846 = load i32, i32* %8, align 4, !dbg !15924
  %847 = icmp eq i32 %846, 26240, !dbg !15926
  br i1 %847, label %848, label %852, !dbg !15927

848:                                              ; preds = %845
  %849 = load i8*, i8** %5, align 8, !dbg !15928
  %850 = load i64, i64* %6, align 8, !dbg !15929
  %851 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %849, i64 %850, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.117, i64 0, i64 0)), !dbg !15930
  br label %852, !dbg !15930

852:                                              ; preds = %848, %845
  %853 = load i32, i32* %8, align 4, !dbg !15931
  %854 = icmp eq i32 %853, 26112, !dbg !15933
  br i1 %854, label %855, label %859, !dbg !15934

855:                                              ; preds = %852
  %856 = load i8*, i8** %5, align 8, !dbg !15935
  %857 = load i64, i64* %6, align 8, !dbg !15936
  %858 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %856, i64 %857, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.118, i64 0, i64 0)), !dbg !15937
  br label %859, !dbg !15937

859:                                              ; preds = %855, %852
  %860 = load i32, i32* %8, align 4, !dbg !15938
  %861 = icmp eq i32 %860, 8320, !dbg !15940
  br i1 %861, label %862, label %866, !dbg !15941

862:                                              ; preds = %859
  %863 = load i8*, i8** %5, align 8, !dbg !15942
  %864 = load i64, i64* %6, align 8, !dbg !15943
  %865 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %863, i64 %864, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.119, i64 0, i64 0)), !dbg !15944
  br label %866, !dbg !15944

866:                                              ; preds = %862, %859
  %867 = load i32, i32* %8, align 4, !dbg !15945
  %868 = icmp eq i32 %867, 8448, !dbg !15947
  br i1 %868, label %869, label %873, !dbg !15948

869:                                              ; preds = %866
  %870 = load i8*, i8** %5, align 8, !dbg !15949
  %871 = load i64, i64* %6, align 8, !dbg !15950
  %872 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %870, i64 %871, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.120, i64 0, i64 0)), !dbg !15951
  br label %873, !dbg !15951

873:                                              ; preds = %869, %866
  %874 = load i32, i32* %8, align 4, !dbg !15952
  %875 = icmp eq i32 %874, 8576, !dbg !15954
  br i1 %875, label %876, label %880, !dbg !15955

876:                                              ; preds = %873
  %877 = load i8*, i8** %5, align 8, !dbg !15956
  %878 = load i64, i64* %6, align 8, !dbg !15957
  %879 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %877, i64 %878, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.121, i64 0, i64 0)), !dbg !15958
  br label %880, !dbg !15958

880:                                              ; preds = %876, %873
  %881 = load i32, i32* %8, align 4, !dbg !15959
  %882 = icmp eq i32 %881, 8704, !dbg !15961
  br i1 %882, label %883, label %887, !dbg !15962

883:                                              ; preds = %880
  %884 = load i8*, i8** %5, align 8, !dbg !15963
  %885 = load i64, i64* %6, align 8, !dbg !15964
  %886 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %884, i64 %885, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.122, i64 0, i64 0)), !dbg !15965
  br label %887, !dbg !15965

887:                                              ; preds = %883, %880
  %888 = load i32, i32* %8, align 4, !dbg !15966
  %889 = icmp eq i32 %888, 8832, !dbg !15968
  br i1 %889, label %890, label %894, !dbg !15969

890:                                              ; preds = %887
  %891 = load i8*, i8** %5, align 8, !dbg !15970
  %892 = load i64, i64* %6, align 8, !dbg !15971
  %893 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %891, i64 %892, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.123, i64 0, i64 0)), !dbg !15972
  br label %894, !dbg !15972

894:                                              ; preds = %890, %887
  %895 = load i32, i32* %8, align 4, !dbg !15973
  %896 = icmp eq i32 %895, 8960, !dbg !15975
  br i1 %896, label %897, label %901, !dbg !15976

897:                                              ; preds = %894
  %898 = load i8*, i8** %5, align 8, !dbg !15977
  %899 = load i64, i64* %6, align 8, !dbg !15978
  %900 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %898, i64 %899, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i64 0, i64 0)), !dbg !15979
  br label %901, !dbg !15979

901:                                              ; preds = %897, %894
  %902 = load i32, i32* %8, align 4, !dbg !15980
  %903 = icmp eq i32 %902, 9088, !dbg !15982
  br i1 %903, label %904, label %908, !dbg !15983

904:                                              ; preds = %901
  %905 = load i8*, i8** %5, align 8, !dbg !15984
  %906 = load i64, i64* %6, align 8, !dbg !15985
  %907 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %905, i64 %906, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.125, i64 0, i64 0)), !dbg !15986
  br label %908, !dbg !15986

908:                                              ; preds = %904, %901
  %909 = load i32, i32* %8, align 4, !dbg !15987
  %910 = icmp eq i32 %909, 9216, !dbg !15989
  br i1 %910, label %911, label %915, !dbg !15990

911:                                              ; preds = %908
  %912 = load i8*, i8** %5, align 8, !dbg !15991
  %913 = load i64, i64* %6, align 8, !dbg !15992
  %914 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %912, i64 %913, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.126, i64 0, i64 0)), !dbg !15993
  br label %915, !dbg !15993

915:                                              ; preds = %911, %908
  %916 = load i32, i32* %8, align 4, !dbg !15994
  %917 = icmp eq i32 %916, 9344, !dbg !15996
  br i1 %917, label %918, label %922, !dbg !15997

918:                                              ; preds = %915
  %919 = load i8*, i8** %5, align 8, !dbg !15998
  %920 = load i64, i64* %6, align 8, !dbg !15999
  %921 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %919, i64 %920, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.127, i64 0, i64 0)), !dbg !16000
  br label %922, !dbg !16000

922:                                              ; preds = %918, %915
  %923 = load i32, i32* %8, align 4, !dbg !16001
  %924 = icmp eq i32 %923, 9472, !dbg !16003
  br i1 %924, label %925, label %929, !dbg !16004

925:                                              ; preds = %922
  %926 = load i8*, i8** %5, align 8, !dbg !16005
  %927 = load i64, i64* %6, align 8, !dbg !16006
  %928 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %926, i64 %927, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i64 0, i64 0)), !dbg !16007
  br label %929, !dbg !16007

929:                                              ; preds = %925, %922
  %930 = load i32, i32* %8, align 4, !dbg !16008
  %931 = icmp eq i32 %930, 9600, !dbg !16010
  br i1 %931, label %932, label %936, !dbg !16011

932:                                              ; preds = %929
  %933 = load i8*, i8** %5, align 8, !dbg !16012
  %934 = load i64, i64* %6, align 8, !dbg !16013
  %935 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %933, i64 %934, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.129, i64 0, i64 0)), !dbg !16014
  br label %936, !dbg !16014

936:                                              ; preds = %932, %929
  %937 = load i32, i32* %8, align 4, !dbg !16015
  %938 = icmp eq i32 %937, 9728, !dbg !16017
  br i1 %938, label %939, label %943, !dbg !16018

939:                                              ; preds = %936
  %940 = load i8*, i8** %5, align 8, !dbg !16019
  %941 = load i64, i64* %6, align 8, !dbg !16020
  %942 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %940, i64 %941, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.130, i64 0, i64 0)), !dbg !16021
  br label %943, !dbg !16021

943:                                              ; preds = %939, %936
  %944 = load i32, i32* %8, align 4, !dbg !16022
  %945 = icmp eq i32 %944, 9856, !dbg !16024
  br i1 %945, label %946, label %950, !dbg !16025

946:                                              ; preds = %943
  %947 = load i8*, i8** %5, align 8, !dbg !16026
  %948 = load i64, i64* %6, align 8, !dbg !16027
  %949 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %947, i64 %948, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.131, i64 0, i64 0)), !dbg !16028
  br label %950, !dbg !16028

950:                                              ; preds = %946, %943
  %951 = load i32, i32* %8, align 4, !dbg !16029
  %952 = icmp eq i32 %951, 9984, !dbg !16031
  br i1 %952, label %953, label %957, !dbg !16032

953:                                              ; preds = %950
  %954 = load i8*, i8** %5, align 8, !dbg !16033
  %955 = load i64, i64* %6, align 8, !dbg !16034
  %956 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %954, i64 %955, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.132, i64 0, i64 0)), !dbg !16035
  br label %957, !dbg !16035

957:                                              ; preds = %953, %950
  %958 = load i32, i32* %8, align 4, !dbg !16036
  %959 = icmp eq i32 %958, 10112, !dbg !16038
  br i1 %959, label %960, label %964, !dbg !16039

960:                                              ; preds = %957
  %961 = load i8*, i8** %5, align 8, !dbg !16040
  %962 = load i64, i64* %6, align 8, !dbg !16041
  %963 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %961, i64 %962, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.133, i64 0, i64 0)), !dbg !16042
  br label %964, !dbg !16042

964:                                              ; preds = %960, %957
  %965 = load i32, i32* %8, align 4, !dbg !16043
  %966 = icmp eq i32 %965, 10240, !dbg !16045
  br i1 %966, label %967, label %971, !dbg !16046

967:                                              ; preds = %964
  %968 = load i8*, i8** %5, align 8, !dbg !16047
  %969 = load i64, i64* %6, align 8, !dbg !16048
  %970 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %968, i64 %969, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i64 0, i64 0)), !dbg !16049
  br label %971, !dbg !16049

971:                                              ; preds = %967, %964
  %972 = load i32, i32* %8, align 4, !dbg !16050
  %973 = icmp eq i32 %972, 10368, !dbg !16052
  br i1 %973, label %974, label %978, !dbg !16053

974:                                              ; preds = %971
  %975 = load i8*, i8** %5, align 8, !dbg !16054
  %976 = load i64, i64* %6, align 8, !dbg !16055
  %977 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %975, i64 %976, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.135, i64 0, i64 0)), !dbg !16056
  br label %978, !dbg !16056

978:                                              ; preds = %974, %971
  %979 = load i32, i32* %8, align 4, !dbg !16057
  %980 = icmp eq i32 %979, 10496, !dbg !16059
  br i1 %980, label %981, label %985, !dbg !16060

981:                                              ; preds = %978
  %982 = load i8*, i8** %5, align 8, !dbg !16061
  %983 = load i64, i64* %6, align 8, !dbg !16062
  %984 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %982, i64 %983, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.136, i64 0, i64 0)), !dbg !16063
  br label %985, !dbg !16063

985:                                              ; preds = %981, %978
  %986 = load i32, i32* %8, align 4, !dbg !16064
  %987 = icmp eq i32 %986, 10624, !dbg !16066
  br i1 %987, label %988, label %992, !dbg !16067

988:                                              ; preds = %985
  %989 = load i8*, i8** %5, align 8, !dbg !16068
  %990 = load i64, i64* %6, align 8, !dbg !16069
  %991 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %989, i64 %990, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.137, i64 0, i64 0)), !dbg !16070
  br label %992, !dbg !16070

992:                                              ; preds = %988, %985
  %993 = load i32, i32* %8, align 4, !dbg !16071
  %994 = icmp eq i32 %993, 12288, !dbg !16073
  br i1 %994, label %995, label %999, !dbg !16074

995:                                              ; preds = %992
  %996 = load i8*, i8** %5, align 8, !dbg !16075
  %997 = load i64, i64* %6, align 8, !dbg !16076
  %998 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %996, i64 %997, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.138, i64 0, i64 0)), !dbg !16077
  br label %999, !dbg !16077

999:                                              ; preds = %995, %992
  %1000 = load i8*, i8** %5, align 8, !dbg !16078
  %1001 = call i64 @strlen(i8* %1000), !dbg !16080
  %1002 = icmp eq i64 %1001, 0, !dbg !16081
  br i1 %1002, label %1003, label %1008, !dbg !16082

1003:                                             ; preds = %999
  %1004 = load i8*, i8** %5, align 8, !dbg !16083
  %1005 = load i64, i64* %6, align 8, !dbg !16084
  %1006 = load i32, i32* %8, align 4, !dbg !16085
  %1007 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1004, i64 %1005, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.139, i64 0, i64 0), i32 %1006), !dbg !16086
  br label %1008, !dbg !16086

1008:                                             ; preds = %1003, %999
  br label %1009, !dbg !16087

1009:                                             ; preds = %1008, %20
  %1010 = load i32, i32* %4, align 4, !dbg !16088
  %1011 = and i32 %1010, -65409, !dbg !16089
  store i32 %1011, i32* %8, align 4, !dbg !16090
  %1012 = load i32, i32* %8, align 4, !dbg !16091
  %1013 = icmp eq i32 %1012, 0, !dbg !16093
  br i1 %1013, label %1014, label %1015, !dbg !16094

1014:                                             ; preds = %1009
  br label %1367, !dbg !16095

1015:                                             ; preds = %1009
  %1016 = load i8*, i8** %5, align 8, !dbg !16096
  %1017 = call i64 @strlen(i8* %1016), !dbg !16097
  store i64 %1017, i64* %7, align 8, !dbg !16098
  %1018 = load i64, i64* %7, align 8, !dbg !16099
  %1019 = icmp ugt i64 %1018, 0, !dbg !16101
  br i1 %1019, label %1020, label %1042, !dbg !16102

1020:                                             ; preds = %1015
  %1021 = load i64, i64* %6, align 8, !dbg !16103
  %1022 = load i64, i64* %7, align 8, !dbg !16106
  %1023 = sub i64 %1021, %1022, !dbg !16107
  %1024 = icmp ult i64 %1023, 5, !dbg !16108
  br i1 %1024, label %1025, label %1026, !dbg !16109

1025:                                             ; preds = %1020
  br label %1367, !dbg !16110

1026:                                             ; preds = %1020
  %1027 = load i8*, i8** %5, align 8, !dbg !16111
  %1028 = load i64, i64* %7, align 8, !dbg !16112
  %1029 = getelementptr inbounds i8, i8* %1027, i64 %1028, !dbg !16113
  %1030 = load i64, i64* %6, align 8, !dbg !16114
  %1031 = load i64, i64* %7, align 8, !dbg !16115
  %1032 = sub i64 %1030, %1031, !dbg !16116
  %1033 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1029, i64 %1032, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i64 0, i64 0)), !dbg !16117
  %1034 = load i64, i64* %7, align 8, !dbg !16118
  %1035 = add i64 %1034, 3, !dbg !16119
  %1036 = load i8*, i8** %5, align 8, !dbg !16120
  %1037 = getelementptr inbounds i8, i8* %1036, i64 %1035, !dbg !16120
  store i8* %1037, i8** %5, align 8, !dbg !16120
  %1038 = load i64, i64* %7, align 8, !dbg !16121
  %1039 = add i64 %1038, 3, !dbg !16122
  %1040 = load i64, i64* %6, align 8, !dbg !16123
  %1041 = sub i64 %1040, %1039, !dbg !16123
  store i64 %1041, i64* %6, align 8, !dbg !16123
  br label %1042, !dbg !16124

1042:                                             ; preds = %1026, %1015
  %1043 = load i32, i32* %8, align 4, !dbg !16125
  %1044 = icmp eq i32 %1043, 32, !dbg !16127
  br i1 %1044, label %1045, label %1049, !dbg !16128

1045:                                             ; preds = %1042
  %1046 = load i8*, i8** %5, align 8, !dbg !16129
  %1047 = load i64, i64* %6, align 8, !dbg !16130
  %1048 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1046, i64 %1047, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.141, i64 0, i64 0)), !dbg !16131
  br label %1049, !dbg !16131

1049:                                             ; preds = %1045, %1042
  %1050 = load i32, i32* %8, align 4, !dbg !16132
  %1051 = icmp eq i32 %1050, 34, !dbg !16134
  br i1 %1051, label %1052, label %1056, !dbg !16135

1052:                                             ; preds = %1049
  %1053 = load i8*, i8** %5, align 8, !dbg !16136
  %1054 = load i64, i64* %6, align 8, !dbg !16137
  %1055 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1053, i64 %1054, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.142, i64 0, i64 0)), !dbg !16138
  br label %1056, !dbg !16138

1056:                                             ; preds = %1052, %1049
  %1057 = load i32, i32* %8, align 4, !dbg !16139
  %1058 = icmp eq i32 %1057, 96, !dbg !16141
  br i1 %1058, label %1059, label %1063, !dbg !16142

1059:                                             ; preds = %1056
  %1060 = load i8*, i8** %5, align 8, !dbg !16143
  %1061 = load i64, i64* %6, align 8, !dbg !16144
  %1062 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1060, i64 %1061, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.143, i64 0, i64 0)), !dbg !16145
  br label %1063, !dbg !16145

1063:                                             ; preds = %1059, %1056
  %1064 = load i32, i32* %8, align 4, !dbg !16146
  %1065 = icmp eq i32 %1064, 98, !dbg !16148
  br i1 %1065, label %1066, label %1070, !dbg !16149

1066:                                             ; preds = %1063
  %1067 = load i8*, i8** %5, align 8, !dbg !16150
  %1068 = load i64, i64* %6, align 8, !dbg !16151
  %1069 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1067, i64 %1068, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.144, i64 0, i64 0)), !dbg !16152
  br label %1070, !dbg !16152

1070:                                             ; preds = %1066, %1063
  %1071 = load i32, i32* %8, align 4, !dbg !16153
  %1072 = icmp eq i32 %1071, 100, !dbg !16155
  br i1 %1072, label %1073, label %1077, !dbg !16156

1073:                                             ; preds = %1070
  %1074 = load i8*, i8** %5, align 8, !dbg !16157
  %1075 = load i64, i64* %6, align 8, !dbg !16158
  %1076 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1074, i64 %1075, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.145, i64 0, i64 0)), !dbg !16159
  br label %1077, !dbg !16159

1077:                                             ; preds = %1073, %1070
  %1078 = load i32, i32* %8, align 4, !dbg !16160
  %1079 = icmp eq i32 %1078, 102, !dbg !16162
  br i1 %1079, label %1080, label %1084, !dbg !16163

1080:                                             ; preds = %1077
  %1081 = load i8*, i8** %5, align 8, !dbg !16164
  %1082 = load i64, i64* %6, align 8, !dbg !16165
  %1083 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1081, i64 %1082, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.146, i64 0, i64 0)), !dbg !16166
  br label %1084, !dbg !16166

1084:                                             ; preds = %1080, %1077
  %1085 = load i32, i32* %8, align 4, !dbg !16167
  %1086 = icmp eq i32 %1085, 104, !dbg !16169
  br i1 %1086, label %1087, label %1091, !dbg !16170

1087:                                             ; preds = %1084
  %1088 = load i8*, i8** %5, align 8, !dbg !16171
  %1089 = load i64, i64* %6, align 8, !dbg !16172
  %1090 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1088, i64 %1089, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.147, i64 0, i64 0)), !dbg !16173
  br label %1091, !dbg !16173

1091:                                             ; preds = %1087, %1084
  %1092 = load i32, i32* %8, align 4, !dbg !16174
  %1093 = icmp eq i32 %1092, 106, !dbg !16176
  br i1 %1093, label %1094, label %1098, !dbg !16177

1094:                                             ; preds = %1091
  %1095 = load i8*, i8** %5, align 8, !dbg !16178
  %1096 = load i64, i64* %6, align 8, !dbg !16179
  %1097 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1095, i64 %1096, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.148, i64 0, i64 0)), !dbg !16180
  br label %1098, !dbg !16180

1098:                                             ; preds = %1094, %1091
  %1099 = load i32, i32* %8, align 4, !dbg !16181
  %1100 = icmp eq i32 %1099, 108, !dbg !16183
  br i1 %1100, label %1101, label %1105, !dbg !16184

1101:                                             ; preds = %1098
  %1102 = load i8*, i8** %5, align 8, !dbg !16185
  %1103 = load i64, i64* %6, align 8, !dbg !16186
  %1104 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1102, i64 %1103, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.149, i64 0, i64 0)), !dbg !16187
  br label %1105, !dbg !16187

1105:                                             ; preds = %1101, %1098
  %1106 = load i32, i32* %8, align 4, !dbg !16188
  %1107 = icmp eq i32 %1106, 42, !dbg !16190
  br i1 %1107, label %1108, label %1112, !dbg !16191

1108:                                             ; preds = %1105
  %1109 = load i8*, i8** %5, align 8, !dbg !16192
  %1110 = load i64, i64* %6, align 8, !dbg !16193
  %1111 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1109, i64 %1110, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.150, i64 0, i64 0)), !dbg !16194
  br label %1112, !dbg !16194

1112:                                             ; preds = %1108, %1105
  %1113 = load i32, i32* %8, align 4, !dbg !16195
  %1114 = icmp eq i32 %1113, 44, !dbg !16197
  br i1 %1114, label %1115, label %1119, !dbg !16198

1115:                                             ; preds = %1112
  %1116 = load i8*, i8** %5, align 8, !dbg !16199
  %1117 = load i64, i64* %6, align 8, !dbg !16200
  %1118 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1116, i64 %1117, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.151, i64 0, i64 0)), !dbg !16201
  br label %1119, !dbg !16201

1119:                                             ; preds = %1115, %1112
  %1120 = load i32, i32* %8, align 4, !dbg !16202
  %1121 = icmp eq i32 %1120, 2, !dbg !16204
  br i1 %1121, label %1122, label %1126, !dbg !16205

1122:                                             ; preds = %1119
  %1123 = load i8*, i8** %5, align 8, !dbg !16206
  %1124 = load i64, i64* %6, align 8, !dbg !16207
  %1125 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1123, i64 %1124, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.152, i64 0, i64 0)), !dbg !16208
  br label %1126, !dbg !16208

1126:                                             ; preds = %1122, %1119
  %1127 = load i32, i32* %8, align 4, !dbg !16209
  %1128 = icmp eq i32 %1127, 4, !dbg !16211
  br i1 %1128, label %1129, label %1133, !dbg !16212

1129:                                             ; preds = %1126
  %1130 = load i8*, i8** %5, align 8, !dbg !16213
  %1131 = load i64, i64* %6, align 8, !dbg !16214
  %1132 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1130, i64 %1131, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.153, i64 0, i64 0)), !dbg !16215
  br label %1133, !dbg !16215

1133:                                             ; preds = %1129, %1126
  %1134 = load i32, i32* %8, align 4, !dbg !16216
  %1135 = icmp eq i32 %1134, 6, !dbg !16218
  br i1 %1135, label %1136, label %1140, !dbg !16219

1136:                                             ; preds = %1133
  %1137 = load i8*, i8** %5, align 8, !dbg !16220
  %1138 = load i64, i64* %6, align 8, !dbg !16221
  %1139 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1137, i64 %1138, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.154, i64 0, i64 0)), !dbg !16222
  br label %1140, !dbg !16222

1140:                                             ; preds = %1136, %1133
  %1141 = load i32, i32* %8, align 4, !dbg !16223
  %1142 = icmp eq i32 %1141, 8, !dbg !16225
  br i1 %1142, label %1143, label %1147, !dbg !16226

1143:                                             ; preds = %1140
  %1144 = load i8*, i8** %5, align 8, !dbg !16227
  %1145 = load i64, i64* %6, align 8, !dbg !16228
  %1146 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1144, i64 %1145, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.155, i64 0, i64 0)), !dbg !16229
  br label %1147, !dbg !16229

1147:                                             ; preds = %1143, %1140
  %1148 = load i32, i32* %8, align 4, !dbg !16230
  %1149 = icmp eq i32 %1148, 10, !dbg !16232
  br i1 %1149, label %1150, label %1154, !dbg !16233

1150:                                             ; preds = %1147
  %1151 = load i8*, i8** %5, align 8, !dbg !16234
  %1152 = load i64, i64* %6, align 8, !dbg !16235
  %1153 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1151, i64 %1152, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.156, i64 0, i64 0)), !dbg !16236
  br label %1154, !dbg !16236

1154:                                             ; preds = %1150, %1147
  %1155 = load i32, i32* %8, align 4, !dbg !16237
  %1156 = icmp eq i32 %1155, 12, !dbg !16239
  br i1 %1156, label %1157, label %1161, !dbg !16240

1157:                                             ; preds = %1154
  %1158 = load i8*, i8** %5, align 8, !dbg !16241
  %1159 = load i64, i64* %6, align 8, !dbg !16242
  %1160 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1158, i64 %1159, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.157, i64 0, i64 0)), !dbg !16243
  br label %1161, !dbg !16243

1161:                                             ; preds = %1157, %1154
  %1162 = load i32, i32* %8, align 4, !dbg !16244
  %1163 = icmp eq i32 %1162, 14, !dbg !16246
  br i1 %1163, label %1164, label %1168, !dbg !16247

1164:                                             ; preds = %1161
  %1165 = load i8*, i8** %5, align 8, !dbg !16248
  %1166 = load i64, i64* %6, align 8, !dbg !16249
  %1167 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1165, i64 %1166, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.158, i64 0, i64 0)), !dbg !16250
  br label %1168, !dbg !16250

1168:                                             ; preds = %1164, %1161
  %1169 = load i32, i32* %8, align 4, !dbg !16251
  %1170 = icmp eq i32 %1169, 16, !dbg !16253
  br i1 %1170, label %1171, label %1175, !dbg !16254

1171:                                             ; preds = %1168
  %1172 = load i8*, i8** %5, align 8, !dbg !16255
  %1173 = load i64, i64* %6, align 8, !dbg !16256
  %1174 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1172, i64 %1173, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.159, i64 0, i64 0)), !dbg !16257
  br label %1175, !dbg !16257

1175:                                             ; preds = %1171, %1168
  %1176 = load i32, i32* %8, align 4, !dbg !16258
  %1177 = icmp eq i32 %1176, 22, !dbg !16260
  br i1 %1177, label %1178, label %1182, !dbg !16261

1178:                                             ; preds = %1175
  %1179 = load i8*, i8** %5, align 8, !dbg !16262
  %1180 = load i64, i64* %6, align 8, !dbg !16263
  %1181 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1179, i64 %1180, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.160, i64 0, i64 0)), !dbg !16264
  br label %1182, !dbg !16264

1182:                                             ; preds = %1178, %1175
  %1183 = load i32, i32* %8, align 4, !dbg !16265
  %1184 = icmp eq i32 %1183, 24, !dbg !16267
  br i1 %1184, label %1185, label %1189, !dbg !16268

1185:                                             ; preds = %1182
  %1186 = load i8*, i8** %5, align 8, !dbg !16269
  %1187 = load i64, i64* %6, align 8, !dbg !16270
  %1188 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1186, i64 %1187, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.161, i64 0, i64 0)), !dbg !16271
  br label %1189, !dbg !16271

1189:                                             ; preds = %1185, %1182
  %1190 = load i32, i32* %8, align 4, !dbg !16272
  %1191 = icmp eq i32 %1190, 36, !dbg !16274
  br i1 %1191, label %1192, label %1196, !dbg !16275

1192:                                             ; preds = %1189
  %1193 = load i8*, i8** %5, align 8, !dbg !16276
  %1194 = load i64, i64* %6, align 8, !dbg !16277
  %1195 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1193, i64 %1194, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.162, i64 0, i64 0)), !dbg !16278
  br label %1196, !dbg !16278

1196:                                             ; preds = %1192, %1189
  %1197 = load i32, i32* %8, align 4, !dbg !16279
  %1198 = icmp eq i32 %1197, 38, !dbg !16281
  br i1 %1198, label %1199, label %1203, !dbg !16282

1199:                                             ; preds = %1196
  %1200 = load i8*, i8** %5, align 8, !dbg !16283
  %1201 = load i64, i64* %6, align 8, !dbg !16284
  %1202 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1200, i64 %1201, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.163, i64 0, i64 0)), !dbg !16285
  br label %1203, !dbg !16285

1203:                                             ; preds = %1199, %1196
  %1204 = load i32, i32* %8, align 4, !dbg !16286
  %1205 = icmp eq i32 %1204, 13, !dbg !16288
  br i1 %1205, label %1206, label %1210, !dbg !16289

1206:                                             ; preds = %1203
  %1207 = load i8*, i8** %5, align 8, !dbg !16290
  %1208 = load i64, i64* %6, align 8, !dbg !16291
  %1209 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1207, i64 %1208, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.164, i64 0, i64 0)), !dbg !16292
  br label %1210, !dbg !16292

1210:                                             ; preds = %1206, %1203
  %1211 = load i32, i32* %8, align 4, !dbg !16293
  %1212 = icmp eq i32 %1211, 15, !dbg !16295
  br i1 %1212, label %1213, label %1217, !dbg !16296

1213:                                             ; preds = %1210
  %1214 = load i8*, i8** %5, align 8, !dbg !16297
  %1215 = load i64, i64* %6, align 8, !dbg !16298
  %1216 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1214, i64 %1215, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.165, i64 0, i64 0)), !dbg !16299
  br label %1217, !dbg !16299

1217:                                             ; preds = %1213, %1210
  %1218 = load i32, i32* %8, align 4, !dbg !16300
  %1219 = icmp eq i32 %1218, 52, !dbg !16302
  br i1 %1219, label %1220, label %1224, !dbg !16303

1220:                                             ; preds = %1217
  %1221 = load i8*, i8** %5, align 8, !dbg !16304
  %1222 = load i64, i64* %6, align 8, !dbg !16305
  %1223 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1221, i64 %1222, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.166, i64 0, i64 0)), !dbg !16306
  br label %1224, !dbg !16306

1224:                                             ; preds = %1220, %1217
  %1225 = load i32, i32* %8, align 4, !dbg !16307
  %1226 = icmp eq i32 %1225, 54, !dbg !16309
  br i1 %1226, label %1227, label %1231, !dbg !16310

1227:                                             ; preds = %1224
  %1228 = load i8*, i8** %5, align 8, !dbg !16311
  %1229 = load i64, i64* %6, align 8, !dbg !16312
  %1230 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1228, i64 %1229, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.167, i64 0, i64 0)), !dbg !16313
  br label %1231, !dbg !16313

1231:                                             ; preds = %1227, %1224
  %1232 = load i32, i32* %8, align 4, !dbg !16314
  %1233 = icmp eq i32 %1232, 56, !dbg !16316
  br i1 %1233, label %1234, label %1238, !dbg !16317

1234:                                             ; preds = %1231
  %1235 = load i8*, i8** %5, align 8, !dbg !16318
  %1236 = load i64, i64* %6, align 8, !dbg !16319
  %1237 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1235, i64 %1236, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.168, i64 0, i64 0)), !dbg !16320
  br label %1238, !dbg !16320

1238:                                             ; preds = %1234, %1231
  %1239 = load i32, i32* %8, align 4, !dbg !16321
  %1240 = icmp eq i32 %1239, 58, !dbg !16323
  br i1 %1240, label %1241, label %1245, !dbg !16324

1241:                                             ; preds = %1238
  %1242 = load i8*, i8** %5, align 8, !dbg !16325
  %1243 = load i64, i64* %6, align 8, !dbg !16326
  %1244 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1242, i64 %1243, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.169.373, i64 0, i64 0)), !dbg !16327
  br label %1245, !dbg !16327

1245:                                             ; preds = %1241, %1238
  %1246 = load i32, i32* %8, align 4, !dbg !16328
  %1247 = icmp eq i32 %1246, 50, !dbg !16330
  br i1 %1247, label %1248, label %1252, !dbg !16331

1248:                                             ; preds = %1245
  %1249 = load i8*, i8** %5, align 8, !dbg !16332
  %1250 = load i64, i64* %6, align 8, !dbg !16333
  %1251 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1249, i64 %1250, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.170, i64 0, i64 0)), !dbg !16334
  br label %1252, !dbg !16334

1252:                                             ; preds = %1248, %1245
  %1253 = load i32, i32* %8, align 4, !dbg !16335
  %1254 = icmp eq i32 %1253, 60, !dbg !16337
  br i1 %1254, label %1255, label %1259, !dbg !16338

1255:                                             ; preds = %1252
  %1256 = load i8*, i8** %5, align 8, !dbg !16339
  %1257 = load i64, i64* %6, align 8, !dbg !16340
  %1258 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1256, i64 %1257, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.171, i64 0, i64 0)), !dbg !16341
  br label %1259, !dbg !16341

1259:                                             ; preds = %1255, %1252
  %1260 = load i32, i32* %8, align 4, !dbg !16342
  %1261 = icmp eq i32 %1260, 62, !dbg !16344
  br i1 %1261, label %1262, label %1266, !dbg !16345

1262:                                             ; preds = %1259
  %1263 = load i8*, i8** %5, align 8, !dbg !16346
  %1264 = load i64, i64* %6, align 8, !dbg !16347
  %1265 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1263, i64 %1264, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.172, i64 0, i64 0)), !dbg !16348
  br label %1266, !dbg !16348

1266:                                             ; preds = %1262, %1259
  %1267 = load i32, i32* %8, align 4, !dbg !16349
  %1268 = icmp eq i32 %1267, 64, !dbg !16351
  br i1 %1268, label %1269, label %1273, !dbg !16352

1269:                                             ; preds = %1266
  %1270 = load i8*, i8** %5, align 8, !dbg !16353
  %1271 = load i64, i64* %6, align 8, !dbg !16354
  %1272 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1270, i64 %1271, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.173, i64 0, i64 0)), !dbg !16355
  br label %1273, !dbg !16355

1273:                                             ; preds = %1269, %1266
  %1274 = load i32, i32* %8, align 4, !dbg !16356
  %1275 = icmp eq i32 %1274, 61, !dbg !16358
  br i1 %1275, label %1276, label %1280, !dbg !16359

1276:                                             ; preds = %1273
  %1277 = load i8*, i8** %5, align 8, !dbg !16360
  %1278 = load i64, i64* %6, align 8, !dbg !16361
  %1279 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1277, i64 %1278, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.174, i64 0, i64 0)), !dbg !16362
  br label %1280, !dbg !16362

1280:                                             ; preds = %1276, %1273
  %1281 = load i32, i32* %8, align 4, !dbg !16363
  %1282 = icmp eq i32 %1281, 63, !dbg !16365
  br i1 %1282, label %1283, label %1287, !dbg !16366

1283:                                             ; preds = %1280
  %1284 = load i8*, i8** %5, align 8, !dbg !16367
  %1285 = load i64, i64* %6, align 8, !dbg !16368
  %1286 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1284, i64 %1285, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.175, i64 0, i64 0)), !dbg !16369
  br label %1287, !dbg !16369

1287:                                             ; preds = %1283, %1280
  %1288 = load i32, i32* %8, align 4, !dbg !16370
  %1289 = icmp eq i32 %1288, 18, !dbg !16372
  br i1 %1289, label %1290, label %1294, !dbg !16373

1290:                                             ; preds = %1287
  %1291 = load i8*, i8** %5, align 8, !dbg !16374
  %1292 = load i64, i64* %6, align 8, !dbg !16375
  %1293 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1291, i64 %1292, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.176, i64 0, i64 0)), !dbg !16376
  br label %1294, !dbg !16376

1294:                                             ; preds = %1290, %1287
  %1295 = load i32, i32* %8, align 4, !dbg !16377
  %1296 = icmp eq i32 %1295, 20, !dbg !16379
  br i1 %1296, label %1297, label %1301, !dbg !16380

1297:                                             ; preds = %1294
  %1298 = load i8*, i8** %5, align 8, !dbg !16381
  %1299 = load i64, i64* %6, align 8, !dbg !16382
  %1300 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1298, i64 %1299, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.177, i64 0, i64 0)), !dbg !16383
  br label %1301, !dbg !16383

1301:                                             ; preds = %1297, %1294
  %1302 = load i32, i32* %8, align 4, !dbg !16384
  %1303 = icmp eq i32 %1302, 3, !dbg !16386
  br i1 %1303, label %1304, label %1308, !dbg !16387

1304:                                             ; preds = %1301
  %1305 = load i8*, i8** %5, align 8, !dbg !16388
  %1306 = load i64, i64* %6, align 8, !dbg !16389
  %1307 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1305, i64 %1306, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.178, i64 0, i64 0)), !dbg !16390
  br label %1308, !dbg !16390

1308:                                             ; preds = %1304, %1301
  %1309 = load i32, i32* %8, align 4, !dbg !16391
  %1310 = icmp eq i32 %1309, 5, !dbg !16393
  br i1 %1310, label %1311, label %1315, !dbg !16394

1311:                                             ; preds = %1308
  %1312 = load i8*, i8** %5, align 8, !dbg !16395
  %1313 = load i64, i64* %6, align 8, !dbg !16396
  %1314 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1312, i64 %1313, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.179, i64 0, i64 0)), !dbg !16397
  br label %1315, !dbg !16397

1315:                                             ; preds = %1311, %1308
  %1316 = load i32, i32* %8, align 4, !dbg !16398
  %1317 = icmp eq i32 %1316, 7, !dbg !16400
  br i1 %1317, label %1318, label %1322, !dbg !16401

1318:                                             ; preds = %1315
  %1319 = load i8*, i8** %5, align 8, !dbg !16402
  %1320 = load i64, i64* %6, align 8, !dbg !16403
  %1321 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1319, i64 %1320, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.180, i64 0, i64 0)), !dbg !16404
  br label %1322, !dbg !16404

1322:                                             ; preds = %1318, %1315
  %1323 = load i32, i32* %8, align 4, !dbg !16405
  %1324 = icmp eq i32 %1323, 9, !dbg !16407
  br i1 %1324, label %1325, label %1329, !dbg !16408

1325:                                             ; preds = %1322
  %1326 = load i8*, i8** %5, align 8, !dbg !16409
  %1327 = load i64, i64* %6, align 8, !dbg !16410
  %1328 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1326, i64 %1327, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.181, i64 0, i64 0)), !dbg !16411
  br label %1329, !dbg !16411

1329:                                             ; preds = %1325, %1322
  %1330 = load i32, i32* %8, align 4, !dbg !16412
  %1331 = icmp eq i32 %1330, 46, !dbg !16414
  br i1 %1331, label %1332, label %1336, !dbg !16415

1332:                                             ; preds = %1329
  %1333 = load i8*, i8** %5, align 8, !dbg !16416
  %1334 = load i64, i64* %6, align 8, !dbg !16417
  %1335 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1333, i64 %1334, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.182, i64 0, i64 0)), !dbg !16418
  br label %1336, !dbg !16418

1336:                                             ; preds = %1332, %1329
  %1337 = load i32, i32* %8, align 4, !dbg !16419
  %1338 = icmp eq i32 %1337, 11, !dbg !16421
  br i1 %1338, label %1339, label %1343, !dbg !16422

1339:                                             ; preds = %1336
  %1340 = load i8*, i8** %5, align 8, !dbg !16423
  %1341 = load i64, i64* %6, align 8, !dbg !16424
  %1342 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1340, i64 %1341, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.183, i64 0, i64 0)), !dbg !16425
  br label %1343, !dbg !16425

1343:                                             ; preds = %1339, %1336
  %1344 = load i32, i32* %8, align 4, !dbg !16426
  %1345 = icmp eq i32 %1344, 48, !dbg !16428
  br i1 %1345, label %1346, label %1350, !dbg !16429

1346:                                             ; preds = %1343
  %1347 = load i8*, i8** %5, align 8, !dbg !16430
  %1348 = load i64, i64* %6, align 8, !dbg !16431
  %1349 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1347, i64 %1348, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.184, i64 0, i64 0)), !dbg !16432
  br label %1350, !dbg !16432

1350:                                             ; preds = %1346, %1343
  %1351 = load i32, i32* %8, align 4, !dbg !16433
  %1352 = icmp eq i32 %1351, 40, !dbg !16435
  br i1 %1352, label %1353, label %1357, !dbg !16436

1353:                                             ; preds = %1350
  %1354 = load i8*, i8** %5, align 8, !dbg !16437
  %1355 = load i64, i64* %6, align 8, !dbg !16438
  %1356 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1354, i64 %1355, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.185, i64 0, i64 0)), !dbg !16439
  br label %1357, !dbg !16439

1357:                                             ; preds = %1353, %1350
  %1358 = load i8*, i8** %5, align 8, !dbg !16440
  %1359 = call i64 @strlen(i8* %1358), !dbg !16442
  %1360 = icmp ne i64 %1359, 0, !dbg !16443
  br i1 %1360, label %1361, label %1362, !dbg !16444

1361:                                             ; preds = %1357
  br label %1367, !dbg !16445

1362:                                             ; preds = %1357
  %1363 = load i8*, i8** %5, align 8, !dbg !16446
  %1364 = load i64, i64* %6, align 8, !dbg !16447
  %1365 = load i32, i32* %8, align 4, !dbg !16448
  %1366 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1363, i64 %1364, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.139, i64 0, i64 0), i32 %1365), !dbg !16449
  br label %1367, !dbg !16450

1367:                                             ; preds = %1362, %1361, %1025, %1014, %603, %11
  ret void, !dbg !16450
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_pk_init(%struct.mbedtls_pk_context* %0) #0 !dbg !16451 {
  %2 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %2, metadata !16488, metadata !DIExpression()), !dbg !16489
  %3 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16490
  %4 = icmp eq %struct.mbedtls_pk_context* %3, null, !dbg !16492
  br i1 %4, label %5, label %6, !dbg !16493

5:                                                ; preds = %1
  br label %11, !dbg !16494

6:                                                ; preds = %1
  %7 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16495
  %8 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %7, i32 0, i32 0, !dbg !16496
  store %struct.mbedtls_pk_info_t* null, %struct.mbedtls_pk_info_t** %8, align 8, !dbg !16497
  %9 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16498
  %10 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %9, i32 0, i32 1, !dbg !16499
  store i8* null, i8** %10, align 8, !dbg !16500
  br label %11, !dbg !16501

11:                                               ; preds = %6, %5
  ret void, !dbg !16501
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_pk_free(%struct.mbedtls_pk_context* %0) #0 !dbg !16502 {
  %2 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %2, metadata !16503, metadata !DIExpression()), !dbg !16504
  %3 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16505
  %4 = icmp eq %struct.mbedtls_pk_context* %3, null, !dbg !16507
  br i1 %4, label %10, label %5, !dbg !16508

5:                                                ; preds = %1
  %6 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16509
  %7 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %6, i32 0, i32 0, !dbg !16510
  %8 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %7, align 8, !dbg !16510
  %9 = icmp eq %struct.mbedtls_pk_info_t* %8, null, !dbg !16511
  br i1 %9, label %10, label %11, !dbg !16512

10:                                               ; preds = %5, %1
  br label %22, !dbg !16513

11:                                               ; preds = %5
  %12 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16514
  %13 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %12, i32 0, i32 0, !dbg !16515
  %14 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !16515
  %15 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %14, i32 0, i32 10, !dbg !16516
  %16 = load void (i8*)*, void (i8*)** %15, align 8, !dbg !16516
  %17 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16517
  %18 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %17, i32 0, i32 1, !dbg !16518
  %19 = load i8*, i8** %18, align 8, !dbg !16518
  call void %16(i8* %19), !dbg !16514
  %20 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16519
  %21 = bitcast %struct.mbedtls_pk_context* %20 to i8*, !dbg !16519
  call void @mbedtls_zeroize.378(i8* %21, i64 16), !dbg !16520
  br label %22, !dbg !16521

22:                                               ; preds = %11, %10
  ret void, !dbg !16521
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize.378(i8* %0, i64 %1) #0 !dbg !16522 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !16523, metadata !DIExpression()), !dbg !16524
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !16525, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16527, metadata !DIExpression()), !dbg !16528
  %6 = load i8*, i8** %3, align 8, !dbg !16529
  store i8* %6, i8** %5, align 8, !dbg !16528
  br label %7, !dbg !16530

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !16531
  %9 = add i64 %8, -1, !dbg !16531
  store i64 %9, i64* %4, align 8, !dbg !16531
  %10 = icmp ne i64 %8, 0, !dbg !16530
  br i1 %10, label %11, label %14, !dbg !16530

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !16532
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !16532
  store i8* %13, i8** %5, align 8, !dbg !16532
  store volatile i8 0, i8* %12, align 1, !dbg !16533
  br label %7, !dbg !16530, !llvm.loop !16534

14:                                               ; preds = %7
  ret void, !dbg !16536
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 %0) #0 !dbg !16537 {
  %2 = alloca %struct.mbedtls_pk_info_t*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16540, metadata !DIExpression()), !dbg !16541
  %4 = load i32, i32* %3, align 4, !dbg !16542
  switch i32 %4, label %9 [
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
  ], !dbg !16543

5:                                                ; preds = %1
  store %struct.mbedtls_pk_info_t* @mbedtls_rsa_info, %struct.mbedtls_pk_info_t** %2, align 8, !dbg !16544
  br label %10, !dbg !16544

6:                                                ; preds = %1
  store %struct.mbedtls_pk_info_t* @mbedtls_eckey_info, %struct.mbedtls_pk_info_t** %2, align 8, !dbg !16546
  br label %10, !dbg !16546

7:                                                ; preds = %1
  store %struct.mbedtls_pk_info_t* @mbedtls_eckeydh_info, %struct.mbedtls_pk_info_t** %2, align 8, !dbg !16547
  br label %10, !dbg !16547

8:                                                ; preds = %1
  store %struct.mbedtls_pk_info_t* @mbedtls_ecdsa_info, %struct.mbedtls_pk_info_t** %2, align 8, !dbg !16548
  br label %10, !dbg !16548

9:                                                ; preds = %1
  store %struct.mbedtls_pk_info_t* null, %struct.mbedtls_pk_info_t** %2, align 8, !dbg !16549
  br label %10, !dbg !16549

10:                                               ; preds = %9, %8, %7, %6, %5
  %11 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %2, align 8, !dbg !16550
  ret %struct.mbedtls_pk_info_t* %11, !dbg !16550
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_info_t* %1) #0 !dbg !16551 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_pk_context*, align 8
  %5 = alloca %struct.mbedtls_pk_info_t*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %4, metadata !16554, metadata !DIExpression()), !dbg !16555
  store %struct.mbedtls_pk_info_t* %1, %struct.mbedtls_pk_info_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_info_t** %5, metadata !16556, metadata !DIExpression()), !dbg !16557
  %6 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16558
  %7 = icmp eq %struct.mbedtls_pk_context* %6, null, !dbg !16560
  br i1 %7, label %16, label %8, !dbg !16561

8:                                                ; preds = %2
  %9 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %5, align 8, !dbg !16562
  %10 = icmp eq %struct.mbedtls_pk_info_t* %9, null, !dbg !16563
  br i1 %10, label %16, label %11, !dbg !16564

11:                                               ; preds = %8
  %12 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16565
  %13 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %12, i32 0, i32 0, !dbg !16566
  %14 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !16566
  %15 = icmp ne %struct.mbedtls_pk_info_t* %14, null, !dbg !16567
  br i1 %15, label %16, label %17, !dbg !16568

16:                                               ; preds = %11, %8, %2
  store i32 -16000, i32* %3, align 4, !dbg !16569
  br label %30, !dbg !16569

17:                                               ; preds = %11
  %18 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %5, align 8, !dbg !16570
  %19 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %18, i32 0, i32 9, !dbg !16572
  %20 = load i8* ()*, i8* ()** %19, align 8, !dbg !16572
  %21 = call i8* %20(), !dbg !16570
  %22 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16573
  %23 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %22, i32 0, i32 1, !dbg !16574
  store i8* %21, i8** %23, align 8, !dbg !16575
  %24 = icmp eq i8* %21, null, !dbg !16576
  br i1 %24, label %25, label %26, !dbg !16577

25:                                               ; preds = %17
  store i32 -16256, i32* %3, align 4, !dbg !16578
  br label %30, !dbg !16578

26:                                               ; preds = %17
  %27 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %5, align 8, !dbg !16579
  %28 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16580
  %29 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %28, i32 0, i32 0, !dbg !16581
  store %struct.mbedtls_pk_info_t* %27, %struct.mbedtls_pk_info_t** %29, align 8, !dbg !16582
  store i32 0, i32* %3, align 4, !dbg !16583
  br label %30, !dbg !16583

30:                                               ; preds = %26, %25, %16
  %31 = load i32, i32* %3, align 4, !dbg !16584
  ret i32 %31, !dbg !16584
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_setup_rsa_alt(%struct.mbedtls_pk_context* %0, i8* %1, i32 (i8*, i32, i64*, i8*, i8*, i64)* %2, i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)* %3, i64 (i8*)* %4) #0 !dbg !16585 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.mbedtls_pk_context*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32 (i8*, i32, i64*, i8*, i8*, i64)*, align 8
  %10 = alloca i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)*, align 8
  %11 = alloca i64 (i8*)*, align 8
  %12 = alloca %struct.mbedtls_rsa_alt_context*, align 8
  %13 = alloca %struct.mbedtls_pk_info_t*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %7, metadata !16588, metadata !DIExpression()), !dbg !16589
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !16590, metadata !DIExpression()), !dbg !16591
  store i32 (i8*, i32, i64*, i8*, i8*, i64)* %2, i32 (i8*, i32, i64*, i8*, i8*, i64)** %9, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i64*, i8*, i8*, i64)** %9, metadata !16592, metadata !DIExpression()), !dbg !16593
  store i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)* %3, i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)** %10, metadata !16594, metadata !DIExpression()), !dbg !16595
  store i64 (i8*)* %4, i64 (i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*)** %11, metadata !16596, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_alt_context** %12, metadata !16598, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_info_t** %13, metadata !16600, metadata !DIExpression()), !dbg !16601
  store %struct.mbedtls_pk_info_t* @mbedtls_rsa_alt_info, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !16601
  %14 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !16602
  %15 = icmp eq %struct.mbedtls_pk_context* %14, null, !dbg !16604
  br i1 %15, label %21, label %16, !dbg !16605

16:                                               ; preds = %5
  %17 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !16606
  %18 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %17, i32 0, i32 0, !dbg !16607
  %19 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %18, align 8, !dbg !16607
  %20 = icmp ne %struct.mbedtls_pk_info_t* %19, null, !dbg !16608
  br i1 %20, label %21, label %22, !dbg !16609

21:                                               ; preds = %16, %5
  store i32 -16000, i32* %6, align 4, !dbg !16610
  br label %51, !dbg !16610

22:                                               ; preds = %16
  %23 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !16611
  %24 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %23, i32 0, i32 9, !dbg !16613
  %25 = load i8* ()*, i8* ()** %24, align 8, !dbg !16613
  %26 = call i8* %25(), !dbg !16611
  %27 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !16614
  %28 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %27, i32 0, i32 1, !dbg !16615
  store i8* %26, i8** %28, align 8, !dbg !16616
  %29 = icmp eq i8* %26, null, !dbg !16617
  br i1 %29, label %30, label %31, !dbg !16618

30:                                               ; preds = %22
  store i32 -16256, i32* %6, align 4, !dbg !16619
  br label %51, !dbg !16619

31:                                               ; preds = %22
  %32 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !16620
  %33 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !16621
  %34 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %33, i32 0, i32 0, !dbg !16622
  store %struct.mbedtls_pk_info_t* %32, %struct.mbedtls_pk_info_t** %34, align 8, !dbg !16623
  %35 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !16624
  %36 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %35, i32 0, i32 1, !dbg !16625
  %37 = load i8*, i8** %36, align 8, !dbg !16625
  %38 = bitcast i8* %37 to %struct.mbedtls_rsa_alt_context*, !dbg !16626
  store %struct.mbedtls_rsa_alt_context* %38, %struct.mbedtls_rsa_alt_context** %12, align 8, !dbg !16627
  %39 = load i8*, i8** %8, align 8, !dbg !16628
  %40 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %12, align 8, !dbg !16629
  %41 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %40, i32 0, i32 0, !dbg !16630
  store i8* %39, i8** %41, align 8, !dbg !16631
  %42 = load i32 (i8*, i32, i64*, i8*, i8*, i64)*, i32 (i8*, i32, i64*, i8*, i8*, i64)** %9, align 8, !dbg !16632
  %43 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %12, align 8, !dbg !16633
  %44 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %43, i32 0, i32 1, !dbg !16634
  store i32 (i8*, i32, i64*, i8*, i8*, i64)* %42, i32 (i8*, i32, i64*, i8*, i8*, i64)** %44, align 8, !dbg !16635
  %45 = load i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)** %10, align 8, !dbg !16636
  %46 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %12, align 8, !dbg !16637
  %47 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %46, i32 0, i32 2, !dbg !16638
  store i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)* %45, i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)** %47, align 8, !dbg !16639
  %48 = load i64 (i8*)*, i64 (i8*)** %11, align 8, !dbg !16640
  %49 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %12, align 8, !dbg !16641
  %50 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %49, i32 0, i32 3, !dbg !16642
  store i64 (i8*)* %48, i64 (i8*)** %50, align 8, !dbg !16643
  store i32 0, i32* %6, align 4, !dbg !16644
  br label %51, !dbg !16644

51:                                               ; preds = %31, %30, %21
  %52 = load i32, i32* %6, align 4, !dbg !16645
  ret i32 %52, !dbg !16645
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_can_do(%struct.mbedtls_pk_context* %0, i32 %1) #0 !dbg !16646 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_pk_context*, align 8
  %5 = alloca i32, align 4
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %4, metadata !16651, metadata !DIExpression()), !dbg !16652
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16653, metadata !DIExpression()), !dbg !16654
  %6 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16655
  %7 = icmp eq %struct.mbedtls_pk_context* %6, null, !dbg !16657
  br i1 %7, label %13, label %8, !dbg !16658

8:                                                ; preds = %2
  %9 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16659
  %10 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %9, i32 0, i32 0, !dbg !16660
  %11 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %10, align 8, !dbg !16660
  %12 = icmp eq %struct.mbedtls_pk_info_t* %11, null, !dbg !16661
  br i1 %12, label %13, label %14, !dbg !16662

13:                                               ; preds = %8, %2
  store i32 0, i32* %3, align 4, !dbg !16663
  br label %22, !dbg !16663

14:                                               ; preds = %8
  %15 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !16664
  %16 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %15, i32 0, i32 0, !dbg !16665
  %17 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %16, align 8, !dbg !16665
  %18 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %17, i32 0, i32 3, !dbg !16666
  %19 = load i32 (i32)*, i32 (i32)** %18, align 8, !dbg !16666
  %20 = load i32, i32* %5, align 4, !dbg !16667
  %21 = call i32 %19(i32 %20), !dbg !16664
  store i32 %21, i32* %3, align 4, !dbg !16668
  br label %22, !dbg !16668

22:                                               ; preds = %14, %13
  %23 = load i32, i32* %3, align 4, !dbg !16669
  ret i32 %23, !dbg !16669
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_verify(%struct.mbedtls_pk_context* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64 %5) #0 !dbg !16670 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.mbedtls_pk_context*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %8, metadata !16673, metadata !DIExpression()), !dbg !16674
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16675, metadata !DIExpression()), !dbg !16676
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !16677, metadata !DIExpression()), !dbg !16678
  store i64 %3, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !16679, metadata !DIExpression()), !dbg !16680
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !16681, metadata !DIExpression()), !dbg !16682
  store i64 %5, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !16683, metadata !DIExpression()), !dbg !16684
  %14 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %8, align 8, !dbg !16685
  %15 = icmp eq %struct.mbedtls_pk_context* %14, null, !dbg !16687
  br i1 %15, label %25, label %16, !dbg !16688

16:                                               ; preds = %6
  %17 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %8, align 8, !dbg !16689
  %18 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %17, i32 0, i32 0, !dbg !16690
  %19 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %18, align 8, !dbg !16690
  %20 = icmp eq %struct.mbedtls_pk_info_t* %19, null, !dbg !16691
  br i1 %20, label %25, label %21, !dbg !16692

21:                                               ; preds = %16
  %22 = load i32, i32* %9, align 4, !dbg !16693
  %23 = call i32 @pk_hashlen_helper(i32 %22, i64* %11), !dbg !16694
  %24 = icmp ne i32 %23, 0, !dbg !16695
  br i1 %24, label %25, label %26, !dbg !16696

25:                                               ; preds = %21, %16, %6
  store i32 -16000, i32* %7, align 4, !dbg !16697
  br label %49, !dbg !16697

26:                                               ; preds = %21
  %27 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %8, align 8, !dbg !16698
  %28 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %27, i32 0, i32 0, !dbg !16700
  %29 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %28, align 8, !dbg !16700
  %30 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %29, i32 0, i32 4, !dbg !16701
  %31 = load i32 (i8*, i32, i8*, i64, i8*, i64)*, i32 (i8*, i32, i8*, i64, i8*, i64)** %30, align 8, !dbg !16701
  %32 = icmp eq i32 (i8*, i32, i8*, i64, i8*, i64)* %31, null, !dbg !16702
  br i1 %32, label %33, label %34, !dbg !16703

33:                                               ; preds = %26
  store i32 -16128, i32* %7, align 4, !dbg !16704
  br label %49, !dbg !16704

34:                                               ; preds = %26
  %35 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %8, align 8, !dbg !16705
  %36 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %35, i32 0, i32 0, !dbg !16706
  %37 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %36, align 8, !dbg !16706
  %38 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %37, i32 0, i32 4, !dbg !16707
  %39 = load i32 (i8*, i32, i8*, i64, i8*, i64)*, i32 (i8*, i32, i8*, i64, i8*, i64)** %38, align 8, !dbg !16707
  %40 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %8, align 8, !dbg !16708
  %41 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %40, i32 0, i32 1, !dbg !16709
  %42 = load i8*, i8** %41, align 8, !dbg !16709
  %43 = load i32, i32* %9, align 4, !dbg !16710
  %44 = load i8*, i8** %10, align 8, !dbg !16711
  %45 = load i64, i64* %11, align 8, !dbg !16712
  %46 = load i8*, i8** %12, align 8, !dbg !16713
  %47 = load i64, i64* %13, align 8, !dbg !16714
  %48 = call i32 %39(i8* %42, i32 %43, i8* %44, i64 %45, i8* %46, i64 %47), !dbg !16705
  store i32 %48, i32* %7, align 4, !dbg !16715
  br label %49, !dbg !16715

49:                                               ; preds = %34, %33, %25
  %50 = load i32, i32* %7, align 4, !dbg !16716
  ret i32 %50, !dbg !16716
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_hashlen_helper(i32 %0, i64* %1) #0 !dbg !16717 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64*, align 8
  %6 = alloca %struct.mbedtls_md_info_t*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16720, metadata !DIExpression()), !dbg !16721
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !16722, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %6, metadata !16724, metadata !DIExpression()), !dbg !16725
  %7 = load i64*, i64** %5, align 8, !dbg !16726
  %8 = load i64, i64* %7, align 8, !dbg !16728
  %9 = icmp ne i64 %8, 0, !dbg !16729
  br i1 %9, label %10, label %11, !dbg !16730

10:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !16731
  br label %21, !dbg !16731

11:                                               ; preds = %2
  %12 = load i32, i32* %4, align 4, !dbg !16732
  %13 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %12), !dbg !16734
  store %struct.mbedtls_md_info_t* %13, %struct.mbedtls_md_info_t** %6, align 8, !dbg !16735
  %14 = icmp eq %struct.mbedtls_md_info_t* %13, null, !dbg !16736
  br i1 %14, label %15, label %16, !dbg !16737

15:                                               ; preds = %11
  store i32 -1, i32* %3, align 4, !dbg !16738
  br label %21, !dbg !16738

16:                                               ; preds = %11
  %17 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %6, align 8, !dbg !16739
  %18 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %17), !dbg !16740
  %19 = zext i8 %18 to i64, !dbg !16740
  %20 = load i64*, i64** %5, align 8, !dbg !16741
  store i64 %19, i64* %20, align 8, !dbg !16742
  store i32 0, i32* %3, align 4, !dbg !16743
  br label %21, !dbg !16743

21:                                               ; preds = %16, %15, %10
  %22 = load i32, i32* %3, align 4, !dbg !16744
  ret i32 %22, !dbg !16744
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_verify_ext(i32 %0, i8* %1, %struct.mbedtls_pk_context* %2, i32 %3, i8* %4, i64 %5, i8* %6, i64 %7) #0 !dbg !16745 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.mbedtls_pk_context*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca %struct.mbedtls_pk_rsassa_pss_options*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16748, metadata !DIExpression()), !dbg !16749
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !16750, metadata !DIExpression()), !dbg !16751
  store %struct.mbedtls_pk_context* %2, %struct.mbedtls_pk_context** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %12, metadata !16752, metadata !DIExpression()), !dbg !16753
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !16754, metadata !DIExpression()), !dbg !16755
  store i8* %4, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !16756, metadata !DIExpression()), !dbg !16757
  store i64 %5, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !16758, metadata !DIExpression()), !dbg !16759
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !16760, metadata !DIExpression()), !dbg !16761
  store i64 %7, i64* %17, align 8
  call void @llvm.dbg.declare(metadata i64* %17, metadata !16762, metadata !DIExpression()), !dbg !16763
  %20 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16764
  %21 = icmp eq %struct.mbedtls_pk_context* %20, null, !dbg !16766
  br i1 %21, label %27, label %22, !dbg !16767

22:                                               ; preds = %8
  %23 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16768
  %24 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %23, i32 0, i32 0, !dbg !16769
  %25 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %24, align 8, !dbg !16769
  %26 = icmp eq %struct.mbedtls_pk_info_t* %25, null, !dbg !16770
  br i1 %26, label %27, label %28, !dbg !16771

27:                                               ; preds = %22, %8
  store i32 -16000, i32* %9, align 4, !dbg !16772
  br label %99, !dbg !16772

28:                                               ; preds = %22
  %29 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16773
  %30 = load i32, i32* %10, align 4, !dbg !16775
  %31 = call i32 @mbedtls_pk_can_do(%struct.mbedtls_pk_context* %29, i32 %30), !dbg !16776
  %32 = icmp ne i32 %31, 0, !dbg !16776
  br i1 %32, label %34, label %33, !dbg !16777

33:                                               ; preds = %28
  store i32 -16128, i32* %9, align 4, !dbg !16778
  br label %99, !dbg !16778

34:                                               ; preds = %28
  %35 = load i32, i32* %10, align 4, !dbg !16779
  %36 = icmp eq i32 %35, 6, !dbg !16781
  br i1 %36, label %37, label %87, !dbg !16782

37:                                               ; preds = %34
  call void @llvm.dbg.declare(metadata i32* %18, metadata !16783, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_rsassa_pss_options** %19, metadata !16786, metadata !DIExpression()), !dbg !16787
  %38 = load i32, i32* %13, align 4, !dbg !16788
  %39 = icmp eq i32 %38, 0, !dbg !16790
  br i1 %39, label %40, label %44, !dbg !16791

40:                                               ; preds = %37
  %41 = load i64, i64* %15, align 8, !dbg !16792
  %42 = icmp ult i64 4294967295, %41, !dbg !16793
  br i1 %42, label %43, label %44, !dbg !16794

43:                                               ; preds = %40
  store i32 -16000, i32* %9, align 4, !dbg !16795
  br label %99, !dbg !16795

44:                                               ; preds = %40, %37
  %45 = load i8*, i8** %11, align 8, !dbg !16796
  %46 = icmp eq i8* %45, null, !dbg !16798
  br i1 %46, label %47, label %48, !dbg !16799

47:                                               ; preds = %44
  store i32 -16000, i32* %9, align 4, !dbg !16800
  br label %99, !dbg !16800

48:                                               ; preds = %44
  %49 = load i8*, i8** %11, align 8, !dbg !16801
  %50 = bitcast i8* %49 to %struct.mbedtls_pk_rsassa_pss_options*, !dbg !16802
  store %struct.mbedtls_pk_rsassa_pss_options* %50, %struct.mbedtls_pk_rsassa_pss_options** %19, align 8, !dbg !16803
  %51 = load i64, i64* %17, align 8, !dbg !16804
  %52 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16806
  %53 = call i64 @mbedtls_pk_get_len(%struct.mbedtls_pk_context* %52), !dbg !16807
  %54 = icmp ult i64 %51, %53, !dbg !16808
  br i1 %54, label %55, label %56, !dbg !16809

55:                                               ; preds = %48
  store i32 -17280, i32* %9, align 4, !dbg !16810
  br label %99, !dbg !16810

56:                                               ; preds = %48
  %57 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16811
  %58 = bitcast %struct.mbedtls_pk_context* %57 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !16812
  %59 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %58, i32 0, i32 0, !dbg !16812
  %60 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %59, align 8, !dbg !16812
  %61 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %58, i32 0, i32 1, !dbg !16812
  %62 = load i8*, i8** %61, align 8, !dbg !16812
  %63 = call %struct.mbedtls_rsa_context* @mbedtls_pk_rsa(%struct.mbedtls_pk_info_t* %60, i8* %62), !dbg !16812
  %64 = load i32, i32* %13, align 4, !dbg !16813
  %65 = load i64, i64* %15, align 8, !dbg !16814
  %66 = trunc i64 %65 to i32, !dbg !16815
  %67 = load i8*, i8** %14, align 8, !dbg !16816
  %68 = load %struct.mbedtls_pk_rsassa_pss_options*, %struct.mbedtls_pk_rsassa_pss_options** %19, align 8, !dbg !16817
  %69 = getelementptr inbounds %struct.mbedtls_pk_rsassa_pss_options, %struct.mbedtls_pk_rsassa_pss_options* %68, i32 0, i32 0, !dbg !16818
  %70 = load i32, i32* %69, align 4, !dbg !16818
  %71 = load %struct.mbedtls_pk_rsassa_pss_options*, %struct.mbedtls_pk_rsassa_pss_options** %19, align 8, !dbg !16819
  %72 = getelementptr inbounds %struct.mbedtls_pk_rsassa_pss_options, %struct.mbedtls_pk_rsassa_pss_options* %71, i32 0, i32 1, !dbg !16820
  %73 = load i32, i32* %72, align 4, !dbg !16820
  %74 = load i8*, i8** %16, align 8, !dbg !16821
  %75 = call i32 @mbedtls_rsa_rsassa_pss_verify_ext(%struct.mbedtls_rsa_context* %63, i32 (i8*, i8*, i64)* null, i8* null, i32 0, i32 %64, i32 %66, i8* %67, i32 %70, i32 %73, i8* %74), !dbg !16822
  store i32 %75, i32* %18, align 4, !dbg !16823
  %76 = load i32, i32* %18, align 4, !dbg !16824
  %77 = icmp ne i32 %76, 0, !dbg !16826
  br i1 %77, label %78, label %80, !dbg !16827

78:                                               ; preds = %56
  %79 = load i32, i32* %18, align 4, !dbg !16828
  store i32 %79, i32* %9, align 4, !dbg !16829
  br label %99, !dbg !16829

80:                                               ; preds = %56
  %81 = load i64, i64* %17, align 8, !dbg !16830
  %82 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16832
  %83 = call i64 @mbedtls_pk_get_len(%struct.mbedtls_pk_context* %82), !dbg !16833
  %84 = icmp ugt i64 %81, %83, !dbg !16834
  br i1 %84, label %85, label %86, !dbg !16835

85:                                               ; preds = %80
  store i32 -14592, i32* %9, align 4, !dbg !16836
  br label %99, !dbg !16836

86:                                               ; preds = %80
  store i32 0, i32* %9, align 4, !dbg !16837
  br label %99, !dbg !16837

87:                                               ; preds = %34
  %88 = load i8*, i8** %11, align 8, !dbg !16838
  %89 = icmp ne i8* %88, null, !dbg !16840
  br i1 %89, label %90, label %91, !dbg !16841

90:                                               ; preds = %87
  store i32 -16000, i32* %9, align 4, !dbg !16842
  br label %99, !dbg !16842

91:                                               ; preds = %87
  %92 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %12, align 8, !dbg !16843
  %93 = load i32, i32* %13, align 4, !dbg !16844
  %94 = load i8*, i8** %14, align 8, !dbg !16845
  %95 = load i64, i64* %15, align 8, !dbg !16846
  %96 = load i8*, i8** %16, align 8, !dbg !16847
  %97 = load i64, i64* %17, align 8, !dbg !16848
  %98 = call i32 @mbedtls_pk_verify(%struct.mbedtls_pk_context* %92, i32 %93, i8* %94, i64 %95, i8* %96, i64 %97), !dbg !16849
  store i32 %98, i32* %9, align 4, !dbg !16850
  br label %99, !dbg !16850

99:                                               ; preds = %91, %90, %86, %85, %78, %55, %47, %43, %33, %27
  %100 = load i32, i32* %9, align 4, !dbg !16851
  ret i32 %100, !dbg !16851
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mbedtls_pk_get_len(%struct.mbedtls_pk_context* %0) #0 !dbg !16852 {
  %2 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %2, metadata !16855, metadata !DIExpression()), !dbg !16856
  %3 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %2, align 8, !dbg !16857
  %4 = call i64 @mbedtls_pk_get_bitlen(%struct.mbedtls_pk_context* %3), !dbg !16858
  %5 = add i64 %4, 7, !dbg !16859
  %6 = udiv i64 %5, 8, !dbg !16860
  ret i64 %6, !dbg !16861
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal %struct.mbedtls_rsa_context* @mbedtls_pk_rsa(%struct.mbedtls_pk_info_t* %0, i8* %1) #0 !dbg !16862 {
  %3 = alloca %struct.mbedtls_pk_context, align 8
  %4 = bitcast %struct.mbedtls_pk_context* %3 to { %struct.mbedtls_pk_info_t*, i8* }*
  %5 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %4, i32 0, i32 0
  store %struct.mbedtls_pk_info_t* %0, %struct.mbedtls_pk_info_t** %5, align 8
  %6 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %4, i32 0, i32 1
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context* %3, metadata !16865, metadata !DIExpression()), !dbg !16866
  %7 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %3, i32 0, i32 1, !dbg !16867
  %8 = load i8*, i8** %7, align 8, !dbg !16867
  %9 = bitcast i8* %8 to %struct.mbedtls_rsa_context*, !dbg !16868
  ret %struct.mbedtls_rsa_context* %9, !dbg !16869
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i64 @mbedtls_pk_get_bitlen(%struct.mbedtls_pk_context* %0) #0 !dbg !16870 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %3, metadata !16871, metadata !DIExpression()), !dbg !16872
  %4 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !16873
  %5 = icmp eq %struct.mbedtls_pk_context* %4, null, !dbg !16875
  br i1 %5, label %11, label %6, !dbg !16876

6:                                                ; preds = %1
  %7 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !16877
  %8 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %7, i32 0, i32 0, !dbg !16878
  %9 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %8, align 8, !dbg !16878
  %10 = icmp eq %struct.mbedtls_pk_info_t* %9, null, !dbg !16879
  br i1 %10, label %11, label %12, !dbg !16880

11:                                               ; preds = %6, %1
  store i64 0, i64* %2, align 8, !dbg !16881
  br label %22, !dbg !16881

12:                                               ; preds = %6
  %13 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !16882
  %14 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %13, i32 0, i32 0, !dbg !16883
  %15 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %14, align 8, !dbg !16883
  %16 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %15, i32 0, i32 2, !dbg !16884
  %17 = load i64 (i8*)*, i64 (i8*)** %16, align 8, !dbg !16884
  %18 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !16885
  %19 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %18, i32 0, i32 1, !dbg !16886
  %20 = load i8*, i8** %19, align 8, !dbg !16886
  %21 = call i64 %17(i8* %20), !dbg !16882
  store i64 %21, i64* %2, align 8, !dbg !16887
  br label %22, !dbg !16887

22:                                               ; preds = %12, %11
  %23 = load i64, i64* %2, align 8, !dbg !16888
  ret i64 %23, !dbg !16888
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_sign(%struct.mbedtls_pk_context* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64* %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !16889 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_pk_context*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %10, metadata !16892, metadata !DIExpression()), !dbg !16893
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16894, metadata !DIExpression()), !dbg !16895
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !16896, metadata !DIExpression()), !dbg !16897
  store i64 %3, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !16898, metadata !DIExpression()), !dbg !16899
  store i8* %4, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !16900, metadata !DIExpression()), !dbg !16901
  store i64* %5, i64** %15, align 8
  call void @llvm.dbg.declare(metadata i64** %15, metadata !16902, metadata !DIExpression()), !dbg !16903
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !16904, metadata !DIExpression()), !dbg !16905
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !16906, metadata !DIExpression()), !dbg !16907
  %18 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16908
  %19 = icmp eq %struct.mbedtls_pk_context* %18, null, !dbg !16910
  br i1 %19, label %29, label %20, !dbg !16911

20:                                               ; preds = %8
  %21 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16912
  %22 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %21, i32 0, i32 0, !dbg !16913
  %23 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %22, align 8, !dbg !16913
  %24 = icmp eq %struct.mbedtls_pk_info_t* %23, null, !dbg !16914
  br i1 %24, label %29, label %25, !dbg !16915

25:                                               ; preds = %20
  %26 = load i32, i32* %11, align 4, !dbg !16916
  %27 = call i32 @pk_hashlen_helper(i32 %26, i64* %13), !dbg !16917
  %28 = icmp ne i32 %27, 0, !dbg !16918
  br i1 %28, label %29, label %30, !dbg !16919

29:                                               ; preds = %25, %20, %8
  store i32 -16000, i32* %9, align 4, !dbg !16920
  br label %55, !dbg !16920

30:                                               ; preds = %25
  %31 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16921
  %32 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %31, i32 0, i32 0, !dbg !16923
  %33 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %32, align 8, !dbg !16923
  %34 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %33, i32 0, i32 5, !dbg !16924
  %35 = load i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)** %34, align 8, !dbg !16924
  %36 = icmp eq i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)* %35, null, !dbg !16925
  br i1 %36, label %37, label %38, !dbg !16926

37:                                               ; preds = %30
  store i32 -16128, i32* %9, align 4, !dbg !16927
  br label %55, !dbg !16927

38:                                               ; preds = %30
  %39 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16928
  %40 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %39, i32 0, i32 0, !dbg !16929
  %41 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %40, align 8, !dbg !16929
  %42 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %41, i32 0, i32 5, !dbg !16930
  %43 = load i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i32, i8*, i64, i8*, i64*, i32 (i8*, i8*, i64)*, i8*)** %42, align 8, !dbg !16930
  %44 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16931
  %45 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %44, i32 0, i32 1, !dbg !16932
  %46 = load i8*, i8** %45, align 8, !dbg !16932
  %47 = load i32, i32* %11, align 4, !dbg !16933
  %48 = load i8*, i8** %12, align 8, !dbg !16934
  %49 = load i64, i64* %13, align 8, !dbg !16935
  %50 = load i8*, i8** %14, align 8, !dbg !16936
  %51 = load i64*, i64** %15, align 8, !dbg !16937
  %52 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !16938
  %53 = load i8*, i8** %17, align 8, !dbg !16939
  %54 = call i32 %43(i8* %46, i32 %47, i8* %48, i64 %49, i8* %50, i64* %51, i32 (i8*, i8*, i64)* %52, i8* %53), !dbg !16928
  store i32 %54, i32* %9, align 4, !dbg !16940
  br label %55, !dbg !16940

55:                                               ; preds = %38, %37, %29
  %56 = load i32, i32* %9, align 4, !dbg !16941
  ret i32 %56, !dbg !16941
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_decrypt(%struct.mbedtls_pk_context* %0, i8* %1, i64 %2, i8* %3, i64* %4, i64 %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !16942 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_pk_context*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %10, metadata !16945, metadata !DIExpression()), !dbg !16946
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !16947, metadata !DIExpression()), !dbg !16948
  store i64 %2, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !16949, metadata !DIExpression()), !dbg !16950
  store i8* %3, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !16951, metadata !DIExpression()), !dbg !16952
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !16953, metadata !DIExpression()), !dbg !16954
  store i64 %5, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !16955, metadata !DIExpression()), !dbg !16956
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !16957, metadata !DIExpression()), !dbg !16958
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !16959, metadata !DIExpression()), !dbg !16960
  %18 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16961
  %19 = icmp eq %struct.mbedtls_pk_context* %18, null, !dbg !16963
  br i1 %19, label %25, label %20, !dbg !16964

20:                                               ; preds = %8
  %21 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16965
  %22 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %21, i32 0, i32 0, !dbg !16966
  %23 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %22, align 8, !dbg !16966
  %24 = icmp eq %struct.mbedtls_pk_info_t* %23, null, !dbg !16967
  br i1 %24, label %25, label %26, !dbg !16968

25:                                               ; preds = %20, %8
  store i32 -16000, i32* %9, align 4, !dbg !16969
  br label %51, !dbg !16969

26:                                               ; preds = %20
  %27 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16970
  %28 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %27, i32 0, i32 0, !dbg !16972
  %29 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %28, align 8, !dbg !16972
  %30 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %29, i32 0, i32 6, !dbg !16973
  %31 = load i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)** %30, align 8, !dbg !16973
  %32 = icmp eq i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* %31, null, !dbg !16974
  br i1 %32, label %33, label %34, !dbg !16975

33:                                               ; preds = %26
  store i32 -16128, i32* %9, align 4, !dbg !16976
  br label %51, !dbg !16976

34:                                               ; preds = %26
  %35 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16977
  %36 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %35, i32 0, i32 0, !dbg !16978
  %37 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %36, align 8, !dbg !16978
  %38 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %37, i32 0, i32 6, !dbg !16979
  %39 = load i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)** %38, align 8, !dbg !16979
  %40 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !16980
  %41 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %40, i32 0, i32 1, !dbg !16981
  %42 = load i8*, i8** %41, align 8, !dbg !16981
  %43 = load i8*, i8** %11, align 8, !dbg !16982
  %44 = load i64, i64* %12, align 8, !dbg !16983
  %45 = load i8*, i8** %13, align 8, !dbg !16984
  %46 = load i64*, i64** %14, align 8, !dbg !16985
  %47 = load i64, i64* %15, align 8, !dbg !16986
  %48 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !16987
  %49 = load i8*, i8** %17, align 8, !dbg !16988
  %50 = call i32 %39(i8* %42, i8* %43, i64 %44, i8* %45, i64* %46, i64 %47, i32 (i8*, i8*, i64)* %48, i8* %49), !dbg !16977
  store i32 %50, i32* %9, align 4, !dbg !16989
  br label %51, !dbg !16989

51:                                               ; preds = %34, %33, %25
  %52 = load i32, i32* %9, align 4, !dbg !16990
  ret i32 %52, !dbg !16990
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_encrypt(%struct.mbedtls_pk_context* %0, i8* %1, i64 %2, i8* %3, i64* %4, i64 %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !16991 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_pk_context*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %10, metadata !16992, metadata !DIExpression()), !dbg !16993
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !16994, metadata !DIExpression()), !dbg !16995
  store i64 %2, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !16996, metadata !DIExpression()), !dbg !16997
  store i8* %3, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !16998, metadata !DIExpression()), !dbg !16999
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !17000, metadata !DIExpression()), !dbg !17001
  store i64 %5, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !17002, metadata !DIExpression()), !dbg !17003
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !17004, metadata !DIExpression()), !dbg !17005
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !17006, metadata !DIExpression()), !dbg !17007
  %18 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !17008
  %19 = icmp eq %struct.mbedtls_pk_context* %18, null, !dbg !17010
  br i1 %19, label %25, label %20, !dbg !17011

20:                                               ; preds = %8
  %21 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !17012
  %22 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %21, i32 0, i32 0, !dbg !17013
  %23 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %22, align 8, !dbg !17013
  %24 = icmp eq %struct.mbedtls_pk_info_t* %23, null, !dbg !17014
  br i1 %24, label %25, label %26, !dbg !17015

25:                                               ; preds = %20, %8
  store i32 -16000, i32* %9, align 4, !dbg !17016
  br label %51, !dbg !17016

26:                                               ; preds = %20
  %27 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !17017
  %28 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %27, i32 0, i32 0, !dbg !17019
  %29 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %28, align 8, !dbg !17019
  %30 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %29, i32 0, i32 7, !dbg !17020
  %31 = load i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)** %30, align 8, !dbg !17020
  %32 = icmp eq i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)* %31, null, !dbg !17021
  br i1 %32, label %33, label %34, !dbg !17022

33:                                               ; preds = %26
  store i32 -16128, i32* %9, align 4, !dbg !17023
  br label %51, !dbg !17023

34:                                               ; preds = %26
  %35 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !17024
  %36 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %35, i32 0, i32 0, !dbg !17025
  %37 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %36, align 8, !dbg !17025
  %38 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %37, i32 0, i32 7, !dbg !17026
  %39 = load i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)*, i32 (i8*, i8*, i64, i8*, i64*, i64, i32 (i8*, i8*, i64)*, i8*)** %38, align 8, !dbg !17026
  %40 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %10, align 8, !dbg !17027
  %41 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %40, i32 0, i32 1, !dbg !17028
  %42 = load i8*, i8** %41, align 8, !dbg !17028
  %43 = load i8*, i8** %11, align 8, !dbg !17029
  %44 = load i64, i64* %12, align 8, !dbg !17030
  %45 = load i8*, i8** %13, align 8, !dbg !17031
  %46 = load i64*, i64** %14, align 8, !dbg !17032
  %47 = load i64, i64* %15, align 8, !dbg !17033
  %48 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !17034
  %49 = load i8*, i8** %17, align 8, !dbg !17035
  %50 = call i32 %39(i8* %42, i8* %43, i64 %44, i8* %45, i64* %46, i64 %47, i32 (i8*, i8*, i64)* %48, i8* %49), !dbg !17024
  store i32 %50, i32* %9, align 4, !dbg !17036
  br label %51, !dbg !17036

51:                                               ; preds = %34, %33, %25
  %52 = load i32, i32* %9, align 4, !dbg !17037
  ret i32 %52, !dbg !17037
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_check_pair(%struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context* %1) #0 !dbg !17038 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_pk_context*, align 8
  %5 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %4, metadata !17041, metadata !DIExpression()), !dbg !17042
  store %struct.mbedtls_pk_context* %1, %struct.mbedtls_pk_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %5, metadata !17043, metadata !DIExpression()), !dbg !17044
  %6 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17045
  %7 = icmp eq %struct.mbedtls_pk_context* %6, null, !dbg !17047
  br i1 %7, label %28, label %8, !dbg !17048

8:                                                ; preds = %2
  %9 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17049
  %10 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %9, i32 0, i32 0, !dbg !17050
  %11 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %10, align 8, !dbg !17050
  %12 = icmp eq %struct.mbedtls_pk_info_t* %11, null, !dbg !17051
  br i1 %12, label %28, label %13, !dbg !17052

13:                                               ; preds = %8
  %14 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17053
  %15 = icmp eq %struct.mbedtls_pk_context* %14, null, !dbg !17054
  br i1 %15, label %28, label %16, !dbg !17055

16:                                               ; preds = %13
  %17 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17056
  %18 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %17, i32 0, i32 0, !dbg !17057
  %19 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %18, align 8, !dbg !17057
  %20 = icmp eq %struct.mbedtls_pk_info_t* %19, null, !dbg !17058
  br i1 %20, label %28, label %21, !dbg !17059

21:                                               ; preds = %16
  %22 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17060
  %23 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %22, i32 0, i32 0, !dbg !17061
  %24 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %23, align 8, !dbg !17061
  %25 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %24, i32 0, i32 8, !dbg !17062
  %26 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %25, align 8, !dbg !17062
  %27 = icmp eq i32 (i8*, i8*)* %26, null, !dbg !17063
  br i1 %27, label %28, label %29, !dbg !17064

28:                                               ; preds = %21, %16, %13, %8, %2
  store i32 -16000, i32* %3, align 4, !dbg !17065
  br label %68, !dbg !17065

29:                                               ; preds = %21
  %30 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17067
  %31 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %30, i32 0, i32 0, !dbg !17069
  %32 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %31, align 8, !dbg !17069
  %33 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %32, i32 0, i32 0, !dbg !17070
  %34 = load i32, i32* %33, align 8, !dbg !17070
  %35 = icmp eq i32 %34, 5, !dbg !17071
  br i1 %35, label %36, label %45, !dbg !17072

36:                                               ; preds = %29
  %37 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17073
  %38 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %37, i32 0, i32 0, !dbg !17076
  %39 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %38, align 8, !dbg !17076
  %40 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %39, i32 0, i32 0, !dbg !17077
  %41 = load i32, i32* %40, align 8, !dbg !17077
  %42 = icmp ne i32 %41, 1, !dbg !17078
  br i1 %42, label %43, label %44, !dbg !17079

43:                                               ; preds = %36
  store i32 -16128, i32* %3, align 4, !dbg !17080
  br label %68, !dbg !17080

44:                                               ; preds = %36
  br label %55, !dbg !17081

45:                                               ; preds = %29
  %46 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17082
  %47 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %46, i32 0, i32 0, !dbg !17085
  %48 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %47, align 8, !dbg !17085
  %49 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17086
  %50 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %49, i32 0, i32 0, !dbg !17087
  %51 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %50, align 8, !dbg !17087
  %52 = icmp ne %struct.mbedtls_pk_info_t* %48, %51, !dbg !17088
  br i1 %52, label %53, label %54, !dbg !17089

53:                                               ; preds = %45
  store i32 -16128, i32* %3, align 4, !dbg !17090
  br label %68, !dbg !17090

54:                                               ; preds = %45
  br label %55

55:                                               ; preds = %54, %44
  %56 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17091
  %57 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %56, i32 0, i32 0, !dbg !17092
  %58 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %57, align 8, !dbg !17092
  %59 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %58, i32 0, i32 8, !dbg !17093
  %60 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %59, align 8, !dbg !17093
  %61 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17094
  %62 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %61, i32 0, i32 1, !dbg !17095
  %63 = load i8*, i8** %62, align 8, !dbg !17095
  %64 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !17096
  %65 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %64, i32 0, i32 1, !dbg !17097
  %66 = load i8*, i8** %65, align 8, !dbg !17097
  %67 = call i32 %60(i8* %63, i8* %66), !dbg !17091
  store i32 %67, i32* %3, align 4, !dbg !17098
  br label %68, !dbg !17098

68:                                               ; preds = %55, %53, %43, %28
  %69 = load i32, i32* %3, align 4, !dbg !17099
  ret i32 %69, !dbg !17099
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_debug(%struct.mbedtls_pk_context* %0, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %1) #0 !dbg !17100 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_pk_context*, align 8
  %5 = alloca %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %4, metadata !17103, metadata !DIExpression()), !dbg !17104
  store %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %1, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %5, metadata !17105, metadata !DIExpression()), !dbg !17106
  %6 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17107
  %7 = icmp eq %struct.mbedtls_pk_context* %6, null, !dbg !17109
  br i1 %7, label %13, label %8, !dbg !17110

8:                                                ; preds = %2
  %9 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17111
  %10 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %9, i32 0, i32 0, !dbg !17112
  %11 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %10, align 8, !dbg !17112
  %12 = icmp eq %struct.mbedtls_pk_info_t* %11, null, !dbg !17113
  br i1 %12, label %13, label %14, !dbg !17114

13:                                               ; preds = %8, %2
  store i32 -16000, i32* %3, align 4, !dbg !17115
  br label %32, !dbg !17115

14:                                               ; preds = %8
  %15 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17116
  %16 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %15, i32 0, i32 0, !dbg !17118
  %17 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %16, align 8, !dbg !17118
  %18 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %17, i32 0, i32 11, !dbg !17119
  %19 = load void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)*, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)** %18, align 8, !dbg !17119
  %20 = icmp eq void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)* %19, null, !dbg !17120
  br i1 %20, label %21, label %22, !dbg !17121

21:                                               ; preds = %14
  store i32 -16128, i32* %3, align 4, !dbg !17122
  br label %32, !dbg !17122

22:                                               ; preds = %14
  %23 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17123
  %24 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %23, i32 0, i32 0, !dbg !17124
  %25 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %24, align 8, !dbg !17124
  %26 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %25, i32 0, i32 11, !dbg !17125
  %27 = load void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)*, void (i8*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*)** %26, align 8, !dbg !17125
  %28 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %4, align 8, !dbg !17126
  %29 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %28, i32 0, i32 1, !dbg !17127
  %30 = load i8*, i8** %29, align 8, !dbg !17127
  %31 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %5, align 8, !dbg !17128
  call void %27(i8* %30, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %31), !dbg !17123
  store i32 0, i32* %3, align 4, !dbg !17129
  br label %32, !dbg !17129

32:                                               ; preds = %22, %21, %13
  %33 = load i32, i32* %3, align 4, !dbg !17130
  ret i32 %33, !dbg !17130
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i8* @mbedtls_pk_get_name(%struct.mbedtls_pk_context* %0) #0 !dbg !17131 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %3, metadata !17134, metadata !DIExpression()), !dbg !17135
  %4 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !17136
  %5 = icmp eq %struct.mbedtls_pk_context* %4, null, !dbg !17138
  br i1 %5, label %11, label %6, !dbg !17139

6:                                                ; preds = %1
  %7 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !17140
  %8 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %7, i32 0, i32 0, !dbg !17141
  %9 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %8, align 8, !dbg !17141
  %10 = icmp eq %struct.mbedtls_pk_info_t* %9, null, !dbg !17142
  br i1 %10, label %11, label %12, !dbg !17143

11:                                               ; preds = %6, %1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.381, i64 0, i64 0), i8** %2, align 8, !dbg !17144
  br label %18, !dbg !17144

12:                                               ; preds = %6
  %13 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !17145
  %14 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %13, i32 0, i32 0, !dbg !17146
  %15 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %14, align 8, !dbg !17146
  %16 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %15, i32 0, i32 1, !dbg !17147
  %17 = load i8*, i8** %16, align 8, !dbg !17147
  store i8* %17, i8** %2, align 8, !dbg !17148
  br label %18, !dbg !17148

18:                                               ; preds = %12, %11
  %19 = load i8*, i8** %2, align 8, !dbg !17149
  ret i8* %19, !dbg !17149
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_get_type(%struct.mbedtls_pk_context* %0) #0 !dbg !17150 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_pk_context*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %3, metadata !17153, metadata !DIExpression()), !dbg !17154
  %4 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !17155
  %5 = icmp eq %struct.mbedtls_pk_context* %4, null, !dbg !17157
  br i1 %5, label %11, label %6, !dbg !17158

6:                                                ; preds = %1
  %7 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !17159
  %8 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %7, i32 0, i32 0, !dbg !17160
  %9 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %8, align 8, !dbg !17160
  %10 = icmp eq %struct.mbedtls_pk_info_t* %9, null, !dbg !17161
  br i1 %10, label %11, label %12, !dbg !17162

11:                                               ; preds = %6, %1
  store i32 0, i32* %2, align 4, !dbg !17163
  br label %18, !dbg !17163

12:                                               ; preds = %6
  %13 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %3, align 8, !dbg !17164
  %14 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %13, i32 0, i32 0, !dbg !17165
  %15 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %14, align 8, !dbg !17165
  %16 = getelementptr inbounds %struct.mbedtls_pk_info_t, %struct.mbedtls_pk_info_t* %15, i32 0, i32 0, !dbg !17166
  %17 = load i32, i32* %16, align 8, !dbg !17166
  store i32 %17, i32* %2, align 4, !dbg !17167
  br label %18, !dbg !17167

18:                                               ; preds = %12, %11
  %19 = load i32, i32* %2, align 4, !dbg !17168
  ret i32 %19, !dbg !17168
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @rsa_get_bitlen(i8* %0) #0 !dbg !17169 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17170, metadata !DIExpression()), !dbg !17171
  %3 = load i8*, i8** %2, align 8, !dbg !17172
  %4 = bitcast i8* %3 to %struct.mbedtls_rsa_context*, !dbg !17173
  %5 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %4, i32 0, i32 1, !dbg !17174
  %6 = load i64, i64* %5, align 8, !dbg !17174
  %7 = mul i64 8, %6, !dbg !17175
  ret i64 %7, !dbg !17176
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_can_do(i32 %0) #0 !dbg !17177 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17178, metadata !DIExpression()), !dbg !17179
  %3 = load i32, i32* %2, align 4, !dbg !17180
  %4 = icmp eq i32 %3, 1, !dbg !17181
  br i1 %4, label %8, label %5, !dbg !17182

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !17183
  %7 = icmp eq i32 %6, 6, !dbg !17184
  br label %8, !dbg !17182

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  %10 = zext i1 %9 to i32, !dbg !17182
  ret i32 %10, !dbg !17185
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_verify_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64 %5) #0 !dbg !17186 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !17187, metadata !DIExpression()), !dbg !17188
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !17189, metadata !DIExpression()), !dbg !17190
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17191, metadata !DIExpression()), !dbg !17192
  store i64 %3, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !17193, metadata !DIExpression()), !dbg !17194
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !17195, metadata !DIExpression()), !dbg !17196
  store i64 %5, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !17197, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.declare(metadata i32* %14, metadata !17199, metadata !DIExpression()), !dbg !17200
  %15 = load i32, i32* %9, align 4, !dbg !17201
  %16 = icmp eq i32 %15, 0, !dbg !17203
  br i1 %16, label %17, label %21, !dbg !17204

17:                                               ; preds = %6
  %18 = load i64, i64* %11, align 8, !dbg !17205
  %19 = icmp ult i64 4294967295, %18, !dbg !17206
  br i1 %19, label %20, label %21, !dbg !17207

20:                                               ; preds = %17
  store i32 -16000, i32* %7, align 4, !dbg !17208
  br label %50, !dbg !17208

21:                                               ; preds = %17, %6
  %22 = load i64, i64* %13, align 8, !dbg !17209
  %23 = load i8*, i8** %8, align 8, !dbg !17211
  %24 = bitcast i8* %23 to %struct.mbedtls_rsa_context*, !dbg !17212
  %25 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %24, i32 0, i32 1, !dbg !17213
  %26 = load i64, i64* %25, align 8, !dbg !17213
  %27 = icmp ult i64 %22, %26, !dbg !17214
  br i1 %27, label %28, label %29, !dbg !17215

28:                                               ; preds = %21
  store i32 -17280, i32* %7, align 4, !dbg !17216
  br label %50, !dbg !17216

29:                                               ; preds = %21
  %30 = load i8*, i8** %8, align 8, !dbg !17217
  %31 = bitcast i8* %30 to %struct.mbedtls_rsa_context*, !dbg !17219
  %32 = load i32, i32* %9, align 4, !dbg !17220
  %33 = load i64, i64* %11, align 8, !dbg !17221
  %34 = trunc i64 %33 to i32, !dbg !17222
  %35 = load i8*, i8** %10, align 8, !dbg !17223
  %36 = load i8*, i8** %12, align 8, !dbg !17224
  %37 = call i32 @mbedtls_rsa_pkcs1_verify(%struct.mbedtls_rsa_context* %31, i32 (i8*, i8*, i64)* null, i8* null, i32 0, i32 %32, i32 %34, i8* %35, i8* %36), !dbg !17225
  store i32 %37, i32* %14, align 4, !dbg !17226
  %38 = icmp ne i32 %37, 0, !dbg !17227
  br i1 %38, label %39, label %41, !dbg !17228

39:                                               ; preds = %29
  %40 = load i32, i32* %14, align 4, !dbg !17229
  store i32 %40, i32* %7, align 4, !dbg !17230
  br label %50, !dbg !17230

41:                                               ; preds = %29
  %42 = load i64, i64* %13, align 8, !dbg !17231
  %43 = load i8*, i8** %8, align 8, !dbg !17233
  %44 = bitcast i8* %43 to %struct.mbedtls_rsa_context*, !dbg !17234
  %45 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %44, i32 0, i32 1, !dbg !17235
  %46 = load i64, i64* %45, align 8, !dbg !17235
  %47 = icmp ugt i64 %42, %46, !dbg !17236
  br i1 %47, label %48, label %49, !dbg !17237

48:                                               ; preds = %41
  store i32 -14592, i32* %7, align 4, !dbg !17238
  br label %50, !dbg !17238

49:                                               ; preds = %41
  store i32 0, i32* %7, align 4, !dbg !17239
  br label %50, !dbg !17239

50:                                               ; preds = %49, %48, %39, %28, %20
  %51 = load i32, i32* %7, align 4, !dbg !17240
  ret i32 %51, !dbg !17240
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_sign_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64* %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17241 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17242, metadata !DIExpression()), !dbg !17243
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !17244, metadata !DIExpression()), !dbg !17245
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !17246, metadata !DIExpression()), !dbg !17247
  store i64 %3, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !17248, metadata !DIExpression()), !dbg !17249
  store i8* %4, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !17250, metadata !DIExpression()), !dbg !17251
  store i64* %5, i64** %15, align 8
  call void @llvm.dbg.declare(metadata i64** %15, metadata !17252, metadata !DIExpression()), !dbg !17253
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !17254, metadata !DIExpression()), !dbg !17255
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !17256, metadata !DIExpression()), !dbg !17257
  %18 = load i32, i32* %11, align 4, !dbg !17258
  %19 = icmp eq i32 %18, 0, !dbg !17260
  br i1 %19, label %20, label %24, !dbg !17261

20:                                               ; preds = %8
  %21 = load i64, i64* %13, align 8, !dbg !17262
  %22 = icmp ult i64 4294967295, %21, !dbg !17263
  br i1 %22, label %23, label %24, !dbg !17264

23:                                               ; preds = %20
  store i32 -16000, i32* %9, align 4, !dbg !17265
  br label %40, !dbg !17265

24:                                               ; preds = %20, %8
  %25 = load i8*, i8** %10, align 8, !dbg !17266
  %26 = bitcast i8* %25 to %struct.mbedtls_rsa_context*, !dbg !17267
  %27 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %26, i32 0, i32 1, !dbg !17268
  %28 = load i64, i64* %27, align 8, !dbg !17268
  %29 = load i64*, i64** %15, align 8, !dbg !17269
  store i64 %28, i64* %29, align 8, !dbg !17270
  %30 = load i8*, i8** %10, align 8, !dbg !17271
  %31 = bitcast i8* %30 to %struct.mbedtls_rsa_context*, !dbg !17272
  %32 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !17273
  %33 = load i8*, i8** %17, align 8, !dbg !17274
  %34 = load i32, i32* %11, align 4, !dbg !17275
  %35 = load i64, i64* %13, align 8, !dbg !17276
  %36 = trunc i64 %35 to i32, !dbg !17277
  %37 = load i8*, i8** %12, align 8, !dbg !17278
  %38 = load i8*, i8** %14, align 8, !dbg !17279
  %39 = call i32 @mbedtls_rsa_pkcs1_sign(%struct.mbedtls_rsa_context* %31, i32 (i8*, i8*, i64)* %32, i8* %33, i32 1, i32 %34, i32 %36, i8* %37, i8* %38), !dbg !17280
  store i32 %39, i32* %9, align 4, !dbg !17281
  br label %40, !dbg !17281

40:                                               ; preds = %24, %23
  %41 = load i32, i32* %9, align 4, !dbg !17282
  ret i32 %41, !dbg !17282
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_decrypt_wrap(i8* %0, i8* %1, i64 %2, i8* %3, i64* %4, i64 %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17283 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17284, metadata !DIExpression()), !dbg !17285
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17286, metadata !DIExpression()), !dbg !17287
  store i64 %2, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !17288, metadata !DIExpression()), !dbg !17289
  store i8* %3, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !17290, metadata !DIExpression()), !dbg !17291
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !17292, metadata !DIExpression()), !dbg !17293
  store i64 %5, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !17294, metadata !DIExpression()), !dbg !17295
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !17296, metadata !DIExpression()), !dbg !17297
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !17298, metadata !DIExpression()), !dbg !17299
  %18 = load i64, i64* %12, align 8, !dbg !17300
  %19 = load i8*, i8** %10, align 8, !dbg !17302
  %20 = bitcast i8* %19 to %struct.mbedtls_rsa_context*, !dbg !17303
  %21 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %20, i32 0, i32 1, !dbg !17304
  %22 = load i64, i64* %21, align 8, !dbg !17304
  %23 = icmp ne i64 %18, %22, !dbg !17305
  br i1 %23, label %24, label %25, !dbg !17306

24:                                               ; preds = %8
  store i32 -16512, i32* %9, align 4, !dbg !17307
  br label %35, !dbg !17307

25:                                               ; preds = %8
  %26 = load i8*, i8** %10, align 8, !dbg !17308
  %27 = bitcast i8* %26 to %struct.mbedtls_rsa_context*, !dbg !17309
  %28 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !17310
  %29 = load i8*, i8** %17, align 8, !dbg !17311
  %30 = load i64*, i64** %14, align 8, !dbg !17312
  %31 = load i8*, i8** %11, align 8, !dbg !17313
  %32 = load i8*, i8** %13, align 8, !dbg !17314
  %33 = load i64, i64* %15, align 8, !dbg !17315
  %34 = call i32 @mbedtls_rsa_pkcs1_decrypt(%struct.mbedtls_rsa_context* %27, i32 (i8*, i8*, i64)* %28, i8* %29, i32 1, i64* %30, i8* %31, i8* %32, i64 %33), !dbg !17316
  store i32 %34, i32* %9, align 4, !dbg !17317
  br label %35, !dbg !17317

35:                                               ; preds = %25, %24
  %36 = load i32, i32* %9, align 4, !dbg !17318
  ret i32 %36, !dbg !17318
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_encrypt_wrap(i8* %0, i8* %1, i64 %2, i8* %3, i64* %4, i64 %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17319 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17320, metadata !DIExpression()), !dbg !17321
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17322, metadata !DIExpression()), !dbg !17323
  store i64 %2, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !17324, metadata !DIExpression()), !dbg !17325
  store i8* %3, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !17326, metadata !DIExpression()), !dbg !17327
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !17328, metadata !DIExpression()), !dbg !17329
  store i64 %5, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !17330, metadata !DIExpression()), !dbg !17331
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !17332, metadata !DIExpression()), !dbg !17333
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !17334, metadata !DIExpression()), !dbg !17335
  %18 = load i8*, i8** %10, align 8, !dbg !17336
  %19 = bitcast i8* %18 to %struct.mbedtls_rsa_context*, !dbg !17337
  %20 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %19, i32 0, i32 1, !dbg !17338
  %21 = load i64, i64* %20, align 8, !dbg !17338
  %22 = load i64*, i64** %14, align 8, !dbg !17339
  store i64 %21, i64* %22, align 8, !dbg !17340
  %23 = load i64*, i64** %14, align 8, !dbg !17341
  %24 = load i64, i64* %23, align 8, !dbg !17343
  %25 = load i64, i64* %15, align 8, !dbg !17344
  %26 = icmp ugt i64 %24, %25, !dbg !17345
  br i1 %26, label %27, label %28, !dbg !17346

27:                                               ; preds = %8
  store i32 -17408, i32* %9, align 4, !dbg !17347
  br label %37, !dbg !17347

28:                                               ; preds = %8
  %29 = load i8*, i8** %10, align 8, !dbg !17348
  %30 = bitcast i8* %29 to %struct.mbedtls_rsa_context*, !dbg !17349
  %31 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !17350
  %32 = load i8*, i8** %17, align 8, !dbg !17351
  %33 = load i64, i64* %12, align 8, !dbg !17352
  %34 = load i8*, i8** %11, align 8, !dbg !17353
  %35 = load i8*, i8** %13, align 8, !dbg !17354
  %36 = call i32 @mbedtls_rsa_pkcs1_encrypt(%struct.mbedtls_rsa_context* %30, i32 (i8*, i8*, i64)* %31, i8* %32, i32 0, i64 %33, i8* %34, i8* %35), !dbg !17355
  store i32 %36, i32* %9, align 4, !dbg !17356
  br label %37, !dbg !17356

37:                                               ; preds = %28, %27
  %38 = load i32, i32* %9, align 4, !dbg !17357
  ret i32 %38, !dbg !17357
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_check_pair_wrap(i8* %0, i8* %1) #0 !dbg !17358 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !17359, metadata !DIExpression()), !dbg !17360
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !17361, metadata !DIExpression()), !dbg !17362
  %5 = load i8*, i8** %3, align 8, !dbg !17363
  %6 = bitcast i8* %5 to %struct.mbedtls_rsa_context*, !dbg !17364
  %7 = load i8*, i8** %4, align 8, !dbg !17365
  %8 = bitcast i8* %7 to %struct.mbedtls_rsa_context*, !dbg !17366
  %9 = call i32 @mbedtls_rsa_check_pub_priv(%struct.mbedtls_rsa_context* %6, %struct.mbedtls_rsa_context* %8), !dbg !17367
  ret i32 %9, !dbg !17368
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @rsa_alloc_wrap() #0 !dbg !17369 {
  %1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !17370, metadata !DIExpression()), !dbg !17371
  %2 = call align 16 i8* @calloc(i64 1, i64 336), !dbg !17372
  store i8* %2, i8** %1, align 8, !dbg !17371
  %3 = load i8*, i8** %1, align 8, !dbg !17373
  %4 = icmp ne i8* %3, null, !dbg !17375
  br i1 %4, label %5, label %8, !dbg !17376

5:                                                ; preds = %0
  %6 = load i8*, i8** %1, align 8, !dbg !17377
  %7 = bitcast i8* %6 to %struct.mbedtls_rsa_context*, !dbg !17378
  call void @mbedtls_rsa_init(%struct.mbedtls_rsa_context* %7, i32 0, i32 0), !dbg !17379
  br label %8, !dbg !17379

8:                                                ; preds = %5, %0
  %9 = load i8*, i8** %1, align 8, !dbg !17380
  ret i8* %9, !dbg !17381
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @rsa_free_wrap(i8* %0) #0 !dbg !17382 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17383, metadata !DIExpression()), !dbg !17384
  %3 = load i8*, i8** %2, align 8, !dbg !17385
  %4 = bitcast i8* %3 to %struct.mbedtls_rsa_context*, !dbg !17386
  call void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %4), !dbg !17387
  %5 = load i8*, i8** %2, align 8, !dbg !17388
  call void @free(i8* %5), !dbg !17389
  ret void, !dbg !17390
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @rsa_debug(i8* %0, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %1) #0 !dbg !17391 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !17392, metadata !DIExpression()), !dbg !17393
  store %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %1, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, metadata !17394, metadata !DIExpression()), !dbg !17395
  %5 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17396
  %6 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %5, i32 0, i32 0, !dbg !17397
  store i32 1, i32* %6, align 8, !dbg !17398
  %7 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17399
  %8 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %7, i32 0, i32 1, !dbg !17400
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.385, i64 0, i64 0), i8** %8, align 8, !dbg !17401
  %9 = load i8*, i8** %3, align 8, !dbg !17402
  %10 = bitcast i8* %9 to %struct.mbedtls_rsa_context*, !dbg !17403
  %11 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %10, i32 0, i32 2, !dbg !17404
  %12 = bitcast %struct.mbedtls_mpi* %11 to i8*, !dbg !17405
  %13 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17406
  %14 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %13, i32 0, i32 2, !dbg !17407
  store i8* %12, i8** %14, align 8, !dbg !17408
  %15 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17409
  %16 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %15, i32 1, !dbg !17409
  store %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %16, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17409
  %17 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17410
  %18 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %17, i32 0, i32 0, !dbg !17411
  store i32 1, i32* %18, align 8, !dbg !17412
  %19 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17413
  %20 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %19, i32 0, i32 1, !dbg !17414
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.386, i64 0, i64 0), i8** %20, align 8, !dbg !17415
  %21 = load i8*, i8** %3, align 8, !dbg !17416
  %22 = bitcast i8* %21 to %struct.mbedtls_rsa_context*, !dbg !17417
  %23 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %22, i32 0, i32 3, !dbg !17418
  %24 = bitcast %struct.mbedtls_mpi* %23 to i8*, !dbg !17419
  %25 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17420
  %26 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %25, i32 0, i32 2, !dbg !17421
  store i8* %24, i8** %26, align 8, !dbg !17422
  ret void, !dbg !17423
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @eckey_get_bitlen(i8* %0) #0 !dbg !17424 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17425, metadata !DIExpression()), !dbg !17426
  %3 = load i8*, i8** %2, align 8, !dbg !17427
  %4 = bitcast i8* %3 to %struct.mbedtls_ecp_keypair*, !dbg !17428
  %5 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %4, i32 0, i32 0, !dbg !17429
  %6 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %5, i32 0, i32 6, !dbg !17430
  %7 = load i64, i64* %6, align 8, !dbg !17430
  ret i64 %7, !dbg !17431
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @eckey_can_do(i32 %0) #0 !dbg !17432 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17433, metadata !DIExpression()), !dbg !17434
  %3 = load i32, i32* %2, align 4, !dbg !17435
  %4 = icmp eq i32 %3, 2, !dbg !17436
  br i1 %4, label %11, label %5, !dbg !17437

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !17438
  %7 = icmp eq i32 %6, 3, !dbg !17439
  br i1 %7, label %11, label %8, !dbg !17440

8:                                                ; preds = %5
  %9 = load i32, i32* %2, align 4, !dbg !17441
  %10 = icmp eq i32 %9, 4, !dbg !17442
  br label %11, !dbg !17440

11:                                               ; preds = %8, %5, %1
  %12 = phi i1 [ true, %5 ], [ true, %1 ], [ %10, %8 ]
  %13 = zext i1 %12 to i32, !dbg !17440
  ret i32 %13, !dbg !17443
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @eckey_verify_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64 %5) #0 !dbg !17444 {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.mbedtls_ecp_keypair, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !17445, metadata !DIExpression()), !dbg !17446
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17447, metadata !DIExpression()), !dbg !17448
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !17449, metadata !DIExpression()), !dbg !17450
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !17451, metadata !DIExpression()), !dbg !17452
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17453, metadata !DIExpression()), !dbg !17454
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !17455, metadata !DIExpression()), !dbg !17456
  call void @llvm.dbg.declare(metadata i32* %13, metadata !17457, metadata !DIExpression()), !dbg !17458
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_keypair* %14, metadata !17459, metadata !DIExpression()), !dbg !17460
  call void @mbedtls_ecdsa_init(%struct.mbedtls_ecp_keypair* %14), !dbg !17461
  %15 = load i8*, i8** %7, align 8, !dbg !17462
  %16 = bitcast i8* %15 to %struct.mbedtls_ecp_keypair*, !dbg !17462
  %17 = call i32 @mbedtls_ecdsa_from_keypair(%struct.mbedtls_ecp_keypair* %14, %struct.mbedtls_ecp_keypair* %16), !dbg !17464
  store i32 %17, i32* %13, align 4, !dbg !17465
  %18 = icmp eq i32 %17, 0, !dbg !17466
  br i1 %18, label %19, label %27, !dbg !17467

19:                                               ; preds = %6
  %20 = bitcast %struct.mbedtls_ecp_keypair* %14 to i8*, !dbg !17468
  %21 = load i32, i32* %8, align 4, !dbg !17469
  %22 = load i8*, i8** %9, align 8, !dbg !17470
  %23 = load i64, i64* %10, align 8, !dbg !17471
  %24 = load i8*, i8** %11, align 8, !dbg !17472
  %25 = load i64, i64* %12, align 8, !dbg !17473
  %26 = call i32 @ecdsa_verify_wrap(i8* %20, i32 %21, i8* %22, i64 %23, i8* %24, i64 %25), !dbg !17474
  store i32 %26, i32* %13, align 4, !dbg !17475
  br label %27, !dbg !17476

27:                                               ; preds = %19, %6
  call void @mbedtls_ecdsa_free(%struct.mbedtls_ecp_keypair* %14), !dbg !17477
  %28 = load i32, i32* %13, align 4, !dbg !17478
  ret i32 %28, !dbg !17479
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @eckey_sign_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64* %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17480 {
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i32 (i8*, i8*, i64)*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mbedtls_ecp_keypair, align 8
  store i8* %0, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !17481, metadata !DIExpression()), !dbg !17482
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !17483, metadata !DIExpression()), !dbg !17484
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17485, metadata !DIExpression()), !dbg !17486
  store i64 %3, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !17487, metadata !DIExpression()), !dbg !17488
  store i8* %4, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !17489, metadata !DIExpression()), !dbg !17490
  store i64* %5, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !17491, metadata !DIExpression()), !dbg !17492
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %15, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %15, metadata !17493, metadata !DIExpression()), !dbg !17494
  store i8* %7, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !17495, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.declare(metadata i32* %17, metadata !17497, metadata !DIExpression()), !dbg !17498
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_keypair* %18, metadata !17499, metadata !DIExpression()), !dbg !17500
  call void @mbedtls_ecdsa_init(%struct.mbedtls_ecp_keypair* %18), !dbg !17501
  %19 = load i8*, i8** %9, align 8, !dbg !17502
  %20 = bitcast i8* %19 to %struct.mbedtls_ecp_keypair*, !dbg !17502
  %21 = call i32 @mbedtls_ecdsa_from_keypair(%struct.mbedtls_ecp_keypair* %18, %struct.mbedtls_ecp_keypair* %20), !dbg !17504
  store i32 %21, i32* %17, align 4, !dbg !17505
  %22 = icmp eq i32 %21, 0, !dbg !17506
  br i1 %22, label %23, label %33, !dbg !17507

23:                                               ; preds = %8
  %24 = bitcast %struct.mbedtls_ecp_keypair* %18 to i8*, !dbg !17508
  %25 = load i32, i32* %10, align 4, !dbg !17509
  %26 = load i8*, i8** %11, align 8, !dbg !17510
  %27 = load i64, i64* %12, align 8, !dbg !17511
  %28 = load i8*, i8** %13, align 8, !dbg !17512
  %29 = load i64*, i64** %14, align 8, !dbg !17513
  %30 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %15, align 8, !dbg !17514
  %31 = load i8*, i8** %16, align 8, !dbg !17515
  %32 = call i32 @ecdsa_sign_wrap(i8* %24, i32 %25, i8* %26, i64 %27, i8* %28, i64* %29, i32 (i8*, i8*, i64)* %30, i8* %31), !dbg !17516
  store i32 %32, i32* %17, align 4, !dbg !17517
  br label %33, !dbg !17518

33:                                               ; preds = %23, %8
  call void @mbedtls_ecdsa_free(%struct.mbedtls_ecp_keypair* %18), !dbg !17519
  %34 = load i32, i32* %17, align 4, !dbg !17520
  ret i32 %34, !dbg !17521
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @eckey_check_pair(i8* %0, i8* %1) #0 !dbg !17522 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !17523, metadata !DIExpression()), !dbg !17524
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !17525, metadata !DIExpression()), !dbg !17526
  %5 = load i8*, i8** %3, align 8, !dbg !17527
  %6 = bitcast i8* %5 to %struct.mbedtls_ecp_keypair*, !dbg !17528
  %7 = load i8*, i8** %4, align 8, !dbg !17529
  %8 = bitcast i8* %7 to %struct.mbedtls_ecp_keypair*, !dbg !17530
  %9 = call i32 @mbedtls_ecp_check_pub_priv(%struct.mbedtls_ecp_keypair* %6, %struct.mbedtls_ecp_keypair* %8), !dbg !17531
  ret i32 %9, !dbg !17532
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @eckey_alloc_wrap() #0 !dbg !17533 {
  %1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !17534, metadata !DIExpression()), !dbg !17535
  %2 = call align 16 i8* @calloc(i64 1, i64 344), !dbg !17536
  store i8* %2, i8** %1, align 8, !dbg !17535
  %3 = load i8*, i8** %1, align 8, !dbg !17537
  %4 = icmp ne i8* %3, null, !dbg !17539
  br i1 %4, label %5, label %8, !dbg !17540

5:                                                ; preds = %0
  %6 = load i8*, i8** %1, align 8, !dbg !17541
  %7 = bitcast i8* %6 to %struct.mbedtls_ecp_keypair*, !dbg !17541
  call void @mbedtls_ecp_keypair_init(%struct.mbedtls_ecp_keypair* %7), !dbg !17542
  br label %8, !dbg !17542

8:                                                ; preds = %5, %0
  %9 = load i8*, i8** %1, align 8, !dbg !17543
  ret i8* %9, !dbg !17544
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @eckey_free_wrap(i8* %0) #0 !dbg !17545 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17546, metadata !DIExpression()), !dbg !17547
  %3 = load i8*, i8** %2, align 8, !dbg !17548
  %4 = bitcast i8* %3 to %struct.mbedtls_ecp_keypair*, !dbg !17549
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %4), !dbg !17550
  %5 = load i8*, i8** %2, align 8, !dbg !17551
  call void @free(i8* %5), !dbg !17552
  ret void, !dbg !17553
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @eckey_debug(i8* %0, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %1) #0 !dbg !17554 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !17555, metadata !DIExpression()), !dbg !17556
  store %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %1, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, metadata !17557, metadata !DIExpression()), !dbg !17558
  %5 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17559
  %6 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %5, i32 0, i32 0, !dbg !17560
  store i32 2, i32* %6, align 8, !dbg !17561
  %7 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17562
  %8 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %7, i32 0, i32 1, !dbg !17563
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.390, i64 0, i64 0), i8** %8, align 8, !dbg !17564
  %9 = load i8*, i8** %3, align 8, !dbg !17565
  %10 = bitcast i8* %9 to %struct.mbedtls_ecp_keypair*, !dbg !17566
  %11 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %10, i32 0, i32 2, !dbg !17567
  %12 = bitcast %struct.mbedtls_ecp_point* %11 to i8*, !dbg !17568
  %13 = load %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t*, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t** %4, align 8, !dbg !17569
  %14 = getelementptr inbounds %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t, %struct.ms_sgx_thread_setwait_untrusted_events_ocall_t* %13, i32 0, i32 2, !dbg !17570
  store i8* %12, i8** %14, align 8, !dbg !17571
  ret void, !dbg !17572
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ecdsa_sign_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64* %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17573 {
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i32 (i8*, i8*, i64)*, align 8
  %16 = alloca i8*, align 8
  store i8* %0, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !17574, metadata !DIExpression()), !dbg !17575
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !17576, metadata !DIExpression()), !dbg !17577
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17578, metadata !DIExpression()), !dbg !17579
  store i64 %3, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !17580, metadata !DIExpression()), !dbg !17581
  store i8* %4, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !17582, metadata !DIExpression()), !dbg !17583
  store i64* %5, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !17584, metadata !DIExpression()), !dbg !17585
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %15, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %15, metadata !17586, metadata !DIExpression()), !dbg !17587
  store i8* %7, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !17588, metadata !DIExpression()), !dbg !17589
  %17 = load i8*, i8** %9, align 8, !dbg !17590
  %18 = bitcast i8* %17 to %struct.mbedtls_ecp_keypair*, !dbg !17591
  %19 = load i32, i32* %10, align 4, !dbg !17592
  %20 = load i8*, i8** %11, align 8, !dbg !17593
  %21 = load i64, i64* %12, align 8, !dbg !17594
  %22 = load i8*, i8** %13, align 8, !dbg !17595
  %23 = load i64*, i64** %14, align 8, !dbg !17596
  %24 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %15, align 8, !dbg !17597
  %25 = load i8*, i8** %16, align 8, !dbg !17598
  %26 = call i32 @mbedtls_ecdsa_write_signature(%struct.mbedtls_ecp_keypair* %18, i32 %19, i8* %20, i64 %21, i8* %22, i64* %23, i32 (i8*, i8*, i64)* %24, i8* %25), !dbg !17599
  ret i32 %26, !dbg !17600
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ecdsa_verify_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64 %5) #0 !dbg !17601 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !17602, metadata !DIExpression()), !dbg !17603
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !17604, metadata !DIExpression()), !dbg !17605
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17606, metadata !DIExpression()), !dbg !17607
  store i64 %3, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !17608, metadata !DIExpression()), !dbg !17609
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !17610, metadata !DIExpression()), !dbg !17611
  store i64 %5, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !17612, metadata !DIExpression()), !dbg !17613
  call void @llvm.dbg.declare(metadata i32* %14, metadata !17614, metadata !DIExpression()), !dbg !17615
  %15 = load i32, i32* %9, align 4, !dbg !17616
  %16 = load i8*, i8** %8, align 8, !dbg !17617
  %17 = bitcast i8* %16 to %struct.mbedtls_ecp_keypair*, !dbg !17618
  %18 = load i8*, i8** %10, align 8, !dbg !17619
  %19 = load i64, i64* %11, align 8, !dbg !17620
  %20 = load i8*, i8** %12, align 8, !dbg !17621
  %21 = load i64, i64* %13, align 8, !dbg !17622
  %22 = call i32 @mbedtls_ecdsa_read_signature(%struct.mbedtls_ecp_keypair* %17, i8* %18, i64 %19, i8* %20, i64 %21), !dbg !17623
  store i32 %22, i32* %14, align 4, !dbg !17624
  %23 = load i32, i32* %14, align 4, !dbg !17625
  %24 = icmp eq i32 %23, -19456, !dbg !17627
  br i1 %24, label %25, label %26, !dbg !17628

25:                                               ; preds = %6
  store i32 -14592, i32* %7, align 4, !dbg !17629
  br label %28, !dbg !17629

26:                                               ; preds = %6
  %27 = load i32, i32* %14, align 4, !dbg !17630
  store i32 %27, i32* %7, align 4, !dbg !17631
  br label %28, !dbg !17631

28:                                               ; preds = %26, %25
  %29 = load i32, i32* %7, align 4, !dbg !17632
  ret i32 %29, !dbg !17632
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @eckeydh_can_do(i32 %0) #0 !dbg !17633 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17634, metadata !DIExpression()), !dbg !17635
  %3 = load i32, i32* %2, align 4, !dbg !17636
  %4 = icmp eq i32 %3, 2, !dbg !17637
  br i1 %4, label %8, label %5, !dbg !17638

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !17639
  %7 = icmp eq i32 %6, 3, !dbg !17640
  br label %8, !dbg !17638

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  %10 = zext i1 %9 to i32, !dbg !17638
  ret i32 %10, !dbg !17641
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ecdsa_can_do(i32 %0) #0 !dbg !17642 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17643, metadata !DIExpression()), !dbg !17644
  %3 = load i32, i32* %2, align 4, !dbg !17645
  %4 = icmp eq i32 %3, 4, !dbg !17646
  %5 = zext i1 %4 to i32, !dbg !17646
  ret i32 %5, !dbg !17647
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @ecdsa_alloc_wrap() #0 !dbg !17648 {
  %1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !17649, metadata !DIExpression()), !dbg !17650
  %2 = call align 16 i8* @calloc(i64 1, i64 344), !dbg !17651
  store i8* %2, i8** %1, align 8, !dbg !17650
  %3 = load i8*, i8** %1, align 8, !dbg !17652
  %4 = icmp ne i8* %3, null, !dbg !17654
  br i1 %4, label %5, label %8, !dbg !17655

5:                                                ; preds = %0
  %6 = load i8*, i8** %1, align 8, !dbg !17656
  %7 = bitcast i8* %6 to %struct.mbedtls_ecp_keypair*, !dbg !17657
  call void @mbedtls_ecdsa_init(%struct.mbedtls_ecp_keypair* %7), !dbg !17658
  br label %8, !dbg !17658

8:                                                ; preds = %5, %0
  %9 = load i8*, i8** %1, align 8, !dbg !17659
  ret i8* %9, !dbg !17660
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @ecdsa_free_wrap(i8* %0) #0 !dbg !17661 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17662, metadata !DIExpression()), !dbg !17663
  %3 = load i8*, i8** %2, align 8, !dbg !17664
  %4 = bitcast i8* %3 to %struct.mbedtls_ecp_keypair*, !dbg !17665
  call void @mbedtls_ecdsa_free(%struct.mbedtls_ecp_keypair* %4), !dbg !17666
  %5 = load i8*, i8** %2, align 8, !dbg !17667
  call void @free(i8* %5), !dbg !17668
  ret void, !dbg !17669
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @rsa_alt_get_bitlen(i8* %0) #0 !dbg !17670 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.mbedtls_rsa_alt_context*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17671, metadata !DIExpression()), !dbg !17672
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_alt_context** %3, metadata !17673, metadata !DIExpression()), !dbg !17674
  %4 = load i8*, i8** %2, align 8, !dbg !17675
  %5 = bitcast i8* %4 to %struct.mbedtls_rsa_alt_context*, !dbg !17676
  store %struct.mbedtls_rsa_alt_context* %5, %struct.mbedtls_rsa_alt_context** %3, align 8, !dbg !17674
  %6 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %3, align 8, !dbg !17677
  %7 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %6, i32 0, i32 3, !dbg !17678
  %8 = load i64 (i8*)*, i64 (i8*)** %7, align 8, !dbg !17678
  %9 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %3, align 8, !dbg !17679
  %10 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %9, i32 0, i32 0, !dbg !17680
  %11 = load i8*, i8** %10, align 8, !dbg !17680
  %12 = call i64 %8(i8* %11), !dbg !17677
  %13 = mul i64 8, %12, !dbg !17681
  ret i64 %13, !dbg !17682
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_alt_can_do(i32 %0) #0 !dbg !17683 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17684, metadata !DIExpression()), !dbg !17685
  %3 = load i32, i32* %2, align 4, !dbg !17686
  %4 = icmp eq i32 %3, 1, !dbg !17687
  %5 = zext i1 %4 to i32, !dbg !17687
  ret i32 %5, !dbg !17688
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_alt_sign_wrap(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64* %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17689 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.mbedtls_rsa_alt_context*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17690, metadata !DIExpression()), !dbg !17691
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !17692, metadata !DIExpression()), !dbg !17693
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !17694, metadata !DIExpression()), !dbg !17695
  store i64 %3, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !17696, metadata !DIExpression()), !dbg !17697
  store i8* %4, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !17698, metadata !DIExpression()), !dbg !17699
  store i64* %5, i64** %15, align 8
  call void @llvm.dbg.declare(metadata i64** %15, metadata !17700, metadata !DIExpression()), !dbg !17701
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !17702, metadata !DIExpression()), !dbg !17703
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !17704, metadata !DIExpression()), !dbg !17705
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_alt_context** %18, metadata !17706, metadata !DIExpression()), !dbg !17707
  %19 = load i8*, i8** %10, align 8, !dbg !17708
  %20 = bitcast i8* %19 to %struct.mbedtls_rsa_alt_context*, !dbg !17709
  store %struct.mbedtls_rsa_alt_context* %20, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17707
  %21 = load i64, i64* %13, align 8, !dbg !17710
  %22 = icmp ult i64 4294967295, %21, !dbg !17712
  br i1 %22, label %23, label %24, !dbg !17713

23:                                               ; preds = %8
  store i32 -16000, i32* %9, align 4, !dbg !17714
  br label %47, !dbg !17714

24:                                               ; preds = %8
  %25 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17715
  %26 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %25, i32 0, i32 3, !dbg !17716
  %27 = load i64 (i8*)*, i64 (i8*)** %26, align 8, !dbg !17716
  %28 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17717
  %29 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %28, i32 0, i32 0, !dbg !17718
  %30 = load i8*, i8** %29, align 8, !dbg !17718
  %31 = call i64 %27(i8* %30), !dbg !17715
  %32 = load i64*, i64** %15, align 8, !dbg !17719
  store i64 %31, i64* %32, align 8, !dbg !17720
  %33 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17721
  %34 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %33, i32 0, i32 2, !dbg !17722
  %35 = load i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i8*, i64)*, i8*, i32, i32, i32, i8*, i8*)** %34, align 8, !dbg !17722
  %36 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17723
  %37 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %36, i32 0, i32 0, !dbg !17724
  %38 = load i8*, i8** %37, align 8, !dbg !17724
  %39 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !17725
  %40 = load i8*, i8** %17, align 8, !dbg !17726
  %41 = load i32, i32* %11, align 4, !dbg !17727
  %42 = load i64, i64* %13, align 8, !dbg !17728
  %43 = trunc i64 %42 to i32, !dbg !17729
  %44 = load i8*, i8** %12, align 8, !dbg !17730
  %45 = load i8*, i8** %14, align 8, !dbg !17731
  %46 = call i32 %35(i8* %38, i32 (i8*, i8*, i64)* %39, i8* %40, i32 1, i32 %41, i32 %43, i8* %44, i8* %45), !dbg !17721
  store i32 %46, i32* %9, align 4, !dbg !17732
  br label %47, !dbg !17732

47:                                               ; preds = %24, %23
  %48 = load i32, i32* %9, align 4, !dbg !17733
  ret i32 %48, !dbg !17733
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_alt_decrypt_wrap(i8* %0, i8* %1, i64 %2, i8* %3, i64* %4, i64 %5, i32 (i8*, i8*, i64)* %6, i8* %7) #0 !dbg !17734 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32 (i8*, i8*, i64)*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.mbedtls_rsa_alt_context*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !17735, metadata !DIExpression()), !dbg !17736
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17737, metadata !DIExpression()), !dbg !17738
  store i64 %2, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !17739, metadata !DIExpression()), !dbg !17740
  store i8* %3, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !17741, metadata !DIExpression()), !dbg !17742
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !17743, metadata !DIExpression()), !dbg !17744
  store i64 %5, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !17745, metadata !DIExpression()), !dbg !17746
  store i32 (i8*, i8*, i64)* %6, i32 (i8*, i8*, i64)** %16, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %16, metadata !17747, metadata !DIExpression()), !dbg !17748
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !17749, metadata !DIExpression()), !dbg !17750
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_alt_context** %18, metadata !17751, metadata !DIExpression()), !dbg !17752
  %19 = load i8*, i8** %10, align 8, !dbg !17753
  %20 = bitcast i8* %19 to %struct.mbedtls_rsa_alt_context*, !dbg !17754
  store %struct.mbedtls_rsa_alt_context* %20, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17752
  %21 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %16, align 8, !dbg !17755
  %22 = load i8*, i8** %17, align 8, !dbg !17756
  %23 = load i64, i64* %12, align 8, !dbg !17757
  %24 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17759
  %25 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %24, i32 0, i32 3, !dbg !17760
  %26 = load i64 (i8*)*, i64 (i8*)** %25, align 8, !dbg !17760
  %27 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17761
  %28 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %27, i32 0, i32 0, !dbg !17762
  %29 = load i8*, i8** %28, align 8, !dbg !17762
  %30 = call i64 %26(i8* %29), !dbg !17759
  %31 = icmp ne i64 %23, %30, !dbg !17763
  br i1 %31, label %32, label %33, !dbg !17764

32:                                               ; preds = %8
  store i32 -16512, i32* %9, align 4, !dbg !17765
  br label %45, !dbg !17765

33:                                               ; preds = %8
  %34 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17766
  %35 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %34, i32 0, i32 1, !dbg !17767
  %36 = load i32 (i8*, i32, i64*, i8*, i8*, i64)*, i32 (i8*, i32, i64*, i8*, i8*, i64)** %35, align 8, !dbg !17767
  %37 = load %struct.mbedtls_rsa_alt_context*, %struct.mbedtls_rsa_alt_context** %18, align 8, !dbg !17768
  %38 = getelementptr inbounds %struct.mbedtls_rsa_alt_context, %struct.mbedtls_rsa_alt_context* %37, i32 0, i32 0, !dbg !17769
  %39 = load i8*, i8** %38, align 8, !dbg !17769
  %40 = load i64*, i64** %14, align 8, !dbg !17770
  %41 = load i8*, i8** %11, align 8, !dbg !17771
  %42 = load i8*, i8** %13, align 8, !dbg !17772
  %43 = load i64, i64* %15, align 8, !dbg !17773
  %44 = call i32 %36(i8* %39, i32 1, i64* %40, i8* %41, i8* %42, i64 %43), !dbg !17766
  store i32 %44, i32* %9, align 4, !dbg !17774
  br label %45, !dbg !17774

45:                                               ; preds = %33, %32
  %46 = load i32, i32* %9, align 4, !dbg !17775
  ret i32 %46, !dbg !17775
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_alt_check_pair(i8* %0, i8* %1) #0 !dbg !17776 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [32 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !17777, metadata !DIExpression()), !dbg !17778
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !17779, metadata !DIExpression()), !dbg !17780
  call void @llvm.dbg.declare(metadata [1024 x i8]* %6, metadata !17781, metadata !DIExpression()), !dbg !17782
  call void @llvm.dbg.declare(metadata [32 x i8]* %7, metadata !17783, metadata !DIExpression()), !dbg !17784
  call void @llvm.dbg.declare(metadata i64* %8, metadata !17785, metadata !DIExpression()), !dbg !17786
  store i64 0, i64* %8, align 8, !dbg !17786
  call void @llvm.dbg.declare(metadata i32* %9, metadata !17787, metadata !DIExpression()), !dbg !17788
  %10 = load i8*, i8** %5, align 8, !dbg !17789
  %11 = call i64 @rsa_alt_get_bitlen(i8* %10), !dbg !17791
  %12 = load i8*, i8** %4, align 8, !dbg !17792
  %13 = call i64 @rsa_get_bitlen(i8* %12), !dbg !17793
  %14 = icmp ne i64 %11, %13, !dbg !17794
  br i1 %14, label %15, label %16, !dbg !17795

15:                                               ; preds = %2
  store i32 -16896, i32* %3, align 4, !dbg !17796
  br label %34, !dbg !17796

16:                                               ; preds = %2
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0, !dbg !17797
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 42, i64 32, i1 false), !dbg !17797
  %18 = load i8*, i8** %5, align 8, !dbg !17798
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0, !dbg !17800
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0, !dbg !17801
  %21 = call i32 @rsa_alt_sign_wrap(i8* %18, i32 0, i8* %19, i64 32, i8* %20, i64* %8, i32 (i8*, i8*, i64)* null, i8* null), !dbg !17802
  store i32 %21, i32* %9, align 4, !dbg !17803
  %22 = icmp ne i32 %21, 0, !dbg !17804
  br i1 %22, label %23, label %25, !dbg !17805

23:                                               ; preds = %16
  %24 = load i32, i32* %9, align 4, !dbg !17806
  store i32 %24, i32* %3, align 4, !dbg !17808
  br label %34, !dbg !17808

25:                                               ; preds = %16
  %26 = load i8*, i8** %4, align 8, !dbg !17809
  %27 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0, !dbg !17811
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0, !dbg !17812
  %29 = load i64, i64* %8, align 8, !dbg !17813
  %30 = call i32 @rsa_verify_wrap(i8* %26, i32 0, i8* %27, i64 32, i8* %28, i64 %29), !dbg !17814
  %31 = icmp ne i32 %30, 0, !dbg !17815
  br i1 %31, label %32, label %33, !dbg !17816

32:                                               ; preds = %25
  store i32 -16896, i32* %3, align 4, !dbg !17817
  br label %34, !dbg !17817

33:                                               ; preds = %25
  store i32 0, i32* %3, align 4, !dbg !17819
  br label %34, !dbg !17819

34:                                               ; preds = %33, %32, %23, %15
  %35 = load i32, i32* %3, align 4, !dbg !17820
  ret i32 %35, !dbg !17820
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @rsa_alt_alloc_wrap() #0 !dbg !17821 {
  %1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !17822, metadata !DIExpression()), !dbg !17823
  %2 = call align 16 i8* @calloc(i64 1, i64 32), !dbg !17824
  store i8* %2, i8** %1, align 8, !dbg !17823
  %3 = load i8*, i8** %1, align 8, !dbg !17825
  %4 = icmp ne i8* %3, null, !dbg !17827
  br i1 %4, label %5, label %7, !dbg !17828

5:                                                ; preds = %0
  %6 = load i8*, i8** %1, align 8, !dbg !17829
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 32, i1 false), !dbg !17830
  br label %7, !dbg !17830

7:                                                ; preds = %5, %0
  %8 = load i8*, i8** %1, align 8, !dbg !17831
  ret i8* %8, !dbg !17832
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @rsa_alt_free_wrap(i8* %0) #0 !dbg !17833 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !17834, metadata !DIExpression()), !dbg !17835
  %3 = load i8*, i8** %2, align 8, !dbg !17836
  call void @mbedtls_zeroize.400(i8* %3, i64 32), !dbg !17837
  %4 = load i8*, i8** %2, align 8, !dbg !17838
  call void @free(i8* %4), !dbg !17839
  ret void, !dbg !17840
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize.400(i8* %0, i64 %1) #0 !dbg !17841 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !17842, metadata !DIExpression()), !dbg !17843
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !17844, metadata !DIExpression()), !dbg !17845
  call void @llvm.dbg.declare(metadata i8** %5, metadata !17846, metadata !DIExpression()), !dbg !17847
  %6 = load i8*, i8** %3, align 8, !dbg !17848
  store i8* %6, i8** %5, align 8, !dbg !17847
  br label %7, !dbg !17849

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !17850
  %9 = add i64 %8, -1, !dbg !17850
  store i64 %9, i64* %4, align 8, !dbg !17850
  %10 = icmp ne i64 %8, 0, !dbg !17849
  br i1 %10, label %11, label %14, !dbg !17849

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !17851
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !17851
  store i8* %13, i8** %5, align 8, !dbg !17851
  store volatile i8 0, i8* %12, align 1, !dbg !17852
  br label %7, !dbg !17849, !llvm.loop !17853

14:                                               ; preds = %7
  ret void, !dbg !17855
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_parse_subpubkey(i8** %0, i8* %1, %struct.mbedtls_pk_context* %2) #0 !dbg !17856 {
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.mbedtls_pk_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.mbedtls_asn1_buf, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mbedtls_pk_info_t*, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !17866, metadata !DIExpression()), !dbg !17867
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !17868, metadata !DIExpression()), !dbg !17869
  store %struct.mbedtls_pk_context* %2, %struct.mbedtls_pk_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %7, metadata !17870, metadata !DIExpression()), !dbg !17871
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17872, metadata !DIExpression()), !dbg !17873
  call void @llvm.dbg.declare(metadata i64* %9, metadata !17874, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %10, metadata !17876, metadata !DIExpression()), !dbg !17883
  call void @llvm.dbg.declare(metadata i32* %11, metadata !17884, metadata !DIExpression()), !dbg !17885
  store i32 0, i32* %11, align 4, !dbg !17885
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_info_t** %12, metadata !17886, metadata !DIExpression()), !dbg !17887
  %13 = load i8**, i8*** %5, align 8, !dbg !17888
  %14 = load i8*, i8** %6, align 8, !dbg !17890
  %15 = call i32 @mbedtls_asn1_get_tag(i8** %13, i8* %14, i64* %9, i32 48), !dbg !17891
  store i32 %15, i32* %8, align 4, !dbg !17892
  %16 = icmp ne i32 %15, 0, !dbg !17893
  br i1 %16, label %17, label %20, !dbg !17894

17:                                               ; preds = %3
  %18 = load i32, i32* %8, align 4, !dbg !17895
  %19 = add nsw i32 -15616, %18, !dbg !17897
  store i32 %19, i32* %4, align 4, !dbg !17898
  br label %121, !dbg !17898

20:                                               ; preds = %3
  %21 = load i8**, i8*** %5, align 8, !dbg !17899
  %22 = load i8*, i8** %21, align 8, !dbg !17900
  %23 = load i64, i64* %9, align 8, !dbg !17901
  %24 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !17902
  store i8* %24, i8** %6, align 8, !dbg !17903
  %25 = load i8**, i8*** %5, align 8, !dbg !17904
  %26 = load i8*, i8** %6, align 8, !dbg !17906
  %27 = call i32 @pk_get_pk_alg(i8** %25, i8* %26, i32* %11, %struct.mbedtls_asn1_buf* %10), !dbg !17907
  store i32 %27, i32* %8, align 4, !dbg !17908
  %28 = icmp ne i32 %27, 0, !dbg !17909
  br i1 %28, label %29, label %31, !dbg !17910

29:                                               ; preds = %20
  %30 = load i32, i32* %8, align 4, !dbg !17911
  store i32 %30, i32* %4, align 4, !dbg !17912
  br label %121, !dbg !17912

31:                                               ; preds = %20
  %32 = load i8**, i8*** %5, align 8, !dbg !17913
  %33 = load i8*, i8** %6, align 8, !dbg !17915
  %34 = call i32 @mbedtls_asn1_get_bitstring_null(i8** %32, i8* %33, i64* %9), !dbg !17916
  store i32 %34, i32* %8, align 4, !dbg !17917
  %35 = icmp ne i32 %34, 0, !dbg !17918
  br i1 %35, label %36, label %39, !dbg !17919

36:                                               ; preds = %31
  %37 = load i32, i32* %8, align 4, !dbg !17920
  %38 = add nsw i32 -15104, %37, !dbg !17921
  store i32 %38, i32* %4, align 4, !dbg !17922
  br label %121, !dbg !17922

39:                                               ; preds = %31
  %40 = load i8**, i8*** %5, align 8, !dbg !17923
  %41 = load i8*, i8** %40, align 8, !dbg !17925
  %42 = load i64, i64* %9, align 8, !dbg !17926
  %43 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !17927
  %44 = load i8*, i8** %6, align 8, !dbg !17928
  %45 = icmp ne i8* %43, %44, !dbg !17929
  br i1 %45, label %46, label %47, !dbg !17930

46:                                               ; preds = %39
  store i32 -15206, i32* %4, align 4, !dbg !17931
  br label %121, !dbg !17931

47:                                               ; preds = %39
  %48 = load i32, i32* %11, align 4, !dbg !17932
  %49 = call %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 %48), !dbg !17934
  store %struct.mbedtls_pk_info_t* %49, %struct.mbedtls_pk_info_t** %12, align 8, !dbg !17935
  %50 = icmp eq %struct.mbedtls_pk_info_t* %49, null, !dbg !17936
  br i1 %50, label %51, label %52, !dbg !17937

51:                                               ; preds = %47
  store i32 -15488, i32* %4, align 4, !dbg !17938
  br label %121, !dbg !17938

52:                                               ; preds = %47
  %53 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !17939
  %54 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %12, align 8, !dbg !17941
  %55 = call i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %53, %struct.mbedtls_pk_info_t* %54), !dbg !17942
  store i32 %55, i32* %8, align 4, !dbg !17943
  %56 = icmp ne i32 %55, 0, !dbg !17944
  br i1 %56, label %57, label %59, !dbg !17945

57:                                               ; preds = %52
  %58 = load i32, i32* %8, align 4, !dbg !17946
  store i32 %58, i32* %4, align 4, !dbg !17947
  br label %121, !dbg !17947

59:                                               ; preds = %52
  %60 = load i32, i32* %11, align 4, !dbg !17948
  %61 = icmp eq i32 %60, 1, !dbg !17950
  br i1 %61, label %62, label %73, !dbg !17951

62:                                               ; preds = %59
  %63 = load i8**, i8*** %5, align 8, !dbg !17952
  %64 = load i8*, i8** %6, align 8, !dbg !17954
  %65 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !17955
  %66 = bitcast %struct.mbedtls_pk_context* %65 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !17956
  %67 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %66, i32 0, i32 0, !dbg !17956
  %68 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %67, align 8, !dbg !17956
  %69 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %66, i32 0, i32 1, !dbg !17956
  %70 = load i8*, i8** %69, align 8, !dbg !17956
  %71 = call %struct.mbedtls_rsa_context* @mbedtls_pk_rsa.401(%struct.mbedtls_pk_info_t* %68, i8* %70), !dbg !17956
  %72 = call i32 @pk_get_rsapubkey(i8** %63, i8* %64, %struct.mbedtls_rsa_context* %71), !dbg !17957
  store i32 %72, i32* %8, align 4, !dbg !17958
  br label %105, !dbg !17959

73:                                               ; preds = %59
  %74 = load i32, i32* %11, align 4, !dbg !17960
  %75 = icmp eq i32 %74, 3, !dbg !17962
  br i1 %75, label %79, label %76, !dbg !17963

76:                                               ; preds = %73
  %77 = load i32, i32* %11, align 4, !dbg !17964
  %78 = icmp eq i32 %77, 2, !dbg !17965
  br i1 %78, label %79, label %103, !dbg !17966

79:                                               ; preds = %76, %73
  %80 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !17967
  %81 = bitcast %struct.mbedtls_pk_context* %80 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !17969
  %82 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %81, i32 0, i32 0, !dbg !17969
  %83 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %82, align 8, !dbg !17969
  %84 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %81, i32 0, i32 1, !dbg !17969
  %85 = load i8*, i8** %84, align 8, !dbg !17969
  %86 = call %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %83, i8* %85), !dbg !17969
  %87 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %86, i32 0, i32 0, !dbg !17970
  %88 = call i32 @pk_use_ecparams(%struct.mbedtls_asn1_buf* %10, %struct.mbedtls_ecp_group* %87), !dbg !17971
  store i32 %88, i32* %8, align 4, !dbg !17972
  %89 = load i32, i32* %8, align 4, !dbg !17973
  %90 = icmp eq i32 %89, 0, !dbg !17975
  br i1 %90, label %91, label %102, !dbg !17976

91:                                               ; preds = %79
  %92 = load i8**, i8*** %5, align 8, !dbg !17977
  %93 = load i8*, i8** %6, align 8, !dbg !17978
  %94 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !17979
  %95 = bitcast %struct.mbedtls_pk_context* %94 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !17980
  %96 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %95, i32 0, i32 0, !dbg !17980
  %97 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %96, align 8, !dbg !17980
  %98 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %95, i32 0, i32 1, !dbg !17980
  %99 = load i8*, i8** %98, align 8, !dbg !17980
  %100 = call %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %97, i8* %99), !dbg !17980
  %101 = call i32 @pk_get_ecpubkey(i8** %92, i8* %93, %struct.mbedtls_ecp_keypair* %100), !dbg !17981
  store i32 %101, i32* %8, align 4, !dbg !17982
  br label %102, !dbg !17983

102:                                              ; preds = %91, %79
  br label %104, !dbg !17984

103:                                              ; preds = %76
  store i32 -15488, i32* %8, align 4, !dbg !17985
  br label %104

104:                                              ; preds = %103, %102
  br label %105

105:                                              ; preds = %104, %62
  %106 = load i32, i32* %8, align 4, !dbg !17986
  %107 = icmp eq i32 %106, 0, !dbg !17988
  br i1 %107, label %108, label %114, !dbg !17989

108:                                              ; preds = %105
  %109 = load i8**, i8*** %5, align 8, !dbg !17990
  %110 = load i8*, i8** %109, align 8, !dbg !17991
  %111 = load i8*, i8** %6, align 8, !dbg !17992
  %112 = icmp ne i8* %110, %111, !dbg !17993
  br i1 %112, label %113, label %114, !dbg !17994

113:                                              ; preds = %108
  store i32 -15206, i32* %8, align 4, !dbg !17995
  br label %114, !dbg !17996

114:                                              ; preds = %113, %108, %105
  %115 = load i32, i32* %8, align 4, !dbg !17997
  %116 = icmp ne i32 %115, 0, !dbg !17999
  br i1 %116, label %117, label %119, !dbg !18000

117:                                              ; preds = %114
  %118 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18001
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %118), !dbg !18002
  br label %119, !dbg !18002

119:                                              ; preds = %117, %114
  %120 = load i32, i32* %8, align 4, !dbg !18003
  store i32 %120, i32* %4, align 4, !dbg !18004
  br label %121, !dbg !18004

121:                                              ; preds = %119, %57, %51, %46, %36, %29, %17
  %122 = load i32, i32* %4, align 4, !dbg !18005
  ret i32 %122, !dbg !18005
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_get_pk_alg(i8** %0, i8* %1, i32* %2, %struct.mbedtls_asn1_buf* %3) #0 !dbg !18006 {
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.mbedtls_asn1_buf*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.mbedtls_asn1_buf, align 8
  store i8** %0, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !18011, metadata !DIExpression()), !dbg !18012
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !18013, metadata !DIExpression()), !dbg !18014
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !18015, metadata !DIExpression()), !dbg !18016
  store %struct.mbedtls_asn1_buf* %3, %struct.mbedtls_asn1_buf** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf** %9, metadata !18017, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.declare(metadata i32* %10, metadata !18019, metadata !DIExpression()), !dbg !18020
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %11, metadata !18021, metadata !DIExpression()), !dbg !18022
  %12 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %9, align 8, !dbg !18023
  %13 = bitcast %struct.mbedtls_asn1_buf* %12 to i8*, !dbg !18024
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false), !dbg !18024
  %14 = load i8**, i8*** %6, align 8, !dbg !18025
  %15 = load i8*, i8** %7, align 8, !dbg !18027
  %16 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %9, align 8, !dbg !18028
  %17 = call i32 @mbedtls_asn1_get_alg(i8** %14, i8* %15, %struct.mbedtls_asn1_buf* %11, %struct.mbedtls_asn1_buf* %16), !dbg !18029
  store i32 %17, i32* %10, align 4, !dbg !18030
  %18 = icmp ne i32 %17, 0, !dbg !18031
  br i1 %18, label %19, label %22, !dbg !18032

19:                                               ; preds = %4
  %20 = load i32, i32* %10, align 4, !dbg !18033
  %21 = add nsw i32 -14976, %20, !dbg !18034
  store i32 %21, i32* %5, align 4, !dbg !18035
  br label %48, !dbg !18035

22:                                               ; preds = %4
  %23 = load i32*, i32** %8, align 8, !dbg !18036
  %24 = call i32 @mbedtls_oid_get_pk_alg(%struct.mbedtls_asn1_buf* %11, i32* %23), !dbg !18038
  %25 = icmp ne i32 %24, 0, !dbg !18039
  br i1 %25, label %26, label %27, !dbg !18040

26:                                               ; preds = %22
  store i32 -15488, i32* %5, align 4, !dbg !18041
  br label %48, !dbg !18041

27:                                               ; preds = %22
  %28 = load i32*, i32** %8, align 8, !dbg !18042
  %29 = load i32, i32* %28, align 4, !dbg !18044
  %30 = icmp eq i32 %29, 1, !dbg !18045
  br i1 %30, label %31, label %47, !dbg !18046

31:                                               ; preds = %27
  %32 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %9, align 8, !dbg !18047
  %33 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %32, i32 0, i32 0, !dbg !18048
  %34 = load i32, i32* %33, align 8, !dbg !18048
  %35 = icmp ne i32 %34, 5, !dbg !18049
  br i1 %35, label %36, label %41, !dbg !18050

36:                                               ; preds = %31
  %37 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %9, align 8, !dbg !18051
  %38 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %37, i32 0, i32 0, !dbg !18052
  %39 = load i32, i32* %38, align 8, !dbg !18052
  %40 = icmp ne i32 %39, 0, !dbg !18053
  br i1 %40, label %46, label %41, !dbg !18054

41:                                               ; preds = %36, %31
  %42 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %9, align 8, !dbg !18055
  %43 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %42, i32 0, i32 1, !dbg !18056
  %44 = load i64, i64* %43, align 8, !dbg !18056
  %45 = icmp ne i64 %44, 0, !dbg !18057
  br i1 %45, label %46, label %47, !dbg !18058

46:                                               ; preds = %41, %36
  store i32 -14976, i32* %5, align 4, !dbg !18059
  br label %48, !dbg !18059

47:                                               ; preds = %41, %27
  store i32 0, i32* %5, align 4, !dbg !18061
  br label %48, !dbg !18061

48:                                               ; preds = %47, %46, %26, %19
  %49 = load i32, i32* %5, align 4, !dbg !18062
  ret i32 %49, !dbg !18062
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal %struct.mbedtls_rsa_context* @mbedtls_pk_rsa.401(%struct.mbedtls_pk_info_t* %0, i8* %1) #0 !dbg !18063 {
  %3 = alloca %struct.mbedtls_pk_context, align 8
  %4 = bitcast %struct.mbedtls_pk_context* %3 to { %struct.mbedtls_pk_info_t*, i8* }*
  %5 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %4, i32 0, i32 0
  store %struct.mbedtls_pk_info_t* %0, %struct.mbedtls_pk_info_t** %5, align 8
  %6 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %4, i32 0, i32 1
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context* %3, metadata !18067, metadata !DIExpression()), !dbg !18068
  %7 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %3, i32 0, i32 1, !dbg !18069
  %8 = load i8*, i8** %7, align 8, !dbg !18069
  %9 = bitcast i8* %8 to %struct.mbedtls_rsa_context*, !dbg !18070
  ret %struct.mbedtls_rsa_context* %9, !dbg !18071
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_get_rsapubkey(i8** %0, i8* %1, %struct.mbedtls_rsa_context* %2) #0 !dbg !18072 {
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.mbedtls_rsa_context*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !18075, metadata !DIExpression()), !dbg !18076
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !18077, metadata !DIExpression()), !dbg !18078
  store %struct.mbedtls_rsa_context* %2, %struct.mbedtls_rsa_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %7, metadata !18079, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18081, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.declare(metadata i64* %9, metadata !18083, metadata !DIExpression()), !dbg !18084
  %10 = load i8**, i8*** %5, align 8, !dbg !18085
  %11 = load i8*, i8** %6, align 8, !dbg !18087
  %12 = call i32 @mbedtls_asn1_get_tag(i8** %10, i8* %11, i64* %9, i32 48), !dbg !18088
  store i32 %12, i32* %8, align 4, !dbg !18089
  %13 = icmp ne i32 %12, 0, !dbg !18090
  br i1 %13, label %14, label %17, !dbg !18091

14:                                               ; preds = %3
  %15 = load i32, i32* %8, align 4, !dbg !18092
  %16 = add nsw i32 -15104, %15, !dbg !18093
  store i32 %16, i32* %4, align 4, !dbg !18094
  br label %59, !dbg !18094

17:                                               ; preds = %3
  %18 = load i8**, i8*** %5, align 8, !dbg !18095
  %19 = load i8*, i8** %18, align 8, !dbg !18097
  %20 = load i64, i64* %9, align 8, !dbg !18098
  %21 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !18099
  %22 = load i8*, i8** %6, align 8, !dbg !18100
  %23 = icmp ne i8* %21, %22, !dbg !18101
  br i1 %23, label %24, label %25, !dbg !18102

24:                                               ; preds = %17
  store i32 -15206, i32* %4, align 4, !dbg !18103
  br label %59, !dbg !18103

25:                                               ; preds = %17
  %26 = load i8**, i8*** %5, align 8, !dbg !18104
  %27 = load i8*, i8** %6, align 8, !dbg !18106
  %28 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !18107
  %29 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %28, i32 0, i32 2, !dbg !18108
  %30 = call i32 @mbedtls_asn1_get_mpi(i8** %26, i8* %27, %struct.mbedtls_mpi* %29), !dbg !18109
  store i32 %30, i32* %8, align 4, !dbg !18110
  %31 = icmp ne i32 %30, 0, !dbg !18111
  br i1 %31, label %39, label %32, !dbg !18112

32:                                               ; preds = %25
  %33 = load i8**, i8*** %5, align 8, !dbg !18113
  %34 = load i8*, i8** %6, align 8, !dbg !18114
  %35 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !18115
  %36 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %35, i32 0, i32 3, !dbg !18116
  %37 = call i32 @mbedtls_asn1_get_mpi(i8** %33, i8* %34, %struct.mbedtls_mpi* %36), !dbg !18117
  store i32 %37, i32* %8, align 4, !dbg !18118
  %38 = icmp ne i32 %37, 0, !dbg !18119
  br i1 %38, label %39, label %42, !dbg !18120

39:                                               ; preds = %32, %25
  %40 = load i32, i32* %8, align 4, !dbg !18121
  %41 = add nsw i32 -15104, %40, !dbg !18122
  store i32 %41, i32* %4, align 4, !dbg !18123
  br label %59, !dbg !18123

42:                                               ; preds = %32
  %43 = load i8**, i8*** %5, align 8, !dbg !18124
  %44 = load i8*, i8** %43, align 8, !dbg !18126
  %45 = load i8*, i8** %6, align 8, !dbg !18127
  %46 = icmp ne i8* %44, %45, !dbg !18128
  br i1 %46, label %47, label %48, !dbg !18129

47:                                               ; preds = %42
  store i32 -15206, i32* %4, align 4, !dbg !18130
  br label %59, !dbg !18130

48:                                               ; preds = %42
  %49 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !18131
  %50 = call i32 @mbedtls_rsa_check_pubkey(%struct.mbedtls_rsa_context* %49), !dbg !18133
  store i32 %50, i32* %8, align 4, !dbg !18134
  %51 = icmp ne i32 %50, 0, !dbg !18135
  br i1 %51, label %52, label %53, !dbg !18136

52:                                               ; preds = %48
  store i32 -15104, i32* %4, align 4, !dbg !18137
  br label %59, !dbg !18137

53:                                               ; preds = %48
  %54 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !18138
  %55 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %54, i32 0, i32 2, !dbg !18139
  %56 = call i64 @mbedtls_mpi_size(%struct.mbedtls_mpi* %55), !dbg !18140
  %57 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !18141
  %58 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %57, i32 0, i32 1, !dbg !18142
  store i64 %56, i64* %58, align 8, !dbg !18143
  store i32 0, i32* %4, align 4, !dbg !18144
  br label %59, !dbg !18144

59:                                               ; preds = %53, %52, %47, %39, %24, %14
  %60 = load i32, i32* %4, align 4, !dbg !18145
  ret i32 %60, !dbg !18145
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %0, i8* %1) #0 !dbg !18146 {
  %3 = alloca %struct.mbedtls_pk_context, align 8
  %4 = bitcast %struct.mbedtls_pk_context* %3 to { %struct.mbedtls_pk_info_t*, i8* }*
  %5 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %4, i32 0, i32 0
  store %struct.mbedtls_pk_info_t* %0, %struct.mbedtls_pk_info_t** %5, align 8
  %6 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %4, i32 0, i32 1
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context* %3, metadata !18149, metadata !DIExpression()), !dbg !18150
  %7 = getelementptr inbounds %struct.mbedtls_pk_context, %struct.mbedtls_pk_context* %3, i32 0, i32 1, !dbg !18151
  %8 = load i8*, i8** %7, align 8, !dbg !18151
  %9 = bitcast i8* %8 to %struct.mbedtls_ecp_keypair*, !dbg !18152
  ret %struct.mbedtls_ecp_keypair* %9, !dbg !18153
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_use_ecparams(%struct.mbedtls_asn1_buf* %0, %struct.mbedtls_ecp_group* %1) #0 !dbg !18154 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_asn1_buf*, align 8
  %5 = alloca %struct.mbedtls_ecp_group*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.mbedtls_asn1_buf* %0, %struct.mbedtls_asn1_buf** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf** %4, metadata !18160, metadata !DIExpression()), !dbg !18161
  store %struct.mbedtls_ecp_group* %1, %struct.mbedtls_ecp_group** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_group** %5, metadata !18162, metadata !DIExpression()), !dbg !18163
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18164, metadata !DIExpression()), !dbg !18165
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18166, metadata !DIExpression()), !dbg !18167
  %8 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %4, align 8, !dbg !18168
  %9 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %8, i32 0, i32 0, !dbg !18170
  %10 = load i32, i32* %9, align 8, !dbg !18170
  %11 = icmp eq i32 %10, 6, !dbg !18171
  br i1 %11, label %12, label %18, !dbg !18172

12:                                               ; preds = %2
  %13 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %4, align 8, !dbg !18173
  %14 = call i32 @mbedtls_oid_get_ec_grp(%struct.mbedtls_asn1_buf* %13, i32* %7), !dbg !18176
  %15 = icmp ne i32 %14, 0, !dbg !18177
  br i1 %15, label %16, label %17, !dbg !18178

16:                                               ; preds = %12
  store i32 -14848, i32* %3, align 4, !dbg !18179
  br label %45, !dbg !18179

17:                                               ; preds = %12
  br label %25, !dbg !18180

18:                                               ; preds = %2
  %19 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %4, align 8, !dbg !18181
  %20 = call i32 @pk_group_id_from_specified(%struct.mbedtls_asn1_buf* %19, i32* %7), !dbg !18184
  store i32 %20, i32* %6, align 4, !dbg !18185
  %21 = icmp ne i32 %20, 0, !dbg !18186
  br i1 %21, label %22, label %24, !dbg !18187

22:                                               ; preds = %18
  %23 = load i32, i32* %6, align 4, !dbg !18188
  store i32 %23, i32* %3, align 4, !dbg !18189
  br label %45, !dbg !18189

24:                                               ; preds = %18
  br label %25

25:                                               ; preds = %24, %17
  %26 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18190
  %27 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %26, i32 0, i32 0, !dbg !18192
  %28 = load i32, i32* %27, align 8, !dbg !18192
  %29 = icmp ne i32 %28, 0, !dbg !18193
  br i1 %29, label %30, label %37, !dbg !18194

30:                                               ; preds = %25
  %31 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18195
  %32 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %31, i32 0, i32 0, !dbg !18196
  %33 = load i32, i32* %32, align 8, !dbg !18196
  %34 = load i32, i32* %7, align 4, !dbg !18197
  %35 = icmp ne i32 %33, %34, !dbg !18198
  br i1 %35, label %36, label %37, !dbg !18199

36:                                               ; preds = %30
  store i32 -15616, i32* %3, align 4, !dbg !18200
  br label %45, !dbg !18200

37:                                               ; preds = %30, %25
  %38 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18201
  %39 = load i32, i32* %7, align 4, !dbg !18203
  %40 = call i32 @mbedtls_ecp_group_load(%struct.mbedtls_ecp_group* %38, i32 %39), !dbg !18204
  store i32 %40, i32* %6, align 4, !dbg !18205
  %41 = icmp ne i32 %40, 0, !dbg !18206
  br i1 %41, label %42, label %44, !dbg !18207

42:                                               ; preds = %37
  %43 = load i32, i32* %6, align 4, !dbg !18208
  store i32 %43, i32* %3, align 4, !dbg !18209
  br label %45, !dbg !18209

44:                                               ; preds = %37
  store i32 0, i32* %3, align 4, !dbg !18210
  br label %45, !dbg !18210

45:                                               ; preds = %44, %42, %36, %22, %16
  %46 = load i32, i32* %3, align 4, !dbg !18211
  ret i32 %46, !dbg !18211
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_get_ecpubkey(i8** %0, i8* %1, %struct.mbedtls_ecp_keypair* %2) #0 !dbg !18212 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mbedtls_ecp_keypair*, align 8
  %7 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !18215, metadata !DIExpression()), !dbg !18216
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !18217, metadata !DIExpression()), !dbg !18218
  store %struct.mbedtls_ecp_keypair* %2, %struct.mbedtls_ecp_keypair** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_keypair** %6, metadata !18219, metadata !DIExpression()), !dbg !18220
  call void @llvm.dbg.declare(metadata i32* %7, metadata !18221, metadata !DIExpression()), !dbg !18222
  %8 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %6, align 8, !dbg !18223
  %9 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %8, i32 0, i32 0, !dbg !18225
  %10 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %6, align 8, !dbg !18226
  %11 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %10, i32 0, i32 2, !dbg !18227
  %12 = load i8**, i8*** %4, align 8, !dbg !18228
  %13 = load i8*, i8** %12, align 8, !dbg !18229
  %14 = load i8*, i8** %5, align 8, !dbg !18230
  %15 = load i8**, i8*** %4, align 8, !dbg !18231
  %16 = load i8*, i8** %15, align 8, !dbg !18232
  %17 = ptrtoint i8* %14 to i64, !dbg !18233
  %18 = ptrtoint i8* %16 to i64, !dbg !18233
  %19 = sub i64 %17, %18, !dbg !18233
  %20 = call i32 @mbedtls_ecp_point_read_binary(%struct.mbedtls_ecp_group* %9, %struct.mbedtls_ecp_point* %11, i8* %13, i64 %19), !dbg !18234
  store i32 %20, i32* %7, align 4, !dbg !18235
  %21 = icmp eq i32 %20, 0, !dbg !18236
  br i1 %21, label %22, label %28, !dbg !18237

22:                                               ; preds = %3
  %23 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %6, align 8, !dbg !18238
  %24 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %23, i32 0, i32 0, !dbg !18240
  %25 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %6, align 8, !dbg !18241
  %26 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %25, i32 0, i32 2, !dbg !18242
  %27 = call i32 @mbedtls_ecp_check_pubkey(%struct.mbedtls_ecp_group* %24, %struct.mbedtls_ecp_point* %26), !dbg !18243
  store i32 %27, i32* %7, align 4, !dbg !18244
  br label %28, !dbg !18245

28:                                               ; preds = %22, %3
  %29 = load i8*, i8** %5, align 8, !dbg !18246
  %30 = load i8**, i8*** %4, align 8, !dbg !18247
  store i8* %29, i8** %30, align 8, !dbg !18248
  %31 = load i32, i32* %7, align 4, !dbg !18249
  ret i32 %31, !dbg !18250
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_group_id_from_specified(%struct.mbedtls_asn1_buf* %0, i32* %1) #0 !dbg !18251 {
  %3 = alloca %struct.mbedtls_asn1_buf*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mbedtls_ecp_group, align 8
  store %struct.mbedtls_asn1_buf* %0, %struct.mbedtls_asn1_buf** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf** %3, metadata !18255, metadata !DIExpression()), !dbg !18256
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !18257, metadata !DIExpression()), !dbg !18258
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18259, metadata !DIExpression()), !dbg !18260
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_group* %6, metadata !18261, metadata !DIExpression()), !dbg !18262
  call void @mbedtls_ecp_group_init(%struct.mbedtls_ecp_group* %6), !dbg !18263
  %7 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %3, align 8, !dbg !18264
  %8 = call i32 @pk_group_from_specified(%struct.mbedtls_asn1_buf* %7, %struct.mbedtls_ecp_group* %6), !dbg !18266
  store i32 %8, i32* %5, align 4, !dbg !18267
  %9 = icmp ne i32 %8, 0, !dbg !18268
  br i1 %9, label %10, label %11, !dbg !18269

10:                                               ; preds = %2
  br label %14, !dbg !18270

11:                                               ; preds = %2
  %12 = load i32*, i32** %4, align 8, !dbg !18271
  %13 = call i32 @pk_group_id_from_group(%struct.mbedtls_ecp_group* %6, i32* %12), !dbg !18272
  store i32 %13, i32* %5, align 4, !dbg !18273
  br label %14, !dbg !18274

14:                                               ; preds = %11, %10
  call void @llvm.dbg.label(metadata !18275), !dbg !18276
  call void @mbedtls_ecp_group_free(%struct.mbedtls_ecp_group* %6), !dbg !18277
  %15 = load i32, i32* %5, align 4, !dbg !18278
  ret i32 %15, !dbg !18279
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_group_from_specified(%struct.mbedtls_asn1_buf* %0, %struct.mbedtls_ecp_group* %1) #0 !dbg !18280 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_asn1_buf*, align 8
  %5 = alloca %struct.mbedtls_ecp_group*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  store %struct.mbedtls_asn1_buf* %0, %struct.mbedtls_asn1_buf** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf** %4, metadata !18281, metadata !DIExpression()), !dbg !18282
  store %struct.mbedtls_ecp_group* %1, %struct.mbedtls_ecp_group** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_group** %5, metadata !18283, metadata !DIExpression()), !dbg !18284
  call void @llvm.dbg.declare(metadata i32* %6, metadata !18285, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.declare(metadata i8** %7, metadata !18287, metadata !DIExpression()), !dbg !18288
  %13 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %4, align 8, !dbg !18289
  %14 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %13, i32 0, i32 2, !dbg !18290
  %15 = load i8*, i8** %14, align 8, !dbg !18290
  store i8* %15, i8** %7, align 8, !dbg !18288
  call void @llvm.dbg.declare(metadata i8** %8, metadata !18291, metadata !DIExpression()), !dbg !18293
  %16 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %4, align 8, !dbg !18294
  %17 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %16, i32 0, i32 2, !dbg !18295
  %18 = load i8*, i8** %17, align 8, !dbg !18295
  %19 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %4, align 8, !dbg !18296
  %20 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %19, i32 0, i32 1, !dbg !18297
  %21 = load i64, i64* %20, align 8, !dbg !18297
  %22 = getelementptr inbounds i8, i8* %18, i64 %21, !dbg !18298
  store i8* %22, i8** %8, align 8, !dbg !18293
  call void @llvm.dbg.declare(metadata i8** %9, metadata !18299, metadata !DIExpression()), !dbg !18300
  call void @llvm.dbg.declare(metadata i8** %10, metadata !18301, metadata !DIExpression()), !dbg !18302
  call void @llvm.dbg.declare(metadata i64* %11, metadata !18303, metadata !DIExpression()), !dbg !18304
  call void @llvm.dbg.declare(metadata i32* %12, metadata !18305, metadata !DIExpression()), !dbg !18306
  %23 = load i8*, i8** %8, align 8, !dbg !18307
  %24 = call i32 @mbedtls_asn1_get_int(i8** %7, i8* %23, i32* %12), !dbg !18309
  store i32 %24, i32* %6, align 4, !dbg !18310
  %25 = icmp ne i32 %24, 0, !dbg !18311
  br i1 %25, label %26, label %29, !dbg !18312

26:                                               ; preds = %2
  %27 = load i32, i32* %6, align 4, !dbg !18313
  %28 = add nsw i32 -15616, %27, !dbg !18314
  store i32 %28, i32* %3, align 4, !dbg !18315
  br label %223, !dbg !18315

29:                                               ; preds = %2
  %30 = load i32, i32* %12, align 4, !dbg !18316
  %31 = icmp slt i32 %30, 1, !dbg !18318
  br i1 %31, label %35, label %32, !dbg !18319

32:                                               ; preds = %29
  %33 = load i32, i32* %12, align 4, !dbg !18320
  %34 = icmp sgt i32 %33, 3, !dbg !18321
  br i1 %34, label %35, label %36, !dbg !18322

35:                                               ; preds = %32, %29
  store i32 -15616, i32* %3, align 4, !dbg !18323
  br label %223, !dbg !18323

36:                                               ; preds = %32
  %37 = load i8*, i8** %8, align 8, !dbg !18324
  %38 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %37, i64* %11, i32 48), !dbg !18326
  store i32 %38, i32* %6, align 4, !dbg !18327
  %39 = icmp ne i32 %38, 0, !dbg !18328
  br i1 %39, label %40, label %42, !dbg !18329

40:                                               ; preds = %36
  %41 = load i32, i32* %6, align 4, !dbg !18330
  store i32 %41, i32* %3, align 4, !dbg !18331
  br label %223, !dbg !18331

42:                                               ; preds = %36
  %43 = load i8*, i8** %7, align 8, !dbg !18332
  %44 = load i64, i64* %11, align 8, !dbg !18333
  %45 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !18334
  store i8* %45, i8** %9, align 8, !dbg !18335
  %46 = load i8*, i8** %9, align 8, !dbg !18336
  %47 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %46, i64* %11, i32 6), !dbg !18338
  store i32 %47, i32* %6, align 4, !dbg !18339
  %48 = icmp ne i32 %47, 0, !dbg !18340
  br i1 %48, label %49, label %51, !dbg !18341

49:                                               ; preds = %42
  %50 = load i32, i32* %6, align 4, !dbg !18342
  store i32 %50, i32* %3, align 4, !dbg !18343
  br label %223, !dbg !18343

51:                                               ; preds = %42
  %52 = load i64, i64* %11, align 8, !dbg !18344
  %53 = icmp ne i64 %52, 7, !dbg !18346
  br i1 %53, label %59, label %54, !dbg !18347

54:                                               ; preds = %51
  %55 = load i8*, i8** %7, align 8, !dbg !18348
  %56 = load i64, i64* %11, align 8, !dbg !18349
  %57 = call i32 @memcmp(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.402, i64 0, i64 0), i64 %56), !dbg !18350
  %58 = icmp ne i32 %57, 0, !dbg !18351
  br i1 %58, label %59, label %60, !dbg !18352

59:                                               ; preds = %54, %51
  store i32 -14720, i32* %3, align 4, !dbg !18353
  br label %223, !dbg !18353

60:                                               ; preds = %54
  %61 = load i64, i64* %11, align 8, !dbg !18355
  %62 = load i8*, i8** %7, align 8, !dbg !18356
  %63 = getelementptr inbounds i8, i8* %62, i64 %61, !dbg !18356
  store i8* %63, i8** %7, align 8, !dbg !18356
  %64 = load i8*, i8** %9, align 8, !dbg !18357
  %65 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18359
  %66 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %65, i32 0, i32 1, !dbg !18360
  %67 = call i32 @mbedtls_asn1_get_mpi(i8** %7, i8* %64, %struct.mbedtls_mpi* %66), !dbg !18361
  store i32 %67, i32* %6, align 4, !dbg !18362
  %68 = icmp ne i32 %67, 0, !dbg !18363
  br i1 %68, label %69, label %72, !dbg !18364

69:                                               ; preds = %60
  %70 = load i32, i32* %6, align 4, !dbg !18365
  %71 = add nsw i32 -15616, %70, !dbg !18366
  store i32 %71, i32* %3, align 4, !dbg !18367
  br label %223, !dbg !18367

72:                                               ; preds = %60
  %73 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18368
  %74 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %73, i32 0, i32 1, !dbg !18369
  %75 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %74), !dbg !18370
  %76 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18371
  %77 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %76, i32 0, i32 6, !dbg !18372
  store i64 %75, i64* %77, align 8, !dbg !18373
  %78 = load i8*, i8** %7, align 8, !dbg !18374
  %79 = load i8*, i8** %9, align 8, !dbg !18376
  %80 = icmp ne i8* %78, %79, !dbg !18377
  br i1 %80, label %81, label %82, !dbg !18378

81:                                               ; preds = %72
  store i32 -15718, i32* %3, align 4, !dbg !18379
  br label %223, !dbg !18379

82:                                               ; preds = %72
  %83 = load i8*, i8** %8, align 8, !dbg !18380
  %84 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %83, i64* %11, i32 48), !dbg !18382
  store i32 %84, i32* %6, align 4, !dbg !18383
  %85 = icmp ne i32 %84, 0, !dbg !18384
  br i1 %85, label %86, label %88, !dbg !18385

86:                                               ; preds = %82
  %87 = load i32, i32* %6, align 4, !dbg !18386
  store i32 %87, i32* %3, align 4, !dbg !18387
  br label %223, !dbg !18387

88:                                               ; preds = %82
  %89 = load i8*, i8** %7, align 8, !dbg !18388
  %90 = load i64, i64* %11, align 8, !dbg !18389
  %91 = getelementptr inbounds i8, i8* %89, i64 %90, !dbg !18390
  store i8* %91, i8** %10, align 8, !dbg !18391
  %92 = load i8*, i8** %10, align 8, !dbg !18392
  %93 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %92, i64* %11, i32 4), !dbg !18394
  store i32 %93, i32* %6, align 4, !dbg !18395
  %94 = icmp ne i32 %93, 0, !dbg !18396
  br i1 %94, label %102, label %95, !dbg !18397

95:                                               ; preds = %88
  %96 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18398
  %97 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %96, i32 0, i32 2, !dbg !18399
  %98 = load i8*, i8** %7, align 8, !dbg !18400
  %99 = load i64, i64* %11, align 8, !dbg !18401
  %100 = call i32 @mbedtls_mpi_read_binary(%struct.mbedtls_mpi* %97, i8* %98, i64 %99), !dbg !18402
  store i32 %100, i32* %6, align 4, !dbg !18403
  %101 = icmp ne i32 %100, 0, !dbg !18404
  br i1 %101, label %102, label %105, !dbg !18405

102:                                              ; preds = %95, %88
  %103 = load i32, i32* %6, align 4, !dbg !18406
  %104 = add nsw i32 -15616, %103, !dbg !18408
  store i32 %104, i32* %3, align 4, !dbg !18409
  br label %223, !dbg !18409

105:                                              ; preds = %95
  %106 = load i64, i64* %11, align 8, !dbg !18410
  %107 = load i8*, i8** %7, align 8, !dbg !18411
  %108 = getelementptr inbounds i8, i8* %107, i64 %106, !dbg !18411
  store i8* %108, i8** %7, align 8, !dbg !18411
  %109 = load i8*, i8** %10, align 8, !dbg !18412
  %110 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %109, i64* %11, i32 4), !dbg !18414
  store i32 %110, i32* %6, align 4, !dbg !18415
  %111 = icmp ne i32 %110, 0, !dbg !18416
  br i1 %111, label %119, label %112, !dbg !18417

112:                                              ; preds = %105
  %113 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18418
  %114 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %113, i32 0, i32 3, !dbg !18419
  %115 = load i8*, i8** %7, align 8, !dbg !18420
  %116 = load i64, i64* %11, align 8, !dbg !18421
  %117 = call i32 @mbedtls_mpi_read_binary(%struct.mbedtls_mpi* %114, i8* %115, i64 %116), !dbg !18422
  store i32 %117, i32* %6, align 4, !dbg !18423
  %118 = icmp ne i32 %117, 0, !dbg !18424
  br i1 %118, label %119, label %122, !dbg !18425

119:                                              ; preds = %112, %105
  %120 = load i32, i32* %6, align 4, !dbg !18426
  %121 = add nsw i32 -15616, %120, !dbg !18428
  store i32 %121, i32* %3, align 4, !dbg !18429
  br label %223, !dbg !18429

122:                                              ; preds = %112
  %123 = load i64, i64* %11, align 8, !dbg !18430
  %124 = load i8*, i8** %7, align 8, !dbg !18431
  %125 = getelementptr inbounds i8, i8* %124, i64 %123, !dbg !18431
  store i8* %125, i8** %7, align 8, !dbg !18431
  %126 = load i8*, i8** %10, align 8, !dbg !18432
  %127 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %126, i64* %11, i32 3), !dbg !18434
  store i32 %127, i32* %6, align 4, !dbg !18435
  %128 = icmp eq i32 %127, 0, !dbg !18436
  br i1 %128, label %129, label %133, !dbg !18437

129:                                              ; preds = %122
  %130 = load i64, i64* %11, align 8, !dbg !18438
  %131 = load i8*, i8** %7, align 8, !dbg !18439
  %132 = getelementptr inbounds i8, i8* %131, i64 %130, !dbg !18439
  store i8* %132, i8** %7, align 8, !dbg !18439
  br label %133, !dbg !18440

133:                                              ; preds = %129, %122
  %134 = load i8*, i8** %7, align 8, !dbg !18441
  %135 = load i8*, i8** %10, align 8, !dbg !18443
  %136 = icmp ne i8* %134, %135, !dbg !18444
  br i1 %136, label %137, label %138, !dbg !18445

137:                                              ; preds = %133
  store i32 -15718, i32* %3, align 4, !dbg !18446
  br label %223, !dbg !18446

138:                                              ; preds = %133
  %139 = load i8*, i8** %8, align 8, !dbg !18447
  %140 = call i32 @mbedtls_asn1_get_tag(i8** %7, i8* %139, i64* %11, i32 4), !dbg !18449
  store i32 %140, i32* %6, align 4, !dbg !18450
  %141 = icmp ne i32 %140, 0, !dbg !18451
  br i1 %141, label %142, label %145, !dbg !18452

142:                                              ; preds = %138
  %143 = load i32, i32* %6, align 4, !dbg !18453
  %144 = add nsw i32 -15616, %143, !dbg !18454
  store i32 %144, i32* %3, align 4, !dbg !18455
  br label %223, !dbg !18455

145:                                              ; preds = %138
  %146 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18456
  %147 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18458
  %148 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %147, i32 0, i32 4, !dbg !18459
  %149 = load i8*, i8** %7, align 8, !dbg !18460
  %150 = load i64, i64* %11, align 8, !dbg !18461
  %151 = call i32 @mbedtls_ecp_point_read_binary(%struct.mbedtls_ecp_group* %146, %struct.mbedtls_ecp_point* %148, i8* %149, i64 %150), !dbg !18462
  store i32 %151, i32* %6, align 4, !dbg !18463
  %152 = icmp ne i32 %151, 0, !dbg !18464
  br i1 %152, label %153, label %205, !dbg !18465

153:                                              ; preds = %145
  %154 = load i32, i32* %6, align 4, !dbg !18466
  %155 = icmp ne i32 %154, -20096, !dbg !18469
  br i1 %155, label %203, label %156, !dbg !18470

156:                                              ; preds = %153
  %157 = load i8*, i8** %7, align 8, !dbg !18471
  %158 = getelementptr inbounds i8, i8* %157, i64 0, !dbg !18471
  %159 = load i8, i8* %158, align 1, !dbg !18471
  %160 = zext i8 %159 to i32, !dbg !18471
  %161 = icmp ne i32 %160, 2, !dbg !18472
  br i1 %161, label %162, label %168, !dbg !18473

162:                                              ; preds = %156
  %163 = load i8*, i8** %7, align 8, !dbg !18474
  %164 = getelementptr inbounds i8, i8* %163, i64 0, !dbg !18474
  %165 = load i8, i8* %164, align 1, !dbg !18474
  %166 = zext i8 %165 to i32, !dbg !18474
  %167 = icmp ne i32 %166, 3, !dbg !18475
  br i1 %167, label %203, label %168, !dbg !18476

168:                                              ; preds = %162, %156
  %169 = load i64, i64* %11, align 8, !dbg !18477
  %170 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18478
  %171 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %170, i32 0, i32 1, !dbg !18479
  %172 = call i64 @mbedtls_mpi_size(%struct.mbedtls_mpi* %171), !dbg !18480
  %173 = add i64 %172, 1, !dbg !18481
  %174 = icmp ne i64 %169, %173, !dbg !18482
  br i1 %174, label %203, label %175, !dbg !18483

175:                                              ; preds = %168
  %176 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18484
  %177 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %176, i32 0, i32 4, !dbg !18485
  %178 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %177, i32 0, i32 0, !dbg !18486
  %179 = load i8*, i8** %7, align 8, !dbg !18487
  %180 = getelementptr inbounds i8, i8* %179, i64 1, !dbg !18488
  %181 = load i64, i64* %11, align 8, !dbg !18489
  %182 = sub i64 %181, 1, !dbg !18490
  %183 = call i32 @mbedtls_mpi_read_binary(%struct.mbedtls_mpi* %178, i8* %180, i64 %182), !dbg !18491
  %184 = icmp ne i32 %183, 0, !dbg !18492
  br i1 %184, label %203, label %185, !dbg !18493

185:                                              ; preds = %175
  %186 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18494
  %187 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %186, i32 0, i32 4, !dbg !18495
  %188 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %187, i32 0, i32 1, !dbg !18496
  %189 = load i8*, i8** %7, align 8, !dbg !18497
  %190 = getelementptr inbounds i8, i8* %189, i64 0, !dbg !18497
  %191 = load i8, i8* %190, align 1, !dbg !18497
  %192 = zext i8 %191 to i32, !dbg !18497
  %193 = sub nsw i32 %192, 2, !dbg !18498
  %194 = sext i32 %193 to i64, !dbg !18497
  %195 = call i32 @mbedtls_mpi_lset(%struct.mbedtls_mpi* %188, i64 %194), !dbg !18499
  %196 = icmp ne i32 %195, 0, !dbg !18500
  br i1 %196, label %203, label %197, !dbg !18501

197:                                              ; preds = %185
  %198 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18502
  %199 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %198, i32 0, i32 4, !dbg !18503
  %200 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %199, i32 0, i32 2, !dbg !18504
  %201 = call i32 @mbedtls_mpi_lset(%struct.mbedtls_mpi* %200, i64 1), !dbg !18505
  %202 = icmp ne i32 %201, 0, !dbg !18506
  br i1 %202, label %203, label %204, !dbg !18507

203:                                              ; preds = %197, %185, %175, %168, %162, %153
  store i32 -15616, i32* %3, align 4, !dbg !18508
  br label %223, !dbg !18508

204:                                              ; preds = %197
  br label %205, !dbg !18510

205:                                              ; preds = %204, %145
  %206 = load i64, i64* %11, align 8, !dbg !18511
  %207 = load i8*, i8** %7, align 8, !dbg !18512
  %208 = getelementptr inbounds i8, i8* %207, i64 %206, !dbg !18512
  store i8* %208, i8** %7, align 8, !dbg !18512
  %209 = load i8*, i8** %8, align 8, !dbg !18513
  %210 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18515
  %211 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %210, i32 0, i32 5, !dbg !18516
  %212 = call i32 @mbedtls_asn1_get_mpi(i8** %7, i8* %209, %struct.mbedtls_mpi* %211), !dbg !18517
  store i32 %212, i32* %6, align 4, !dbg !18518
  %213 = icmp ne i32 %212, 0, !dbg !18519
  br i1 %213, label %214, label %217, !dbg !18520

214:                                              ; preds = %205
  %215 = load i32, i32* %6, align 4, !dbg !18521
  %216 = add nsw i32 -15616, %215, !dbg !18522
  store i32 %216, i32* %3, align 4, !dbg !18523
  br label %223, !dbg !18523

217:                                              ; preds = %205
  %218 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18524
  %219 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %218, i32 0, i32 5, !dbg !18525
  %220 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %219), !dbg !18526
  %221 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %5, align 8, !dbg !18527
  %222 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %221, i32 0, i32 7, !dbg !18528
  store i64 %220, i64* %222, align 8, !dbg !18529
  store i32 0, i32* %3, align 4, !dbg !18530
  br label %223, !dbg !18530

223:                                              ; preds = %217, %214, %203, %142, %137, %119, %102, %86, %81, %69, %59, %49, %40, %35, %26
  %224 = load i32, i32* %3, align 4, !dbg !18531
  ret i32 %224, !dbg !18531
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_group_id_from_group(%struct.mbedtls_ecp_group* %0, i32* %1) #0 !dbg !18532 {
  %3 = alloca %struct.mbedtls_ecp_group*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mbedtls_ecp_group, align 8
  %7 = alloca i32*, align 8
  store %struct.mbedtls_ecp_group* %0, %struct.mbedtls_ecp_group** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_group** %3, metadata !18537, metadata !DIExpression()), !dbg !18538
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !18539, metadata !DIExpression()), !dbg !18540
  call void @llvm.dbg.declare(metadata i32* %5, metadata !18541, metadata !DIExpression()), !dbg !18542
  store i32 0, i32* %5, align 4, !dbg !18542
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_group* %6, metadata !18543, metadata !DIExpression()), !dbg !18544
  call void @llvm.dbg.declare(metadata i32** %7, metadata !18545, metadata !DIExpression()), !dbg !18546
  call void @mbedtls_ecp_group_init(%struct.mbedtls_ecp_group* %6), !dbg !18547
  %8 = call i32* @mbedtls_ecp_grp_id_list(), !dbg !18548
  store i32* %8, i32** %7, align 8, !dbg !18550
  br label %9, !dbg !18551

9:                                                ; preds = %86, %2
  %10 = load i32*, i32** %7, align 8, !dbg !18552
  %11 = load i32, i32* %10, align 4, !dbg !18554
  %12 = icmp ne i32 %11, 0, !dbg !18555
  br i1 %12, label %13, label %89, !dbg !18556

13:                                               ; preds = %9
  call void @mbedtls_ecp_group_free(%struct.mbedtls_ecp_group* %6), !dbg !18557
  br label %14, !dbg !18559

14:                                               ; preds = %13
  %15 = load i32*, i32** %7, align 8, !dbg !18560
  %16 = load i32, i32* %15, align 4, !dbg !18560
  %17 = call i32 @mbedtls_ecp_group_load(%struct.mbedtls_ecp_group* %6, i32 %16), !dbg !18560
  store i32 %17, i32* %5, align 4, !dbg !18560
  %18 = icmp ne i32 %17, 0, !dbg !18560
  br i1 %18, label %19, label %20, !dbg !18563

19:                                               ; preds = %14
  br label %90, !dbg !18560

20:                                               ; preds = %14
  br label %21, !dbg !18563

21:                                               ; preds = %20
  %22 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18564
  %23 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %22, i32 0, i32 6, !dbg !18566
  %24 = load i64, i64* %23, align 8, !dbg !18566
  %25 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 6, !dbg !18567
  %26 = load i64, i64* %25, align 8, !dbg !18567
  %27 = icmp eq i64 %24, %26, !dbg !18568
  br i1 %27, label %28, label %85, !dbg !18569

28:                                               ; preds = %21
  %29 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18570
  %30 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %29, i32 0, i32 7, !dbg !18571
  %31 = load i64, i64* %30, align 8, !dbg !18571
  %32 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 7, !dbg !18572
  %33 = load i64, i64* %32, align 8, !dbg !18572
  %34 = icmp eq i64 %31, %33, !dbg !18573
  br i1 %34, label %35, label %85, !dbg !18574

35:                                               ; preds = %28
  %36 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18575
  %37 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %36, i32 0, i32 1, !dbg !18576
  %38 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 1, !dbg !18577
  %39 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %37, %struct.mbedtls_mpi* %38), !dbg !18578
  %40 = icmp eq i32 %39, 0, !dbg !18579
  br i1 %40, label %41, label %85, !dbg !18580

41:                                               ; preds = %35
  %42 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18581
  %43 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %42, i32 0, i32 2, !dbg !18582
  %44 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 2, !dbg !18583
  %45 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %43, %struct.mbedtls_mpi* %44), !dbg !18584
  %46 = icmp eq i32 %45, 0, !dbg !18585
  br i1 %46, label %47, label %85, !dbg !18586

47:                                               ; preds = %41
  %48 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18587
  %49 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %48, i32 0, i32 3, !dbg !18588
  %50 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 3, !dbg !18589
  %51 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %49, %struct.mbedtls_mpi* %50), !dbg !18590
  %52 = icmp eq i32 %51, 0, !dbg !18591
  br i1 %52, label %53, label %85, !dbg !18592

53:                                               ; preds = %47
  %54 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18593
  %55 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %54, i32 0, i32 5, !dbg !18594
  %56 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 5, !dbg !18595
  %57 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %55, %struct.mbedtls_mpi* %56), !dbg !18596
  %58 = icmp eq i32 %57, 0, !dbg !18597
  br i1 %58, label %59, label %85, !dbg !18598

59:                                               ; preds = %53
  %60 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18599
  %61 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %60, i32 0, i32 4, !dbg !18600
  %62 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %61, i32 0, i32 0, !dbg !18601
  %63 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 4, !dbg !18602
  %64 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %63, i32 0, i32 0, !dbg !18603
  %65 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %62, %struct.mbedtls_mpi* %64), !dbg !18604
  %66 = icmp eq i32 %65, 0, !dbg !18605
  br i1 %66, label %67, label %85, !dbg !18606

67:                                               ; preds = %59
  %68 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18607
  %69 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %68, i32 0, i32 4, !dbg !18608
  %70 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %69, i32 0, i32 2, !dbg !18609
  %71 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 4, !dbg !18610
  %72 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %71, i32 0, i32 2, !dbg !18611
  %73 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %70, %struct.mbedtls_mpi* %72), !dbg !18612
  %74 = icmp eq i32 %73, 0, !dbg !18613
  br i1 %74, label %75, label %85, !dbg !18614

75:                                               ; preds = %67
  %76 = load %struct.mbedtls_ecp_group*, %struct.mbedtls_ecp_group** %3, align 8, !dbg !18615
  %77 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %76, i32 0, i32 4, !dbg !18616
  %78 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %77, i32 0, i32 1, !dbg !18617
  %79 = call i32 @mbedtls_mpi_get_bit(%struct.mbedtls_mpi* %78, i64 0), !dbg !18618
  %80 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %6, i32 0, i32 4, !dbg !18619
  %81 = getelementptr inbounds %struct.mbedtls_ecp_point, %struct.mbedtls_ecp_point* %80, i32 0, i32 1, !dbg !18620
  %82 = call i32 @mbedtls_mpi_get_bit(%struct.mbedtls_mpi* %81, i64 0), !dbg !18621
  %83 = icmp eq i32 %79, %82, !dbg !18622
  br i1 %83, label %84, label %85, !dbg !18623

84:                                               ; preds = %75
  br label %89, !dbg !18624

85:                                               ; preds = %75, %67, %59, %53, %47, %41, %35, %28, %21
  br label %86, !dbg !18626

86:                                               ; preds = %85
  %87 = load i32*, i32** %7, align 8, !dbg !18627
  %88 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !18627
  store i32* %88, i32** %7, align 8, !dbg !18627
  br label %9, !dbg !18628, !llvm.loop !18629

89:                                               ; preds = %84, %9
  br label %90, !dbg !18630

90:                                               ; preds = %89, %19
  call void @llvm.dbg.label(metadata !18631), !dbg !18632
  call void @mbedtls_ecp_group_free(%struct.mbedtls_ecp_group* %6), !dbg !18633
  %91 = load i32*, i32** %7, align 8, !dbg !18634
  %92 = load i32, i32* %91, align 4, !dbg !18635
  %93 = load i32*, i32** %4, align 8, !dbg !18636
  store i32 %92, i32* %93, align 4, !dbg !18637
  %94 = load i32, i32* %5, align 4, !dbg !18638
  %95 = icmp eq i32 %94, 0, !dbg !18640
  br i1 %95, label %96, label %101, !dbg !18641

96:                                               ; preds = %90
  %97 = load i32*, i32** %7, align 8, !dbg !18642
  %98 = load i32, i32* %97, align 4, !dbg !18643
  %99 = icmp eq i32 %98, 0, !dbg !18644
  br i1 %99, label %100, label %101, !dbg !18645

100:                                              ; preds = %96
  store i32 -20096, i32* %5, align 4, !dbg !18646
  br label %101, !dbg !18647

101:                                              ; preds = %100, %96, %90
  %102 = load i32, i32* %5, align 4, !dbg !18648
  ret i32 %102, !dbg !18649
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_parse_key(%struct.mbedtls_pk_context* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 !dbg !18650 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.mbedtls_pk_context*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.mbedtls_pk_info_t*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.mbedtls_pem_context, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %7, metadata !18653, metadata !DIExpression()), !dbg !18654
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !18655, metadata !DIExpression()), !dbg !18656
  store i64 %2, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !18657, metadata !DIExpression()), !dbg !18658
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !18659, metadata !DIExpression()), !dbg !18660
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !18661, metadata !DIExpression()), !dbg !18662
  call void @llvm.dbg.declare(metadata i32* %12, metadata !18663, metadata !DIExpression()), !dbg !18664
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_info_t** %13, metadata !18665, metadata !DIExpression()), !dbg !18666
  call void @llvm.dbg.declare(metadata i64* %14, metadata !18667, metadata !DIExpression()), !dbg !18668
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pem_context* %15, metadata !18669, metadata !DIExpression()), !dbg !18677
  call void @mbedtls_pem_init(%struct.mbedtls_pem_context* %15), !dbg !18678
  %16 = load i64, i64* %9, align 8, !dbg !18679
  %17 = icmp eq i64 %16, 0, !dbg !18681
  br i1 %17, label %26, label %18, !dbg !18682

18:                                               ; preds = %5
  %19 = load i8*, i8** %8, align 8, !dbg !18683
  %20 = load i64, i64* %9, align 8, !dbg !18684
  %21 = sub i64 %20, 1, !dbg !18685
  %22 = getelementptr inbounds i8, i8* %19, i64 %21, !dbg !18683
  %23 = load i8, i8* %22, align 1, !dbg !18683
  %24 = zext i8 %23 to i32, !dbg !18683
  %25 = icmp ne i32 %24, 0, !dbg !18686
  br i1 %25, label %26, label %27, !dbg !18687

26:                                               ; preds = %18, %5
  store i32 -4224, i32* %12, align 4, !dbg !18688
  br label %32, !dbg !18689

27:                                               ; preds = %18
  %28 = load i8*, i8** %8, align 8, !dbg !18690
  %29 = load i8*, i8** %10, align 8, !dbg !18691
  %30 = load i64, i64* %11, align 8, !dbg !18692
  %31 = call i32 @mbedtls_pem_read_buffer(%struct.mbedtls_pem_context* %15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.405, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.406, i64 0, i64 0), i8* %28, i8* %29, i64 %30, i64* %14), !dbg !18693
  store i32 %31, i32* %12, align 4, !dbg !18694
  br label %32

32:                                               ; preds = %27, %26
  %33 = load i32, i32* %12, align 4, !dbg !18695
  %34 = icmp eq i32 %33, 0, !dbg !18697
  br i1 %34, label %35, label %62, !dbg !18698

35:                                               ; preds = %32
  %36 = call %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 1), !dbg !18699
  store %struct.mbedtls_pk_info_t* %36, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18702
  %37 = icmp eq %struct.mbedtls_pk_info_t* %36, null, !dbg !18703
  br i1 %37, label %38, label %39, !dbg !18704

38:                                               ; preds = %35
  store i32 -15488, i32* %6, align 4, !dbg !18705
  br label %285, !dbg !18705

39:                                               ; preds = %35
  %40 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18706
  %41 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18708
  %42 = call i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %40, %struct.mbedtls_pk_info_t* %41), !dbg !18709
  store i32 %42, i32* %12, align 4, !dbg !18710
  %43 = icmp ne i32 %42, 0, !dbg !18711
  br i1 %43, label %58, label %44, !dbg !18712

44:                                               ; preds = %39
  %45 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18713
  %46 = bitcast %struct.mbedtls_pk_context* %45 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !18714
  %47 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %46, i32 0, i32 0, !dbg !18714
  %48 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %47, align 8, !dbg !18714
  %49 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %46, i32 0, i32 1, !dbg !18714
  %50 = load i8*, i8** %49, align 8, !dbg !18714
  %51 = call %struct.mbedtls_rsa_context* @mbedtls_pk_rsa.401(%struct.mbedtls_pk_info_t* %48, i8* %50), !dbg !18714
  %52 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 0, !dbg !18715
  %53 = load i8*, i8** %52, align 8, !dbg !18715
  %54 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 1, !dbg !18716
  %55 = load i64, i64* %54, align 8, !dbg !18716
  %56 = call i32 @pk_parse_key_pkcs1_der(%struct.mbedtls_rsa_context* %51, i8* %53, i64 %55), !dbg !18717
  store i32 %56, i32* %12, align 4, !dbg !18718
  %57 = icmp ne i32 %56, 0, !dbg !18719
  br i1 %57, label %58, label %60, !dbg !18720

58:                                               ; preds = %44, %39
  %59 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18721
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %59), !dbg !18723
  br label %60, !dbg !18724

60:                                               ; preds = %58, %44
  call void @mbedtls_pem_free(%struct.mbedtls_pem_context* %15), !dbg !18725
  %61 = load i32, i32* %12, align 4, !dbg !18726
  store i32 %61, i32* %6, align 4, !dbg !18727
  br label %285, !dbg !18727

62:                                               ; preds = %32
  %63 = load i32, i32* %12, align 4, !dbg !18728
  %64 = icmp eq i32 %63, -4992, !dbg !18730
  br i1 %64, label %65, label %66, !dbg !18731

65:                                               ; preds = %62
  store i32 -15232, i32* %6, align 4, !dbg !18732
  br label %285, !dbg !18732

66:                                               ; preds = %62
  %67 = load i32, i32* %12, align 4, !dbg !18733
  %68 = icmp eq i32 %67, -4864, !dbg !18735
  br i1 %68, label %69, label %70, !dbg !18736

69:                                               ; preds = %66
  store i32 -15360, i32* %6, align 4, !dbg !18737
  br label %285, !dbg !18737

70:                                               ; preds = %66
  %71 = load i32, i32* %12, align 4, !dbg !18738
  %72 = icmp ne i32 %71, -4224, !dbg !18740
  br i1 %72, label %73, label %75, !dbg !18741

73:                                               ; preds = %70
  %74 = load i32, i32* %12, align 4, !dbg !18742
  store i32 %74, i32* %6, align 4, !dbg !18743
  br label %285, !dbg !18743

75:                                               ; preds = %70
  br label %76

76:                                               ; preds = %75
  br label %77

77:                                               ; preds = %76
  br label %78

78:                                               ; preds = %77
  %79 = load i64, i64* %9, align 8, !dbg !18744
  %80 = icmp eq i64 %79, 0, !dbg !18746
  br i1 %80, label %89, label %81, !dbg !18747

81:                                               ; preds = %78
  %82 = load i8*, i8** %8, align 8, !dbg !18748
  %83 = load i64, i64* %9, align 8, !dbg !18749
  %84 = sub i64 %83, 1, !dbg !18750
  %85 = getelementptr inbounds i8, i8* %82, i64 %84, !dbg !18748
  %86 = load i8, i8* %85, align 1, !dbg !18748
  %87 = zext i8 %86 to i32, !dbg !18748
  %88 = icmp ne i32 %87, 0, !dbg !18751
  br i1 %88, label %89, label %90, !dbg !18752

89:                                               ; preds = %81, %78
  store i32 -4224, i32* %12, align 4, !dbg !18753
  br label %95, !dbg !18754

90:                                               ; preds = %81
  %91 = load i8*, i8** %8, align 8, !dbg !18755
  %92 = load i8*, i8** %10, align 8, !dbg !18756
  %93 = load i64, i64* %11, align 8, !dbg !18757
  %94 = call i32 @mbedtls_pem_read_buffer(%struct.mbedtls_pem_context* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.407, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.408, i64 0, i64 0), i8* %91, i8* %92, i64 %93, i64* %14), !dbg !18758
  store i32 %94, i32* %12, align 4, !dbg !18759
  br label %95

95:                                               ; preds = %90, %89
  %96 = load i32, i32* %12, align 4, !dbg !18760
  %97 = icmp eq i32 %96, 0, !dbg !18762
  br i1 %97, label %98, label %125, !dbg !18763

98:                                               ; preds = %95
  %99 = call %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 2), !dbg !18764
  store %struct.mbedtls_pk_info_t* %99, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18767
  %100 = icmp eq %struct.mbedtls_pk_info_t* %99, null, !dbg !18768
  br i1 %100, label %101, label %102, !dbg !18769

101:                                              ; preds = %98
  store i32 -15488, i32* %6, align 4, !dbg !18770
  br label %285, !dbg !18770

102:                                              ; preds = %98
  %103 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18771
  %104 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18773
  %105 = call i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %103, %struct.mbedtls_pk_info_t* %104), !dbg !18774
  store i32 %105, i32* %12, align 4, !dbg !18775
  %106 = icmp ne i32 %105, 0, !dbg !18776
  br i1 %106, label %121, label %107, !dbg !18777

107:                                              ; preds = %102
  %108 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18778
  %109 = bitcast %struct.mbedtls_pk_context* %108 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !18779
  %110 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %109, i32 0, i32 0, !dbg !18779
  %111 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %110, align 8, !dbg !18779
  %112 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %109, i32 0, i32 1, !dbg !18779
  %113 = load i8*, i8** %112, align 8, !dbg !18779
  %114 = call %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %111, i8* %113), !dbg !18779
  %115 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 0, !dbg !18780
  %116 = load i8*, i8** %115, align 8, !dbg !18780
  %117 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 1, !dbg !18781
  %118 = load i64, i64* %117, align 8, !dbg !18781
  %119 = call i32 @pk_parse_key_sec1_der(%struct.mbedtls_ecp_keypair* %114, i8* %116, i64 %118), !dbg !18782
  store i32 %119, i32* %12, align 4, !dbg !18783
  %120 = icmp ne i32 %119, 0, !dbg !18784
  br i1 %120, label %121, label %123, !dbg !18785

121:                                              ; preds = %107, %102
  %122 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18786
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %122), !dbg !18788
  br label %123, !dbg !18789

123:                                              ; preds = %121, %107
  call void @mbedtls_pem_free(%struct.mbedtls_pem_context* %15), !dbg !18790
  %124 = load i32, i32* %12, align 4, !dbg !18791
  store i32 %124, i32* %6, align 4, !dbg !18792
  br label %285, !dbg !18792

125:                                              ; preds = %95
  %126 = load i32, i32* %12, align 4, !dbg !18793
  %127 = icmp eq i32 %126, -4992, !dbg !18795
  br i1 %127, label %128, label %129, !dbg !18796

128:                                              ; preds = %125
  store i32 -15232, i32* %6, align 4, !dbg !18797
  br label %285, !dbg !18797

129:                                              ; preds = %125
  %130 = load i32, i32* %12, align 4, !dbg !18798
  %131 = icmp eq i32 %130, -4864, !dbg !18800
  br i1 %131, label %132, label %133, !dbg !18801

132:                                              ; preds = %129
  store i32 -15360, i32* %6, align 4, !dbg !18802
  br label %285, !dbg !18802

133:                                              ; preds = %129
  %134 = load i32, i32* %12, align 4, !dbg !18803
  %135 = icmp ne i32 %134, -4224, !dbg !18805
  br i1 %135, label %136, label %138, !dbg !18806

136:                                              ; preds = %133
  %137 = load i32, i32* %12, align 4, !dbg !18807
  store i32 %137, i32* %6, align 4, !dbg !18808
  br label %285, !dbg !18808

138:                                              ; preds = %133
  br label %139

139:                                              ; preds = %138
  br label %140

140:                                              ; preds = %139
  br label %141

141:                                              ; preds = %140
  %142 = load i64, i64* %9, align 8, !dbg !18809
  %143 = icmp eq i64 %142, 0, !dbg !18811
  br i1 %143, label %152, label %144, !dbg !18812

144:                                              ; preds = %141
  %145 = load i8*, i8** %8, align 8, !dbg !18813
  %146 = load i64, i64* %9, align 8, !dbg !18814
  %147 = sub i64 %146, 1, !dbg !18815
  %148 = getelementptr inbounds i8, i8* %145, i64 %147, !dbg !18813
  %149 = load i8, i8* %148, align 1, !dbg !18813
  %150 = zext i8 %149 to i32, !dbg !18813
  %151 = icmp ne i32 %150, 0, !dbg !18816
  br i1 %151, label %152, label %153, !dbg !18817

152:                                              ; preds = %144, %141
  store i32 -4224, i32* %12, align 4, !dbg !18818
  br label %156, !dbg !18819

153:                                              ; preds = %144
  %154 = load i8*, i8** %8, align 8, !dbg !18820
  %155 = call i32 @mbedtls_pem_read_buffer(%struct.mbedtls_pem_context* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.409, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.410, i64 0, i64 0), i8* %154, i8* null, i64 0, i64* %14), !dbg !18821
  store i32 %155, i32* %12, align 4, !dbg !18822
  br label %156

156:                                              ; preds = %153, %152
  %157 = load i32, i32* %12, align 4, !dbg !18823
  %158 = icmp eq i32 %157, 0, !dbg !18825
  br i1 %158, label %159, label %171, !dbg !18826

159:                                              ; preds = %156
  %160 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18827
  %161 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 0, !dbg !18830
  %162 = load i8*, i8** %161, align 8, !dbg !18830
  %163 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 1, !dbg !18831
  %164 = load i64, i64* %163, align 8, !dbg !18831
  %165 = call i32 @pk_parse_key_pkcs8_unencrypted_der(%struct.mbedtls_pk_context* %160, i8* %162, i64 %164), !dbg !18832
  store i32 %165, i32* %12, align 4, !dbg !18833
  %166 = icmp ne i32 %165, 0, !dbg !18834
  br i1 %166, label %167, label %169, !dbg !18835

167:                                              ; preds = %159
  %168 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18836
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %168), !dbg !18838
  br label %169, !dbg !18839

169:                                              ; preds = %167, %159
  call void @mbedtls_pem_free(%struct.mbedtls_pem_context* %15), !dbg !18840
  %170 = load i32, i32* %12, align 4, !dbg !18841
  store i32 %170, i32* %6, align 4, !dbg !18842
  br label %285, !dbg !18842

171:                                              ; preds = %156
  %172 = load i32, i32* %12, align 4, !dbg !18843
  %173 = icmp ne i32 %172, -4224, !dbg !18845
  br i1 %173, label %174, label %176, !dbg !18846

174:                                              ; preds = %171
  %175 = load i32, i32* %12, align 4, !dbg !18847
  store i32 %175, i32* %6, align 4, !dbg !18848
  br label %285, !dbg !18848

176:                                              ; preds = %171
  br label %177

177:                                              ; preds = %176
  %178 = load i64, i64* %9, align 8, !dbg !18849
  %179 = icmp eq i64 %178, 0, !dbg !18851
  br i1 %179, label %188, label %180, !dbg !18852

180:                                              ; preds = %177
  %181 = load i8*, i8** %8, align 8, !dbg !18853
  %182 = load i64, i64* %9, align 8, !dbg !18854
  %183 = sub i64 %182, 1, !dbg !18855
  %184 = getelementptr inbounds i8, i8* %181, i64 %183, !dbg !18853
  %185 = load i8, i8* %184, align 1, !dbg !18853
  %186 = zext i8 %185 to i32, !dbg !18853
  %187 = icmp ne i32 %186, 0, !dbg !18856
  br i1 %187, label %188, label %189, !dbg !18857

188:                                              ; preds = %180, %177
  store i32 -4224, i32* %12, align 4, !dbg !18858
  br label %192, !dbg !18859

189:                                              ; preds = %180
  %190 = load i8*, i8** %8, align 8, !dbg !18860
  %191 = call i32 @mbedtls_pem_read_buffer(%struct.mbedtls_pem_context* %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.411, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.412, i64 0, i64 0), i8* %190, i8* null, i64 0, i64* %14), !dbg !18861
  store i32 %191, i32* %12, align 4, !dbg !18862
  br label %192

192:                                              ; preds = %189, %188
  %193 = load i32, i32* %12, align 4, !dbg !18863
  %194 = icmp eq i32 %193, 0, !dbg !18865
  br i1 %194, label %195, label %209, !dbg !18866

195:                                              ; preds = %192
  %196 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18867
  %197 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 0, !dbg !18870
  %198 = load i8*, i8** %197, align 8, !dbg !18870
  %199 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %15, i32 0, i32 1, !dbg !18871
  %200 = load i64, i64* %199, align 8, !dbg !18871
  %201 = load i8*, i8** %10, align 8, !dbg !18872
  %202 = load i64, i64* %11, align 8, !dbg !18873
  %203 = call i32 @pk_parse_key_pkcs8_encrypted_der(%struct.mbedtls_pk_context* %196, i8* %198, i64 %200, i8* %201, i64 %202), !dbg !18874
  store i32 %203, i32* %12, align 4, !dbg !18875
  %204 = icmp ne i32 %203, 0, !dbg !18876
  br i1 %204, label %205, label %207, !dbg !18877

205:                                              ; preds = %195
  %206 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18878
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %206), !dbg !18880
  br label %207, !dbg !18881

207:                                              ; preds = %205, %195
  call void @mbedtls_pem_free(%struct.mbedtls_pem_context* %15), !dbg !18882
  %208 = load i32, i32* %12, align 4, !dbg !18883
  store i32 %208, i32* %6, align 4, !dbg !18884
  br label %285, !dbg !18884

209:                                              ; preds = %192
  %210 = load i32, i32* %12, align 4, !dbg !18885
  %211 = icmp ne i32 %210, -4224, !dbg !18887
  br i1 %211, label %212, label %214, !dbg !18888

212:                                              ; preds = %209
  %213 = load i32, i32* %12, align 4, !dbg !18889
  store i32 %213, i32* %6, align 4, !dbg !18890
  br label %285, !dbg !18890

214:                                              ; preds = %209
  br label %215

215:                                              ; preds = %214
  %216 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18891
  %217 = load i8*, i8** %8, align 8, !dbg !18893
  %218 = load i64, i64* %9, align 8, !dbg !18894
  %219 = load i8*, i8** %10, align 8, !dbg !18895
  %220 = load i64, i64* %11, align 8, !dbg !18896
  %221 = call i32 @pk_parse_key_pkcs8_encrypted_der(%struct.mbedtls_pk_context* %216, i8* %217, i64 %218, i8* %219, i64 %220), !dbg !18897
  store i32 %221, i32* %12, align 4, !dbg !18898
  %222 = icmp eq i32 %221, 0, !dbg !18899
  br i1 %222, label %223, label %224, !dbg !18900

223:                                              ; preds = %215
  store i32 0, i32* %6, align 4, !dbg !18901
  br label %285, !dbg !18901

224:                                              ; preds = %215
  %225 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18903
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %225), !dbg !18904
  %226 = load i32, i32* %12, align 4, !dbg !18905
  %227 = icmp eq i32 %226, -15232, !dbg !18907
  br i1 %227, label %228, label %230, !dbg !18908

228:                                              ; preds = %224
  %229 = load i32, i32* %12, align 4, !dbg !18909
  store i32 %229, i32* %6, align 4, !dbg !18911
  br label %285, !dbg !18911

230:                                              ; preds = %224
  %231 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18912
  %232 = load i8*, i8** %8, align 8, !dbg !18914
  %233 = load i64, i64* %9, align 8, !dbg !18915
  %234 = call i32 @pk_parse_key_pkcs8_unencrypted_der(%struct.mbedtls_pk_context* %231, i8* %232, i64 %233), !dbg !18916
  store i32 %234, i32* %12, align 4, !dbg !18917
  %235 = icmp eq i32 %234, 0, !dbg !18918
  br i1 %235, label %236, label %237, !dbg !18919

236:                                              ; preds = %230
  store i32 0, i32* %6, align 4, !dbg !18920
  br label %285, !dbg !18920

237:                                              ; preds = %230
  %238 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18921
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %238), !dbg !18922
  %239 = call %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 1), !dbg !18923
  store %struct.mbedtls_pk_info_t* %239, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18925
  %240 = icmp eq %struct.mbedtls_pk_info_t* %239, null, !dbg !18926
  br i1 %240, label %241, label %242, !dbg !18927

241:                                              ; preds = %237
  store i32 -15488, i32* %6, align 4, !dbg !18928
  br label %285, !dbg !18928

242:                                              ; preds = %237
  %243 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18929
  %244 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18931
  %245 = call i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %243, %struct.mbedtls_pk_info_t* %244), !dbg !18932
  store i32 %245, i32* %12, align 4, !dbg !18933
  %246 = icmp ne i32 %245, 0, !dbg !18934
  br i1 %246, label %259, label %247, !dbg !18935

247:                                              ; preds = %242
  %248 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18936
  %249 = bitcast %struct.mbedtls_pk_context* %248 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !18937
  %250 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %249, i32 0, i32 0, !dbg !18937
  %251 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %250, align 8, !dbg !18937
  %252 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %249, i32 0, i32 1, !dbg !18937
  %253 = load i8*, i8** %252, align 8, !dbg !18937
  %254 = call %struct.mbedtls_rsa_context* @mbedtls_pk_rsa.401(%struct.mbedtls_pk_info_t* %251, i8* %253), !dbg !18937
  %255 = load i8*, i8** %8, align 8, !dbg !18938
  %256 = load i64, i64* %9, align 8, !dbg !18939
  %257 = call i32 @pk_parse_key_pkcs1_der(%struct.mbedtls_rsa_context* %254, i8* %255, i64 %256), !dbg !18940
  store i32 %257, i32* %12, align 4, !dbg !18941
  %258 = icmp eq i32 %257, 0, !dbg !18942
  br i1 %258, label %259, label %260, !dbg !18943

259:                                              ; preds = %247, %242
  store i32 0, i32* %6, align 4, !dbg !18944
  br label %285, !dbg !18944

260:                                              ; preds = %247
  %261 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18946
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %261), !dbg !18947
  %262 = call %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 2), !dbg !18948
  store %struct.mbedtls_pk_info_t* %262, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18950
  %263 = icmp eq %struct.mbedtls_pk_info_t* %262, null, !dbg !18951
  br i1 %263, label %264, label %265, !dbg !18952

264:                                              ; preds = %260
  store i32 -15488, i32* %6, align 4, !dbg !18953
  br label %285, !dbg !18953

265:                                              ; preds = %260
  %266 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18954
  %267 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %13, align 8, !dbg !18956
  %268 = call i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %266, %struct.mbedtls_pk_info_t* %267), !dbg !18957
  store i32 %268, i32* %12, align 4, !dbg !18958
  %269 = icmp ne i32 %268, 0, !dbg !18959
  br i1 %269, label %282, label %270, !dbg !18960

270:                                              ; preds = %265
  %271 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18961
  %272 = bitcast %struct.mbedtls_pk_context* %271 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !18962
  %273 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %272, i32 0, i32 0, !dbg !18962
  %274 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %273, align 8, !dbg !18962
  %275 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %272, i32 0, i32 1, !dbg !18962
  %276 = load i8*, i8** %275, align 8, !dbg !18962
  %277 = call %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %274, i8* %276), !dbg !18962
  %278 = load i8*, i8** %8, align 8, !dbg !18963
  %279 = load i64, i64* %9, align 8, !dbg !18964
  %280 = call i32 @pk_parse_key_sec1_der(%struct.mbedtls_ecp_keypair* %277, i8* %278, i64 %279), !dbg !18965
  store i32 %280, i32* %12, align 4, !dbg !18966
  %281 = icmp eq i32 %280, 0, !dbg !18967
  br i1 %281, label %282, label %283, !dbg !18968

282:                                              ; preds = %270, %265
  store i32 0, i32* %6, align 4, !dbg !18969
  br label %285, !dbg !18969

283:                                              ; preds = %270
  %284 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !18971
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %284), !dbg !18972
  store i32 -15616, i32* %6, align 4, !dbg !18973
  br label %285, !dbg !18973

285:                                              ; preds = %283, %282, %264, %259, %241, %236, %228, %223, %212, %207, %174, %169, %136, %132, %128, %123, %101, %73, %69, %65, %60, %38
  %286 = load i32, i32* %6, align 4, !dbg !18974
  ret i32 %286, !dbg !18974
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_parse_key_pkcs1_der(%struct.mbedtls_rsa_context* %0, i8* %1, i64 %2) #0 !dbg !18975 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_rsa_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %5, metadata !18978, metadata !DIExpression()), !dbg !18979
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !18980, metadata !DIExpression()), !dbg !18981
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !18982, metadata !DIExpression()), !dbg !18983
  call void @llvm.dbg.declare(metadata i32* %8, metadata !18984, metadata !DIExpression()), !dbg !18985
  call void @llvm.dbg.declare(metadata i64* %9, metadata !18986, metadata !DIExpression()), !dbg !18987
  call void @llvm.dbg.declare(metadata i8** %10, metadata !18988, metadata !DIExpression()), !dbg !18989
  call void @llvm.dbg.declare(metadata i8** %11, metadata !18990, metadata !DIExpression()), !dbg !18991
  %12 = load i8*, i8** %6, align 8, !dbg !18992
  store i8* %12, i8** %10, align 8, !dbg !18993
  %13 = load i8*, i8** %10, align 8, !dbg !18994
  %14 = load i64, i64* %7, align 8, !dbg !18995
  %15 = getelementptr inbounds i8, i8* %13, i64 %14, !dbg !18996
  store i8* %15, i8** %11, align 8, !dbg !18997
  %16 = load i8*, i8** %11, align 8, !dbg !18998
  %17 = call i32 @mbedtls_asn1_get_tag(i8** %10, i8* %16, i64* %9, i32 48), !dbg !19000
  store i32 %17, i32* %8, align 4, !dbg !19001
  %18 = icmp ne i32 %17, 0, !dbg !19002
  br i1 %18, label %19, label %22, !dbg !19003

19:                                               ; preds = %3
  %20 = load i32, i32* %8, align 4, !dbg !19004
  %21 = add nsw i32 -15616, %20, !dbg !19006
  store i32 %21, i32* %4, align 4, !dbg !19007
  br label %111, !dbg !19007

22:                                               ; preds = %3
  %23 = load i8*, i8** %10, align 8, !dbg !19008
  %24 = load i64, i64* %9, align 8, !dbg !19009
  %25 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !19010
  store i8* %25, i8** %11, align 8, !dbg !19011
  %26 = load i8*, i8** %11, align 8, !dbg !19012
  %27 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19014
  %28 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %27, i32 0, i32 0, !dbg !19015
  %29 = call i32 @mbedtls_asn1_get_int(i8** %10, i8* %26, i32* %28), !dbg !19016
  store i32 %29, i32* %8, align 4, !dbg !19017
  %30 = icmp ne i32 %29, 0, !dbg !19018
  br i1 %30, label %31, label %34, !dbg !19019

31:                                               ; preds = %22
  %32 = load i32, i32* %8, align 4, !dbg !19020
  %33 = add nsw i32 -15616, %32, !dbg !19022
  store i32 %33, i32* %4, align 4, !dbg !19023
  br label %111, !dbg !19023

34:                                               ; preds = %22
  %35 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19024
  %36 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %35, i32 0, i32 0, !dbg !19026
  %37 = load i32, i32* %36, align 8, !dbg !19026
  %38 = icmp ne i32 %37, 0, !dbg !19027
  br i1 %38, label %39, label %40, !dbg !19028

39:                                               ; preds = %34
  store i32 -15744, i32* %4, align 4, !dbg !19029
  br label %111, !dbg !19029

40:                                               ; preds = %34
  %41 = load i8*, i8** %11, align 8, !dbg !19031
  %42 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19033
  %43 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %42, i32 0, i32 2, !dbg !19034
  %44 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %41, %struct.mbedtls_mpi* %43), !dbg !19035
  store i32 %44, i32* %8, align 4, !dbg !19036
  %45 = icmp ne i32 %44, 0, !dbg !19037
  br i1 %45, label %88, label %46, !dbg !19038

46:                                               ; preds = %40
  %47 = load i8*, i8** %11, align 8, !dbg !19039
  %48 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19040
  %49 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %48, i32 0, i32 3, !dbg !19041
  %50 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %47, %struct.mbedtls_mpi* %49), !dbg !19042
  store i32 %50, i32* %8, align 4, !dbg !19043
  %51 = icmp ne i32 %50, 0, !dbg !19044
  br i1 %51, label %88, label %52, !dbg !19045

52:                                               ; preds = %46
  %53 = load i8*, i8** %11, align 8, !dbg !19046
  %54 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19047
  %55 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %54, i32 0, i32 4, !dbg !19048
  %56 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %53, %struct.mbedtls_mpi* %55), !dbg !19049
  store i32 %56, i32* %8, align 4, !dbg !19050
  %57 = icmp ne i32 %56, 0, !dbg !19051
  br i1 %57, label %88, label %58, !dbg !19052

58:                                               ; preds = %52
  %59 = load i8*, i8** %11, align 8, !dbg !19053
  %60 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19054
  %61 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %60, i32 0, i32 5, !dbg !19055
  %62 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %59, %struct.mbedtls_mpi* %61), !dbg !19056
  store i32 %62, i32* %8, align 4, !dbg !19057
  %63 = icmp ne i32 %62, 0, !dbg !19058
  br i1 %63, label %88, label %64, !dbg !19059

64:                                               ; preds = %58
  %65 = load i8*, i8** %11, align 8, !dbg !19060
  %66 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19061
  %67 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %66, i32 0, i32 6, !dbg !19062
  %68 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %65, %struct.mbedtls_mpi* %67), !dbg !19063
  store i32 %68, i32* %8, align 4, !dbg !19064
  %69 = icmp ne i32 %68, 0, !dbg !19065
  br i1 %69, label %88, label %70, !dbg !19066

70:                                               ; preds = %64
  %71 = load i8*, i8** %11, align 8, !dbg !19067
  %72 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19068
  %73 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %72, i32 0, i32 7, !dbg !19069
  %74 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %71, %struct.mbedtls_mpi* %73), !dbg !19070
  store i32 %74, i32* %8, align 4, !dbg !19071
  %75 = icmp ne i32 %74, 0, !dbg !19072
  br i1 %75, label %88, label %76, !dbg !19073

76:                                               ; preds = %70
  %77 = load i8*, i8** %11, align 8, !dbg !19074
  %78 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19075
  %79 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %78, i32 0, i32 8, !dbg !19076
  %80 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %77, %struct.mbedtls_mpi* %79), !dbg !19077
  store i32 %80, i32* %8, align 4, !dbg !19078
  %81 = icmp ne i32 %80, 0, !dbg !19079
  br i1 %81, label %88, label %82, !dbg !19080

82:                                               ; preds = %76
  %83 = load i8*, i8** %11, align 8, !dbg !19081
  %84 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19082
  %85 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %84, i32 0, i32 9, !dbg !19083
  %86 = call i32 @mbedtls_asn1_get_mpi(i8** %10, i8* %83, %struct.mbedtls_mpi* %85), !dbg !19084
  store i32 %86, i32* %8, align 4, !dbg !19085
  %87 = icmp ne i32 %86, 0, !dbg !19086
  br i1 %87, label %88, label %92, !dbg !19087

88:                                               ; preds = %82, %76, %70, %64, %58, %52, %46, %40
  %89 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19088
  call void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %89), !dbg !19090
  %90 = load i32, i32* %8, align 4, !dbg !19091
  %91 = add nsw i32 -15616, %90, !dbg !19092
  store i32 %91, i32* %4, align 4, !dbg !19093
  br label %111, !dbg !19093

92:                                               ; preds = %82
  %93 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19094
  %94 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %93, i32 0, i32 2, !dbg !19095
  %95 = call i64 @mbedtls_mpi_size(%struct.mbedtls_mpi* %94), !dbg !19096
  %96 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19097
  %97 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %96, i32 0, i32 1, !dbg !19098
  store i64 %95, i64* %97, align 8, !dbg !19099
  %98 = load i8*, i8** %10, align 8, !dbg !19100
  %99 = load i8*, i8** %11, align 8, !dbg !19102
  %100 = icmp ne i8* %98, %99, !dbg !19103
  br i1 %100, label %101, label %103, !dbg !19104

101:                                              ; preds = %92
  %102 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19105
  call void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %102), !dbg !19107
  store i32 -15718, i32* %4, align 4, !dbg !19108
  br label %111, !dbg !19108

103:                                              ; preds = %92
  %104 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19109
  %105 = call i32 @mbedtls_rsa_check_privkey(%struct.mbedtls_rsa_context* %104), !dbg !19111
  store i32 %105, i32* %8, align 4, !dbg !19112
  %106 = icmp ne i32 %105, 0, !dbg !19113
  br i1 %106, label %107, label %110, !dbg !19114

107:                                              ; preds = %103
  %108 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !19115
  call void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %108), !dbg !19117
  %109 = load i32, i32* %8, align 4, !dbg !19118
  store i32 %109, i32* %4, align 4, !dbg !19119
  br label %111, !dbg !19119

110:                                              ; preds = %103
  store i32 0, i32* %4, align 4, !dbg !19120
  br label %111, !dbg !19120

111:                                              ; preds = %110, %107, %101, %88, %39, %31, %19
  %112 = load i32, i32* %4, align 4, !dbg !19121
  ret i32 %112, !dbg !19121
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_parse_key_sec1_der(%struct.mbedtls_ecp_keypair* %0, i8* %1, i64 %2) #0 !dbg !19122 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_ecp_keypair*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca %struct.mbedtls_asn1_buf, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store %struct.mbedtls_ecp_keypair* %0, %struct.mbedtls_ecp_keypair** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_keypair** %5, metadata !19125, metadata !DIExpression()), !dbg !19126
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19127, metadata !DIExpression()), !dbg !19128
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !19129, metadata !DIExpression()), !dbg !19130
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19131, metadata !DIExpression()), !dbg !19132
  call void @llvm.dbg.declare(metadata i32* %9, metadata !19133, metadata !DIExpression()), !dbg !19134
  call void @llvm.dbg.declare(metadata i32* %10, metadata !19135, metadata !DIExpression()), !dbg !19136
  call void @llvm.dbg.declare(metadata i64* %11, metadata !19137, metadata !DIExpression()), !dbg !19138
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %12, metadata !19139, metadata !DIExpression()), !dbg !19140
  call void @llvm.dbg.declare(metadata i8** %13, metadata !19141, metadata !DIExpression()), !dbg !19142
  %16 = load i8*, i8** %6, align 8, !dbg !19143
  store i8* %16, i8** %13, align 8, !dbg !19142
  call void @llvm.dbg.declare(metadata i8** %14, metadata !19144, metadata !DIExpression()), !dbg !19145
  %17 = load i8*, i8** %13, align 8, !dbg !19146
  %18 = load i64, i64* %7, align 8, !dbg !19147
  %19 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !19148
  store i8* %19, i8** %14, align 8, !dbg !19145
  call void @llvm.dbg.declare(metadata i8** %15, metadata !19149, metadata !DIExpression()), !dbg !19150
  %20 = load i8*, i8** %14, align 8, !dbg !19151
  %21 = call i32 @mbedtls_asn1_get_tag(i8** %13, i8* %20, i64* %11, i32 48), !dbg !19153
  store i32 %21, i32* %8, align 4, !dbg !19154
  %22 = icmp ne i32 %21, 0, !dbg !19155
  br i1 %22, label %23, label %26, !dbg !19156

23:                                               ; preds = %3
  %24 = load i32, i32* %8, align 4, !dbg !19157
  %25 = add nsw i32 -15616, %24, !dbg !19159
  store i32 %25, i32* %4, align 4, !dbg !19160
  br label %164, !dbg !19160

26:                                               ; preds = %3
  %27 = load i8*, i8** %13, align 8, !dbg !19161
  %28 = load i64, i64* %11, align 8, !dbg !19162
  %29 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !19163
  store i8* %29, i8** %14, align 8, !dbg !19164
  %30 = load i8*, i8** %14, align 8, !dbg !19165
  %31 = call i32 @mbedtls_asn1_get_int(i8** %13, i8* %30, i32* %9), !dbg !19167
  store i32 %31, i32* %8, align 4, !dbg !19168
  %32 = icmp ne i32 %31, 0, !dbg !19169
  br i1 %32, label %33, label %36, !dbg !19170

33:                                               ; preds = %26
  %34 = load i32, i32* %8, align 4, !dbg !19171
  %35 = add nsw i32 -15616, %34, !dbg !19172
  store i32 %35, i32* %4, align 4, !dbg !19173
  br label %164, !dbg !19173

36:                                               ; preds = %26
  %37 = load i32, i32* %9, align 4, !dbg !19174
  %38 = icmp ne i32 %37, 1, !dbg !19176
  br i1 %38, label %39, label %40, !dbg !19177

39:                                               ; preds = %36
  store i32 -15744, i32* %4, align 4, !dbg !19178
  br label %164, !dbg !19178

40:                                               ; preds = %36
  %41 = load i8*, i8** %14, align 8, !dbg !19179
  %42 = call i32 @mbedtls_asn1_get_tag(i8** %13, i8* %41, i64* %11, i32 4), !dbg !19181
  store i32 %42, i32* %8, align 4, !dbg !19182
  %43 = icmp ne i32 %42, 0, !dbg !19183
  br i1 %43, label %44, label %47, !dbg !19184

44:                                               ; preds = %40
  %45 = load i32, i32* %8, align 4, !dbg !19185
  %46 = add nsw i32 -15616, %45, !dbg !19186
  store i32 %46, i32* %4, align 4, !dbg !19187
  br label %164, !dbg !19187

47:                                               ; preds = %40
  %48 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19188
  %49 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %48, i32 0, i32 1, !dbg !19190
  %50 = load i8*, i8** %13, align 8, !dbg !19191
  %51 = load i64, i64* %11, align 8, !dbg !19192
  %52 = call i32 @mbedtls_mpi_read_binary(%struct.mbedtls_mpi* %49, i8* %50, i64 %51), !dbg !19193
  store i32 %52, i32* %8, align 4, !dbg !19194
  %53 = icmp ne i32 %52, 0, !dbg !19195
  br i1 %53, label %54, label %58, !dbg !19196

54:                                               ; preds = %47
  %55 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19197
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %55), !dbg !19199
  %56 = load i32, i32* %8, align 4, !dbg !19200
  %57 = add nsw i32 -15616, %56, !dbg !19201
  store i32 %57, i32* %4, align 4, !dbg !19202
  br label %164, !dbg !19202

58:                                               ; preds = %47
  %59 = load i64, i64* %11, align 8, !dbg !19203
  %60 = load i8*, i8** %13, align 8, !dbg !19204
  %61 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !19204
  store i8* %61, i8** %13, align 8, !dbg !19204
  store i32 0, i32* %10, align 4, !dbg !19205
  %62 = load i8*, i8** %13, align 8, !dbg !19206
  %63 = load i8*, i8** %14, align 8, !dbg !19208
  %64 = icmp ne i8* %62, %63, !dbg !19209
  br i1 %64, label %65, label %134, !dbg !19210

65:                                               ; preds = %58
  %66 = load i8*, i8** %14, align 8, !dbg !19211
  %67 = call i32 @mbedtls_asn1_get_tag(i8** %13, i8* %66, i64* %11, i32 160), !dbg !19214
  store i32 %67, i32* %8, align 4, !dbg !19215
  %68 = icmp eq i32 %67, 0, !dbg !19216
  br i1 %68, label %69, label %84, !dbg !19217

69:                                               ; preds = %65
  %70 = load i8*, i8** %13, align 8, !dbg !19218
  %71 = load i64, i64* %11, align 8, !dbg !19221
  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !19222
  %73 = call i32 @pk_get_ecparams(i8** %13, i8* %72, %struct.mbedtls_asn1_buf* %12), !dbg !19223
  store i32 %73, i32* %8, align 4, !dbg !19224
  %74 = icmp ne i32 %73, 0, !dbg !19225
  br i1 %74, label %80, label %75, !dbg !19226

75:                                               ; preds = %69
  %76 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19227
  %77 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %76, i32 0, i32 0, !dbg !19228
  %78 = call i32 @pk_use_ecparams(%struct.mbedtls_asn1_buf* %12, %struct.mbedtls_ecp_group* %77), !dbg !19229
  store i32 %78, i32* %8, align 4, !dbg !19230
  %79 = icmp ne i32 %78, 0, !dbg !19231
  br i1 %79, label %80, label %83, !dbg !19232

80:                                               ; preds = %75, %69
  %81 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19233
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %81), !dbg !19235
  %82 = load i32, i32* %8, align 4, !dbg !19236
  store i32 %82, i32* %4, align 4, !dbg !19237
  br label %164, !dbg !19237

83:                                               ; preds = %75
  br label %92, !dbg !19238

84:                                               ; preds = %65
  %85 = load i32, i32* %8, align 4, !dbg !19239
  %86 = icmp ne i32 %85, -98, !dbg !19241
  br i1 %86, label %87, label %91, !dbg !19242

87:                                               ; preds = %84
  %88 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19243
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %88), !dbg !19245
  %89 = load i32, i32* %8, align 4, !dbg !19246
  %90 = add nsw i32 -15616, %89, !dbg !19247
  store i32 %90, i32* %4, align 4, !dbg !19248
  br label %164, !dbg !19248

91:                                               ; preds = %84
  br label %92

92:                                               ; preds = %91, %83
  %93 = load i8*, i8** %14, align 8, !dbg !19249
  %94 = call i32 @mbedtls_asn1_get_tag(i8** %13, i8* %93, i64* %11, i32 161), !dbg !19251
  store i32 %94, i32* %8, align 4, !dbg !19252
  %95 = icmp eq i32 %94, 0, !dbg !19253
  br i1 %95, label %96, label %125, !dbg !19254

96:                                               ; preds = %92
  %97 = load i8*, i8** %13, align 8, !dbg !19255
  %98 = load i64, i64* %11, align 8, !dbg !19257
  %99 = getelementptr inbounds i8, i8* %97, i64 %98, !dbg !19258
  store i8* %99, i8** %15, align 8, !dbg !19259
  %100 = load i8*, i8** %15, align 8, !dbg !19260
  %101 = call i32 @mbedtls_asn1_get_bitstring_null(i8** %13, i8* %100, i64* %11), !dbg !19262
  store i32 %101, i32* %8, align 4, !dbg !19263
  %102 = icmp ne i32 %101, 0, !dbg !19264
  br i1 %102, label %103, label %106, !dbg !19265

103:                                              ; preds = %96
  %104 = load i32, i32* %8, align 4, !dbg !19266
  %105 = add nsw i32 -15616, %104, !dbg !19267
  store i32 %105, i32* %4, align 4, !dbg !19268
  br label %164, !dbg !19268

106:                                              ; preds = %96
  %107 = load i8*, i8** %13, align 8, !dbg !19269
  %108 = load i64, i64* %11, align 8, !dbg !19271
  %109 = getelementptr inbounds i8, i8* %107, i64 %108, !dbg !19272
  %110 = load i8*, i8** %15, align 8, !dbg !19273
  %111 = icmp ne i8* %109, %110, !dbg !19274
  br i1 %111, label %112, label %113, !dbg !19275

112:                                              ; preds = %106
  store i32 -15718, i32* %4, align 4, !dbg !19276
  br label %164, !dbg !19276

113:                                              ; preds = %106
  %114 = load i8*, i8** %15, align 8, !dbg !19277
  %115 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19279
  %116 = call i32 @pk_get_ecpubkey(i8** %13, i8* %114, %struct.mbedtls_ecp_keypair* %115), !dbg !19280
  store i32 %116, i32* %8, align 4, !dbg !19281
  %117 = icmp eq i32 %116, 0, !dbg !19282
  br i1 %117, label %118, label %119, !dbg !19283

118:                                              ; preds = %113
  store i32 1, i32* %10, align 4, !dbg !19284
  br label %124, !dbg !19285

119:                                              ; preds = %113
  %120 = load i32, i32* %8, align 4, !dbg !19286
  %121 = icmp ne i32 %120, -20096, !dbg !19289
  br i1 %121, label %122, label %123, !dbg !19290

122:                                              ; preds = %119
  store i32 -15616, i32* %4, align 4, !dbg !19291
  br label %164, !dbg !19291

123:                                              ; preds = %119
  br label %124

124:                                              ; preds = %123, %118
  br label %133, !dbg !19292

125:                                              ; preds = %92
  %126 = load i32, i32* %8, align 4, !dbg !19293
  %127 = icmp ne i32 %126, -98, !dbg !19295
  br i1 %127, label %128, label %132, !dbg !19296

128:                                              ; preds = %125
  %129 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19297
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %129), !dbg !19299
  %130 = load i32, i32* %8, align 4, !dbg !19300
  %131 = add nsw i32 -15616, %130, !dbg !19301
  store i32 %131, i32* %4, align 4, !dbg !19302
  br label %164, !dbg !19302

132:                                              ; preds = %125
  br label %133

133:                                              ; preds = %132, %124
  br label %134, !dbg !19303

134:                                              ; preds = %133, %58
  %135 = load i32, i32* %10, align 4, !dbg !19304
  %136 = icmp ne i32 %135, 0, !dbg !19304
  br i1 %136, label %153, label %137, !dbg !19306

137:                                              ; preds = %134
  %138 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19307
  %139 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %138, i32 0, i32 0, !dbg !19308
  %140 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19309
  %141 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %140, i32 0, i32 2, !dbg !19310
  %142 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19311
  %143 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %142, i32 0, i32 1, !dbg !19312
  %144 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19313
  %145 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %144, i32 0, i32 0, !dbg !19314
  %146 = getelementptr inbounds %struct.mbedtls_ecp_group, %struct.mbedtls_ecp_group* %145, i32 0, i32 4, !dbg !19315
  %147 = call i32 @mbedtls_ecp_mul(%struct.mbedtls_ecp_group* %139, %struct.mbedtls_ecp_point* %141, %struct.mbedtls_mpi* %143, %struct.mbedtls_ecp_point* %146, i32 (i8*, i8*, i64)* null, i8* null), !dbg !19316
  store i32 %147, i32* %8, align 4, !dbg !19317
  %148 = icmp ne i32 %147, 0, !dbg !19318
  br i1 %148, label %149, label %153, !dbg !19319

149:                                              ; preds = %137
  %150 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19320
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %150), !dbg !19322
  %151 = load i32, i32* %8, align 4, !dbg !19323
  %152 = add nsw i32 -15616, %151, !dbg !19324
  store i32 %152, i32* %4, align 4, !dbg !19325
  br label %164, !dbg !19325

153:                                              ; preds = %137, %134
  %154 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19326
  %155 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %154, i32 0, i32 0, !dbg !19328
  %156 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19329
  %157 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %156, i32 0, i32 1, !dbg !19330
  %158 = call i32 @mbedtls_ecp_check_privkey(%struct.mbedtls_ecp_group* %155, %struct.mbedtls_mpi* %157), !dbg !19331
  store i32 %158, i32* %8, align 4, !dbg !19332
  %159 = icmp ne i32 %158, 0, !dbg !19333
  br i1 %159, label %160, label %163, !dbg !19334

160:                                              ; preds = %153
  %161 = load %struct.mbedtls_ecp_keypair*, %struct.mbedtls_ecp_keypair** %5, align 8, !dbg !19335
  call void @mbedtls_ecp_keypair_free(%struct.mbedtls_ecp_keypair* %161), !dbg !19337
  %162 = load i32, i32* %8, align 4, !dbg !19338
  store i32 %162, i32* %4, align 4, !dbg !19339
  br label %164, !dbg !19339

163:                                              ; preds = %153
  store i32 0, i32* %4, align 4, !dbg !19340
  br label %164, !dbg !19340

164:                                              ; preds = %163, %160, %149, %128, %122, %112, %103, %87, %80, %54, %44, %39, %33, %23
  %165 = load i32, i32* %4, align 4, !dbg !19341
  ret i32 %165, !dbg !19341
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_parse_key_pkcs8_unencrypted_der(%struct.mbedtls_pk_context* %0, i8* %1, i64 %2) #0 !dbg !19342 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_pk_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %struct.mbedtls_asn1_buf, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.mbedtls_pk_info_t*, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %5, metadata !19345, metadata !DIExpression()), !dbg !19346
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19347, metadata !DIExpression()), !dbg !19348
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !19349, metadata !DIExpression()), !dbg !19350
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19351, metadata !DIExpression()), !dbg !19352
  call void @llvm.dbg.declare(metadata i32* %9, metadata !19353, metadata !DIExpression()), !dbg !19354
  call void @llvm.dbg.declare(metadata i64* %10, metadata !19355, metadata !DIExpression()), !dbg !19356
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %11, metadata !19357, metadata !DIExpression()), !dbg !19358
  call void @llvm.dbg.declare(metadata i8** %12, metadata !19359, metadata !DIExpression()), !dbg !19360
  %16 = load i8*, i8** %6, align 8, !dbg !19361
  store i8* %16, i8** %12, align 8, !dbg !19360
  call void @llvm.dbg.declare(metadata i8** %13, metadata !19362, metadata !DIExpression()), !dbg !19363
  %17 = load i8*, i8** %12, align 8, !dbg !19364
  %18 = load i64, i64* %7, align 8, !dbg !19365
  %19 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !19366
  store i8* %19, i8** %13, align 8, !dbg !19363
  call void @llvm.dbg.declare(metadata i32* %14, metadata !19367, metadata !DIExpression()), !dbg !19368
  store i32 0, i32* %14, align 4, !dbg !19368
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_info_t** %15, metadata !19369, metadata !DIExpression()), !dbg !19370
  %20 = load i8*, i8** %13, align 8, !dbg !19371
  %21 = call i32 @mbedtls_asn1_get_tag(i8** %12, i8* %20, i64* %10, i32 48), !dbg !19373
  store i32 %21, i32* %8, align 4, !dbg !19374
  %22 = icmp ne i32 %21, 0, !dbg !19375
  br i1 %22, label %23, label %26, !dbg !19376

23:                                               ; preds = %3
  %24 = load i32, i32* %8, align 4, !dbg !19377
  %25 = add nsw i32 -15616, %24, !dbg !19379
  store i32 %25, i32* %4, align 4, !dbg !19380
  br label %127, !dbg !19380

26:                                               ; preds = %3
  %27 = load i8*, i8** %12, align 8, !dbg !19381
  %28 = load i64, i64* %10, align 8, !dbg !19382
  %29 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !19383
  store i8* %29, i8** %13, align 8, !dbg !19384
  %30 = load i8*, i8** %13, align 8, !dbg !19385
  %31 = call i32 @mbedtls_asn1_get_int(i8** %12, i8* %30, i32* %9), !dbg !19387
  store i32 %31, i32* %8, align 4, !dbg !19388
  %32 = icmp ne i32 %31, 0, !dbg !19389
  br i1 %32, label %33, label %36, !dbg !19390

33:                                               ; preds = %26
  %34 = load i32, i32* %8, align 4, !dbg !19391
  %35 = add nsw i32 -15616, %34, !dbg !19392
  store i32 %35, i32* %4, align 4, !dbg !19393
  br label %127, !dbg !19393

36:                                               ; preds = %26
  %37 = load i32, i32* %9, align 4, !dbg !19394
  %38 = icmp ne i32 %37, 0, !dbg !19396
  br i1 %38, label %39, label %42, !dbg !19397

39:                                               ; preds = %36
  %40 = load i32, i32* %8, align 4, !dbg !19398
  %41 = add nsw i32 -15744, %40, !dbg !19399
  store i32 %41, i32* %4, align 4, !dbg !19400
  br label %127, !dbg !19400

42:                                               ; preds = %36
  %43 = load i8*, i8** %13, align 8, !dbg !19401
  %44 = call i32 @pk_get_pk_alg(i8** %12, i8* %43, i32* %14, %struct.mbedtls_asn1_buf* %11), !dbg !19403
  store i32 %44, i32* %8, align 4, !dbg !19404
  %45 = icmp ne i32 %44, 0, !dbg !19405
  br i1 %45, label %46, label %49, !dbg !19406

46:                                               ; preds = %42
  %47 = load i32, i32* %8, align 4, !dbg !19407
  %48 = add nsw i32 -15616, %47, !dbg !19408
  store i32 %48, i32* %4, align 4, !dbg !19409
  br label %127, !dbg !19409

49:                                               ; preds = %42
  %50 = load i8*, i8** %13, align 8, !dbg !19410
  %51 = call i32 @mbedtls_asn1_get_tag(i8** %12, i8* %50, i64* %10, i32 4), !dbg !19412
  store i32 %51, i32* %8, align 4, !dbg !19413
  %52 = icmp ne i32 %51, 0, !dbg !19414
  br i1 %52, label %53, label %56, !dbg !19415

53:                                               ; preds = %49
  %54 = load i32, i32* %8, align 4, !dbg !19416
  %55 = add nsw i32 -15616, %54, !dbg !19417
  store i32 %55, i32* %4, align 4, !dbg !19418
  br label %127, !dbg !19418

56:                                               ; preds = %49
  %57 = load i64, i64* %10, align 8, !dbg !19419
  %58 = icmp ult i64 %57, 1, !dbg !19421
  br i1 %58, label %59, label %60, !dbg !19422

59:                                               ; preds = %56
  store i32 -15712, i32* %4, align 4, !dbg !19423
  br label %127, !dbg !19423

60:                                               ; preds = %56
  %61 = load i32, i32* %14, align 4, !dbg !19424
  %62 = call %struct.mbedtls_pk_info_t* @mbedtls_pk_info_from_type(i32 %61), !dbg !19426
  store %struct.mbedtls_pk_info_t* %62, %struct.mbedtls_pk_info_t** %15, align 8, !dbg !19427
  %63 = icmp eq %struct.mbedtls_pk_info_t* %62, null, !dbg !19428
  br i1 %63, label %64, label %65, !dbg !19429

64:                                               ; preds = %60
  store i32 -15488, i32* %4, align 4, !dbg !19430
  br label %127, !dbg !19430

65:                                               ; preds = %60
  %66 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19431
  %67 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %15, align 8, !dbg !19433
  %68 = call i32 @mbedtls_pk_setup(%struct.mbedtls_pk_context* %66, %struct.mbedtls_pk_info_t* %67), !dbg !19434
  store i32 %68, i32* %8, align 4, !dbg !19435
  %69 = icmp ne i32 %68, 0, !dbg !19436
  br i1 %69, label %70, label %72, !dbg !19437

70:                                               ; preds = %65
  %71 = load i32, i32* %8, align 4, !dbg !19438
  store i32 %71, i32* %4, align 4, !dbg !19439
  br label %127, !dbg !19439

72:                                               ; preds = %65
  %73 = load i32, i32* %14, align 4, !dbg !19440
  %74 = icmp eq i32 %73, 1, !dbg !19442
  br i1 %74, label %75, label %91, !dbg !19443

75:                                               ; preds = %72
  %76 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19444
  %77 = bitcast %struct.mbedtls_pk_context* %76 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !19447
  %78 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %77, i32 0, i32 0, !dbg !19447
  %79 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %78, align 8, !dbg !19447
  %80 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %77, i32 0, i32 1, !dbg !19447
  %81 = load i8*, i8** %80, align 8, !dbg !19447
  %82 = call %struct.mbedtls_rsa_context* @mbedtls_pk_rsa.401(%struct.mbedtls_pk_info_t* %79, i8* %81), !dbg !19447
  %83 = load i8*, i8** %12, align 8, !dbg !19448
  %84 = load i64, i64* %10, align 8, !dbg !19449
  %85 = call i32 @pk_parse_key_pkcs1_der(%struct.mbedtls_rsa_context* %82, i8* %83, i64 %84), !dbg !19450
  store i32 %85, i32* %8, align 4, !dbg !19451
  %86 = icmp ne i32 %85, 0, !dbg !19452
  br i1 %86, label %87, label %90, !dbg !19453

87:                                               ; preds = %75
  %88 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19454
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %88), !dbg !19456
  %89 = load i32, i32* %8, align 4, !dbg !19457
  store i32 %89, i32* %4, align 4, !dbg !19458
  br label %127, !dbg !19458

90:                                               ; preds = %75
  br label %126, !dbg !19459

91:                                               ; preds = %72
  %92 = load i32, i32* %14, align 4, !dbg !19460
  %93 = icmp eq i32 %92, 2, !dbg !19462
  br i1 %93, label %97, label %94, !dbg !19463

94:                                               ; preds = %91
  %95 = load i32, i32* %14, align 4, !dbg !19464
  %96 = icmp eq i32 %95, 3, !dbg !19465
  br i1 %96, label %97, label %124, !dbg !19466

97:                                               ; preds = %94, %91
  %98 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19467
  %99 = bitcast %struct.mbedtls_pk_context* %98 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !19470
  %100 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %99, i32 0, i32 0, !dbg !19470
  %101 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %100, align 8, !dbg !19470
  %102 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %99, i32 0, i32 1, !dbg !19470
  %103 = load i8*, i8** %102, align 8, !dbg !19470
  %104 = call %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %101, i8* %103), !dbg !19470
  %105 = getelementptr inbounds %struct.mbedtls_ecp_keypair, %struct.mbedtls_ecp_keypair* %104, i32 0, i32 0, !dbg !19471
  %106 = call i32 @pk_use_ecparams(%struct.mbedtls_asn1_buf* %11, %struct.mbedtls_ecp_group* %105), !dbg !19472
  store i32 %106, i32* %8, align 4, !dbg !19473
  %107 = icmp ne i32 %106, 0, !dbg !19474
  br i1 %107, label %120, label %108, !dbg !19475

108:                                              ; preds = %97
  %109 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19476
  %110 = bitcast %struct.mbedtls_pk_context* %109 to { %struct.mbedtls_pk_info_t*, i8* }*, !dbg !19477
  %111 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %110, i32 0, i32 0, !dbg !19477
  %112 = load %struct.mbedtls_pk_info_t*, %struct.mbedtls_pk_info_t** %111, align 8, !dbg !19477
  %113 = getelementptr inbounds { %struct.mbedtls_pk_info_t*, i8* }, { %struct.mbedtls_pk_info_t*, i8* }* %110, i32 0, i32 1, !dbg !19477
  %114 = load i8*, i8** %113, align 8, !dbg !19477
  %115 = call %struct.mbedtls_ecp_keypair* @mbedtls_pk_ec(%struct.mbedtls_pk_info_t* %112, i8* %114), !dbg !19477
  %116 = load i8*, i8** %12, align 8, !dbg !19478
  %117 = load i64, i64* %10, align 8, !dbg !19479
  %118 = call i32 @pk_parse_key_sec1_der(%struct.mbedtls_ecp_keypair* %115, i8* %116, i64 %117), !dbg !19480
  store i32 %118, i32* %8, align 4, !dbg !19481
  %119 = icmp ne i32 %118, 0, !dbg !19482
  br i1 %119, label %120, label %123, !dbg !19483

120:                                              ; preds = %108, %97
  %121 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19484
  call void @mbedtls_pk_free(%struct.mbedtls_pk_context* %121), !dbg !19486
  %122 = load i32, i32* %8, align 4, !dbg !19487
  store i32 %122, i32* %4, align 4, !dbg !19488
  br label %127, !dbg !19488

123:                                              ; preds = %108
  br label %125, !dbg !19489

124:                                              ; preds = %94
  store i32 -15488, i32* %4, align 4, !dbg !19490
  br label %127, !dbg !19490

125:                                              ; preds = %123
  br label %126

126:                                              ; preds = %125, %90
  store i32 0, i32* %4, align 4, !dbg !19491
  br label %127, !dbg !19491

127:                                              ; preds = %126, %124, %120, %87, %70, %64, %59, %53, %46, %39, %33, %23
  %128 = load i32, i32* %4, align 4, !dbg !19492
  ret i32 %128, !dbg !19492
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_parse_key_pkcs8_encrypted_der(%struct.mbedtls_pk_context* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 !dbg !19493 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.mbedtls_pk_context*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca [2048 x i8], align 16
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.mbedtls_asn1_buf, align 8
  %19 = alloca %struct.mbedtls_asn1_buf, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %7, metadata !19494, metadata !DIExpression()), !dbg !19495
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !19496, metadata !DIExpression()), !dbg !19497
  store i64 %2, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !19498, metadata !DIExpression()), !dbg !19499
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !19500, metadata !DIExpression()), !dbg !19501
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !19502, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.declare(metadata i32* %12, metadata !19504, metadata !DIExpression()), !dbg !19505
  call void @llvm.dbg.declare(metadata i32* %13, metadata !19506, metadata !DIExpression()), !dbg !19507
  store i32 0, i32* %13, align 4, !dbg !19507
  call void @llvm.dbg.declare(metadata i64* %14, metadata !19508, metadata !DIExpression()), !dbg !19509
  call void @llvm.dbg.declare(metadata [2048 x i8]* %15, metadata !19510, metadata !DIExpression()), !dbg !19514
  call void @llvm.dbg.declare(metadata i8** %16, metadata !19515, metadata !DIExpression()), !dbg !19516
  call void @llvm.dbg.declare(metadata i8** %17, metadata !19517, metadata !DIExpression()), !dbg !19518
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %18, metadata !19519, metadata !DIExpression()), !dbg !19520
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %19, metadata !19521, metadata !DIExpression()), !dbg !19522
  call void @llvm.dbg.declare(metadata i32* %20, metadata !19523, metadata !DIExpression()), !dbg !19524
  call void @llvm.dbg.declare(metadata i32* %21, metadata !19525, metadata !DIExpression()), !dbg !19526
  %22 = getelementptr inbounds [2048 x i8], [2048 x i8]* %15, i64 0, i64 0, !dbg !19527
  call void @llvm.memset.p0i8.i64(i8* align 16 %22, i8 0, i64 2048, i1 false), !dbg !19527
  %23 = load i8*, i8** %8, align 8, !dbg !19528
  store i8* %23, i8** %16, align 8, !dbg !19529
  %24 = load i8*, i8** %16, align 8, !dbg !19530
  %25 = load i64, i64* %9, align 8, !dbg !19531
  %26 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !19532
  store i8* %26, i8** %17, align 8, !dbg !19533
  %27 = load i64, i64* %11, align 8, !dbg !19534
  %28 = icmp eq i64 %27, 0, !dbg !19536
  br i1 %28, label %29, label %30, !dbg !19537

29:                                               ; preds = %5
  store i32 -15360, i32* %6, align 4, !dbg !19538
  br label %153, !dbg !19538

30:                                               ; preds = %5
  %31 = load i8*, i8** %17, align 8, !dbg !19539
  %32 = call i32 @mbedtls_asn1_get_tag(i8** %16, i8* %31, i64* %14, i32 48), !dbg !19541
  store i32 %32, i32* %12, align 4, !dbg !19542
  %33 = icmp ne i32 %32, 0, !dbg !19543
  br i1 %33, label %34, label %37, !dbg !19544

34:                                               ; preds = %30
  %35 = load i32, i32* %12, align 4, !dbg !19545
  %36 = add nsw i32 -15616, %35, !dbg !19547
  store i32 %36, i32* %6, align 4, !dbg !19548
  br label %153, !dbg !19548

37:                                               ; preds = %30
  %38 = load i8*, i8** %16, align 8, !dbg !19549
  %39 = load i64, i64* %14, align 8, !dbg !19550
  %40 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !19551
  store i8* %40, i8** %17, align 8, !dbg !19552
  %41 = load i8*, i8** %17, align 8, !dbg !19553
  %42 = call i32 @mbedtls_asn1_get_alg(i8** %16, i8* %41, %struct.mbedtls_asn1_buf* %18, %struct.mbedtls_asn1_buf* %19), !dbg !19555
  store i32 %42, i32* %12, align 4, !dbg !19556
  %43 = icmp ne i32 %42, 0, !dbg !19557
  br i1 %43, label %44, label %47, !dbg !19558

44:                                               ; preds = %37
  %45 = load i32, i32* %12, align 4, !dbg !19559
  %46 = add nsw i32 -15616, %45, !dbg !19560
  store i32 %46, i32* %6, align 4, !dbg !19561
  br label %153, !dbg !19561

47:                                               ; preds = %37
  %48 = load i8*, i8** %17, align 8, !dbg !19562
  %49 = call i32 @mbedtls_asn1_get_tag(i8** %16, i8* %48, i64* %14, i32 4), !dbg !19564
  store i32 %49, i32* %12, align 4, !dbg !19565
  %50 = icmp ne i32 %49, 0, !dbg !19566
  br i1 %50, label %51, label %54, !dbg !19567

51:                                               ; preds = %47
  %52 = load i32, i32* %12, align 4, !dbg !19568
  %53 = add nsw i32 -15616, %52, !dbg !19569
  store i32 %53, i32* %6, align 4, !dbg !19570
  br label %153, !dbg !19570

54:                                               ; preds = %47
  %55 = load i64, i64* %14, align 8, !dbg !19571
  %56 = icmp ugt i64 %55, 2048, !dbg !19573
  br i1 %56, label %57, label %58, !dbg !19574

57:                                               ; preds = %54
  store i32 -16000, i32* %6, align 4, !dbg !19575
  br label %153, !dbg !19575

58:                                               ; preds = %54
  %59 = call i32 @mbedtls_oid_get_pkcs12_pbe_alg(%struct.mbedtls_asn1_buf* %18, i32* %21, i32* %20), !dbg !19576
  %60 = icmp eq i32 %59, 0, !dbg !19578
  br i1 %60, label %61, label %78, !dbg !19579

61:                                               ; preds = %58
  %62 = load i32, i32* %20, align 4, !dbg !19580
  %63 = load i32, i32* %21, align 4, !dbg !19583
  %64 = load i8*, i8** %10, align 8, !dbg !19584
  %65 = load i64, i64* %11, align 8, !dbg !19585
  %66 = load i8*, i8** %16, align 8, !dbg !19586
  %67 = load i64, i64* %14, align 8, !dbg !19587
  %68 = getelementptr inbounds [2048 x i8], [2048 x i8]* %15, i64 0, i64 0, !dbg !19588
  %69 = call i32 @mbedtls_pkcs12_pbe(%struct.mbedtls_asn1_buf* %19, i32 0, i32 %62, i32 %63, i8* %64, i64 %65, i8* %66, i64 %67, i8* %68), !dbg !19589
  store i32 %69, i32* %12, align 4, !dbg !19590
  %70 = icmp ne i32 %69, 0, !dbg !19591
  br i1 %70, label %71, label %77, !dbg !19592

71:                                               ; preds = %61
  %72 = load i32, i32* %12, align 4, !dbg !19593
  %73 = icmp eq i32 %72, -7680, !dbg !19596
  br i1 %73, label %74, label %75, !dbg !19597

74:                                               ; preds = %71
  store i32 -15232, i32* %6, align 4, !dbg !19598
  br label %153, !dbg !19598

75:                                               ; preds = %71
  %76 = load i32, i32* %12, align 4, !dbg !19599
  store i32 %76, i32* %6, align 4, !dbg !19600
  br label %153, !dbg !19600

77:                                               ; preds = %61
  store i32 1, i32* %13, align 4, !dbg !19601
  br label %144, !dbg !19602

78:                                               ; preds = %58
  %79 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %18, i32 0, i32 1, !dbg !19603
  %80 = load i64, i64* %79, align 8, !dbg !19603
  %81 = icmp ne i64 10, %80, !dbg !19603
  br i1 %81, label %89, label %82, !dbg !19603

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %18, i32 0, i32 2, !dbg !19603
  %84 = load i8*, i8** %83, align 8, !dbg !19603
  %85 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %18, i32 0, i32 1, !dbg !19603
  %86 = load i64, i64* %85, align 8, !dbg !19603
  %87 = call i32 @memcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.413, i64 0, i64 0), i8* %84, i64 %86), !dbg !19603
  %88 = icmp ne i32 %87, 0, !dbg !19603
  br label %89, !dbg !19603

89:                                               ; preds = %82, %78
  %90 = phi i1 [ true, %78 ], [ %88, %82 ]
  %91 = zext i1 %90 to i32, !dbg !19603
  %92 = icmp eq i32 %91, 0, !dbg !19605
  br i1 %92, label %93, label %110, !dbg !19606

93:                                               ; preds = %89
  %94 = load i8*, i8** %10, align 8, !dbg !19607
  %95 = load i64, i64* %11, align 8, !dbg !19610
  %96 = load i8*, i8** %16, align 8, !dbg !19611
  %97 = load i64, i64* %14, align 8, !dbg !19612
  %98 = getelementptr inbounds [2048 x i8], [2048 x i8]* %15, i64 0, i64 0, !dbg !19613
  %99 = call i32 @mbedtls_pkcs12_pbe_sha1_rc4_128(%struct.mbedtls_asn1_buf* %19, i32 0, i8* %94, i64 %95, i8* %96, i64 %97, i8* %98), !dbg !19614
  store i32 %99, i32* %12, align 4, !dbg !19615
  %100 = icmp ne i32 %99, 0, !dbg !19616
  br i1 %100, label %101, label %103, !dbg !19617

101:                                              ; preds = %93
  %102 = load i32, i32* %12, align 4, !dbg !19618
  store i32 %102, i32* %6, align 4, !dbg !19620
  br label %153, !dbg !19620

103:                                              ; preds = %93
  %104 = getelementptr inbounds [2048 x i8], [2048 x i8]* %15, i64 0, i64 0, !dbg !19621
  %105 = load i8, i8* %104, align 16, !dbg !19621
  %106 = zext i8 %105 to i32, !dbg !19621
  %107 = icmp ne i32 %106, 48, !dbg !19623
  br i1 %107, label %108, label %109, !dbg !19624

108:                                              ; preds = %103
  store i32 -15232, i32* %6, align 4, !dbg !19625
  br label %153, !dbg !19625

109:                                              ; preds = %103
  store i32 1, i32* %13, align 4, !dbg !19626
  br label %143, !dbg !19627

110:                                              ; preds = %89
  %111 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %18, i32 0, i32 1, !dbg !19628
  %112 = load i64, i64* %111, align 8, !dbg !19628
  %113 = icmp ne i64 9, %112, !dbg !19628
  br i1 %113, label %121, label %114, !dbg !19628

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %18, i32 0, i32 2, !dbg !19628
  %116 = load i8*, i8** %115, align 8, !dbg !19628
  %117 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %18, i32 0, i32 1, !dbg !19628
  %118 = load i64, i64* %117, align 8, !dbg !19628
  %119 = call i32 @memcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12.414, i64 0, i64 0), i8* %116, i64 %118), !dbg !19628
  %120 = icmp ne i32 %119, 0, !dbg !19628
  br label %121, !dbg !19628

121:                                              ; preds = %114, %110
  %122 = phi i1 [ true, %110 ], [ %120, %114 ]
  %123 = zext i1 %122 to i32, !dbg !19628
  %124 = icmp eq i32 %123, 0, !dbg !19630
  br i1 %124, label %125, label %140, !dbg !19631

125:                                              ; preds = %121
  %126 = load i8*, i8** %10, align 8, !dbg !19632
  %127 = load i64, i64* %11, align 8, !dbg !19635
  %128 = load i8*, i8** %16, align 8, !dbg !19636
  %129 = load i64, i64* %14, align 8, !dbg !19637
  %130 = getelementptr inbounds [2048 x i8], [2048 x i8]* %15, i64 0, i64 0, !dbg !19638
  %131 = call i32 @mbedtls_pkcs5_pbes2(%struct.mbedtls_asn1_buf* %19, i32 0, i8* %126, i64 %127, i8* %128, i64 %129, i8* %130), !dbg !19639
  store i32 %131, i32* %12, align 4, !dbg !19640
  %132 = icmp ne i32 %131, 0, !dbg !19641
  br i1 %132, label %133, label %139, !dbg !19642

133:                                              ; preds = %125
  %134 = load i32, i32* %12, align 4, !dbg !19643
  %135 = icmp eq i32 %134, -11776, !dbg !19646
  br i1 %135, label %136, label %137, !dbg !19647

136:                                              ; preds = %133
  store i32 -15232, i32* %6, align 4, !dbg !19648
  br label %153, !dbg !19648

137:                                              ; preds = %133
  %138 = load i32, i32* %12, align 4, !dbg !19649
  store i32 %138, i32* %6, align 4, !dbg !19650
  br label %153, !dbg !19650

139:                                              ; preds = %125
  store i32 1, i32* %13, align 4, !dbg !19651
  br label %142, !dbg !19652

140:                                              ; preds = %121
  %141 = load i8*, i8** %10, align 8, !dbg !19653
  br label %142

142:                                              ; preds = %140, %139
  br label %143

143:                                              ; preds = %142, %109
  br label %144

144:                                              ; preds = %143, %77
  %145 = load i32, i32* %13, align 4, !dbg !19655
  %146 = icmp eq i32 %145, 0, !dbg !19657
  br i1 %146, label %147, label %148, !dbg !19658

147:                                              ; preds = %144
  store i32 -14720, i32* %6, align 4, !dbg !19659
  br label %153, !dbg !19659

148:                                              ; preds = %144
  %149 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %7, align 8, !dbg !19660
  %150 = getelementptr inbounds [2048 x i8], [2048 x i8]* %15, i64 0, i64 0, !dbg !19661
  %151 = load i64, i64* %14, align 8, !dbg !19662
  %152 = call i32 @pk_parse_key_pkcs8_unencrypted_der(%struct.mbedtls_pk_context* %149, i8* %150, i64 %151), !dbg !19663
  store i32 %152, i32* %6, align 4, !dbg !19664
  br label %153, !dbg !19664

153:                                              ; preds = %148, %147, %137, %136, %108, %101, %75, %74, %57, %51, %44, %34, %29
  %154 = load i32, i32* %6, align 4, !dbg !19665
  ret i32 %154, !dbg !19665
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @pk_get_ecparams(i8** %0, i8* %1, %struct.mbedtls_asn1_buf* %2) #0 !dbg !19666 {
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.mbedtls_asn1_buf*, align 8
  %8 = alloca i32, align 4
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !19669, metadata !DIExpression()), !dbg !19670
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19671, metadata !DIExpression()), !dbg !19672
  store %struct.mbedtls_asn1_buf* %2, %struct.mbedtls_asn1_buf** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf** %7, metadata !19673, metadata !DIExpression()), !dbg !19674
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19675, metadata !DIExpression()), !dbg !19676
  %9 = load i8**, i8*** %5, align 8, !dbg !19677
  %10 = load i8*, i8** %9, align 8, !dbg !19678
  %11 = load i8, i8* %10, align 1, !dbg !19679
  %12 = zext i8 %11 to i32, !dbg !19679
  %13 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19680
  %14 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %13, i32 0, i32 0, !dbg !19681
  store i32 %12, i32* %14, align 8, !dbg !19682
  %15 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19683
  %16 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %15, i32 0, i32 0, !dbg !19685
  %17 = load i32, i32* %16, align 8, !dbg !19685
  %18 = icmp ne i32 %17, 6, !dbg !19686
  br i1 %18, label %19, label %25, !dbg !19687

19:                                               ; preds = %3
  %20 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19688
  %21 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %20, i32 0, i32 0, !dbg !19689
  %22 = load i32, i32* %21, align 8, !dbg !19689
  %23 = icmp ne i32 %22, 48, !dbg !19690
  br i1 %23, label %24, label %25, !dbg !19691

24:                                               ; preds = %19
  store i32 -15714, i32* %4, align 4, !dbg !19692
  br label %55, !dbg !19692

25:                                               ; preds = %19, %3
  %26 = load i8**, i8*** %5, align 8, !dbg !19694
  %27 = load i8*, i8** %6, align 8, !dbg !19696
  %28 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19697
  %29 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %28, i32 0, i32 1, !dbg !19698
  %30 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19699
  %31 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %30, i32 0, i32 0, !dbg !19700
  %32 = load i32, i32* %31, align 8, !dbg !19700
  %33 = call i32 @mbedtls_asn1_get_tag(i8** %26, i8* %27, i64* %29, i32 %32), !dbg !19701
  store i32 %33, i32* %8, align 4, !dbg !19702
  %34 = icmp ne i32 %33, 0, !dbg !19703
  br i1 %34, label %35, label %38, !dbg !19704

35:                                               ; preds = %25
  %36 = load i32, i32* %8, align 4, !dbg !19705
  %37 = add nsw i32 -15616, %36, !dbg !19707
  store i32 %37, i32* %4, align 4, !dbg !19708
  br label %55, !dbg !19708

38:                                               ; preds = %25
  %39 = load i8**, i8*** %5, align 8, !dbg !19709
  %40 = load i8*, i8** %39, align 8, !dbg !19710
  %41 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19711
  %42 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %41, i32 0, i32 2, !dbg !19712
  store i8* %40, i8** %42, align 8, !dbg !19713
  %43 = load %struct.mbedtls_asn1_buf*, %struct.mbedtls_asn1_buf** %7, align 8, !dbg !19714
  %44 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %43, i32 0, i32 1, !dbg !19715
  %45 = load i64, i64* %44, align 8, !dbg !19715
  %46 = load i8**, i8*** %5, align 8, !dbg !19716
  %47 = load i8*, i8** %46, align 8, !dbg !19717
  %48 = getelementptr inbounds i8, i8* %47, i64 %45, !dbg !19717
  store i8* %48, i8** %46, align 8, !dbg !19717
  %49 = load i8**, i8*** %5, align 8, !dbg !19718
  %50 = load i8*, i8** %49, align 8, !dbg !19720
  %51 = load i8*, i8** %6, align 8, !dbg !19721
  %52 = icmp ne i8* %50, %51, !dbg !19722
  br i1 %52, label %53, label %54, !dbg !19723

53:                                               ; preds = %38
  store i32 -15718, i32* %4, align 4, !dbg !19724
  br label %55, !dbg !19724

54:                                               ; preds = %38
  store i32 0, i32* %4, align 4, !dbg !19725
  br label %55, !dbg !19725

55:                                               ; preds = %54, %53, %35, %24
  %56 = load i32, i32* %4, align 4, !dbg !19726
  ret i32 %56, !dbg !19726
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_pk_parse_public_key(%struct.mbedtls_pk_context* %0, i8* %1, i64 %2) #0 !dbg !19727 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_pk_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.mbedtls_pem_context, align 8
  store %struct.mbedtls_pk_context* %0, %struct.mbedtls_pk_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pk_context** %5, metadata !19728, metadata !DIExpression()), !dbg !19729
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !19730, metadata !DIExpression()), !dbg !19731
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !19732, metadata !DIExpression()), !dbg !19733
  call void @llvm.dbg.declare(metadata i32* %8, metadata !19734, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.declare(metadata i8** %9, metadata !19736, metadata !DIExpression()), !dbg !19737
  call void @llvm.dbg.declare(metadata i64* %10, metadata !19738, metadata !DIExpression()), !dbg !19739
  call void @llvm.dbg.declare(metadata %struct.mbedtls_pem_context* %11, metadata !19740, metadata !DIExpression()), !dbg !19741
  call void @mbedtls_pem_init(%struct.mbedtls_pem_context* %11), !dbg !19742
  %12 = load i64, i64* %7, align 8, !dbg !19743
  %13 = icmp eq i64 %12, 0, !dbg !19745
  br i1 %13, label %22, label %14, !dbg !19746

14:                                               ; preds = %3
  %15 = load i8*, i8** %6, align 8, !dbg !19747
  %16 = load i64, i64* %7, align 8, !dbg !19748
  %17 = sub i64 %16, 1, !dbg !19749
  %18 = getelementptr inbounds i8, i8* %15, i64 %17, !dbg !19747
  %19 = load i8, i8* %18, align 1, !dbg !19747
  %20 = zext i8 %19 to i32, !dbg !19747
  %21 = icmp ne i32 %20, 0, !dbg !19750
  br i1 %21, label %22, label %23, !dbg !19751

22:                                               ; preds = %14, %3
  store i32 -4224, i32* %8, align 4, !dbg !19752
  br label %26, !dbg !19753

23:                                               ; preds = %14
  %24 = load i8*, i8** %6, align 8, !dbg !19754
  %25 = call i32 @mbedtls_pem_read_buffer(%struct.mbedtls_pem_context* %11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.415, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.416, i64 0, i64 0), i8* %24, i8* null, i64 0, i64* %10), !dbg !19755
  store i32 %25, i32* %8, align 4, !dbg !19756
  br label %26

26:                                               ; preds = %23, %22
  %27 = load i32, i32* %8, align 4, !dbg !19757
  %28 = icmp eq i32 %27, 0, !dbg !19759
  br i1 %28, label %29, label %34, !dbg !19760

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %11, i32 0, i32 0, !dbg !19761
  %31 = load i8*, i8** %30, align 8, !dbg !19761
  store i8* %31, i8** %6, align 8, !dbg !19763
  %32 = getelementptr inbounds %struct.mbedtls_pem_context, %struct.mbedtls_pem_context* %11, i32 0, i32 1, !dbg !19764
  %33 = load i64, i64* %32, align 8, !dbg !19764
  store i64 %33, i64* %7, align 8, !dbg !19765
  br label %40, !dbg !19766

34:                                               ; preds = %26
  %35 = load i32, i32* %8, align 4, !dbg !19767
  %36 = icmp ne i32 %35, -4224, !dbg !19769
  br i1 %36, label %37, label %39, !dbg !19770

37:                                               ; preds = %34
  call void @mbedtls_pem_free(%struct.mbedtls_pem_context* %11), !dbg !19771
  %38 = load i32, i32* %8, align 4, !dbg !19773
  store i32 %38, i32* %4, align 4, !dbg !19774
  br label %48, !dbg !19774

39:                                               ; preds = %34
  br label %40

40:                                               ; preds = %39, %29
  %41 = load i8*, i8** %6, align 8, !dbg !19775
  store i8* %41, i8** %9, align 8, !dbg !19776
  %42 = load i8*, i8** %9, align 8, !dbg !19777
  %43 = load i64, i64* %7, align 8, !dbg !19778
  %44 = getelementptr inbounds i8, i8* %42, i64 %43, !dbg !19779
  %45 = load %struct.mbedtls_pk_context*, %struct.mbedtls_pk_context** %5, align 8, !dbg !19780
  %46 = call i32 @mbedtls_pk_parse_subpubkey(i8** %9, i8* %44, %struct.mbedtls_pk_context* %45), !dbg !19781
  store i32 %46, i32* %8, align 4, !dbg !19782
  call void @mbedtls_pem_free(%struct.mbedtls_pem_context* %11), !dbg !19783
  %47 = load i32, i32* %8, align 4, !dbg !19784
  store i32 %47, i32* %4, align 4, !dbg !19785
  br label %48, !dbg !19785

48:                                               ; preds = %40, %37
  %49 = load i32, i32* %4, align 4, !dbg !19786
  ret i32 %49, !dbg !19786
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_rsa_init(%struct.mbedtls_rsa_context* %0, i32 %1, i32 %2) #0 !dbg !19787 {
  %4 = alloca %struct.mbedtls_rsa_context*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %4, metadata !19818, metadata !DIExpression()), !dbg !19819
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19820, metadata !DIExpression()), !dbg !19821
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19822, metadata !DIExpression()), !dbg !19823
  %7 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !19824
  %8 = bitcast %struct.mbedtls_rsa_context* %7 to i8*, !dbg !19825
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 336, i1 false), !dbg !19825
  %9 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !19826
  %10 = load i32, i32* %5, align 4, !dbg !19827
  %11 = load i32, i32* %6, align 4, !dbg !19828
  call void @mbedtls_rsa_set_padding(%struct.mbedtls_rsa_context* %9, i32 %10, i32 %11), !dbg !19829
  ret void, !dbg !19830
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_rsa_set_padding(%struct.mbedtls_rsa_context* %0, i32 %1, i32 %2) #0 !dbg !19831 {
  %4 = alloca %struct.mbedtls_rsa_context*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %4, metadata !19832, metadata !DIExpression()), !dbg !19833
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19834, metadata !DIExpression()), !dbg !19835
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !19836, metadata !DIExpression()), !dbg !19837
  %7 = load i32, i32* %5, align 4, !dbg !19838
  %8 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !19839
  %9 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %8, i32 0, i32 15, !dbg !19840
  store i32 %7, i32* %9, align 8, !dbg !19841
  %10 = load i32, i32* %6, align 4, !dbg !19842
  %11 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !19843
  %12 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %11, i32 0, i32 16, !dbg !19844
  store i32 %10, i32* %12, align 4, !dbg !19845
  ret void, !dbg !19846
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_gen_key(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4) #0 !dbg !19847 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.mbedtls_rsa_context*, align 8
  %8 = alloca i32 (i8*, i8*, i64)*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.mbedtls_mpi, align 8
  %14 = alloca %struct.mbedtls_mpi, align 8
  %15 = alloca %struct.mbedtls_mpi, align 8
  %16 = alloca %struct.mbedtls_mpi, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %7, metadata !19850, metadata !DIExpression()), !dbg !19851
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %8, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %8, metadata !19852, metadata !DIExpression()), !dbg !19853
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !19854, metadata !DIExpression()), !dbg !19855
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !19856, metadata !DIExpression()), !dbg !19857
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !19858, metadata !DIExpression()), !dbg !19859
  call void @llvm.dbg.declare(metadata i32* %12, metadata !19860, metadata !DIExpression()), !dbg !19861
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %13, metadata !19862, metadata !DIExpression()), !dbg !19863
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %14, metadata !19864, metadata !DIExpression()), !dbg !19865
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %15, metadata !19866, metadata !DIExpression()), !dbg !19867
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %16, metadata !19868, metadata !DIExpression()), !dbg !19869
  %17 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !19870
  %18 = icmp eq i32 (i8*, i8*, i64)* %17, null, !dbg !19872
  br i1 %18, label %25, label %19, !dbg !19873

19:                                               ; preds = %5
  %20 = load i32, i32* %10, align 4, !dbg !19874
  %21 = icmp ult i32 %20, 128, !dbg !19875
  br i1 %21, label %25, label %22, !dbg !19876

22:                                               ; preds = %19
  %23 = load i32, i32* %11, align 4, !dbg !19877
  %24 = icmp slt i32 %23, 3, !dbg !19878
  br i1 %24, label %25, label %26, !dbg !19879

25:                                               ; preds = %22, %19, %5
  store i32 -16512, i32* %6, align 4, !dbg !19880
  br label %200, !dbg !19880

26:                                               ; preds = %22
  %27 = load i32, i32* %10, align 4, !dbg !19881
  %28 = urem i32 %27, 2, !dbg !19883
  %29 = icmp ne i32 %28, 0, !dbg !19883
  br i1 %29, label %30, label %31, !dbg !19884

30:                                               ; preds = %26
  store i32 -16512, i32* %6, align 4, !dbg !19885
  br label %200, !dbg !19885

31:                                               ; preds = %26
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %13), !dbg !19886
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %14), !dbg !19887
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %15), !dbg !19888
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %16), !dbg !19889
  br label %32, !dbg !19890

32:                                               ; preds = %31
  %33 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19891
  %34 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %33, i32 0, i32 3, !dbg !19891
  %35 = load i32, i32* %11, align 4, !dbg !19891
  %36 = sext i32 %35 to i64, !dbg !19891
  %37 = call i32 @mbedtls_mpi_lset(%struct.mbedtls_mpi* %34, i64 %36), !dbg !19891
  store i32 %37, i32* %12, align 4, !dbg !19891
  %38 = icmp ne i32 %37, 0, !dbg !19891
  br i1 %38, label %39, label %40, !dbg !19894

39:                                               ; preds = %32
  br label %192, !dbg !19891

40:                                               ; preds = %32
  br label %41, !dbg !19894

41:                                               ; preds = %40
  br label %42, !dbg !19895

42:                                               ; preds = %139, %41
  br label %43, !dbg !19896

43:                                               ; preds = %42
  %44 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19898
  %45 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %44, i32 0, i32 5, !dbg !19898
  %46 = load i32, i32* %10, align 4, !dbg !19898
  %47 = lshr i32 %46, 1, !dbg !19898
  %48 = zext i32 %47 to i64, !dbg !19898
  %49 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !19898
  %50 = load i8*, i8** %9, align 8, !dbg !19898
  %51 = call i32 @mbedtls_mpi_gen_prime(%struct.mbedtls_mpi* %45, i64 %48, i32 0, i32 (i8*, i8*, i64)* %49, i8* %50), !dbg !19898
  store i32 %51, i32* %12, align 4, !dbg !19898
  %52 = icmp ne i32 %51, 0, !dbg !19898
  br i1 %52, label %53, label %54, !dbg !19901

53:                                               ; preds = %43
  br label %192, !dbg !19898

54:                                               ; preds = %43
  br label %55, !dbg !19901

55:                                               ; preds = %54
  br label %56, !dbg !19902

56:                                               ; preds = %55
  %57 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19903
  %58 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %57, i32 0, i32 6, !dbg !19903
  %59 = load i32, i32* %10, align 4, !dbg !19903
  %60 = lshr i32 %59, 1, !dbg !19903
  %61 = zext i32 %60 to i64, !dbg !19903
  %62 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !19903
  %63 = load i8*, i8** %9, align 8, !dbg !19903
  %64 = call i32 @mbedtls_mpi_gen_prime(%struct.mbedtls_mpi* %58, i64 %61, i32 0, i32 (i8*, i8*, i64)* %62, i8* %63), !dbg !19903
  store i32 %64, i32* %12, align 4, !dbg !19903
  %65 = icmp ne i32 %64, 0, !dbg !19903
  br i1 %65, label %66, label %67, !dbg !19906

66:                                               ; preds = %56
  br label %192, !dbg !19903

67:                                               ; preds = %56
  br label %68, !dbg !19906

68:                                               ; preds = %67
  %69 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19907
  %70 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %69, i32 0, i32 5, !dbg !19909
  %71 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19910
  %72 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %71, i32 0, i32 6, !dbg !19911
  %73 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %70, %struct.mbedtls_mpi* %72), !dbg !19912
  %74 = icmp eq i32 %73, 0, !dbg !19913
  br i1 %74, label %75, label %76, !dbg !19914

75:                                               ; preds = %68
  br label %139, !dbg !19915

76:                                               ; preds = %68
  br label %77, !dbg !19916

77:                                               ; preds = %76
  %78 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19917
  %79 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %78, i32 0, i32 2, !dbg !19917
  %80 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19917
  %81 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %80, i32 0, i32 5, !dbg !19917
  %82 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19917
  %83 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %82, i32 0, i32 6, !dbg !19917
  %84 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %79, %struct.mbedtls_mpi* %81, %struct.mbedtls_mpi* %83), !dbg !19917
  store i32 %84, i32* %12, align 4, !dbg !19917
  %85 = icmp ne i32 %84, 0, !dbg !19917
  br i1 %85, label %86, label %87, !dbg !19920

86:                                               ; preds = %77
  br label %192, !dbg !19917

87:                                               ; preds = %77
  br label %88, !dbg !19920

88:                                               ; preds = %87
  %89 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19921
  %90 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %89, i32 0, i32 2, !dbg !19923
  %91 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %90), !dbg !19924
  %92 = load i32, i32* %10, align 4, !dbg !19925
  %93 = zext i32 %92 to i64, !dbg !19925
  %94 = icmp ne i64 %91, %93, !dbg !19926
  br i1 %94, label %95, label %96, !dbg !19927

95:                                               ; preds = %88
  br label %139, !dbg !19928

96:                                               ; preds = %88
  %97 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19929
  %98 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %97, i32 0, i32 5, !dbg !19931
  %99 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19932
  %100 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %99, i32 0, i32 6, !dbg !19933
  %101 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %98, %struct.mbedtls_mpi* %100), !dbg !19934
  %102 = icmp slt i32 %101, 0, !dbg !19935
  br i1 %102, label %103, label %108, !dbg !19936

103:                                              ; preds = %96
  %104 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19937
  %105 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %104, i32 0, i32 5, !dbg !19938
  %106 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19939
  %107 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %106, i32 0, i32 6, !dbg !19940
  call void @mbedtls_mpi_swap(%struct.mbedtls_mpi* %105, %struct.mbedtls_mpi* %107), !dbg !19941
  br label %108, !dbg !19941

108:                                              ; preds = %103, %96
  br label %109, !dbg !19942

109:                                              ; preds = %108
  %110 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19943
  %111 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %110, i32 0, i32 5, !dbg !19943
  %112 = call i32 @mbedtls_mpi_sub_int(%struct.mbedtls_mpi* %13, %struct.mbedtls_mpi* %111, i64 1), !dbg !19943
  store i32 %112, i32* %12, align 4, !dbg !19943
  %113 = icmp ne i32 %112, 0, !dbg !19943
  br i1 %113, label %114, label %115, !dbg !19946

114:                                              ; preds = %109
  br label %192, !dbg !19943

115:                                              ; preds = %109
  br label %116, !dbg !19946

116:                                              ; preds = %115
  br label %117, !dbg !19947

117:                                              ; preds = %116
  %118 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19948
  %119 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %118, i32 0, i32 6, !dbg !19948
  %120 = call i32 @mbedtls_mpi_sub_int(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %119, i64 1), !dbg !19948
  store i32 %120, i32* %12, align 4, !dbg !19948
  %121 = icmp ne i32 %120, 0, !dbg !19948
  br i1 %121, label %122, label %123, !dbg !19951

122:                                              ; preds = %117
  br label %192, !dbg !19948

123:                                              ; preds = %117
  br label %124, !dbg !19951

124:                                              ; preds = %123
  br label %125, !dbg !19952

125:                                              ; preds = %124
  %126 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %13, %struct.mbedtls_mpi* %14), !dbg !19953
  store i32 %126, i32* %12, align 4, !dbg !19953
  %127 = icmp ne i32 %126, 0, !dbg !19953
  br i1 %127, label %128, label %129, !dbg !19956

128:                                              ; preds = %125
  br label %192, !dbg !19953

129:                                              ; preds = %125
  br label %130, !dbg !19956

130:                                              ; preds = %129
  br label %131, !dbg !19957

131:                                              ; preds = %130
  %132 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19958
  %133 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %132, i32 0, i32 3, !dbg !19958
  %134 = call i32 @mbedtls_mpi_gcd(%struct.mbedtls_mpi* %16, %struct.mbedtls_mpi* %133, %struct.mbedtls_mpi* %15), !dbg !19958
  store i32 %134, i32* %12, align 4, !dbg !19958
  %135 = icmp ne i32 %134, 0, !dbg !19958
  br i1 %135, label %136, label %137, !dbg !19961

136:                                              ; preds = %131
  br label %192, !dbg !19958

137:                                              ; preds = %131
  br label %138, !dbg !19961

138:                                              ; preds = %137
  br label %139, !dbg !19962

139:                                              ; preds = %138, %95, %75
  %140 = call i32 @mbedtls_mpi_cmp_int(%struct.mbedtls_mpi* %16, i64 1), !dbg !19963
  %141 = icmp ne i32 %140, 0, !dbg !19964
  br i1 %141, label %42, label %142, !dbg !19962, !llvm.loop !19965

142:                                              ; preds = %139
  br label %143, !dbg !19967

143:                                              ; preds = %142
  %144 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19968
  %145 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %144, i32 0, i32 4, !dbg !19968
  %146 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19968
  %147 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %146, i32 0, i32 3, !dbg !19968
  %148 = call i32 @mbedtls_mpi_inv_mod(%struct.mbedtls_mpi* %145, %struct.mbedtls_mpi* %147, %struct.mbedtls_mpi* %15), !dbg !19968
  store i32 %148, i32* %12, align 4, !dbg !19968
  %149 = icmp ne i32 %148, 0, !dbg !19968
  br i1 %149, label %150, label %151, !dbg !19971

150:                                              ; preds = %143
  br label %192, !dbg !19968

151:                                              ; preds = %143
  br label %152, !dbg !19971

152:                                              ; preds = %151
  br label %153, !dbg !19972

153:                                              ; preds = %152
  %154 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19973
  %155 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %154, i32 0, i32 7, !dbg !19973
  %156 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19973
  %157 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %156, i32 0, i32 4, !dbg !19973
  %158 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %155, %struct.mbedtls_mpi* %157, %struct.mbedtls_mpi* %13), !dbg !19973
  store i32 %158, i32* %12, align 4, !dbg !19973
  %159 = icmp ne i32 %158, 0, !dbg !19973
  br i1 %159, label %160, label %161, !dbg !19976

160:                                              ; preds = %153
  br label %192, !dbg !19973

161:                                              ; preds = %153
  br label %162, !dbg !19976

162:                                              ; preds = %161
  br label %163, !dbg !19977

163:                                              ; preds = %162
  %164 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19978
  %165 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %164, i32 0, i32 8, !dbg !19978
  %166 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19978
  %167 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %166, i32 0, i32 4, !dbg !19978
  %168 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %165, %struct.mbedtls_mpi* %167, %struct.mbedtls_mpi* %14), !dbg !19978
  store i32 %168, i32* %12, align 4, !dbg !19978
  %169 = icmp ne i32 %168, 0, !dbg !19978
  br i1 %169, label %170, label %171, !dbg !19981

170:                                              ; preds = %163
  br label %192, !dbg !19978

171:                                              ; preds = %163
  br label %172, !dbg !19981

172:                                              ; preds = %171
  br label %173, !dbg !19982

173:                                              ; preds = %172
  %174 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19983
  %175 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %174, i32 0, i32 9, !dbg !19983
  %176 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19983
  %177 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %176, i32 0, i32 6, !dbg !19983
  %178 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19983
  %179 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %178, i32 0, i32 5, !dbg !19983
  %180 = call i32 @mbedtls_mpi_inv_mod(%struct.mbedtls_mpi* %175, %struct.mbedtls_mpi* %177, %struct.mbedtls_mpi* %179), !dbg !19983
  store i32 %180, i32* %12, align 4, !dbg !19983
  %181 = icmp ne i32 %180, 0, !dbg !19983
  br i1 %181, label %182, label %183, !dbg !19986

182:                                              ; preds = %173
  br label %192, !dbg !19983

183:                                              ; preds = %173
  br label %184, !dbg !19986

184:                                              ; preds = %183
  %185 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19987
  %186 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %185, i32 0, i32 2, !dbg !19988
  %187 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %186), !dbg !19989
  %188 = add i64 %187, 7, !dbg !19990
  %189 = lshr i64 %188, 3, !dbg !19991
  %190 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !19992
  %191 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %190, i32 0, i32 1, !dbg !19993
  store i64 %189, i64* %191, align 8, !dbg !19994
  br label %192, !dbg !19992

192:                                              ; preds = %184, %182, %170, %160, %150, %136, %128, %122, %114, %86, %66, %53, %39
  call void @llvm.dbg.label(metadata !19995), !dbg !19996
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %13), !dbg !19997
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %14), !dbg !19998
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %15), !dbg !19999
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %16), !dbg !20000
  %193 = load i32, i32* %12, align 4, !dbg !20001
  %194 = icmp ne i32 %193, 0, !dbg !20003
  br i1 %194, label %195, label %199, !dbg !20004

195:                                              ; preds = %192
  %196 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20005
  call void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %196), !dbg !20007
  %197 = load i32, i32* %12, align 4, !dbg !20008
  %198 = add nsw i32 -16768, %197, !dbg !20009
  store i32 %198, i32* %6, align 4, !dbg !20010
  br label %200, !dbg !20010

199:                                              ; preds = %192
  store i32 0, i32* %6, align 4, !dbg !20011
  br label %200, !dbg !20011

200:                                              ; preds = %199, %195, %30, %25
  %201 = load i32, i32* %6, align 4, !dbg !20012
  ret i32 %201, !dbg !20012
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %0) #0 !dbg !20013 {
  %2 = alloca %struct.mbedtls_rsa_context*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %2, metadata !20016, metadata !DIExpression()), !dbg !20017
  %3 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20018
  %4 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %3, i32 0, i32 13, !dbg !20019
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %4), !dbg !20020
  %5 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20021
  %6 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %5, i32 0, i32 14, !dbg !20022
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %6), !dbg !20023
  %7 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20024
  %8 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %7, i32 0, i32 12, !dbg !20025
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %8), !dbg !20026
  %9 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20027
  %10 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %9, i32 0, i32 11, !dbg !20028
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %10), !dbg !20029
  %11 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20030
  %12 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %11, i32 0, i32 10, !dbg !20031
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %12), !dbg !20032
  %13 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20033
  %14 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %13, i32 0, i32 9, !dbg !20034
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %14), !dbg !20035
  %15 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20036
  %16 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %15, i32 0, i32 8, !dbg !20037
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %16), !dbg !20038
  %17 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20039
  %18 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %17, i32 0, i32 7, !dbg !20040
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %18), !dbg !20041
  %19 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20042
  %20 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %19, i32 0, i32 6, !dbg !20043
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %20), !dbg !20044
  %21 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20045
  %22 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %21, i32 0, i32 5, !dbg !20046
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %22), !dbg !20047
  %23 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20048
  %24 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %23, i32 0, i32 4, !dbg !20049
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %24), !dbg !20050
  %25 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20051
  %26 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %25, i32 0, i32 3, !dbg !20052
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %26), !dbg !20053
  %27 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %2, align 8, !dbg !20054
  %28 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %27, i32 0, i32 2, !dbg !20055
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %28), !dbg !20056
  ret void, !dbg !20057
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_check_pubkey(%struct.mbedtls_rsa_context* %0) #0 !dbg !20058 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_rsa_context*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %3, metadata !20063, metadata !DIExpression()), !dbg !20064
  %4 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20065
  %5 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %4, i32 0, i32 2, !dbg !20067
  %6 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %5, i32 0, i32 2, !dbg !20068
  %7 = load i64*, i64** %6, align 8, !dbg !20068
  %8 = icmp ne i64* %7, null, !dbg !20065
  br i1 %8, label %9, label %15, !dbg !20069

9:                                                ; preds = %1
  %10 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20070
  %11 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %10, i32 0, i32 3, !dbg !20071
  %12 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %11, i32 0, i32 2, !dbg !20072
  %13 = load i64*, i64** %12, align 8, !dbg !20072
  %14 = icmp ne i64* %13, null, !dbg !20070
  br i1 %14, label %16, label %15, !dbg !20073

15:                                               ; preds = %9, %1
  store i32 -16896, i32* %2, align 4, !dbg !20074
  br label %60, !dbg !20074

16:                                               ; preds = %9
  %17 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20075
  %18 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %17, i32 0, i32 2, !dbg !20077
  %19 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %18, i32 0, i32 2, !dbg !20078
  %20 = load i64*, i64** %19, align 8, !dbg !20078
  %21 = getelementptr inbounds i64, i64* %20, i64 0, !dbg !20075
  %22 = load i64, i64* %21, align 8, !dbg !20075
  %23 = and i64 %22, 1, !dbg !20079
  %24 = icmp eq i64 %23, 0, !dbg !20080
  br i1 %24, label %34, label %25, !dbg !20081

25:                                               ; preds = %16
  %26 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20082
  %27 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %26, i32 0, i32 3, !dbg !20083
  %28 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %27, i32 0, i32 2, !dbg !20084
  %29 = load i64*, i64** %28, align 8, !dbg !20084
  %30 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !20082
  %31 = load i64, i64* %30, align 8, !dbg !20082
  %32 = and i64 %31, 1, !dbg !20085
  %33 = icmp eq i64 %32, 0, !dbg !20086
  br i1 %33, label %34, label %35, !dbg !20087

34:                                               ; preds = %25, %16
  store i32 -16896, i32* %2, align 4, !dbg !20088
  br label %60, !dbg !20088

35:                                               ; preds = %25
  %36 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20089
  %37 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %36, i32 0, i32 2, !dbg !20091
  %38 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %37), !dbg !20092
  %39 = icmp ult i64 %38, 128, !dbg !20093
  br i1 %39, label %45, label %40, !dbg !20094

40:                                               ; preds = %35
  %41 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20095
  %42 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %41, i32 0, i32 2, !dbg !20096
  %43 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %42), !dbg !20097
  %44 = icmp ugt i64 %43, 8192, !dbg !20098
  br i1 %44, label %45, label %46, !dbg !20099

45:                                               ; preds = %40, %35
  store i32 -16896, i32* %2, align 4, !dbg !20100
  br label %60, !dbg !20100

46:                                               ; preds = %40
  %47 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20101
  %48 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %47, i32 0, i32 3, !dbg !20103
  %49 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %48), !dbg !20104
  %50 = icmp ult i64 %49, 2, !dbg !20105
  br i1 %50, label %58, label %51, !dbg !20106

51:                                               ; preds = %46
  %52 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20107
  %53 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %52, i32 0, i32 3, !dbg !20108
  %54 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20109
  %55 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %54, i32 0, i32 2, !dbg !20110
  %56 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %53, %struct.mbedtls_mpi* %55), !dbg !20111
  %57 = icmp sge i32 %56, 0, !dbg !20112
  br i1 %57, label %58, label %59, !dbg !20113

58:                                               ; preds = %51, %46
  store i32 -16896, i32* %2, align 4, !dbg !20114
  br label %60, !dbg !20114

59:                                               ; preds = %51
  store i32 0, i32* %2, align 4, !dbg !20115
  br label %60, !dbg !20115

60:                                               ; preds = %59, %58, %45, %34, %15
  %61 = load i32, i32* %2, align 4, !dbg !20116
  ret i32 %61, !dbg !20116
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_check_privkey(%struct.mbedtls_rsa_context* %0) #0 !dbg !20117 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_rsa_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_mpi, align 8
  %6 = alloca %struct.mbedtls_mpi, align 8
  %7 = alloca %struct.mbedtls_mpi, align 8
  %8 = alloca %struct.mbedtls_mpi, align 8
  %9 = alloca %struct.mbedtls_mpi, align 8
  %10 = alloca %struct.mbedtls_mpi, align 8
  %11 = alloca %struct.mbedtls_mpi, align 8
  %12 = alloca %struct.mbedtls_mpi, align 8
  %13 = alloca %struct.mbedtls_mpi, align 8
  %14 = alloca %struct.mbedtls_mpi, align 8
  %15 = alloca %struct.mbedtls_mpi, align 8
  %16 = alloca %struct.mbedtls_mpi, align 8
  %17 = alloca %struct.mbedtls_mpi, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %3, metadata !20118, metadata !DIExpression()), !dbg !20119
  call void @llvm.dbg.declare(metadata i32* %4, metadata !20120, metadata !DIExpression()), !dbg !20121
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %5, metadata !20122, metadata !DIExpression()), !dbg !20123
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %6, metadata !20124, metadata !DIExpression()), !dbg !20125
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %7, metadata !20126, metadata !DIExpression()), !dbg !20127
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %8, metadata !20128, metadata !DIExpression()), !dbg !20129
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %9, metadata !20130, metadata !DIExpression()), !dbg !20131
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %10, metadata !20132, metadata !DIExpression()), !dbg !20133
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %11, metadata !20134, metadata !DIExpression()), !dbg !20135
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %12, metadata !20136, metadata !DIExpression()), !dbg !20137
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %13, metadata !20138, metadata !DIExpression()), !dbg !20139
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %14, metadata !20140, metadata !DIExpression()), !dbg !20141
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %15, metadata !20142, metadata !DIExpression()), !dbg !20143
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %16, metadata !20144, metadata !DIExpression()), !dbg !20145
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %17, metadata !20146, metadata !DIExpression()), !dbg !20147
  %18 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20148
  %19 = call i32 @mbedtls_rsa_check_pubkey(%struct.mbedtls_rsa_context* %18), !dbg !20150
  store i32 %19, i32* %4, align 4, !dbg !20151
  %20 = icmp ne i32 %19, 0, !dbg !20152
  br i1 %20, label %21, label %23, !dbg !20153

21:                                               ; preds = %1
  %22 = load i32, i32* %4, align 4, !dbg !20154
  store i32 %22, i32* %2, align 4, !dbg !20155
  br label %179, !dbg !20155

23:                                               ; preds = %1
  %24 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20156
  %25 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %24, i32 0, i32 5, !dbg !20158
  %26 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %25, i32 0, i32 2, !dbg !20159
  %27 = load i64*, i64** %26, align 8, !dbg !20159
  %28 = icmp ne i64* %27, null, !dbg !20156
  br i1 %28, label %29, label %41, !dbg !20160

29:                                               ; preds = %23
  %30 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20161
  %31 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %30, i32 0, i32 6, !dbg !20162
  %32 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %31, i32 0, i32 2, !dbg !20163
  %33 = load i64*, i64** %32, align 8, !dbg !20163
  %34 = icmp ne i64* %33, null, !dbg !20161
  br i1 %34, label %35, label %41, !dbg !20164

35:                                               ; preds = %29
  %36 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20165
  %37 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %36, i32 0, i32 4, !dbg !20166
  %38 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %37, i32 0, i32 2, !dbg !20167
  %39 = load i64*, i64** %38, align 8, !dbg !20167
  %40 = icmp ne i64* %39, null, !dbg !20165
  br i1 %40, label %42, label %41, !dbg !20168

41:                                               ; preds = %35, %29, %23
  store i32 -16896, i32* %2, align 4, !dbg !20169
  br label %179, !dbg !20169

42:                                               ; preds = %35
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %5), !dbg !20170
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %6), !dbg !20171
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %7), !dbg !20172
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %8), !dbg !20173
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %9), !dbg !20174
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %10), !dbg !20175
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %11), !dbg !20176
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %12), !dbg !20177
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %13), !dbg !20178
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %14), !dbg !20179
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %15), !dbg !20180
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %16), !dbg !20181
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %17), !dbg !20182
  br label %43, !dbg !20183

43:                                               ; preds = %42
  %44 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20184
  %45 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %44, i32 0, i32 5, !dbg !20184
  %46 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20184
  %47 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %46, i32 0, i32 6, !dbg !20184
  %48 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %5, %struct.mbedtls_mpi* %45, %struct.mbedtls_mpi* %47), !dbg !20184
  store i32 %48, i32* %4, align 4, !dbg !20184
  %49 = icmp ne i32 %48, 0, !dbg !20184
  br i1 %49, label %50, label %51, !dbg !20187

50:                                               ; preds = %43
  br label %167, !dbg !20184

51:                                               ; preds = %43
  br label %52, !dbg !20187

52:                                               ; preds = %51
  br label %53, !dbg !20188

53:                                               ; preds = %52
  %54 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20189
  %55 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %54, i32 0, i32 4, !dbg !20189
  %56 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20189
  %57 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %56, i32 0, i32 3, !dbg !20189
  %58 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %6, %struct.mbedtls_mpi* %55, %struct.mbedtls_mpi* %57), !dbg !20189
  store i32 %58, i32* %4, align 4, !dbg !20189
  %59 = icmp ne i32 %58, 0, !dbg !20189
  br i1 %59, label %60, label %61, !dbg !20192

60:                                               ; preds = %53
  br label %167, !dbg !20189

61:                                               ; preds = %53
  br label %62, !dbg !20192

62:                                               ; preds = %61
  br label %63, !dbg !20193

63:                                               ; preds = %62
  %64 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20194
  %65 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %64, i32 0, i32 5, !dbg !20194
  %66 = call i32 @mbedtls_mpi_sub_int(%struct.mbedtls_mpi* %7, %struct.mbedtls_mpi* %65, i64 1), !dbg !20194
  store i32 %66, i32* %4, align 4, !dbg !20194
  %67 = icmp ne i32 %66, 0, !dbg !20194
  br i1 %67, label %68, label %69, !dbg !20197

68:                                               ; preds = %63
  br label %167, !dbg !20194

69:                                               ; preds = %63
  br label %70, !dbg !20197

70:                                               ; preds = %69
  br label %71, !dbg !20198

71:                                               ; preds = %70
  %72 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20199
  %73 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %72, i32 0, i32 6, !dbg !20199
  %74 = call i32 @mbedtls_mpi_sub_int(%struct.mbedtls_mpi* %8, %struct.mbedtls_mpi* %73, i64 1), !dbg !20199
  store i32 %74, i32* %4, align 4, !dbg !20199
  %75 = icmp ne i32 %74, 0, !dbg !20199
  br i1 %75, label %76, label %77, !dbg !20202

76:                                               ; preds = %71
  br label %167, !dbg !20199

77:                                               ; preds = %71
  br label %78, !dbg !20202

78:                                               ; preds = %77
  br label %79, !dbg !20203

79:                                               ; preds = %78
  %80 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %9, %struct.mbedtls_mpi* %7, %struct.mbedtls_mpi* %8), !dbg !20204
  store i32 %80, i32* %4, align 4, !dbg !20204
  %81 = icmp ne i32 %80, 0, !dbg !20204
  br i1 %81, label %82, label %83, !dbg !20207

82:                                               ; preds = %79
  br label %167, !dbg !20204

83:                                               ; preds = %79
  br label %84, !dbg !20207

84:                                               ; preds = %83
  br label %85, !dbg !20208

85:                                               ; preds = %84
  %86 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20209
  %87 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %86, i32 0, i32 3, !dbg !20209
  %88 = call i32 @mbedtls_mpi_gcd(%struct.mbedtls_mpi* %11, %struct.mbedtls_mpi* %87, %struct.mbedtls_mpi* %9), !dbg !20209
  store i32 %88, i32* %4, align 4, !dbg !20209
  %89 = icmp ne i32 %88, 0, !dbg !20209
  br i1 %89, label %90, label %91, !dbg !20212

90:                                               ; preds = %85
  br label %167, !dbg !20209

91:                                               ; preds = %85
  br label %92, !dbg !20212

92:                                               ; preds = %91
  br label %93, !dbg !20213

93:                                               ; preds = %92
  %94 = call i32 @mbedtls_mpi_gcd(%struct.mbedtls_mpi* %12, %struct.mbedtls_mpi* %7, %struct.mbedtls_mpi* %8), !dbg !20214
  store i32 %94, i32* %4, align 4, !dbg !20214
  %95 = icmp ne i32 %94, 0, !dbg !20214
  br i1 %95, label %96, label %97, !dbg !20217

96:                                               ; preds = %93
  br label %167, !dbg !20214

97:                                               ; preds = %93
  br label %98, !dbg !20217

98:                                               ; preds = %97
  br label %99, !dbg !20218

99:                                               ; preds = %98
  %100 = call i32 @mbedtls_mpi_div_mpi(%struct.mbedtls_mpi* %13, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %9, %struct.mbedtls_mpi* %12), !dbg !20219
  store i32 %100, i32* %4, align 4, !dbg !20219
  %101 = icmp ne i32 %100, 0, !dbg !20219
  br i1 %101, label %102, label %103, !dbg !20222

102:                                              ; preds = %99
  br label %167, !dbg !20219

103:                                              ; preds = %99
  br label %104, !dbg !20222

104:                                              ; preds = %103
  br label %105, !dbg !20223

105:                                              ; preds = %104
  %106 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %10, %struct.mbedtls_mpi* %6, %struct.mbedtls_mpi* %13), !dbg !20224
  store i32 %106, i32* %4, align 4, !dbg !20224
  %107 = icmp ne i32 %106, 0, !dbg !20224
  br i1 %107, label %108, label %109, !dbg !20227

108:                                              ; preds = %105
  br label %167, !dbg !20224

109:                                              ; preds = %105
  br label %110, !dbg !20227

110:                                              ; preds = %109
  br label %111, !dbg !20228

111:                                              ; preds = %110
  %112 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20229
  %113 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %112, i32 0, i32 4, !dbg !20229
  %114 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %113, %struct.mbedtls_mpi* %7), !dbg !20229
  store i32 %114, i32* %4, align 4, !dbg !20229
  %115 = icmp ne i32 %114, 0, !dbg !20229
  br i1 %115, label %116, label %117, !dbg !20232

116:                                              ; preds = %111
  br label %167, !dbg !20229

117:                                              ; preds = %111
  br label %118, !dbg !20232

118:                                              ; preds = %117
  br label %119, !dbg !20233

119:                                              ; preds = %118
  %120 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20234
  %121 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %120, i32 0, i32 4, !dbg !20234
  %122 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %16, %struct.mbedtls_mpi* %121, %struct.mbedtls_mpi* %8), !dbg !20234
  store i32 %122, i32* %4, align 4, !dbg !20234
  %123 = icmp ne i32 %122, 0, !dbg !20234
  br i1 %123, label %124, label %125, !dbg !20237

124:                                              ; preds = %119
  br label %167, !dbg !20234

125:                                              ; preds = %119
  br label %126, !dbg !20237

126:                                              ; preds = %125
  br label %127, !dbg !20238

127:                                              ; preds = %126
  %128 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20239
  %129 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %128, i32 0, i32 6, !dbg !20239
  %130 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20239
  %131 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %130, i32 0, i32 5, !dbg !20239
  %132 = call i32 @mbedtls_mpi_inv_mod(%struct.mbedtls_mpi* %17, %struct.mbedtls_mpi* %129, %struct.mbedtls_mpi* %131), !dbg !20239
  store i32 %132, i32* %4, align 4, !dbg !20239
  %133 = icmp ne i32 %132, 0, !dbg !20239
  br i1 %133, label %134, label %135, !dbg !20242

134:                                              ; preds = %127
  br label %167, !dbg !20239

135:                                              ; preds = %127
  br label %136, !dbg !20242

136:                                              ; preds = %135
  %137 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20243
  %138 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %137, i32 0, i32 2, !dbg !20245
  %139 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %5, %struct.mbedtls_mpi* %138), !dbg !20246
  %140 = icmp ne i32 %139, 0, !dbg !20247
  br i1 %140, label %165, label %141, !dbg !20248

141:                                              ; preds = %136
  %142 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20249
  %143 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %142, i32 0, i32 7, !dbg !20250
  %144 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %143), !dbg !20251
  %145 = icmp ne i32 %144, 0, !dbg !20252
  br i1 %145, label %165, label %146, !dbg !20253

146:                                              ; preds = %141
  %147 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20254
  %148 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %147, i32 0, i32 8, !dbg !20255
  %149 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %16, %struct.mbedtls_mpi* %148), !dbg !20256
  %150 = icmp ne i32 %149, 0, !dbg !20257
  br i1 %150, label %165, label %151, !dbg !20258

151:                                              ; preds = %146
  %152 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !20259
  %153 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %152, i32 0, i32 9, !dbg !20260
  %154 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %17, %struct.mbedtls_mpi* %153), !dbg !20261
  %155 = icmp ne i32 %154, 0, !dbg !20262
  br i1 %155, label %165, label %156, !dbg !20263

156:                                              ; preds = %151
  %157 = call i32 @mbedtls_mpi_cmp_int(%struct.mbedtls_mpi* %14, i64 0), !dbg !20264
  %158 = icmp ne i32 %157, 0, !dbg !20265
  br i1 %158, label %165, label %159, !dbg !20266

159:                                              ; preds = %156
  %160 = call i32 @mbedtls_mpi_cmp_int(%struct.mbedtls_mpi* %10, i64 1), !dbg !20267
  %161 = icmp ne i32 %160, 0, !dbg !20268
  br i1 %161, label %165, label %162, !dbg !20269

162:                                              ; preds = %159
  %163 = call i32 @mbedtls_mpi_cmp_int(%struct.mbedtls_mpi* %11, i64 1), !dbg !20270
  %164 = icmp ne i32 %163, 0, !dbg !20271
  br i1 %164, label %165, label %166, !dbg !20272

165:                                              ; preds = %162, %159, %156, %151, %146, %141, %136
  store i32 -16896, i32* %4, align 4, !dbg !20273
  br label %166, !dbg !20275

166:                                              ; preds = %165, %162
  br label %167, !dbg !20276

167:                                              ; preds = %166, %134, %124, %116, %108, %102, %96, %90, %82, %76, %68, %60, %50
  call void @llvm.dbg.label(metadata !20277), !dbg !20278
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %5), !dbg !20279
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %6), !dbg !20280
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %7), !dbg !20281
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %8), !dbg !20282
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %9), !dbg !20283
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %10), !dbg !20284
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %11), !dbg !20285
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %12), !dbg !20286
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %13), !dbg !20287
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %14), !dbg !20288
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %15), !dbg !20289
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %16), !dbg !20290
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %17), !dbg !20291
  %168 = load i32, i32* %4, align 4, !dbg !20292
  %169 = icmp eq i32 %168, -16896, !dbg !20294
  br i1 %169, label %170, label %172, !dbg !20295

170:                                              ; preds = %167
  %171 = load i32, i32* %4, align 4, !dbg !20296
  store i32 %171, i32* %2, align 4, !dbg !20297
  br label %179, !dbg !20297

172:                                              ; preds = %167
  %173 = load i32, i32* %4, align 4, !dbg !20298
  %174 = icmp ne i32 %173, 0, !dbg !20300
  br i1 %174, label %175, label %178, !dbg !20301

175:                                              ; preds = %172
  %176 = load i32, i32* %4, align 4, !dbg !20302
  %177 = add nsw i32 -16896, %176, !dbg !20303
  store i32 %177, i32* %2, align 4, !dbg !20304
  br label %179, !dbg !20304

178:                                              ; preds = %172
  store i32 0, i32* %2, align 4, !dbg !20305
  br label %179, !dbg !20305

179:                                              ; preds = %178, %175, %170, %41, %21
  %180 = load i32, i32* %2, align 4, !dbg !20306
  ret i32 %180, !dbg !20306
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_check_pub_priv(%struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context* %1) #0 !dbg !20307 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_rsa_context*, align 8
  %5 = alloca %struct.mbedtls_rsa_context*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %4, metadata !20310, metadata !DIExpression()), !dbg !20311
  store %struct.mbedtls_rsa_context* %1, %struct.mbedtls_rsa_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %5, metadata !20312, metadata !DIExpression()), !dbg !20313
  %6 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !20314
  %7 = call i32 @mbedtls_rsa_check_pubkey(%struct.mbedtls_rsa_context* %6), !dbg !20316
  %8 = icmp ne i32 %7, 0, !dbg !20317
  br i1 %8, label %13, label %9, !dbg !20318

9:                                                ; preds = %2
  %10 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20319
  %11 = call i32 @mbedtls_rsa_check_privkey(%struct.mbedtls_rsa_context* %10), !dbg !20320
  %12 = icmp ne i32 %11, 0, !dbg !20321
  br i1 %12, label %13, label %14, !dbg !20322

13:                                               ; preds = %9, %2
  store i32 -16896, i32* %3, align 4, !dbg !20323
  br label %30, !dbg !20323

14:                                               ; preds = %9
  %15 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !20325
  %16 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %15, i32 0, i32 2, !dbg !20327
  %17 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20328
  %18 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %17, i32 0, i32 2, !dbg !20329
  %19 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %16, %struct.mbedtls_mpi* %18), !dbg !20330
  %20 = icmp ne i32 %19, 0, !dbg !20331
  br i1 %20, label %28, label %21, !dbg !20332

21:                                               ; preds = %14
  %22 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !20333
  %23 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %22, i32 0, i32 3, !dbg !20334
  %24 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20335
  %25 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %24, i32 0, i32 3, !dbg !20336
  %26 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %23, %struct.mbedtls_mpi* %25), !dbg !20337
  %27 = icmp ne i32 %26, 0, !dbg !20338
  br i1 %27, label %28, label %29, !dbg !20339

28:                                               ; preds = %21, %14
  store i32 -16896, i32* %3, align 4, !dbg !20340
  br label %30, !dbg !20340

29:                                               ; preds = %21
  store i32 0, i32* %3, align 4, !dbg !20342
  br label %30, !dbg !20342

30:                                               ; preds = %29, %28, %13
  %31 = load i32, i32* %3, align 4, !dbg !20343
  ret i32 %31, !dbg !20343
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %0, i8* %1, i8* %2) #0 !dbg !20344 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_rsa_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.mbedtls_mpi, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %5, metadata !20347, metadata !DIExpression()), !dbg !20348
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !20349, metadata !DIExpression()), !dbg !20350
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !20351, metadata !DIExpression()), !dbg !20352
  call void @llvm.dbg.declare(metadata i32* %8, metadata !20353, metadata !DIExpression()), !dbg !20354
  call void @llvm.dbg.declare(metadata i64* %9, metadata !20355, metadata !DIExpression()), !dbg !20356
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %10, metadata !20357, metadata !DIExpression()), !dbg !20358
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %10), !dbg !20359
  br label %11, !dbg !20360

11:                                               ; preds = %3
  %12 = load i8*, i8** %6, align 8, !dbg !20361
  %13 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20361
  %14 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %13, i32 0, i32 1, !dbg !20361
  %15 = load i64, i64* %14, align 8, !dbg !20361
  %16 = call i32 @mbedtls_mpi_read_binary(%struct.mbedtls_mpi* %10, i8* %12, i64 %15), !dbg !20361
  store i32 %16, i32* %8, align 4, !dbg !20361
  %17 = icmp ne i32 %16, 0, !dbg !20361
  br i1 %17, label %18, label %19, !dbg !20364

18:                                               ; preds = %11
  br label %50, !dbg !20361

19:                                               ; preds = %11
  br label %20, !dbg !20364

20:                                               ; preds = %19
  %21 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20365
  %22 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %21, i32 0, i32 2, !dbg !20367
  %23 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %10, %struct.mbedtls_mpi* %22), !dbg !20368
  %24 = icmp sge i32 %23, 0, !dbg !20369
  br i1 %24, label %25, label %26, !dbg !20370

25:                                               ; preds = %20
  store i32 -4, i32* %8, align 4, !dbg !20371
  br label %50, !dbg !20373

26:                                               ; preds = %20
  %27 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20374
  %28 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %27, i32 0, i32 1, !dbg !20375
  %29 = load i64, i64* %28, align 8, !dbg !20375
  store i64 %29, i64* %9, align 8, !dbg !20376
  br label %30, !dbg !20377

30:                                               ; preds = %26
  %31 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20378
  %32 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %31, i32 0, i32 3, !dbg !20378
  %33 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20378
  %34 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %33, i32 0, i32 2, !dbg !20378
  %35 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20378
  %36 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %35, i32 0, i32 10, !dbg !20378
  %37 = call i32 @mbedtls_mpi_exp_mod(%struct.mbedtls_mpi* %10, %struct.mbedtls_mpi* %10, %struct.mbedtls_mpi* %32, %struct.mbedtls_mpi* %34, %struct.mbedtls_mpi* %36), !dbg !20378
  store i32 %37, i32* %8, align 4, !dbg !20378
  %38 = icmp ne i32 %37, 0, !dbg !20378
  br i1 %38, label %39, label %40, !dbg !20381

39:                                               ; preds = %30
  br label %50, !dbg !20378

40:                                               ; preds = %30
  br label %41, !dbg !20381

41:                                               ; preds = %40
  br label %42, !dbg !20382

42:                                               ; preds = %41
  %43 = load i8*, i8** %7, align 8, !dbg !20383
  %44 = load i64, i64* %9, align 8, !dbg !20383
  %45 = call i32 @mbedtls_mpi_write_binary(%struct.mbedtls_mpi* %10, i8* %43, i64 %44), !dbg !20383
  store i32 %45, i32* %8, align 4, !dbg !20383
  %46 = icmp ne i32 %45, 0, !dbg !20383
  br i1 %46, label %47, label %48, !dbg !20386

47:                                               ; preds = %42
  br label %50, !dbg !20383

48:                                               ; preds = %42
  br label %49, !dbg !20386

49:                                               ; preds = %48
  br label %50, !dbg !20386

50:                                               ; preds = %49, %47, %39, %25, %18
  call void @llvm.dbg.label(metadata !20387), !dbg !20388
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %10), !dbg !20389
  %51 = load i32, i32* %8, align 4, !dbg !20390
  %52 = icmp ne i32 %51, 0, !dbg !20392
  br i1 %52, label %53, label %56, !dbg !20393

53:                                               ; preds = %50
  %54 = load i32, i32* %8, align 4, !dbg !20394
  %55 = add nsw i32 -17024, %54, !dbg !20395
  store i32 %55, i32* %4, align 4, !dbg !20396
  br label %57, !dbg !20396

56:                                               ; preds = %50
  store i32 0, i32* %4, align 4, !dbg !20397
  br label %57, !dbg !20397

57:                                               ; preds = %56, %53
  %58 = load i32, i32* %4, align 4, !dbg !20398
  ret i32 %58, !dbg !20398
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i8* %3, i8* %4) #0 !dbg !20399 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.mbedtls_rsa_context*, align 8
  %8 = alloca i32 (i8*, i8*, i64)*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca %struct.mbedtls_mpi, align 8
  %15 = alloca %struct.mbedtls_mpi, align 8
  %16 = alloca %struct.mbedtls_mpi, align 8
  %17 = alloca %struct.mbedtls_mpi, align 8
  %18 = alloca %struct.mbedtls_mpi, align 8
  %19 = alloca %struct.mbedtls_mpi, align 8
  %20 = alloca %struct.mbedtls_mpi, align 8
  %21 = alloca %struct.mbedtls_mpi, align 8
  %22 = alloca %struct.mbedtls_mpi*, align 8
  %23 = alloca %struct.mbedtls_mpi*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %7, metadata !20402, metadata !DIExpression()), !dbg !20403
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %8, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %8, metadata !20404, metadata !DIExpression()), !dbg !20405
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !20406, metadata !DIExpression()), !dbg !20407
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !20408, metadata !DIExpression()), !dbg !20409
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !20410, metadata !DIExpression()), !dbg !20411
  call void @llvm.dbg.declare(metadata i32* %12, metadata !20412, metadata !DIExpression()), !dbg !20413
  call void @llvm.dbg.declare(metadata i64* %13, metadata !20414, metadata !DIExpression()), !dbg !20415
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %14, metadata !20416, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %15, metadata !20418, metadata !DIExpression()), !dbg !20419
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %16, metadata !20420, metadata !DIExpression()), !dbg !20421
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %17, metadata !20422, metadata !DIExpression()), !dbg !20423
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %18, metadata !20424, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %19, metadata !20426, metadata !DIExpression()), !dbg !20427
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %20, metadata !20428, metadata !DIExpression()), !dbg !20429
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi* %21, metadata !20430, metadata !DIExpression()), !dbg !20431
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi** %22, metadata !20432, metadata !DIExpression()), !dbg !20434
  %24 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20435
  %25 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %24, i32 0, i32 7, !dbg !20436
  store %struct.mbedtls_mpi* %25, %struct.mbedtls_mpi** %22, align 8, !dbg !20434
  call void @llvm.dbg.declare(metadata %struct.mbedtls_mpi** %23, metadata !20437, metadata !DIExpression()), !dbg !20438
  %26 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20439
  %27 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %26, i32 0, i32 8, !dbg !20440
  store %struct.mbedtls_mpi* %27, %struct.mbedtls_mpi** %23, align 8, !dbg !20438
  %28 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20441
  %29 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %28, i32 0, i32 5, !dbg !20443
  %30 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %29, i32 0, i32 2, !dbg !20444
  %31 = load i64*, i64** %30, align 8, !dbg !20444
  %32 = icmp eq i64* %31, null, !dbg !20445
  br i1 %32, label %45, label %33, !dbg !20446

33:                                               ; preds = %5
  %34 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20447
  %35 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %34, i32 0, i32 6, !dbg !20448
  %36 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %35, i32 0, i32 2, !dbg !20449
  %37 = load i64*, i64** %36, align 8, !dbg !20449
  %38 = icmp eq i64* %37, null, !dbg !20450
  br i1 %38, label %45, label %39, !dbg !20451

39:                                               ; preds = %33
  %40 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20452
  %41 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %40, i32 0, i32 4, !dbg !20453
  %42 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %41, i32 0, i32 2, !dbg !20454
  %43 = load i64*, i64** %42, align 8, !dbg !20454
  %44 = icmp eq i64* %43, null, !dbg !20455
  br i1 %44, label %45, label %46, !dbg !20456

45:                                               ; preds = %39, %33, %5
  store i32 -16512, i32* %6, align 4, !dbg !20457
  br label %256, !dbg !20457

46:                                               ; preds = %39
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %14), !dbg !20458
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %15), !dbg !20459
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %16), !dbg !20460
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %17), !dbg !20461
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %18), !dbg !20462
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %19), !dbg !20463
  %47 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20464
  %48 = icmp ne i32 (i8*, i8*, i64)* %47, null, !dbg !20466
  br i1 %48, label %49, label %50, !dbg !20467

49:                                               ; preds = %46
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %20), !dbg !20468
  call void @mbedtls_mpi_init(%struct.mbedtls_mpi* %21), !dbg !20470
  br label %50, !dbg !20471

50:                                               ; preds = %49, %46
  br label %51, !dbg !20472

51:                                               ; preds = %50
  %52 = load i8*, i8** %10, align 8, !dbg !20473
  %53 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20473
  %54 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %53, i32 0, i32 1, !dbg !20473
  %55 = load i64, i64* %54, align 8, !dbg !20473
  %56 = call i32 @mbedtls_mpi_read_binary(%struct.mbedtls_mpi* %14, i8* %52, i64 %55), !dbg !20473
  store i32 %56, i32* %12, align 4, !dbg !20473
  %57 = icmp ne i32 %56, 0, !dbg !20473
  br i1 %57, label %58, label %59, !dbg !20476

58:                                               ; preds = %51
  br label %245, !dbg !20473

59:                                               ; preds = %51
  br label %60, !dbg !20476

60:                                               ; preds = %59
  %61 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20477
  %62 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %61, i32 0, i32 2, !dbg !20479
  %63 = call i32 @mbedtls_mpi_cmp_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %62), !dbg !20480
  %64 = icmp sge i32 %63, 0, !dbg !20481
  br i1 %64, label %65, label %66, !dbg !20482

65:                                               ; preds = %60
  store i32 -4, i32* %12, align 4, !dbg !20483
  br label %245, !dbg !20485

66:                                               ; preds = %60
  %67 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20486
  %68 = icmp ne i32 (i8*, i8*, i64)* %67, null, !dbg !20488
  br i1 %68, label %69, label %155, !dbg !20489

69:                                               ; preds = %66
  br label %70, !dbg !20490

70:                                               ; preds = %69
  %71 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20492
  %72 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20492
  %73 = load i8*, i8** %9, align 8, !dbg !20492
  %74 = call i32 @rsa_prepare_blinding(%struct.mbedtls_rsa_context* %71, i32 (i8*, i8*, i64)* %72, i8* %73), !dbg !20492
  store i32 %74, i32* %12, align 4, !dbg !20492
  %75 = icmp ne i32 %74, 0, !dbg !20492
  br i1 %75, label %76, label %77, !dbg !20495

76:                                               ; preds = %70
  br label %245, !dbg !20492

77:                                               ; preds = %70
  br label %78, !dbg !20495

78:                                               ; preds = %77
  br label %79, !dbg !20496

79:                                               ; preds = %78
  %80 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20497
  %81 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %80, i32 0, i32 13, !dbg !20497
  %82 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %81), !dbg !20497
  store i32 %82, i32* %12, align 4, !dbg !20497
  %83 = icmp ne i32 %82, 0, !dbg !20497
  br i1 %83, label %84, label %85, !dbg !20500

84:                                               ; preds = %79
  br label %245, !dbg !20497

85:                                               ; preds = %79
  br label %86, !dbg !20500

86:                                               ; preds = %85
  br label %87, !dbg !20501

87:                                               ; preds = %86
  %88 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20502
  %89 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %88, i32 0, i32 2, !dbg !20502
  %90 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %89), !dbg !20502
  store i32 %90, i32* %12, align 4, !dbg !20502
  %91 = icmp ne i32 %90, 0, !dbg !20502
  br i1 %91, label %92, label %93, !dbg !20505

92:                                               ; preds = %87
  br label %245, !dbg !20502

93:                                               ; preds = %87
  br label %94, !dbg !20505

94:                                               ; preds = %93
  br label %95, !dbg !20506

95:                                               ; preds = %94
  %96 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20507
  %97 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %96, i32 0, i32 5, !dbg !20507
  %98 = call i32 @mbedtls_mpi_sub_int(%struct.mbedtls_mpi* %17, %struct.mbedtls_mpi* %97, i64 1), !dbg !20507
  store i32 %98, i32* %12, align 4, !dbg !20507
  %99 = icmp ne i32 %98, 0, !dbg !20507
  br i1 %99, label %100, label %101, !dbg !20510

100:                                              ; preds = %95
  br label %245, !dbg !20507

101:                                              ; preds = %95
  br label %102, !dbg !20510

102:                                              ; preds = %101
  br label %103, !dbg !20511

103:                                              ; preds = %102
  %104 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20512
  %105 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %104, i32 0, i32 6, !dbg !20512
  %106 = call i32 @mbedtls_mpi_sub_int(%struct.mbedtls_mpi* %18, %struct.mbedtls_mpi* %105, i64 1), !dbg !20512
  store i32 %106, i32* %12, align 4, !dbg !20512
  %107 = icmp ne i32 %106, 0, !dbg !20512
  br i1 %107, label %108, label %109, !dbg !20515

108:                                              ; preds = %103
  br label %245, !dbg !20512

109:                                              ; preds = %103
  br label %110, !dbg !20515

110:                                              ; preds = %109
  br label %111, !dbg !20516

111:                                              ; preds = %110
  %112 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20517
  %113 = load i8*, i8** %9, align 8, !dbg !20517
  %114 = call i32 @mbedtls_mpi_fill_random(%struct.mbedtls_mpi* %19, i64 28, i32 (i8*, i8*, i64)* %112, i8* %113), !dbg !20517
  store i32 %114, i32* %12, align 4, !dbg !20517
  %115 = icmp ne i32 %114, 0, !dbg !20517
  br i1 %115, label %116, label %117, !dbg !20520

116:                                              ; preds = %111
  br label %245, !dbg !20517

117:                                              ; preds = %111
  br label %118, !dbg !20520

118:                                              ; preds = %117
  br label %119, !dbg !20521

119:                                              ; preds = %118
  %120 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %20, %struct.mbedtls_mpi* %17, %struct.mbedtls_mpi* %19), !dbg !20522
  store i32 %120, i32* %12, align 4, !dbg !20522
  %121 = icmp ne i32 %120, 0, !dbg !20522
  br i1 %121, label %122, label %123, !dbg !20525

122:                                              ; preds = %119
  br label %245, !dbg !20522

123:                                              ; preds = %119
  br label %124, !dbg !20525

124:                                              ; preds = %123
  br label %125, !dbg !20526

125:                                              ; preds = %124
  %126 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20527
  %127 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %126, i32 0, i32 7, !dbg !20527
  %128 = call i32 @mbedtls_mpi_add_mpi(%struct.mbedtls_mpi* %20, %struct.mbedtls_mpi* %20, %struct.mbedtls_mpi* %127), !dbg !20527
  store i32 %128, i32* %12, align 4, !dbg !20527
  %129 = icmp ne i32 %128, 0, !dbg !20527
  br i1 %129, label %130, label %131, !dbg !20530

130:                                              ; preds = %125
  br label %245, !dbg !20527

131:                                              ; preds = %125
  br label %132, !dbg !20530

132:                                              ; preds = %131
  store %struct.mbedtls_mpi* %20, %struct.mbedtls_mpi** %22, align 8, !dbg !20531
  br label %133, !dbg !20532

133:                                              ; preds = %132
  %134 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20533
  %135 = load i8*, i8** %9, align 8, !dbg !20533
  %136 = call i32 @mbedtls_mpi_fill_random(%struct.mbedtls_mpi* %19, i64 28, i32 (i8*, i8*, i64)* %134, i8* %135), !dbg !20533
  store i32 %136, i32* %12, align 4, !dbg !20533
  %137 = icmp ne i32 %136, 0, !dbg !20533
  br i1 %137, label %138, label %139, !dbg !20536

138:                                              ; preds = %133
  br label %245, !dbg !20533

139:                                              ; preds = %133
  br label %140, !dbg !20536

140:                                              ; preds = %139
  br label %141, !dbg !20537

141:                                              ; preds = %140
  %142 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %21, %struct.mbedtls_mpi* %18, %struct.mbedtls_mpi* %19), !dbg !20538
  store i32 %142, i32* %12, align 4, !dbg !20538
  %143 = icmp ne i32 %142, 0, !dbg !20538
  br i1 %143, label %144, label %145, !dbg !20541

144:                                              ; preds = %141
  br label %245, !dbg !20538

145:                                              ; preds = %141
  br label %146, !dbg !20541

146:                                              ; preds = %145
  br label %147, !dbg !20542

147:                                              ; preds = %146
  %148 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20543
  %149 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %148, i32 0, i32 8, !dbg !20543
  %150 = call i32 @mbedtls_mpi_add_mpi(%struct.mbedtls_mpi* %21, %struct.mbedtls_mpi* %21, %struct.mbedtls_mpi* %149), !dbg !20543
  store i32 %150, i32* %12, align 4, !dbg !20543
  %151 = icmp ne i32 %150, 0, !dbg !20543
  br i1 %151, label %152, label %153, !dbg !20546

152:                                              ; preds = %147
  br label %245, !dbg !20543

153:                                              ; preds = %147
  br label %154, !dbg !20546

154:                                              ; preds = %153
  store %struct.mbedtls_mpi* %21, %struct.mbedtls_mpi** %23, align 8, !dbg !20547
  br label %155, !dbg !20548

155:                                              ; preds = %154, %66
  br label %156, !dbg !20549

156:                                              ; preds = %155
  %157 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %22, align 8, !dbg !20550
  %158 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20550
  %159 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %158, i32 0, i32 5, !dbg !20550
  %160 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20550
  %161 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %160, i32 0, i32 11, !dbg !20550
  %162 = call i32 @mbedtls_mpi_exp_mod(%struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %157, %struct.mbedtls_mpi* %159, %struct.mbedtls_mpi* %161), !dbg !20550
  store i32 %162, i32* %12, align 4, !dbg !20550
  %163 = icmp ne i32 %162, 0, !dbg !20550
  br i1 %163, label %164, label %165, !dbg !20553

164:                                              ; preds = %156
  br label %245, !dbg !20550

165:                                              ; preds = %156
  br label %166, !dbg !20553

166:                                              ; preds = %165
  br label %167, !dbg !20554

167:                                              ; preds = %166
  %168 = load %struct.mbedtls_mpi*, %struct.mbedtls_mpi** %23, align 8, !dbg !20555
  %169 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20555
  %170 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %169, i32 0, i32 6, !dbg !20555
  %171 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20555
  %172 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %171, i32 0, i32 12, !dbg !20555
  %173 = call i32 @mbedtls_mpi_exp_mod(%struct.mbedtls_mpi* %16, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %168, %struct.mbedtls_mpi* %170, %struct.mbedtls_mpi* %172), !dbg !20555
  store i32 %173, i32* %12, align 4, !dbg !20555
  %174 = icmp ne i32 %173, 0, !dbg !20555
  br i1 %174, label %175, label %176, !dbg !20558

175:                                              ; preds = %167
  br label %245, !dbg !20555

176:                                              ; preds = %167
  br label %177, !dbg !20558

177:                                              ; preds = %176
  br label %178, !dbg !20559

178:                                              ; preds = %177
  %179 = call i32 @mbedtls_mpi_sub_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %16), !dbg !20560
  store i32 %179, i32* %12, align 4, !dbg !20560
  %180 = icmp ne i32 %179, 0, !dbg !20560
  br i1 %180, label %181, label %182, !dbg !20563

181:                                              ; preds = %178
  br label %245, !dbg !20560

182:                                              ; preds = %178
  br label %183, !dbg !20563

183:                                              ; preds = %182
  br label %184, !dbg !20564

184:                                              ; preds = %183
  %185 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20565
  %186 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %185, i32 0, i32 9, !dbg !20565
  %187 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %186), !dbg !20565
  store i32 %187, i32* %12, align 4, !dbg !20565
  %188 = icmp ne i32 %187, 0, !dbg !20565
  br i1 %188, label %189, label %190, !dbg !20568

189:                                              ; preds = %184
  br label %245, !dbg !20565

190:                                              ; preds = %184
  br label %191, !dbg !20568

191:                                              ; preds = %190
  br label %192, !dbg !20569

192:                                              ; preds = %191
  %193 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20570
  %194 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %193, i32 0, i32 5, !dbg !20570
  %195 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %194), !dbg !20570
  store i32 %195, i32* %12, align 4, !dbg !20570
  %196 = icmp ne i32 %195, 0, !dbg !20570
  br i1 %196, label %197, label %198, !dbg !20573

197:                                              ; preds = %192
  br label %245, !dbg !20570

198:                                              ; preds = %192
  br label %199, !dbg !20573

199:                                              ; preds = %198
  br label %200, !dbg !20574

200:                                              ; preds = %199
  %201 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20575
  %202 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %201, i32 0, i32 6, !dbg !20575
  %203 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %15, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %202), !dbg !20575
  store i32 %203, i32* %12, align 4, !dbg !20575
  %204 = icmp ne i32 %203, 0, !dbg !20575
  br i1 %204, label %205, label %206, !dbg !20578

205:                                              ; preds = %200
  br label %245, !dbg !20575

206:                                              ; preds = %200
  br label %207, !dbg !20578

207:                                              ; preds = %206
  br label %208, !dbg !20579

208:                                              ; preds = %207
  %209 = call i32 @mbedtls_mpi_add_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %16, %struct.mbedtls_mpi* %15), !dbg !20580
  store i32 %209, i32* %12, align 4, !dbg !20580
  %210 = icmp ne i32 %209, 0, !dbg !20580
  br i1 %210, label %211, label %212, !dbg !20583

211:                                              ; preds = %208
  br label %245, !dbg !20580

212:                                              ; preds = %208
  br label %213, !dbg !20583

213:                                              ; preds = %212
  %214 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20584
  %215 = icmp ne i32 (i8*, i8*, i64)* %214, null, !dbg !20586
  br i1 %215, label %216, label %233, !dbg !20587

216:                                              ; preds = %213
  br label %217, !dbg !20588

217:                                              ; preds = %216
  %218 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20590
  %219 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %218, i32 0, i32 14, !dbg !20590
  %220 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %219), !dbg !20590
  store i32 %220, i32* %12, align 4, !dbg !20590
  %221 = icmp ne i32 %220, 0, !dbg !20590
  br i1 %221, label %222, label %223, !dbg !20593

222:                                              ; preds = %217
  br label %245, !dbg !20590

223:                                              ; preds = %217
  br label %224, !dbg !20593

224:                                              ; preds = %223
  br label %225, !dbg !20594

225:                                              ; preds = %224
  %226 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20595
  %227 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %226, i32 0, i32 2, !dbg !20595
  %228 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %14, %struct.mbedtls_mpi* %227), !dbg !20595
  store i32 %228, i32* %12, align 4, !dbg !20595
  %229 = icmp ne i32 %228, 0, !dbg !20595
  br i1 %229, label %230, label %231, !dbg !20598

230:                                              ; preds = %225
  br label %245, !dbg !20595

231:                                              ; preds = %225
  br label %232, !dbg !20598

232:                                              ; preds = %231
  br label %233, !dbg !20599

233:                                              ; preds = %232, %213
  %234 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %7, align 8, !dbg !20600
  %235 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %234, i32 0, i32 1, !dbg !20601
  %236 = load i64, i64* %235, align 8, !dbg !20601
  store i64 %236, i64* %13, align 8, !dbg !20602
  br label %237, !dbg !20603

237:                                              ; preds = %233
  %238 = load i8*, i8** %11, align 8, !dbg !20604
  %239 = load i64, i64* %13, align 8, !dbg !20604
  %240 = call i32 @mbedtls_mpi_write_binary(%struct.mbedtls_mpi* %14, i8* %238, i64 %239), !dbg !20604
  store i32 %240, i32* %12, align 4, !dbg !20604
  %241 = icmp ne i32 %240, 0, !dbg !20604
  br i1 %241, label %242, label %243, !dbg !20607

242:                                              ; preds = %237
  br label %245, !dbg !20604

243:                                              ; preds = %237
  br label %244, !dbg !20607

244:                                              ; preds = %243
  br label %245, !dbg !20607

245:                                              ; preds = %244, %242, %230, %222, %211, %205, %197, %189, %181, %175, %164, %152, %144, %138, %130, %122, %116, %108, %100, %92, %84, %76, %65, %58
  call void @llvm.dbg.label(metadata !20608), !dbg !20609
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %14), !dbg !20610
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %15), !dbg !20611
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %16), !dbg !20612
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %17), !dbg !20613
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %18), !dbg !20614
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %19), !dbg !20615
  %246 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8, !dbg !20616
  %247 = icmp ne i32 (i8*, i8*, i64)* %246, null, !dbg !20618
  br i1 %247, label %248, label %249, !dbg !20619

248:                                              ; preds = %245
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %20), !dbg !20620
  call void @mbedtls_mpi_free(%struct.mbedtls_mpi* %21), !dbg !20622
  br label %249, !dbg !20623

249:                                              ; preds = %248, %245
  %250 = load i32, i32* %12, align 4, !dbg !20624
  %251 = icmp ne i32 %250, 0, !dbg !20626
  br i1 %251, label %252, label %255, !dbg !20627

252:                                              ; preds = %249
  %253 = load i32, i32* %12, align 4, !dbg !20628
  %254 = add nsw i32 -17152, %253, !dbg !20629
  store i32 %254, i32* %6, align 4, !dbg !20630
  br label %256, !dbg !20630

255:                                              ; preds = %249
  store i32 0, i32* %6, align 4, !dbg !20631
  br label %256, !dbg !20631

256:                                              ; preds = %255, %252, %45
  %257 = load i32, i32* %6, align 4, !dbg !20632
  ret i32 %257, !dbg !20632
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @rsa_prepare_blinding(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2) #0 !dbg !20633 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_rsa_context*, align 8
  %6 = alloca i32 (i8*, i8*, i64)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %5, metadata !20636, metadata !DIExpression()), !dbg !20637
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %6, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %6, metadata !20638, metadata !DIExpression()), !dbg !20639
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !20640, metadata !DIExpression()), !dbg !20641
  call void @llvm.dbg.declare(metadata i32* %8, metadata !20642, metadata !DIExpression()), !dbg !20643
  call void @llvm.dbg.declare(metadata i32* %9, metadata !20644, metadata !DIExpression()), !dbg !20645
  store i32 0, i32* %9, align 4, !dbg !20645
  %10 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20646
  %11 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %10, i32 0, i32 14, !dbg !20648
  %12 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %11, i32 0, i32 2, !dbg !20649
  %13 = load i64*, i64** %12, align 8, !dbg !20649
  %14 = icmp ne i64* %13, null, !dbg !20650
  br i1 %14, label %15, label %64, !dbg !20651

15:                                               ; preds = %3
  br label %16, !dbg !20652

16:                                               ; preds = %15
  %17 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20654
  %18 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %17, i32 0, i32 13, !dbg !20654
  %19 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20654
  %20 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %19, i32 0, i32 13, !dbg !20654
  %21 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20654
  %22 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %21, i32 0, i32 13, !dbg !20654
  %23 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %18, %struct.mbedtls_mpi* %20, %struct.mbedtls_mpi* %22), !dbg !20654
  store i32 %23, i32* %8, align 4, !dbg !20654
  %24 = icmp ne i32 %23, 0, !dbg !20654
  br i1 %24, label %25, label %26, !dbg !20657

25:                                               ; preds = %16
  br label %131, !dbg !20654

26:                                               ; preds = %16
  br label %27, !dbg !20657

27:                                               ; preds = %26
  br label %28, !dbg !20658

28:                                               ; preds = %27
  %29 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20659
  %30 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %29, i32 0, i32 13, !dbg !20659
  %31 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20659
  %32 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %31, i32 0, i32 13, !dbg !20659
  %33 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20659
  %34 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %33, i32 0, i32 2, !dbg !20659
  %35 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %30, %struct.mbedtls_mpi* %32, %struct.mbedtls_mpi* %34), !dbg !20659
  store i32 %35, i32* %8, align 4, !dbg !20659
  %36 = icmp ne i32 %35, 0, !dbg !20659
  br i1 %36, label %37, label %38, !dbg !20662

37:                                               ; preds = %28
  br label %131, !dbg !20659

38:                                               ; preds = %28
  br label %39, !dbg !20662

39:                                               ; preds = %38
  br label %40, !dbg !20663

40:                                               ; preds = %39
  %41 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20664
  %42 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %41, i32 0, i32 14, !dbg !20664
  %43 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20664
  %44 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %43, i32 0, i32 14, !dbg !20664
  %45 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20664
  %46 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %45, i32 0, i32 14, !dbg !20664
  %47 = call i32 @mbedtls_mpi_mul_mpi(%struct.mbedtls_mpi* %42, %struct.mbedtls_mpi* %44, %struct.mbedtls_mpi* %46), !dbg !20664
  store i32 %47, i32* %8, align 4, !dbg !20664
  %48 = icmp ne i32 %47, 0, !dbg !20664
  br i1 %48, label %49, label %50, !dbg !20667

49:                                               ; preds = %40
  br label %131, !dbg !20664

50:                                               ; preds = %40
  br label %51, !dbg !20667

51:                                               ; preds = %50
  br label %52, !dbg !20668

52:                                               ; preds = %51
  %53 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20669
  %54 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %53, i32 0, i32 14, !dbg !20669
  %55 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20669
  %56 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %55, i32 0, i32 14, !dbg !20669
  %57 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20669
  %58 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %57, i32 0, i32 2, !dbg !20669
  %59 = call i32 @mbedtls_mpi_mod_mpi(%struct.mbedtls_mpi* %54, %struct.mbedtls_mpi* %56, %struct.mbedtls_mpi* %58), !dbg !20669
  store i32 %59, i32* %8, align 4, !dbg !20669
  %60 = icmp ne i32 %59, 0, !dbg !20669
  br i1 %60, label %61, label %62, !dbg !20672

61:                                               ; preds = %52
  br label %131, !dbg !20669

62:                                               ; preds = %52
  br label %63, !dbg !20672

63:                                               ; preds = %62
  br label %131, !dbg !20673

64:                                               ; preds = %3
  br label %65, !dbg !20674

65:                                               ; preds = %97, %64
  %66 = load i32, i32* %9, align 4, !dbg !20675
  %67 = add nsw i32 %66, 1, !dbg !20675
  store i32 %67, i32* %9, align 4, !dbg !20675
  %68 = icmp sgt i32 %66, 10, !dbg !20678
  br i1 %68, label %69, label %70, !dbg !20679

69:                                               ; preds = %65
  store i32 -17536, i32* %4, align 4, !dbg !20680
  br label %133, !dbg !20680

70:                                               ; preds = %65
  br label %71, !dbg !20681

71:                                               ; preds = %70
  %72 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20682
  %73 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %72, i32 0, i32 14, !dbg !20682
  %74 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20682
  %75 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %74, i32 0, i32 1, !dbg !20682
  %76 = load i64, i64* %75, align 8, !dbg !20682
  %77 = sub i64 %76, 1, !dbg !20682
  %78 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %6, align 8, !dbg !20682
  %79 = load i8*, i8** %7, align 8, !dbg !20682
  %80 = call i32 @mbedtls_mpi_fill_random(%struct.mbedtls_mpi* %73, i64 %77, i32 (i8*, i8*, i64)* %78, i8* %79), !dbg !20682
  store i32 %80, i32* %8, align 4, !dbg !20682
  %81 = icmp ne i32 %80, 0, !dbg !20682
  br i1 %81, label %82, label %83, !dbg !20685

82:                                               ; preds = %71
  br label %131, !dbg !20682

83:                                               ; preds = %71
  br label %84, !dbg !20685

84:                                               ; preds = %83
  br label %85, !dbg !20686

85:                                               ; preds = %84
  %86 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20687
  %87 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %86, i32 0, i32 13, !dbg !20687
  %88 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20687
  %89 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %88, i32 0, i32 14, !dbg !20687
  %90 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20687
  %91 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %90, i32 0, i32 2, !dbg !20687
  %92 = call i32 @mbedtls_mpi_gcd(%struct.mbedtls_mpi* %87, %struct.mbedtls_mpi* %89, %struct.mbedtls_mpi* %91), !dbg !20687
  store i32 %92, i32* %8, align 4, !dbg !20687
  %93 = icmp ne i32 %92, 0, !dbg !20687
  br i1 %93, label %94, label %95, !dbg !20690

94:                                               ; preds = %85
  br label %131, !dbg !20687

95:                                               ; preds = %85
  br label %96, !dbg !20690

96:                                               ; preds = %95
  br label %97, !dbg !20691

97:                                               ; preds = %96
  %98 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20692
  %99 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %98, i32 0, i32 13, !dbg !20693
  %100 = call i32 @mbedtls_mpi_cmp_int(%struct.mbedtls_mpi* %99, i64 1), !dbg !20694
  %101 = icmp ne i32 %100, 0, !dbg !20695
  br i1 %101, label %65, label %102, !dbg !20691, !llvm.loop !20696

102:                                              ; preds = %97
  br label %103, !dbg !20698

103:                                              ; preds = %102
  %104 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20699
  %105 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %104, i32 0, i32 13, !dbg !20699
  %106 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20699
  %107 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %106, i32 0, i32 14, !dbg !20699
  %108 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20699
  %109 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %108, i32 0, i32 2, !dbg !20699
  %110 = call i32 @mbedtls_mpi_inv_mod(%struct.mbedtls_mpi* %105, %struct.mbedtls_mpi* %107, %struct.mbedtls_mpi* %109), !dbg !20699
  store i32 %110, i32* %8, align 4, !dbg !20699
  %111 = icmp ne i32 %110, 0, !dbg !20699
  br i1 %111, label %112, label %113, !dbg !20702

112:                                              ; preds = %103
  br label %131, !dbg !20699

113:                                              ; preds = %103
  br label %114, !dbg !20702

114:                                              ; preds = %113
  br label %115, !dbg !20703

115:                                              ; preds = %114
  %116 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20704
  %117 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %116, i32 0, i32 13, !dbg !20704
  %118 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20704
  %119 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %118, i32 0, i32 13, !dbg !20704
  %120 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20704
  %121 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %120, i32 0, i32 3, !dbg !20704
  %122 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20704
  %123 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %122, i32 0, i32 2, !dbg !20704
  %124 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %5, align 8, !dbg !20704
  %125 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %124, i32 0, i32 10, !dbg !20704
  %126 = call i32 @mbedtls_mpi_exp_mod(%struct.mbedtls_mpi* %117, %struct.mbedtls_mpi* %119, %struct.mbedtls_mpi* %121, %struct.mbedtls_mpi* %123, %struct.mbedtls_mpi* %125), !dbg !20704
  store i32 %126, i32* %8, align 4, !dbg !20704
  %127 = icmp ne i32 %126, 0, !dbg !20704
  br i1 %127, label %128, label %129, !dbg !20707

128:                                              ; preds = %115
  br label %131, !dbg !20704

129:                                              ; preds = %115
  br label %130, !dbg !20707

130:                                              ; preds = %129
  br label %131, !dbg !20707

131:                                              ; preds = %130, %128, %112, %94, %82, %63, %61, %49, %37, %25
  call void @llvm.dbg.label(metadata !20708), !dbg !20709
  %132 = load i32, i32* %8, align 4, !dbg !20710
  store i32 %132, i32* %4, align 4, !dbg !20711
  br label %133, !dbg !20711

133:                                              ; preds = %131, %69
  %134 = load i32, i32* %4, align 4, !dbg !20712
  ret i32 %134, !dbg !20712
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsaes_oaep_encrypt(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i8* %4, i64 %5, i64 %6, i8* %7, i8* %8) #0 !dbg !20713 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.mbedtls_rsa_context*, align 8
  %12 = alloca i32 (i8*, i8*, i64)*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.mbedtls_md_info_t*, align 8
  %25 = alloca %struct.mbedtls_md_context_t, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %11, metadata !20716, metadata !DIExpression()), !dbg !20717
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %12, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %12, metadata !20718, metadata !DIExpression()), !dbg !20719
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !20720, metadata !DIExpression()), !dbg !20721
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20722, metadata !DIExpression()), !dbg !20723
  store i8* %4, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !20724, metadata !DIExpression()), !dbg !20725
  store i64 %5, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !20726, metadata !DIExpression()), !dbg !20727
  store i64 %6, i64* %17, align 8
  call void @llvm.dbg.declare(metadata i64* %17, metadata !20728, metadata !DIExpression()), !dbg !20729
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !20730, metadata !DIExpression()), !dbg !20731
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !20732, metadata !DIExpression()), !dbg !20733
  call void @llvm.dbg.declare(metadata i64* %20, metadata !20734, metadata !DIExpression()), !dbg !20735
  call void @llvm.dbg.declare(metadata i32* %21, metadata !20736, metadata !DIExpression()), !dbg !20737
  call void @llvm.dbg.declare(metadata i8** %22, metadata !20738, metadata !DIExpression()), !dbg !20739
  %26 = load i8*, i8** %19, align 8, !dbg !20740
  store i8* %26, i8** %22, align 8, !dbg !20739
  call void @llvm.dbg.declare(metadata i32* %23, metadata !20741, metadata !DIExpression()), !dbg !20742
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %24, metadata !20743, metadata !DIExpression()), !dbg !20744
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t* %25, metadata !20745, metadata !DIExpression()), !dbg !20752
  %27 = load i32, i32* %14, align 4, !dbg !20753
  %28 = icmp eq i32 %27, 1, !dbg !20755
  br i1 %28, label %29, label %35, !dbg !20756

29:                                               ; preds = %9
  %30 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %11, align 8, !dbg !20757
  %31 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %30, i32 0, i32 15, !dbg !20758
  %32 = load i32, i32* %31, align 8, !dbg !20758
  %33 = icmp ne i32 %32, 1, !dbg !20759
  br i1 %33, label %34, label %35, !dbg !20760

34:                                               ; preds = %29
  store i32 -16512, i32* %10, align 4, !dbg !20761
  br label %166, !dbg !20761

35:                                               ; preds = %29, %9
  %36 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %12, align 8, !dbg !20762
  %37 = icmp eq i32 (i8*, i8*, i64)* %36, null, !dbg !20764
  br i1 %37, label %38, label %39, !dbg !20765

38:                                               ; preds = %35
  store i32 -16512, i32* %10, align 4, !dbg !20766
  br label %166, !dbg !20766

39:                                               ; preds = %35
  %40 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %11, align 8, !dbg !20767
  %41 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %40, i32 0, i32 16, !dbg !20768
  %42 = load i32, i32* %41, align 4, !dbg !20768
  %43 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %42), !dbg !20769
  store %struct.mbedtls_md_info_t* %43, %struct.mbedtls_md_info_t** %24, align 8, !dbg !20770
  %44 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %24, align 8, !dbg !20771
  %45 = icmp eq %struct.mbedtls_md_info_t* %44, null, !dbg !20773
  br i1 %45, label %46, label %47, !dbg !20774

46:                                               ; preds = %39
  store i32 -16512, i32* %10, align 4, !dbg !20775
  br label %166, !dbg !20775

47:                                               ; preds = %39
  %48 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %11, align 8, !dbg !20776
  %49 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %48, i32 0, i32 1, !dbg !20777
  %50 = load i64, i64* %49, align 8, !dbg !20777
  store i64 %50, i64* %20, align 8, !dbg !20778
  %51 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %24, align 8, !dbg !20779
  %52 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %51), !dbg !20780
  %53 = zext i8 %52 to i32, !dbg !20780
  store i32 %53, i32* %23, align 4, !dbg !20781
  %54 = load i64, i64* %17, align 8, !dbg !20782
  %55 = load i32, i32* %23, align 4, !dbg !20784
  %56 = mul i32 2, %55, !dbg !20785
  %57 = zext i32 %56 to i64, !dbg !20786
  %58 = add i64 %54, %57, !dbg !20787
  %59 = add i64 %58, 2, !dbg !20788
  %60 = load i64, i64* %17, align 8, !dbg !20789
  %61 = icmp ult i64 %59, %60, !dbg !20790
  br i1 %61, label %71, label %62, !dbg !20791

62:                                               ; preds = %47
  %63 = load i64, i64* %20, align 8, !dbg !20792
  %64 = load i64, i64* %17, align 8, !dbg !20793
  %65 = load i32, i32* %23, align 4, !dbg !20794
  %66 = mul i32 2, %65, !dbg !20795
  %67 = zext i32 %66 to i64, !dbg !20796
  %68 = add i64 %64, %67, !dbg !20797
  %69 = add i64 %68, 2, !dbg !20798
  %70 = icmp ult i64 %63, %69, !dbg !20799
  br i1 %70, label %71, label %72, !dbg !20800

71:                                               ; preds = %62, %47
  store i32 -16512, i32* %10, align 4, !dbg !20801
  br label %166, !dbg !20801

72:                                               ; preds = %62
  %73 = load i8*, i8** %19, align 8, !dbg !20802
  %74 = load i64, i64* %20, align 8, !dbg !20803
  call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 0, i64 %74, i1 false), !dbg !20804
  %75 = load i8*, i8** %22, align 8, !dbg !20805
  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !20805
  store i8* %76, i8** %22, align 8, !dbg !20805
  store i8 0, i8* %75, align 1, !dbg !20806
  %77 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %12, align 8, !dbg !20807
  %78 = load i8*, i8** %13, align 8, !dbg !20809
  %79 = load i8*, i8** %22, align 8, !dbg !20810
  %80 = load i32, i32* %23, align 4, !dbg !20811
  %81 = zext i32 %80 to i64, !dbg !20811
  %82 = call i32 %77(i8* %78, i8* %79, i64 %81), !dbg !20807
  store i32 %82, i32* %21, align 4, !dbg !20812
  %83 = icmp ne i32 %82, 0, !dbg !20813
  br i1 %83, label %84, label %87, !dbg !20814

84:                                               ; preds = %72
  %85 = load i32, i32* %21, align 4, !dbg !20815
  %86 = add nsw i32 -17536, %85, !dbg !20816
  store i32 %86, i32* %10, align 4, !dbg !20817
  br label %166, !dbg !20817

87:                                               ; preds = %72
  %88 = load i32, i32* %23, align 4, !dbg !20818
  %89 = load i8*, i8** %22, align 8, !dbg !20819
  %90 = zext i32 %88 to i64, !dbg !20819
  %91 = getelementptr inbounds i8, i8* %89, i64 %90, !dbg !20819
  store i8* %91, i8** %22, align 8, !dbg !20819
  %92 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %24, align 8, !dbg !20820
  %93 = load i8*, i8** %15, align 8, !dbg !20821
  %94 = load i64, i64* %16, align 8, !dbg !20822
  %95 = load i8*, i8** %22, align 8, !dbg !20823
  %96 = call i32 @mbedtls_md(%struct.mbedtls_md_info_t* %92, i8* %93, i64 %94, i8* %95), !dbg !20824
  %97 = load i32, i32* %23, align 4, !dbg !20825
  %98 = load i8*, i8** %22, align 8, !dbg !20826
  %99 = zext i32 %97 to i64, !dbg !20826
  %100 = getelementptr inbounds i8, i8* %98, i64 %99, !dbg !20826
  store i8* %100, i8** %22, align 8, !dbg !20826
  %101 = load i64, i64* %20, align 8, !dbg !20827
  %102 = load i32, i32* %23, align 4, !dbg !20828
  %103 = mul i32 2, %102, !dbg !20829
  %104 = zext i32 %103 to i64, !dbg !20830
  %105 = sub i64 %101, %104, !dbg !20831
  %106 = sub i64 %105, 2, !dbg !20832
  %107 = load i64, i64* %17, align 8, !dbg !20833
  %108 = sub i64 %106, %107, !dbg !20834
  %109 = load i8*, i8** %22, align 8, !dbg !20835
  %110 = getelementptr inbounds i8, i8* %109, i64 %108, !dbg !20835
  store i8* %110, i8** %22, align 8, !dbg !20835
  %111 = load i8*, i8** %22, align 8, !dbg !20836
  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !20836
  store i8* %112, i8** %22, align 8, !dbg !20836
  store i8 1, i8* %111, align 1, !dbg !20837
  %113 = load i8*, i8** %22, align 8, !dbg !20838
  %114 = load i8*, i8** %18, align 8, !dbg !20839
  %115 = load i64, i64* %17, align 8, !dbg !20840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %113, i8* align 1 %114, i64 %115, i1 false), !dbg !20841
  call void @mbedtls_md_init(%struct.mbedtls_md_context_t* %25), !dbg !20842
  %116 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %24, align 8, !dbg !20843
  %117 = call i32 @mbedtls_md_setup(%struct.mbedtls_md_context_t* %25, %struct.mbedtls_md_info_t* %116, i32 0), !dbg !20845
  store i32 %117, i32* %21, align 4, !dbg !20846
  %118 = icmp ne i32 %117, 0, !dbg !20847
  br i1 %118, label %119, label %121, !dbg !20848

119:                                              ; preds = %87
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %25), !dbg !20849
  %120 = load i32, i32* %21, align 4, !dbg !20851
  store i32 %120, i32* %10, align 4, !dbg !20852
  br label %166, !dbg !20852

121:                                              ; preds = %87
  %122 = load i8*, i8** %19, align 8, !dbg !20853
  %123 = load i32, i32* %23, align 4, !dbg !20854
  %124 = zext i32 %123 to i64, !dbg !20855
  %125 = getelementptr inbounds i8, i8* %122, i64 %124, !dbg !20855
  %126 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !20856
  %127 = load i64, i64* %20, align 8, !dbg !20857
  %128 = load i32, i32* %23, align 4, !dbg !20858
  %129 = zext i32 %128 to i64, !dbg !20858
  %130 = sub i64 %127, %129, !dbg !20859
  %131 = sub i64 %130, 1, !dbg !20860
  %132 = load i8*, i8** %19, align 8, !dbg !20861
  %133 = getelementptr inbounds i8, i8* %132, i64 1, !dbg !20862
  %134 = load i32, i32* %23, align 4, !dbg !20863
  %135 = zext i32 %134 to i64, !dbg !20863
  call void @mgf_mask(i8* %126, i64 %131, i8* %133, i64 %135, %struct.mbedtls_md_context_t* %25), !dbg !20864
  %136 = load i8*, i8** %19, align 8, !dbg !20865
  %137 = getelementptr inbounds i8, i8* %136, i64 1, !dbg !20866
  %138 = load i32, i32* %23, align 4, !dbg !20867
  %139 = zext i32 %138 to i64, !dbg !20867
  %140 = load i8*, i8** %19, align 8, !dbg !20868
  %141 = load i32, i32* %23, align 4, !dbg !20869
  %142 = zext i32 %141 to i64, !dbg !20870
  %143 = getelementptr inbounds i8, i8* %140, i64 %142, !dbg !20870
  %144 = getelementptr inbounds i8, i8* %143, i64 1, !dbg !20871
  %145 = load i64, i64* %20, align 8, !dbg !20872
  %146 = load i32, i32* %23, align 4, !dbg !20873
  %147 = zext i32 %146 to i64, !dbg !20873
  %148 = sub i64 %145, %147, !dbg !20874
  %149 = sub i64 %148, 1, !dbg !20875
  call void @mgf_mask(i8* %137, i64 %139, i8* %144, i64 %149, %struct.mbedtls_md_context_t* %25), !dbg !20876
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %25), !dbg !20877
  %150 = load i32, i32* %14, align 4, !dbg !20878
  %151 = icmp eq i32 %150, 0, !dbg !20879
  br i1 %151, label %152, label %157, !dbg !20880

152:                                              ; preds = %121
  %153 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %11, align 8, !dbg !20881
  %154 = load i8*, i8** %19, align 8, !dbg !20882
  %155 = load i8*, i8** %19, align 8, !dbg !20883
  %156 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %153, i8* %154, i8* %155), !dbg !20884
  br label %164, !dbg !20880

157:                                              ; preds = %121
  %158 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %11, align 8, !dbg !20885
  %159 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %12, align 8, !dbg !20886
  %160 = load i8*, i8** %13, align 8, !dbg !20887
  %161 = load i8*, i8** %19, align 8, !dbg !20888
  %162 = load i8*, i8** %19, align 8, !dbg !20889
  %163 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %158, i32 (i8*, i8*, i64)* %159, i8* %160, i8* %161, i8* %162), !dbg !20890
  br label %164, !dbg !20880

164:                                              ; preds = %157, %152
  %165 = phi i32 [ %156, %152 ], [ %163, %157 ], !dbg !20880
  store i32 %165, i32* %10, align 4, !dbg !20891
  br label %166, !dbg !20891

166:                                              ; preds = %164, %119, %84, %71, %46, %38, %34
  %167 = load i32, i32* %10, align 4, !dbg !20892
  ret i32 %167, !dbg !20892
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mgf_mask(i8* %0, i64 %1, i8* %2, i64 %3, %struct.mbedtls_md_context_t* %4) #0 !dbg !20893 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.mbedtls_md_context_t*, align 8
  %11 = alloca [64 x i8], align 16
  %12 = alloca [4 x i8], align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !20897, metadata !DIExpression()), !dbg !20898
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !20899, metadata !DIExpression()), !dbg !20900
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !20901, metadata !DIExpression()), !dbg !20902
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !20903, metadata !DIExpression()), !dbg !20904
  store %struct.mbedtls_md_context_t* %4, %struct.mbedtls_md_context_t** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t** %10, metadata !20905, metadata !DIExpression()), !dbg !20906
  call void @llvm.dbg.declare(metadata [64 x i8]* %11, metadata !20907, metadata !DIExpression()), !dbg !20908
  call void @llvm.dbg.declare(metadata [4 x i8]* %12, metadata !20909, metadata !DIExpression()), !dbg !20910
  call void @llvm.dbg.declare(metadata i8** %13, metadata !20911, metadata !DIExpression()), !dbg !20912
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20913, metadata !DIExpression()), !dbg !20914
  call void @llvm.dbg.declare(metadata i64* %15, metadata !20915, metadata !DIExpression()), !dbg !20916
  call void @llvm.dbg.declare(metadata i64* %16, metadata !20917, metadata !DIExpression()), !dbg !20918
  %17 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 0, !dbg !20919
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 64, i1 false), !dbg !20919
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 0, i64 0, !dbg !20920
  call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 4, i1 false), !dbg !20920
  %19 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %10, align 8, !dbg !20921
  %20 = getelementptr inbounds %struct.mbedtls_md_context_t, %struct.mbedtls_md_context_t* %19, i32 0, i32 0, !dbg !20922
  %21 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %20, align 8, !dbg !20922
  %22 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %21), !dbg !20923
  %23 = zext i8 %22 to i32, !dbg !20923
  store i32 %23, i32* %14, align 4, !dbg !20924
  %24 = load i8*, i8** %6, align 8, !dbg !20925
  store i8* %24, i8** %13, align 8, !dbg !20926
  br label %25, !dbg !20927

25:                                               ; preds = %68, %5
  %26 = load i64, i64* %7, align 8, !dbg !20928
  %27 = icmp ugt i64 %26, 0, !dbg !20929
  br i1 %27, label %28, label %75, !dbg !20927

28:                                               ; preds = %25
  %29 = load i32, i32* %14, align 4, !dbg !20930
  %30 = zext i32 %29 to i64, !dbg !20930
  store i64 %30, i64* %16, align 8, !dbg !20932
  %31 = load i64, i64* %7, align 8, !dbg !20933
  %32 = load i32, i32* %14, align 4, !dbg !20935
  %33 = zext i32 %32 to i64, !dbg !20935
  %34 = icmp ult i64 %31, %33, !dbg !20936
  br i1 %34, label %35, label %37, !dbg !20937

35:                                               ; preds = %28
  %36 = load i64, i64* %7, align 8, !dbg !20938
  store i64 %36, i64* %16, align 8, !dbg !20939
  br label %37, !dbg !20940

37:                                               ; preds = %35, %28
  %38 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %10, align 8, !dbg !20941
  %39 = call i32 @mbedtls_md_starts(%struct.mbedtls_md_context_t* %38), !dbg !20942
  %40 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %10, align 8, !dbg !20943
  %41 = load i8*, i8** %8, align 8, !dbg !20944
  %42 = load i64, i64* %9, align 8, !dbg !20945
  %43 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %40, i8* %41, i64 %42), !dbg !20946
  %44 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %10, align 8, !dbg !20947
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 0, i64 0, !dbg !20948
  %46 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %44, i8* %45, i64 4), !dbg !20949
  %47 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %10, align 8, !dbg !20950
  %48 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 0, !dbg !20951
  %49 = call i32 @mbedtls_md_finish(%struct.mbedtls_md_context_t* %47, i8* %48), !dbg !20952
  store i64 0, i64* %15, align 8, !dbg !20953
  br label %50, !dbg !20955

50:                                               ; preds = %65, %37
  %51 = load i64, i64* %15, align 8, !dbg !20956
  %52 = load i64, i64* %16, align 8, !dbg !20958
  %53 = icmp ult i64 %51, %52, !dbg !20959
  br i1 %53, label %54, label %68, !dbg !20960

54:                                               ; preds = %50
  %55 = load i64, i64* %15, align 8, !dbg !20961
  %56 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 %55, !dbg !20962
  %57 = load i8, i8* %56, align 1, !dbg !20962
  %58 = zext i8 %57 to i32, !dbg !20962
  %59 = load i8*, i8** %13, align 8, !dbg !20963
  %60 = getelementptr inbounds i8, i8* %59, i32 1, !dbg !20963
  store i8* %60, i8** %13, align 8, !dbg !20963
  %61 = load i8, i8* %59, align 1, !dbg !20964
  %62 = zext i8 %61 to i32, !dbg !20964
  %63 = xor i32 %62, %58, !dbg !20964
  %64 = trunc i32 %63 to i8, !dbg !20964
  store i8 %64, i8* %59, align 1, !dbg !20964
  br label %65, !dbg !20965

65:                                               ; preds = %54
  %66 = load i64, i64* %15, align 8, !dbg !20966
  %67 = add i64 %66, 1, !dbg !20966
  store i64 %67, i64* %15, align 8, !dbg !20966
  br label %50, !dbg !20967, !llvm.loop !20968

68:                                               ; preds = %50
  %69 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 0, i64 3, !dbg !20970
  %70 = load i8, i8* %69, align 1, !dbg !20971
  %71 = add i8 %70, 1, !dbg !20971
  store i8 %71, i8* %69, align 1, !dbg !20971
  %72 = load i64, i64* %16, align 8, !dbg !20972
  %73 = load i64, i64* %7, align 8, !dbg !20973
  %74 = sub i64 %73, %72, !dbg !20973
  store i64 %74, i64* %7, align 8, !dbg !20973
  br label %25, !dbg !20927, !llvm.loop !20974

75:                                               ; preds = %25
  %76 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 0, !dbg !20976
  call void @mbedtls_zeroize.427(i8* %76, i64 64), !dbg !20977
  ret void, !dbg !20978
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize.427(i8* %0, i64 %1) #0 !dbg !20979 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !20980, metadata !DIExpression()), !dbg !20981
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !20982, metadata !DIExpression()), !dbg !20983
  call void @llvm.dbg.declare(metadata i8** %5, metadata !20984, metadata !DIExpression()), !dbg !20985
  %6 = load i8*, i8** %3, align 8, !dbg !20986
  store i8* %6, i8** %5, align 8, !dbg !20985
  br label %7, !dbg !20987

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !20988
  %9 = add i64 %8, -1, !dbg !20988
  store i64 %9, i64* %4, align 8, !dbg !20988
  %10 = icmp ne i64 %8, 0, !dbg !20987
  br i1 %10, label %11, label %14, !dbg !20987

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !20989
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !20989
  store i8* %13, i8** %5, align 8, !dbg !20989
  store volatile i8 0, i8* %12, align 1, !dbg !20990
  br label %7, !dbg !20987, !llvm.loop !20991

14:                                               ; preds = %7
  ret void, !dbg !20993
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsaes_pkcs1_v15_encrypt(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i64 %4, i8* %5, i8* %6) #0 !dbg !20994 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.mbedtls_rsa_context*, align 8
  %10 = alloca i32 (i8*, i8*, i64)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %9, metadata !20997, metadata !DIExpression()), !dbg !20998
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %10, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %10, metadata !20999, metadata !DIExpression()), !dbg !21000
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !21001, metadata !DIExpression()), !dbg !21002
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !21003, metadata !DIExpression()), !dbg !21004
  store i64 %4, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !21005, metadata !DIExpression()), !dbg !21006
  store i8* %5, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !21007, metadata !DIExpression()), !dbg !21008
  store i8* %6, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !21009, metadata !DIExpression()), !dbg !21010
  call void @llvm.dbg.declare(metadata i64* %16, metadata !21011, metadata !DIExpression()), !dbg !21012
  call void @llvm.dbg.declare(metadata i64* %17, metadata !21013, metadata !DIExpression()), !dbg !21014
  call void @llvm.dbg.declare(metadata i32* %18, metadata !21015, metadata !DIExpression()), !dbg !21016
  call void @llvm.dbg.declare(metadata i8** %19, metadata !21017, metadata !DIExpression()), !dbg !21018
  %21 = load i8*, i8** %15, align 8, !dbg !21019
  store i8* %21, i8** %19, align 8, !dbg !21018
  %22 = load i32, i32* %12, align 4, !dbg !21020
  %23 = icmp eq i32 %22, 1, !dbg !21022
  br i1 %23, label %24, label %30, !dbg !21023

24:                                               ; preds = %7
  %25 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21024
  %26 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %25, i32 0, i32 15, !dbg !21025
  %27 = load i32, i32* %26, align 8, !dbg !21025
  %28 = icmp ne i32 %27, 0, !dbg !21026
  br i1 %28, label %29, label %30, !dbg !21027

29:                                               ; preds = %24
  store i32 -16512, i32* %8, align 4, !dbg !21028
  br label %136, !dbg !21028

30:                                               ; preds = %24, %7
  %31 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %10, align 8, !dbg !21029
  %32 = icmp eq i32 (i8*, i8*, i64)* %31, null, !dbg !21031
  br i1 %32, label %39, label %33, !dbg !21032

33:                                               ; preds = %30
  %34 = load i8*, i8** %14, align 8, !dbg !21033
  %35 = icmp eq i8* %34, null, !dbg !21034
  br i1 %35, label %39, label %36, !dbg !21035

36:                                               ; preds = %33
  %37 = load i8*, i8** %15, align 8, !dbg !21036
  %38 = icmp eq i8* %37, null, !dbg !21037
  br i1 %38, label %39, label %40, !dbg !21038

39:                                               ; preds = %36, %33, %30
  store i32 -16512, i32* %8, align 4, !dbg !21039
  br label %136, !dbg !21039

40:                                               ; preds = %36
  %41 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21040
  %42 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %41, i32 0, i32 1, !dbg !21041
  %43 = load i64, i64* %42, align 8, !dbg !21041
  store i64 %43, i64* %17, align 8, !dbg !21042
  %44 = load i64, i64* %13, align 8, !dbg !21043
  %45 = add i64 %44, 11, !dbg !21045
  %46 = load i64, i64* %13, align 8, !dbg !21046
  %47 = icmp ult i64 %45, %46, !dbg !21047
  br i1 %47, label %53, label %48, !dbg !21048

48:                                               ; preds = %40
  %49 = load i64, i64* %17, align 8, !dbg !21049
  %50 = load i64, i64* %13, align 8, !dbg !21050
  %51 = add i64 %50, 11, !dbg !21051
  %52 = icmp ult i64 %49, %51, !dbg !21052
  br i1 %52, label %53, label %54, !dbg !21053

53:                                               ; preds = %48, %40
  store i32 -16512, i32* %8, align 4, !dbg !21054
  br label %136, !dbg !21054

54:                                               ; preds = %48
  %55 = load i64, i64* %17, align 8, !dbg !21055
  %56 = sub i64 %55, 3, !dbg !21056
  %57 = load i64, i64* %13, align 8, !dbg !21057
  %58 = sub i64 %56, %57, !dbg !21058
  store i64 %58, i64* %16, align 8, !dbg !21059
  %59 = load i8*, i8** %19, align 8, !dbg !21060
  %60 = getelementptr inbounds i8, i8* %59, i32 1, !dbg !21060
  store i8* %60, i8** %19, align 8, !dbg !21060
  store i8 0, i8* %59, align 1, !dbg !21061
  %61 = load i32, i32* %12, align 4, !dbg !21062
  %62 = icmp eq i32 %61, 0, !dbg !21064
  br i1 %62, label %63, label %103, !dbg !21065

63:                                               ; preds = %54
  %64 = load i8*, i8** %19, align 8, !dbg !21066
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !21066
  store i8* %65, i8** %19, align 8, !dbg !21066
  store i8 2, i8* %64, align 1, !dbg !21068
  br label %66, !dbg !21069

66:                                               ; preds = %99, %63
  %67 = load i64, i64* %16, align 8, !dbg !21070
  %68 = add i64 %67, -1, !dbg !21070
  store i64 %68, i64* %16, align 8, !dbg !21070
  %69 = icmp ugt i64 %67, 0, !dbg !21071
  br i1 %69, label %70, label %102, !dbg !21069

70:                                               ; preds = %66
  call void @llvm.dbg.declare(metadata i32* %20, metadata !21072, metadata !DIExpression()), !dbg !21074
  store i32 100, i32* %20, align 4, !dbg !21074
  br label %71, !dbg !21075

71:                                               ; preds = %88, %70
  %72 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %10, align 8, !dbg !21076
  %73 = load i8*, i8** %11, align 8, !dbg !21078
  %74 = load i8*, i8** %19, align 8, !dbg !21079
  %75 = call i32 %72(i8* %73, i8* %74, i64 1), !dbg !21076
  store i32 %75, i32* %18, align 4, !dbg !21080
  br label %76, !dbg !21081

76:                                               ; preds = %71
  %77 = load i8*, i8** %19, align 8, !dbg !21082
  %78 = load i8, i8* %77, align 1, !dbg !21083
  %79 = zext i8 %78 to i32, !dbg !21083
  %80 = icmp eq i32 %79, 0, !dbg !21084
  br i1 %80, label %81, label %88, !dbg !21085

81:                                               ; preds = %76
  %82 = load i32, i32* %20, align 4, !dbg !21086
  %83 = add nsw i32 %82, -1, !dbg !21086
  store i32 %83, i32* %20, align 4, !dbg !21086
  %84 = icmp ne i32 %83, 0, !dbg !21086
  br i1 %84, label %85, label %88, !dbg !21087

85:                                               ; preds = %81
  %86 = load i32, i32* %18, align 4, !dbg !21088
  %87 = icmp eq i32 %86, 0, !dbg !21089
  br label %88

88:                                               ; preds = %85, %81, %76
  %89 = phi i1 [ false, %81 ], [ false, %76 ], [ %87, %85 ], !dbg !21090
  br i1 %89, label %71, label %90, !dbg !21081, !llvm.loop !21091

90:                                               ; preds = %88
  %91 = load i32, i32* %20, align 4, !dbg !21093
  %92 = icmp eq i32 %91, 0, !dbg !21095
  br i1 %92, label %96, label %93, !dbg !21096

93:                                               ; preds = %90
  %94 = load i32, i32* %18, align 4, !dbg !21097
  %95 = icmp ne i32 %94, 0, !dbg !21098
  br i1 %95, label %96, label %99, !dbg !21099

96:                                               ; preds = %93, %90
  %97 = load i32, i32* %18, align 4, !dbg !21100
  %98 = add nsw i32 -17536, %97, !dbg !21101
  store i32 %98, i32* %8, align 4, !dbg !21102
  br label %136, !dbg !21102

99:                                               ; preds = %93
  %100 = load i8*, i8** %19, align 8, !dbg !21103
  %101 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !21103
  store i8* %101, i8** %19, align 8, !dbg !21103
  br label %66, !dbg !21069, !llvm.loop !21104

102:                                              ; preds = %66
  br label %114, !dbg !21106

103:                                              ; preds = %54
  %104 = load i8*, i8** %19, align 8, !dbg !21107
  %105 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !21107
  store i8* %105, i8** %19, align 8, !dbg !21107
  store i8 1, i8* %104, align 1, !dbg !21109
  br label %106, !dbg !21110

106:                                              ; preds = %110, %103
  %107 = load i64, i64* %16, align 8, !dbg !21111
  %108 = add i64 %107, -1, !dbg !21111
  store i64 %108, i64* %16, align 8, !dbg !21111
  %109 = icmp ugt i64 %107, 0, !dbg !21112
  br i1 %109, label %110, label %113, !dbg !21110

110:                                              ; preds = %106
  %111 = load i8*, i8** %19, align 8, !dbg !21113
  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !21113
  store i8* %112, i8** %19, align 8, !dbg !21113
  store i8 -1, i8* %111, align 1, !dbg !21114
  br label %106, !dbg !21110, !llvm.loop !21115

113:                                              ; preds = %106
  br label %114

114:                                              ; preds = %113, %102
  %115 = load i8*, i8** %19, align 8, !dbg !21117
  %116 = getelementptr inbounds i8, i8* %115, i32 1, !dbg !21117
  store i8* %116, i8** %19, align 8, !dbg !21117
  store i8 0, i8* %115, align 1, !dbg !21118
  %117 = load i8*, i8** %19, align 8, !dbg !21119
  %118 = load i8*, i8** %14, align 8, !dbg !21120
  %119 = load i64, i64* %13, align 8, !dbg !21121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* align 1 %118, i64 %119, i1 false), !dbg !21122
  %120 = load i32, i32* %12, align 4, !dbg !21123
  %121 = icmp eq i32 %120, 0, !dbg !21124
  br i1 %121, label %122, label %127, !dbg !21125

122:                                              ; preds = %114
  %123 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21126
  %124 = load i8*, i8** %15, align 8, !dbg !21127
  %125 = load i8*, i8** %15, align 8, !dbg !21128
  %126 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %123, i8* %124, i8* %125), !dbg !21129
  br label %134, !dbg !21125

127:                                              ; preds = %114
  %128 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21130
  %129 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %10, align 8, !dbg !21131
  %130 = load i8*, i8** %11, align 8, !dbg !21132
  %131 = load i8*, i8** %15, align 8, !dbg !21133
  %132 = load i8*, i8** %15, align 8, !dbg !21134
  %133 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %128, i32 (i8*, i8*, i64)* %129, i8* %130, i8* %131, i8* %132), !dbg !21135
  br label %134, !dbg !21125

134:                                              ; preds = %127, %122
  %135 = phi i32 [ %126, %122 ], [ %133, %127 ], !dbg !21125
  store i32 %135, i32* %8, align 4, !dbg !21136
  br label %136, !dbg !21136

136:                                              ; preds = %134, %96, %53, %39, %29
  %137 = load i32, i32* %8, align 4, !dbg !21137
  ret i32 %137, !dbg !21137
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_pkcs1_encrypt(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i64 %4, i8* %5, i8* %6) #0 !dbg !21138 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.mbedtls_rsa_context*, align 8
  %10 = alloca i32 (i8*, i8*, i64)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %9, metadata !21139, metadata !DIExpression()), !dbg !21140
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %10, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %10, metadata !21141, metadata !DIExpression()), !dbg !21142
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !21143, metadata !DIExpression()), !dbg !21144
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !21145, metadata !DIExpression()), !dbg !21146
  store i64 %4, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !21147, metadata !DIExpression()), !dbg !21148
  store i8* %5, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !21149, metadata !DIExpression()), !dbg !21150
  store i8* %6, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !21151, metadata !DIExpression()), !dbg !21152
  %16 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21153
  %17 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %16, i32 0, i32 15, !dbg !21154
  %18 = load i32, i32* %17, align 8, !dbg !21154
  switch i32 %18, label %37 [
    i32 0, label %19
    i32 1, label %28
  ], !dbg !21155

19:                                               ; preds = %7
  %20 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21156
  %21 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %10, align 8, !dbg !21158
  %22 = load i8*, i8** %11, align 8, !dbg !21159
  %23 = load i32, i32* %12, align 4, !dbg !21160
  %24 = load i64, i64* %13, align 8, !dbg !21161
  %25 = load i8*, i8** %14, align 8, !dbg !21162
  %26 = load i8*, i8** %15, align 8, !dbg !21163
  %27 = call i32 @mbedtls_rsa_rsaes_pkcs1_v15_encrypt(%struct.mbedtls_rsa_context* %20, i32 (i8*, i8*, i64)* %21, i8* %22, i32 %23, i64 %24, i8* %25, i8* %26), !dbg !21164
  store i32 %27, i32* %8, align 4, !dbg !21165
  br label %38, !dbg !21165

28:                                               ; preds = %7
  %29 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !21166
  %30 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %10, align 8, !dbg !21167
  %31 = load i8*, i8** %11, align 8, !dbg !21168
  %32 = load i32, i32* %12, align 4, !dbg !21169
  %33 = load i64, i64* %13, align 8, !dbg !21170
  %34 = load i8*, i8** %14, align 8, !dbg !21171
  %35 = load i8*, i8** %15, align 8, !dbg !21172
  %36 = call i32 @mbedtls_rsa_rsaes_oaep_encrypt(%struct.mbedtls_rsa_context* %29, i32 (i8*, i8*, i64)* %30, i8* %31, i32 %32, i8* null, i64 0, i64 %33, i8* %34, i8* %35), !dbg !21173
  store i32 %36, i32* %8, align 4, !dbg !21174
  br label %38, !dbg !21174

37:                                               ; preds = %7
  store i32 -16640, i32* %8, align 4, !dbg !21175
  br label %38, !dbg !21175

38:                                               ; preds = %37, %28, %19
  %39 = load i32, i32* %8, align 4, !dbg !21176
  ret i32 %39, !dbg !21176
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsaes_oaep_decrypt(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i8* %4, i64 %5, i64* %6, i8* %7, i8* %8, i64 %9) #0 !dbg !21177 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.mbedtls_rsa_context*, align 8
  %13 = alloca i32 (i8*, i8*, i64)*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca [1024 x i8], align 16
  %30 = alloca [64 x i8], align 16
  %31 = alloca i32, align 4
  %32 = alloca %struct.mbedtls_md_info_t*, align 8
  %33 = alloca %struct.mbedtls_md_context_t, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %12, metadata !21180, metadata !DIExpression()), !dbg !21181
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %13, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %13, metadata !21182, metadata !DIExpression()), !dbg !21183
  store i8* %2, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !21184, metadata !DIExpression()), !dbg !21185
  store i32 %3, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !21186, metadata !DIExpression()), !dbg !21187
  store i8* %4, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !21188, metadata !DIExpression()), !dbg !21189
  store i64 %5, i64* %17, align 8
  call void @llvm.dbg.declare(metadata i64* %17, metadata !21190, metadata !DIExpression()), !dbg !21191
  store i64* %6, i64** %18, align 8
  call void @llvm.dbg.declare(metadata i64** %18, metadata !21192, metadata !DIExpression()), !dbg !21193
  store i8* %7, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !21194, metadata !DIExpression()), !dbg !21195
  store i8* %8, i8** %20, align 8
  call void @llvm.dbg.declare(metadata i8** %20, metadata !21196, metadata !DIExpression()), !dbg !21197
  store i64 %9, i64* %21, align 8
  call void @llvm.dbg.declare(metadata i64* %21, metadata !21198, metadata !DIExpression()), !dbg !21199
  call void @llvm.dbg.declare(metadata i32* %22, metadata !21200, metadata !DIExpression()), !dbg !21201
  call void @llvm.dbg.declare(metadata i64* %23, metadata !21202, metadata !DIExpression()), !dbg !21203
  call void @llvm.dbg.declare(metadata i64* %24, metadata !21204, metadata !DIExpression()), !dbg !21205
  call void @llvm.dbg.declare(metadata i64* %25, metadata !21206, metadata !DIExpression()), !dbg !21207
  call void @llvm.dbg.declare(metadata i8** %26, metadata !21208, metadata !DIExpression()), !dbg !21209
  call void @llvm.dbg.declare(metadata i8* %27, metadata !21210, metadata !DIExpression()), !dbg !21211
  call void @llvm.dbg.declare(metadata i8* %28, metadata !21212, metadata !DIExpression()), !dbg !21213
  call void @llvm.dbg.declare(metadata [1024 x i8]* %29, metadata !21214, metadata !DIExpression()), !dbg !21215
  call void @llvm.dbg.declare(metadata [64 x i8]* %30, metadata !21216, metadata !DIExpression()), !dbg !21217
  call void @llvm.dbg.declare(metadata i32* %31, metadata !21218, metadata !DIExpression()), !dbg !21219
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %32, metadata !21220, metadata !DIExpression()), !dbg !21221
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t* %33, metadata !21222, metadata !DIExpression()), !dbg !21223
  %34 = load i32, i32* %15, align 4, !dbg !21224
  %35 = icmp eq i32 %34, 1, !dbg !21226
  br i1 %35, label %36, label %42, !dbg !21227

36:                                               ; preds = %10
  %37 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !21228
  %38 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %37, i32 0, i32 15, !dbg !21229
  %39 = load i32, i32* %38, align 8, !dbg !21229
  %40 = icmp ne i32 %39, 1, !dbg !21230
  br i1 %40, label %41, label %42, !dbg !21231

41:                                               ; preds = %36
  store i32 -16512, i32* %11, align 4, !dbg !21232
  br label %246, !dbg !21232

42:                                               ; preds = %36, %10
  %43 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !21233
  %44 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %43, i32 0, i32 1, !dbg !21234
  %45 = load i64, i64* %44, align 8, !dbg !21234
  store i64 %45, i64* %23, align 8, !dbg !21235
  %46 = load i64, i64* %23, align 8, !dbg !21236
  %47 = icmp ult i64 %46, 16, !dbg !21238
  br i1 %47, label %51, label %48, !dbg !21239

48:                                               ; preds = %42
  %49 = load i64, i64* %23, align 8, !dbg !21240
  %50 = icmp ugt i64 %49, 1024, !dbg !21241
  br i1 %50, label %51, label %52, !dbg !21242

51:                                               ; preds = %48, %42
  store i32 -16512, i32* %11, align 4, !dbg !21243
  br label %246, !dbg !21243

52:                                               ; preds = %48
  %53 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !21244
  %54 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %53, i32 0, i32 16, !dbg !21245
  %55 = load i32, i32* %54, align 4, !dbg !21245
  %56 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %55), !dbg !21246
  store %struct.mbedtls_md_info_t* %56, %struct.mbedtls_md_info_t** %32, align 8, !dbg !21247
  %57 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %32, align 8, !dbg !21248
  %58 = icmp eq %struct.mbedtls_md_info_t* %57, null, !dbg !21250
  br i1 %58, label %59, label %60, !dbg !21251

59:                                               ; preds = %52
  store i32 -16512, i32* %11, align 4, !dbg !21252
  br label %246, !dbg !21252

60:                                               ; preds = %52
  %61 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %32, align 8, !dbg !21253
  %62 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %61), !dbg !21254
  %63 = zext i8 %62 to i32, !dbg !21254
  store i32 %63, i32* %31, align 4, !dbg !21255
  %64 = load i32, i32* %31, align 4, !dbg !21256
  %65 = mul i32 2, %64, !dbg !21258
  %66 = add i32 %65, 2, !dbg !21259
  %67 = zext i32 %66 to i64, !dbg !21260
  %68 = load i64, i64* %23, align 8, !dbg !21261
  %69 = icmp ugt i64 %67, %68, !dbg !21262
  br i1 %69, label %70, label %71, !dbg !21263

70:                                               ; preds = %60
  store i32 -16512, i32* %11, align 4, !dbg !21264
  br label %246, !dbg !21264

71:                                               ; preds = %60
  %72 = load i32, i32* %15, align 4, !dbg !21265
  %73 = icmp eq i32 %72, 0, !dbg !21266
  br i1 %73, label %74, label %79, !dbg !21267

74:                                               ; preds = %71
  %75 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !21268
  %76 = load i8*, i8** %19, align 8, !dbg !21269
  %77 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21270
  %78 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %75, i8* %76, i8* %77), !dbg !21271
  br label %86, !dbg !21267

79:                                               ; preds = %71
  %80 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !21272
  %81 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %13, align 8, !dbg !21273
  %82 = load i8*, i8** %14, align 8, !dbg !21274
  %83 = load i8*, i8** %19, align 8, !dbg !21275
  %84 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21276
  %85 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %80, i32 (i8*, i8*, i64)* %81, i8* %82, i8* %83, i8* %84), !dbg !21277
  br label %86, !dbg !21267

86:                                               ; preds = %79, %74
  %87 = phi i32 [ %78, %74 ], [ %85, %79 ], !dbg !21267
  store i32 %87, i32* %22, align 4, !dbg !21278
  %88 = load i32, i32* %22, align 4, !dbg !21279
  %89 = icmp ne i32 %88, 0, !dbg !21281
  br i1 %89, label %90, label %91, !dbg !21282

90:                                               ; preds = %86
  br label %242, !dbg !21283

91:                                               ; preds = %86
  call void @mbedtls_md_init(%struct.mbedtls_md_context_t* %33), !dbg !21284
  %92 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %32, align 8, !dbg !21285
  %93 = call i32 @mbedtls_md_setup(%struct.mbedtls_md_context_t* %33, %struct.mbedtls_md_info_t* %92, i32 0), !dbg !21287
  store i32 %93, i32* %22, align 4, !dbg !21288
  %94 = icmp ne i32 %93, 0, !dbg !21289
  br i1 %94, label %95, label %96, !dbg !21290

95:                                               ; preds = %91
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %33), !dbg !21291
  br label %242, !dbg !21293

96:                                               ; preds = %91
  %97 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %32, align 8, !dbg !21294
  %98 = load i8*, i8** %16, align 8, !dbg !21295
  %99 = load i64, i64* %17, align 8, !dbg !21296
  %100 = getelementptr inbounds [64 x i8], [64 x i8]* %30, i64 0, i64 0, !dbg !21297
  %101 = call i32 @mbedtls_md(%struct.mbedtls_md_info_t* %97, i8* %98, i64 %99, i8* %100), !dbg !21298
  %102 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21299
  %103 = getelementptr inbounds i8, i8* %102, i64 1, !dbg !21300
  %104 = load i32, i32* %31, align 4, !dbg !21301
  %105 = zext i32 %104 to i64, !dbg !21301
  %106 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21302
  %107 = load i32, i32* %31, align 4, !dbg !21303
  %108 = zext i32 %107 to i64, !dbg !21304
  %109 = getelementptr inbounds i8, i8* %106, i64 %108, !dbg !21304
  %110 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !21305
  %111 = load i64, i64* %23, align 8, !dbg !21306
  %112 = load i32, i32* %31, align 4, !dbg !21307
  %113 = zext i32 %112 to i64, !dbg !21307
  %114 = sub i64 %111, %113, !dbg !21308
  %115 = sub i64 %114, 1, !dbg !21309
  call void @mgf_mask(i8* %103, i64 %105, i8* %110, i64 %115, %struct.mbedtls_md_context_t* %33), !dbg !21310
  %116 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21311
  %117 = load i32, i32* %31, align 4, !dbg !21312
  %118 = zext i32 %117 to i64, !dbg !21313
  %119 = getelementptr inbounds i8, i8* %116, i64 %118, !dbg !21313
  %120 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !21314
  %121 = load i64, i64* %23, align 8, !dbg !21315
  %122 = load i32, i32* %31, align 4, !dbg !21316
  %123 = zext i32 %122 to i64, !dbg !21316
  %124 = sub i64 %121, %123, !dbg !21317
  %125 = sub i64 %124, 1, !dbg !21318
  %126 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21319
  %127 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !21320
  %128 = load i32, i32* %31, align 4, !dbg !21321
  %129 = zext i32 %128 to i64, !dbg !21321
  call void @mgf_mask(i8* %120, i64 %125, i8* %127, i64 %129, %struct.mbedtls_md_context_t* %33), !dbg !21322
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %33), !dbg !21323
  %130 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21324
  store i8* %130, i8** %26, align 8, !dbg !21325
  store i8 0, i8* %27, align 1, !dbg !21326
  %131 = load i8*, i8** %26, align 8, !dbg !21327
  %132 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !21327
  store i8* %132, i8** %26, align 8, !dbg !21327
  %133 = load i8, i8* %131, align 1, !dbg !21328
  %134 = zext i8 %133 to i32, !dbg !21328
  %135 = load i8, i8* %27, align 1, !dbg !21329
  %136 = zext i8 %135 to i32, !dbg !21329
  %137 = or i32 %136, %134, !dbg !21329
  %138 = trunc i32 %137 to i8, !dbg !21329
  store i8 %138, i8* %27, align 1, !dbg !21329
  %139 = load i32, i32* %31, align 4, !dbg !21330
  %140 = load i8*, i8** %26, align 8, !dbg !21331
  %141 = zext i32 %139 to i64, !dbg !21331
  %142 = getelementptr inbounds i8, i8* %140, i64 %141, !dbg !21331
  store i8* %142, i8** %26, align 8, !dbg !21331
  store i64 0, i64* %24, align 8, !dbg !21332
  br label %143, !dbg !21334

143:                                              ; preds = %162, %96
  %144 = load i64, i64* %24, align 8, !dbg !21335
  %145 = load i32, i32* %31, align 4, !dbg !21337
  %146 = zext i32 %145 to i64, !dbg !21337
  %147 = icmp ult i64 %144, %146, !dbg !21338
  br i1 %147, label %148, label %165, !dbg !21339

148:                                              ; preds = %143
  %149 = load i64, i64* %24, align 8, !dbg !21340
  %150 = getelementptr inbounds [64 x i8], [64 x i8]* %30, i64 0, i64 %149, !dbg !21341
  %151 = load i8, i8* %150, align 1, !dbg !21341
  %152 = zext i8 %151 to i32, !dbg !21341
  %153 = load i8*, i8** %26, align 8, !dbg !21342
  %154 = getelementptr inbounds i8, i8* %153, i32 1, !dbg !21342
  store i8* %154, i8** %26, align 8, !dbg !21342
  %155 = load i8, i8* %153, align 1, !dbg !21343
  %156 = zext i8 %155 to i32, !dbg !21343
  %157 = xor i32 %152, %156, !dbg !21344
  %158 = load i8, i8* %27, align 1, !dbg !21345
  %159 = zext i8 %158 to i32, !dbg !21345
  %160 = or i32 %159, %157, !dbg !21345
  %161 = trunc i32 %160 to i8, !dbg !21345
  store i8 %161, i8* %27, align 1, !dbg !21345
  br label %162, !dbg !21346

162:                                              ; preds = %148
  %163 = load i64, i64* %24, align 8, !dbg !21347
  %164 = add i64 %163, 1, !dbg !21347
  store i64 %164, i64* %24, align 8, !dbg !21347
  br label %143, !dbg !21348, !llvm.loop !21349

165:                                              ; preds = %143
  store i64 0, i64* %25, align 8, !dbg !21351
  store i8 0, i8* %28, align 1, !dbg !21352
  store i64 0, i64* %24, align 8, !dbg !21353
  br label %166, !dbg !21355

166:                                              ; preds = %198, %165
  %167 = load i64, i64* %24, align 8, !dbg !21356
  %168 = load i64, i64* %23, align 8, !dbg !21358
  %169 = load i32, i32* %31, align 4, !dbg !21359
  %170 = mul i32 2, %169, !dbg !21360
  %171 = zext i32 %170 to i64, !dbg !21361
  %172 = sub i64 %168, %171, !dbg !21362
  %173 = sub i64 %172, 2, !dbg !21363
  %174 = icmp ult i64 %167, %173, !dbg !21364
  br i1 %174, label %175, label %201, !dbg !21365

175:                                              ; preds = %166
  %176 = load i8*, i8** %26, align 8, !dbg !21366
  %177 = load i64, i64* %24, align 8, !dbg !21368
  %178 = getelementptr inbounds i8, i8* %176, i64 %177, !dbg !21366
  %179 = load i8, i8* %178, align 1, !dbg !21366
  %180 = zext i8 %179 to i32, !dbg !21366
  %181 = load i8, i8* %28, align 1, !dbg !21369
  %182 = zext i8 %181 to i32, !dbg !21369
  %183 = or i32 %182, %180, !dbg !21369
  %184 = trunc i32 %183 to i8, !dbg !21369
  store i8 %184, i8* %28, align 1, !dbg !21369
  %185 = load i8, i8* %28, align 1, !dbg !21370
  %186 = zext i8 %185 to i32, !dbg !21370
  %187 = load i8, i8* %28, align 1, !dbg !21371
  %188 = zext i8 %187 to i32, !dbg !21371
  %189 = sub nsw i32 0, %188, !dbg !21372
  %190 = trunc i32 %189 to i8, !dbg !21373
  %191 = zext i8 %190 to i32, !dbg !21373
  %192 = or i32 %186, %191, !dbg !21374
  %193 = ashr i32 %192, 7, !dbg !21375
  %194 = xor i32 %193, 1, !dbg !21376
  %195 = sext i32 %194 to i64, !dbg !21377
  %196 = load i64, i64* %25, align 8, !dbg !21378
  %197 = add i64 %196, %195, !dbg !21378
  store i64 %197, i64* %25, align 8, !dbg !21378
  br label %198, !dbg !21379

198:                                              ; preds = %175
  %199 = load i64, i64* %24, align 8, !dbg !21380
  %200 = add i64 %199, 1, !dbg !21380
  store i64 %200, i64* %24, align 8, !dbg !21380
  br label %166, !dbg !21381, !llvm.loop !21382

201:                                              ; preds = %166
  %202 = load i64, i64* %25, align 8, !dbg !21384
  %203 = load i8*, i8** %26, align 8, !dbg !21385
  %204 = getelementptr inbounds i8, i8* %203, i64 %202, !dbg !21385
  store i8* %204, i8** %26, align 8, !dbg !21385
  %205 = load i8*, i8** %26, align 8, !dbg !21386
  %206 = getelementptr inbounds i8, i8* %205, i32 1, !dbg !21386
  store i8* %206, i8** %26, align 8, !dbg !21386
  %207 = load i8, i8* %205, align 1, !dbg !21387
  %208 = zext i8 %207 to i32, !dbg !21387
  %209 = xor i32 %208, 1, !dbg !21388
  %210 = load i8, i8* %27, align 1, !dbg !21389
  %211 = zext i8 %210 to i32, !dbg !21389
  %212 = or i32 %211, %209, !dbg !21389
  %213 = trunc i32 %212 to i8, !dbg !21389
  store i8 %213, i8* %27, align 1, !dbg !21389
  %214 = load i8, i8* %27, align 1, !dbg !21390
  %215 = zext i8 %214 to i32, !dbg !21390
  %216 = icmp ne i32 %215, 0, !dbg !21392
  br i1 %216, label %217, label %218, !dbg !21393

217:                                              ; preds = %201
  store i32 -16640, i32* %22, align 4, !dbg !21394
  br label %242, !dbg !21396

218:                                              ; preds = %201
  %219 = load i64, i64* %23, align 8, !dbg !21397
  %220 = load i8*, i8** %26, align 8, !dbg !21399
  %221 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21400
  %222 = ptrtoint i8* %220 to i64, !dbg !21401
  %223 = ptrtoint i8* %221 to i64, !dbg !21401
  %224 = sub i64 %222, %223, !dbg !21401
  %225 = sub i64 %219, %224, !dbg !21402
  %226 = load i64, i64* %21, align 8, !dbg !21403
  %227 = icmp ugt i64 %225, %226, !dbg !21404
  br i1 %227, label %228, label %229, !dbg !21405

228:                                              ; preds = %218
  store i32 -17408, i32* %22, align 4, !dbg !21406
  br label %242, !dbg !21408

229:                                              ; preds = %218
  %230 = load i64, i64* %23, align 8, !dbg !21409
  %231 = load i8*, i8** %26, align 8, !dbg !21410
  %232 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21411
  %233 = ptrtoint i8* %231 to i64, !dbg !21412
  %234 = ptrtoint i8* %232 to i64, !dbg !21412
  %235 = sub i64 %233, %234, !dbg !21412
  %236 = sub i64 %230, %235, !dbg !21413
  %237 = load i64*, i64** %18, align 8, !dbg !21414
  store i64 %236, i64* %237, align 8, !dbg !21415
  %238 = load i8*, i8** %20, align 8, !dbg !21416
  %239 = load i8*, i8** %26, align 8, !dbg !21417
  %240 = load i64*, i64** %18, align 8, !dbg !21418
  %241 = load i64, i64* %240, align 8, !dbg !21419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %238, i8* align 1 %239, i64 %241, i1 false), !dbg !21420
  store i32 0, i32* %22, align 4, !dbg !21421
  br label %242, !dbg !21422

242:                                              ; preds = %229, %228, %217, %95, %90
  call void @llvm.dbg.label(metadata !21423), !dbg !21424
  %243 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0, !dbg !21425
  call void @mbedtls_zeroize.427(i8* %243, i64 1024), !dbg !21426
  %244 = getelementptr inbounds [64 x i8], [64 x i8]* %30, i64 0, i64 0, !dbg !21427
  call void @mbedtls_zeroize.427(i8* %244, i64 64), !dbg !21428
  %245 = load i32, i32* %22, align 4, !dbg !21429
  store i32 %245, i32* %11, align 4, !dbg !21430
  br label %246, !dbg !21430

246:                                              ; preds = %242, %70, %59, %51, %41
  %247 = load i32, i32* %11, align 4, !dbg !21431
  ret i32 %247, !dbg !21431
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsaes_pkcs1_v15_decrypt(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i64* %4, i8* %5, i8* %6, i64 %7) #0 !dbg !21432 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca [1024 x i8], align 16
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !21435, metadata !DIExpression()), !dbg !21436
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !21437, metadata !DIExpression()), !dbg !21438
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !21439, metadata !DIExpression()), !dbg !21440
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21441, metadata !DIExpression()), !dbg !21442
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !21443, metadata !DIExpression()), !dbg !21444
  store i8* %5, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !21445, metadata !DIExpression()), !dbg !21446
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !21447, metadata !DIExpression()), !dbg !21448
  store i64 %7, i64* %17, align 8
  call void @llvm.dbg.declare(metadata i64* %17, metadata !21449, metadata !DIExpression()), !dbg !21450
  call void @llvm.dbg.declare(metadata i32* %18, metadata !21451, metadata !DIExpression()), !dbg !21452
  call void @llvm.dbg.declare(metadata i64* %19, metadata !21453, metadata !DIExpression()), !dbg !21454
  call void @llvm.dbg.declare(metadata i64* %20, metadata !21455, metadata !DIExpression()), !dbg !21456
  store i64 0, i64* %20, align 8, !dbg !21456
  call void @llvm.dbg.declare(metadata i64* %21, metadata !21457, metadata !DIExpression()), !dbg !21458
  call void @llvm.dbg.declare(metadata i8** %22, metadata !21459, metadata !DIExpression()), !dbg !21460
  call void @llvm.dbg.declare(metadata i8* %23, metadata !21461, metadata !DIExpression()), !dbg !21462
  call void @llvm.dbg.declare(metadata i8* %24, metadata !21463, metadata !DIExpression()), !dbg !21464
  store i8 0, i8* %24, align 1, !dbg !21464
  call void @llvm.dbg.declare(metadata [1024 x i8]* %25, metadata !21465, metadata !DIExpression()), !dbg !21466
  %26 = load i32, i32* %13, align 4, !dbg !21467
  %27 = icmp eq i32 %26, 1, !dbg !21469
  br i1 %27, label %28, label %34, !dbg !21470

28:                                               ; preds = %8
  %29 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21471
  %30 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %29, i32 0, i32 15, !dbg !21472
  %31 = load i32, i32* %30, align 8, !dbg !21472
  %32 = icmp ne i32 %31, 0, !dbg !21473
  br i1 %32, label %33, label %34, !dbg !21474

33:                                               ; preds = %28
  store i32 -16512, i32* %9, align 4, !dbg !21475
  br label %227, !dbg !21475

34:                                               ; preds = %28, %8
  %35 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21476
  %36 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %35, i32 0, i32 1, !dbg !21477
  %37 = load i64, i64* %36, align 8, !dbg !21477
  store i64 %37, i64* %19, align 8, !dbg !21478
  %38 = load i64, i64* %19, align 8, !dbg !21479
  %39 = icmp ult i64 %38, 16, !dbg !21481
  br i1 %39, label %43, label %40, !dbg !21482

40:                                               ; preds = %34
  %41 = load i64, i64* %19, align 8, !dbg !21483
  %42 = icmp ugt i64 %41, 1024, !dbg !21484
  br i1 %42, label %43, label %44, !dbg !21485

43:                                               ; preds = %40, %34
  store i32 -16512, i32* %9, align 4, !dbg !21486
  br label %227, !dbg !21486

44:                                               ; preds = %40
  %45 = load i32, i32* %13, align 4, !dbg !21487
  %46 = icmp eq i32 %45, 0, !dbg !21488
  br i1 %46, label %47, label %52, !dbg !21489

47:                                               ; preds = %44
  %48 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21490
  %49 = load i8*, i8** %15, align 8, !dbg !21491
  %50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %25, i64 0, i64 0, !dbg !21492
  %51 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %48, i8* %49, i8* %50), !dbg !21493
  br label %59, !dbg !21489

52:                                               ; preds = %44
  %53 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21494
  %54 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !21495
  %55 = load i8*, i8** %12, align 8, !dbg !21496
  %56 = load i8*, i8** %15, align 8, !dbg !21497
  %57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %25, i64 0, i64 0, !dbg !21498
  %58 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %53, i32 (i8*, i8*, i64)* %54, i8* %55, i8* %56, i8* %57), !dbg !21499
  br label %59, !dbg !21489

59:                                               ; preds = %52, %47
  %60 = phi i32 [ %51, %47 ], [ %58, %52 ], !dbg !21489
  store i32 %60, i32* %18, align 4, !dbg !21500
  %61 = load i32, i32* %18, align 4, !dbg !21501
  %62 = icmp ne i32 %61, 0, !dbg !21503
  br i1 %62, label %63, label %64, !dbg !21504

63:                                               ; preds = %59
  br label %224, !dbg !21505

64:                                               ; preds = %59
  %65 = getelementptr inbounds [1024 x i8], [1024 x i8]* %25, i64 0, i64 0, !dbg !21506
  store i8* %65, i8** %22, align 8, !dbg !21507
  store i8 0, i8* %23, align 1, !dbg !21508
  %66 = load i8*, i8** %22, align 8, !dbg !21509
  %67 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !21509
  store i8* %67, i8** %22, align 8, !dbg !21509
  %68 = load i8, i8* %66, align 1, !dbg !21510
  %69 = zext i8 %68 to i32, !dbg !21510
  %70 = load i8, i8* %23, align 1, !dbg !21511
  %71 = zext i8 %70 to i32, !dbg !21511
  %72 = or i32 %71, %69, !dbg !21511
  %73 = trunc i32 %72 to i8, !dbg !21511
  store i8 %73, i8* %23, align 1, !dbg !21511
  %74 = load i32, i32* %13, align 4, !dbg !21512
  %75 = icmp eq i32 %74, 1, !dbg !21514
  br i1 %75, label %76, label %140, !dbg !21515

76:                                               ; preds = %64
  %77 = load i8*, i8** %22, align 8, !dbg !21516
  %78 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !21516
  store i8* %78, i8** %22, align 8, !dbg !21516
  %79 = load i8, i8* %77, align 1, !dbg !21518
  %80 = zext i8 %79 to i32, !dbg !21518
  %81 = xor i32 %80, 2, !dbg !21519
  %82 = load i8, i8* %23, align 1, !dbg !21520
  %83 = zext i8 %82 to i32, !dbg !21520
  %84 = or i32 %83, %81, !dbg !21520
  %85 = trunc i32 %84 to i8, !dbg !21520
  store i8 %85, i8* %23, align 1, !dbg !21520
  store i64 0, i64* %21, align 8, !dbg !21521
  br label %86, !dbg !21523

86:                                               ; preds = %125, %76
  %87 = load i64, i64* %21, align 8, !dbg !21524
  %88 = load i64, i64* %19, align 8, !dbg !21526
  %89 = sub i64 %88, 3, !dbg !21527
  %90 = icmp ult i64 %87, %89, !dbg !21528
  br i1 %90, label %91, label %128, !dbg !21529

91:                                               ; preds = %86
  %92 = load i8*, i8** %22, align 8, !dbg !21530
  %93 = load i64, i64* %21, align 8, !dbg !21532
  %94 = getelementptr inbounds i8, i8* %92, i64 %93, !dbg !21530
  %95 = load i8, i8* %94, align 1, !dbg !21530
  %96 = zext i8 %95 to i32, !dbg !21530
  %97 = load i8*, i8** %22, align 8, !dbg !21533
  %98 = load i64, i64* %21, align 8, !dbg !21534
  %99 = getelementptr inbounds i8, i8* %97, i64 %98, !dbg !21533
  %100 = load i8, i8* %99, align 1, !dbg !21533
  %101 = zext i8 %100 to i32, !dbg !21533
  %102 = sub nsw i32 0, %101, !dbg !21535
  %103 = trunc i32 %102 to i8, !dbg !21536
  %104 = zext i8 %103 to i32, !dbg !21536
  %105 = or i32 %96, %104, !dbg !21537
  %106 = ashr i32 %105, 7, !dbg !21538
  %107 = xor i32 %106, 1, !dbg !21539
  %108 = load i8, i8* %24, align 1, !dbg !21540
  %109 = zext i8 %108 to i32, !dbg !21540
  %110 = or i32 %109, %107, !dbg !21540
  %111 = trunc i32 %110 to i8, !dbg !21540
  store i8 %111, i8* %24, align 1, !dbg !21540
  %112 = load i8, i8* %24, align 1, !dbg !21541
  %113 = zext i8 %112 to i32, !dbg !21541
  %114 = load i8, i8* %24, align 1, !dbg !21542
  %115 = zext i8 %114 to i32, !dbg !21542
  %116 = sub nsw i32 0, %115, !dbg !21543
  %117 = trunc i32 %116 to i8, !dbg !21544
  %118 = zext i8 %117 to i32, !dbg !21544
  %119 = or i32 %113, %118, !dbg !21545
  %120 = ashr i32 %119, 7, !dbg !21546
  %121 = xor i32 %120, 1, !dbg !21547
  %122 = sext i32 %121 to i64, !dbg !21548
  %123 = load i64, i64* %20, align 8, !dbg !21549
  %124 = add i64 %123, %122, !dbg !21549
  store i64 %124, i64* %20, align 8, !dbg !21549
  br label %125, !dbg !21550

125:                                              ; preds = %91
  %126 = load i64, i64* %21, align 8, !dbg !21551
  %127 = add i64 %126, 1, !dbg !21551
  store i64 %127, i64* %21, align 8, !dbg !21551
  br label %86, !dbg !21552, !llvm.loop !21553

128:                                              ; preds = %86
  %129 = load i64, i64* %20, align 8, !dbg !21555
  %130 = load i8*, i8** %22, align 8, !dbg !21556
  %131 = getelementptr inbounds i8, i8* %130, i64 %129, !dbg !21556
  store i8* %131, i8** %22, align 8, !dbg !21556
  %132 = load i8*, i8** %22, align 8, !dbg !21557
  %133 = getelementptr inbounds i8, i8* %132, i32 1, !dbg !21557
  store i8* %133, i8** %22, align 8, !dbg !21557
  %134 = load i8, i8* %132, align 1, !dbg !21558
  %135 = zext i8 %134 to i32, !dbg !21558
  %136 = load i8, i8* %23, align 1, !dbg !21559
  %137 = zext i8 %136 to i32, !dbg !21559
  %138 = or i32 %137, %135, !dbg !21559
  %139 = trunc i32 %138 to i8, !dbg !21559
  store i8 %139, i8* %23, align 1, !dbg !21559
  br label %189, !dbg !21560

140:                                              ; preds = %64
  %141 = load i8*, i8** %22, align 8, !dbg !21561
  %142 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !21561
  store i8* %142, i8** %22, align 8, !dbg !21561
  %143 = load i8, i8* %141, align 1, !dbg !21563
  %144 = zext i8 %143 to i32, !dbg !21563
  %145 = xor i32 %144, 1, !dbg !21564
  %146 = load i8, i8* %23, align 1, !dbg !21565
  %147 = zext i8 %146 to i32, !dbg !21565
  %148 = or i32 %147, %145, !dbg !21565
  %149 = trunc i32 %148 to i8, !dbg !21565
  store i8 %149, i8* %23, align 1, !dbg !21565
  store i64 0, i64* %21, align 8, !dbg !21566
  br label %150, !dbg !21568

150:                                              ; preds = %174, %140
  %151 = load i64, i64* %21, align 8, !dbg !21569
  %152 = load i64, i64* %19, align 8, !dbg !21571
  %153 = sub i64 %152, 3, !dbg !21572
  %154 = icmp ult i64 %151, %153, !dbg !21573
  br i1 %154, label %155, label %177, !dbg !21574

155:                                              ; preds = %150
  %156 = load i8*, i8** %22, align 8, !dbg !21575
  %157 = load i64, i64* %21, align 8, !dbg !21577
  %158 = getelementptr inbounds i8, i8* %156, i64 %157, !dbg !21575
  %159 = load i8, i8* %158, align 1, !dbg !21575
  %160 = zext i8 %159 to i32, !dbg !21575
  %161 = icmp ne i32 %160, 255, !dbg !21578
  %162 = zext i1 %161 to i32, !dbg !21578
  %163 = load i8, i8* %24, align 1, !dbg !21579
  %164 = zext i8 %163 to i32, !dbg !21579
  %165 = or i32 %164, %162, !dbg !21579
  %166 = trunc i32 %165 to i8, !dbg !21579
  store i8 %166, i8* %24, align 1, !dbg !21579
  %167 = load i8, i8* %24, align 1, !dbg !21580
  %168 = zext i8 %167 to i32, !dbg !21580
  %169 = icmp eq i32 %168, 0, !dbg !21581
  %170 = zext i1 %169 to i32, !dbg !21581
  %171 = sext i32 %170 to i64, !dbg !21582
  %172 = load i64, i64* %20, align 8, !dbg !21583
  %173 = add i64 %172, %171, !dbg !21583
  store i64 %173, i64* %20, align 8, !dbg !21583
  br label %174, !dbg !21584

174:                                              ; preds = %155
  %175 = load i64, i64* %21, align 8, !dbg !21585
  %176 = add i64 %175, 1, !dbg !21585
  store i64 %176, i64* %21, align 8, !dbg !21585
  br label %150, !dbg !21586, !llvm.loop !21587

177:                                              ; preds = %150
  %178 = load i64, i64* %20, align 8, !dbg !21589
  %179 = load i8*, i8** %22, align 8, !dbg !21590
  %180 = getelementptr inbounds i8, i8* %179, i64 %178, !dbg !21590
  store i8* %180, i8** %22, align 8, !dbg !21590
  %181 = load i8*, i8** %22, align 8, !dbg !21591
  %182 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !21591
  store i8* %182, i8** %22, align 8, !dbg !21591
  %183 = load i8, i8* %181, align 1, !dbg !21592
  %184 = zext i8 %183 to i32, !dbg !21592
  %185 = load i8, i8* %23, align 1, !dbg !21593
  %186 = zext i8 %185 to i32, !dbg !21593
  %187 = or i32 %186, %184, !dbg !21593
  %188 = trunc i32 %187 to i8, !dbg !21593
  store i8 %188, i8* %23, align 1, !dbg !21593
  br label %189

189:                                              ; preds = %177, %128
  %190 = load i64, i64* %20, align 8, !dbg !21594
  %191 = icmp ult i64 %190, 8, !dbg !21595
  %192 = zext i1 %191 to i32, !dbg !21595
  %193 = load i8, i8* %23, align 1, !dbg !21596
  %194 = zext i8 %193 to i32, !dbg !21596
  %195 = or i32 %194, %192, !dbg !21596
  %196 = trunc i32 %195 to i8, !dbg !21596
  store i8 %196, i8* %23, align 1, !dbg !21596
  %197 = load i8, i8* %23, align 1, !dbg !21597
  %198 = icmp ne i8 %197, 0, !dbg !21597
  br i1 %198, label %199, label %200, !dbg !21599

199:                                              ; preds = %189
  store i32 -16640, i32* %18, align 4, !dbg !21600
  br label %224, !dbg !21602

200:                                              ; preds = %189
  %201 = load i64, i64* %19, align 8, !dbg !21603
  %202 = load i8*, i8** %22, align 8, !dbg !21605
  %203 = getelementptr inbounds [1024 x i8], [1024 x i8]* %25, i64 0, i64 0, !dbg !21606
  %204 = ptrtoint i8* %202 to i64, !dbg !21607
  %205 = ptrtoint i8* %203 to i64, !dbg !21607
  %206 = sub i64 %204, %205, !dbg !21607
  %207 = sub i64 %201, %206, !dbg !21608
  %208 = load i64, i64* %17, align 8, !dbg !21609
  %209 = icmp ugt i64 %207, %208, !dbg !21610
  br i1 %209, label %210, label %211, !dbg !21611

210:                                              ; preds = %200
  store i32 -17408, i32* %18, align 4, !dbg !21612
  br label %224, !dbg !21614

211:                                              ; preds = %200
  %212 = load i64, i64* %19, align 8, !dbg !21615
  %213 = load i8*, i8** %22, align 8, !dbg !21616
  %214 = getelementptr inbounds [1024 x i8], [1024 x i8]* %25, i64 0, i64 0, !dbg !21617
  %215 = ptrtoint i8* %213 to i64, !dbg !21618
  %216 = ptrtoint i8* %214 to i64, !dbg !21618
  %217 = sub i64 %215, %216, !dbg !21618
  %218 = sub i64 %212, %217, !dbg !21619
  %219 = load i64*, i64** %14, align 8, !dbg !21620
  store i64 %218, i64* %219, align 8, !dbg !21621
  %220 = load i8*, i8** %16, align 8, !dbg !21622
  %221 = load i8*, i8** %22, align 8, !dbg !21623
  %222 = load i64*, i64** %14, align 8, !dbg !21624
  %223 = load i64, i64* %222, align 8, !dbg !21625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %220, i8* align 1 %221, i64 %223, i1 false), !dbg !21626
  store i32 0, i32* %18, align 4, !dbg !21627
  br label %224, !dbg !21628

224:                                              ; preds = %211, %210, %199, %63
  call void @llvm.dbg.label(metadata !21629), !dbg !21630
  %225 = getelementptr inbounds [1024 x i8], [1024 x i8]* %25, i64 0, i64 0, !dbg !21631
  call void @mbedtls_zeroize.427(i8* %225, i64 1024), !dbg !21632
  %226 = load i32, i32* %18, align 4, !dbg !21633
  store i32 %226, i32* %9, align 4, !dbg !21634
  br label %227, !dbg !21634

227:                                              ; preds = %224, %43, %33
  %228 = load i32, i32* %9, align 4, !dbg !21635
  ret i32 %228, !dbg !21635
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_pkcs1_decrypt(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i64* %4, i8* %5, i8* %6, i64 %7) #0 !dbg !21636 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !21637, metadata !DIExpression()), !dbg !21638
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !21639, metadata !DIExpression()), !dbg !21640
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !21641, metadata !DIExpression()), !dbg !21642
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21643, metadata !DIExpression()), !dbg !21644
  store i64* %4, i64** %14, align 8
  call void @llvm.dbg.declare(metadata i64** %14, metadata !21645, metadata !DIExpression()), !dbg !21646
  store i8* %5, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !21647, metadata !DIExpression()), !dbg !21648
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !21649, metadata !DIExpression()), !dbg !21650
  store i64 %7, i64* %17, align 8
  call void @llvm.dbg.declare(metadata i64* %17, metadata !21651, metadata !DIExpression()), !dbg !21652
  %18 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21653
  %19 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %18, i32 0, i32 15, !dbg !21654
  %20 = load i32, i32* %19, align 8, !dbg !21654
  switch i32 %20, label %41 [
    i32 0, label %21
    i32 1, label %31
  ], !dbg !21655

21:                                               ; preds = %8
  %22 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21656
  %23 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !21658
  %24 = load i8*, i8** %12, align 8, !dbg !21659
  %25 = load i32, i32* %13, align 4, !dbg !21660
  %26 = load i64*, i64** %14, align 8, !dbg !21661
  %27 = load i8*, i8** %15, align 8, !dbg !21662
  %28 = load i8*, i8** %16, align 8, !dbg !21663
  %29 = load i64, i64* %17, align 8, !dbg !21664
  %30 = call i32 @mbedtls_rsa_rsaes_pkcs1_v15_decrypt(%struct.mbedtls_rsa_context* %22, i32 (i8*, i8*, i64)* %23, i8* %24, i32 %25, i64* %26, i8* %27, i8* %28, i64 %29), !dbg !21665
  store i32 %30, i32* %9, align 4, !dbg !21666
  br label %42, !dbg !21666

31:                                               ; preds = %8
  %32 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21667
  %33 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !21668
  %34 = load i8*, i8** %12, align 8, !dbg !21669
  %35 = load i32, i32* %13, align 4, !dbg !21670
  %36 = load i64*, i64** %14, align 8, !dbg !21671
  %37 = load i8*, i8** %15, align 8, !dbg !21672
  %38 = load i8*, i8** %16, align 8, !dbg !21673
  %39 = load i64, i64* %17, align 8, !dbg !21674
  %40 = call i32 @mbedtls_rsa_rsaes_oaep_decrypt(%struct.mbedtls_rsa_context* %32, i32 (i8*, i8*, i64)* %33, i8* %34, i32 %35, i8* null, i64 0, i64* %36, i8* %37, i8* %38, i64 %39), !dbg !21675
  store i32 %40, i32* %9, align 4, !dbg !21676
  br label %42, !dbg !21676

41:                                               ; preds = %8
  store i32 -16640, i32* %9, align 4, !dbg !21677
  br label %42, !dbg !21677

42:                                               ; preds = %41, %31, %21
  %43 = load i32, i32* %9, align 4, !dbg !21678
  ret i32 %43, !dbg !21678
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsassa_pss_sign(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7) #0 !dbg !21679 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca [64 x i8], align 16
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i64, align 8
  %26 = alloca %struct.mbedtls_md_info_t*, align 8
  %27 = alloca %struct.mbedtls_md_context_t, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !21682, metadata !DIExpression()), !dbg !21683
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !21684, metadata !DIExpression()), !dbg !21685
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !21686, metadata !DIExpression()), !dbg !21687
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21688, metadata !DIExpression()), !dbg !21689
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !21690, metadata !DIExpression()), !dbg !21691
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !21692, metadata !DIExpression()), !dbg !21693
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !21694, metadata !DIExpression()), !dbg !21695
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !21696, metadata !DIExpression()), !dbg !21697
  call void @llvm.dbg.declare(metadata i64* %18, metadata !21698, metadata !DIExpression()), !dbg !21699
  call void @llvm.dbg.declare(metadata i8** %19, metadata !21700, metadata !DIExpression()), !dbg !21701
  %28 = load i8*, i8** %17, align 8, !dbg !21702
  store i8* %28, i8** %19, align 8, !dbg !21701
  call void @llvm.dbg.declare(metadata [64 x i8]* %20, metadata !21703, metadata !DIExpression()), !dbg !21704
  call void @llvm.dbg.declare(metadata i32* %21, metadata !21705, metadata !DIExpression()), !dbg !21706
  call void @llvm.dbg.declare(metadata i32* %22, metadata !21707, metadata !DIExpression()), !dbg !21708
  call void @llvm.dbg.declare(metadata i32* %23, metadata !21709, metadata !DIExpression()), !dbg !21710
  store i32 0, i32* %23, align 4, !dbg !21710
  call void @llvm.dbg.declare(metadata i32* %24, metadata !21711, metadata !DIExpression()), !dbg !21712
  call void @llvm.dbg.declare(metadata i64* %25, metadata !21713, metadata !DIExpression()), !dbg !21714
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %26, metadata !21715, metadata !DIExpression()), !dbg !21716
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t* %27, metadata !21717, metadata !DIExpression()), !dbg !21718
  %29 = load i32, i32* %13, align 4, !dbg !21719
  %30 = icmp eq i32 %29, 1, !dbg !21721
  br i1 %30, label %31, label %37, !dbg !21722

31:                                               ; preds = %8
  %32 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21723
  %33 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %32, i32 0, i32 15, !dbg !21724
  %34 = load i32, i32* %33, align 8, !dbg !21724
  %35 = icmp ne i32 %34, 1, !dbg !21725
  br i1 %35, label %36, label %37, !dbg !21726

36:                                               ; preds = %31
  store i32 -16512, i32* %9, align 4, !dbg !21727
  br label %192, !dbg !21727

37:                                               ; preds = %31, %8
  %38 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !21728
  %39 = icmp eq i32 (i8*, i8*, i64)* %38, null, !dbg !21730
  br i1 %39, label %40, label %41, !dbg !21731

40:                                               ; preds = %37
  store i32 -16512, i32* %9, align 4, !dbg !21732
  br label %192, !dbg !21732

41:                                               ; preds = %37
  %42 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21733
  %43 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %42, i32 0, i32 1, !dbg !21734
  %44 = load i64, i64* %43, align 8, !dbg !21734
  store i64 %44, i64* %18, align 8, !dbg !21735
  %45 = load i32, i32* %14, align 4, !dbg !21736
  %46 = icmp ne i32 %45, 0, !dbg !21738
  br i1 %46, label %47, label %57, !dbg !21739

47:                                               ; preds = %41
  %48 = load i32, i32* %14, align 4, !dbg !21740
  %49 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %48), !dbg !21742
  store %struct.mbedtls_md_info_t* %49, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21743
  %50 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21744
  %51 = icmp eq %struct.mbedtls_md_info_t* %50, null, !dbg !21746
  br i1 %51, label %52, label %53, !dbg !21747

52:                                               ; preds = %47
  store i32 -16512, i32* %9, align 4, !dbg !21748
  br label %192, !dbg !21748

53:                                               ; preds = %47
  %54 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21749
  %55 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %54), !dbg !21750
  %56 = zext i8 %55 to i32, !dbg !21750
  store i32 %56, i32* %15, align 4, !dbg !21751
  br label %57, !dbg !21752

57:                                               ; preds = %53, %41
  %58 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21753
  %59 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %58, i32 0, i32 16, !dbg !21754
  %60 = load i32, i32* %59, align 4, !dbg !21754
  %61 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %60), !dbg !21755
  store %struct.mbedtls_md_info_t* %61, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21756
  %62 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21757
  %63 = icmp eq %struct.mbedtls_md_info_t* %62, null, !dbg !21759
  br i1 %63, label %64, label %65, !dbg !21760

64:                                               ; preds = %57
  store i32 -16512, i32* %9, align 4, !dbg !21761
  br label %192, !dbg !21761

65:                                               ; preds = %57
  %66 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21762
  %67 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %66), !dbg !21763
  %68 = zext i8 %67 to i32, !dbg !21763
  store i32 %68, i32* %22, align 4, !dbg !21764
  %69 = load i32, i32* %22, align 4, !dbg !21765
  store i32 %69, i32* %21, align 4, !dbg !21766
  %70 = load i64, i64* %18, align 8, !dbg !21767
  %71 = load i32, i32* %22, align 4, !dbg !21769
  %72 = load i32, i32* %21, align 4, !dbg !21770
  %73 = add i32 %71, %72, !dbg !21771
  %74 = add i32 %73, 2, !dbg !21772
  %75 = zext i32 %74 to i64, !dbg !21769
  %76 = icmp ult i64 %70, %75, !dbg !21773
  br i1 %76, label %77, label %78, !dbg !21774

77:                                               ; preds = %65
  store i32 -16512, i32* %9, align 4, !dbg !21775
  br label %192, !dbg !21775

78:                                               ; preds = %65
  %79 = load i8*, i8** %17, align 8, !dbg !21776
  %80 = load i64, i64* %18, align 8, !dbg !21777
  call void @llvm.memset.p0i8.i64(i8* align 1 %79, i8 0, i64 %80, i1 false), !dbg !21778
  %81 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !21779
  %82 = load i8*, i8** %12, align 8, !dbg !21781
  %83 = getelementptr inbounds [64 x i8], [64 x i8]* %20, i64 0, i64 0, !dbg !21782
  %84 = load i32, i32* %21, align 4, !dbg !21783
  %85 = zext i32 %84 to i64, !dbg !21783
  %86 = call i32 %81(i8* %82, i8* %83, i64 %85), !dbg !21779
  store i32 %86, i32* %24, align 4, !dbg !21784
  %87 = icmp ne i32 %86, 0, !dbg !21785
  br i1 %87, label %88, label %91, !dbg !21786

88:                                               ; preds = %78
  %89 = load i32, i32* %24, align 4, !dbg !21787
  %90 = add nsw i32 -17536, %89, !dbg !21788
  store i32 %90, i32* %9, align 4, !dbg !21789
  br label %192, !dbg !21789

91:                                               ; preds = %78
  %92 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21790
  %93 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %92, i32 0, i32 2, !dbg !21791
  %94 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %93), !dbg !21792
  %95 = sub i64 %94, 1, !dbg !21793
  store i64 %95, i64* %25, align 8, !dbg !21794
  %96 = load i64, i64* %18, align 8, !dbg !21795
  %97 = load i32, i32* %22, align 4, !dbg !21796
  %98 = mul i32 %97, 2, !dbg !21797
  %99 = zext i32 %98 to i64, !dbg !21796
  %100 = sub i64 %96, %99, !dbg !21798
  %101 = sub i64 %100, 2, !dbg !21799
  %102 = load i8*, i8** %19, align 8, !dbg !21800
  %103 = getelementptr inbounds i8, i8* %102, i64 %101, !dbg !21800
  store i8* %103, i8** %19, align 8, !dbg !21800
  %104 = load i8*, i8** %19, align 8, !dbg !21801
  %105 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !21801
  store i8* %105, i8** %19, align 8, !dbg !21801
  store i8 1, i8* %104, align 1, !dbg !21802
  %106 = load i8*, i8** %19, align 8, !dbg !21803
  %107 = getelementptr inbounds [64 x i8], [64 x i8]* %20, i64 0, i64 0, !dbg !21804
  %108 = load i32, i32* %21, align 4, !dbg !21805
  %109 = zext i32 %108 to i64, !dbg !21805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 16 %107, i64 %109, i1 false), !dbg !21804
  %110 = load i32, i32* %21, align 4, !dbg !21806
  %111 = load i8*, i8** %19, align 8, !dbg !21807
  %112 = zext i32 %110 to i64, !dbg !21807
  %113 = getelementptr inbounds i8, i8* %111, i64 %112, !dbg !21807
  store i8* %113, i8** %19, align 8, !dbg !21807
  call void @mbedtls_md_init(%struct.mbedtls_md_context_t* %27), !dbg !21808
  %114 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !21809
  %115 = call i32 @mbedtls_md_setup(%struct.mbedtls_md_context_t* %27, %struct.mbedtls_md_info_t* %114, i32 0), !dbg !21811
  store i32 %115, i32* %24, align 4, !dbg !21812
  %116 = icmp ne i32 %115, 0, !dbg !21813
  br i1 %116, label %117, label %119, !dbg !21814

117:                                              ; preds = %91
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %27), !dbg !21815
  %118 = load i32, i32* %24, align 4, !dbg !21817
  store i32 %118, i32* %9, align 4, !dbg !21818
  br label %192, !dbg !21818

119:                                              ; preds = %91
  %120 = call i32 @mbedtls_md_starts(%struct.mbedtls_md_context_t* %27), !dbg !21819
  %121 = load i8*, i8** %19, align 8, !dbg !21820
  %122 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %27, i8* %121, i64 8), !dbg !21821
  %123 = load i8*, i8** %16, align 8, !dbg !21822
  %124 = load i32, i32* %15, align 4, !dbg !21823
  %125 = zext i32 %124 to i64, !dbg !21823
  %126 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %27, i8* %123, i64 %125), !dbg !21824
  %127 = getelementptr inbounds [64 x i8], [64 x i8]* %20, i64 0, i64 0, !dbg !21825
  %128 = load i32, i32* %21, align 4, !dbg !21826
  %129 = zext i32 %128 to i64, !dbg !21826
  %130 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %27, i8* %127, i64 %129), !dbg !21827
  %131 = load i8*, i8** %19, align 8, !dbg !21828
  %132 = call i32 @mbedtls_md_finish(%struct.mbedtls_md_context_t* %27, i8* %131), !dbg !21829
  %133 = getelementptr inbounds [64 x i8], [64 x i8]* %20, i64 0, i64 0, !dbg !21830
  call void @mbedtls_zeroize.427(i8* %133, i64 64), !dbg !21831
  %134 = load i64, i64* %25, align 8, !dbg !21832
  %135 = urem i64 %134, 8, !dbg !21834
  %136 = icmp eq i64 %135, 0, !dbg !21835
  br i1 %136, label %137, label %138, !dbg !21836

137:                                              ; preds = %119
  store i32 1, i32* %23, align 4, !dbg !21837
  br label %138, !dbg !21838

138:                                              ; preds = %137, %119
  %139 = load i8*, i8** %17, align 8, !dbg !21839
  %140 = load i32, i32* %23, align 4, !dbg !21840
  %141 = zext i32 %140 to i64, !dbg !21841
  %142 = getelementptr inbounds i8, i8* %139, i64 %141, !dbg !21841
  %143 = load i64, i64* %18, align 8, !dbg !21842
  %144 = load i32, i32* %22, align 4, !dbg !21843
  %145 = zext i32 %144 to i64, !dbg !21843
  %146 = sub i64 %143, %145, !dbg !21844
  %147 = sub i64 %146, 1, !dbg !21845
  %148 = load i32, i32* %23, align 4, !dbg !21846
  %149 = zext i32 %148 to i64, !dbg !21846
  %150 = sub i64 %147, %149, !dbg !21847
  %151 = load i8*, i8** %19, align 8, !dbg !21848
  %152 = load i32, i32* %22, align 4, !dbg !21849
  %153 = zext i32 %152 to i64, !dbg !21849
  call void @mgf_mask(i8* %142, i64 %150, i8* %151, i64 %153, %struct.mbedtls_md_context_t* %27), !dbg !21850
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %27), !dbg !21851
  %154 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21852
  %155 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %154, i32 0, i32 2, !dbg !21853
  %156 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %155), !dbg !21854
  %157 = sub i64 %156, 1, !dbg !21855
  store i64 %157, i64* %25, align 8, !dbg !21856
  %158 = load i64, i64* %18, align 8, !dbg !21857
  %159 = mul i64 %158, 8, !dbg !21858
  %160 = load i64, i64* %25, align 8, !dbg !21859
  %161 = sub i64 %159, %160, !dbg !21860
  %162 = trunc i64 %161 to i32, !dbg !21861
  %163 = ashr i32 255, %162, !dbg !21861
  %164 = load i8*, i8** %17, align 8, !dbg !21862
  %165 = getelementptr inbounds i8, i8* %164, i64 0, !dbg !21862
  %166 = load i8, i8* %165, align 1, !dbg !21863
  %167 = zext i8 %166 to i32, !dbg !21863
  %168 = and i32 %167, %163, !dbg !21863
  %169 = trunc i32 %168 to i8, !dbg !21863
  store i8 %169, i8* %165, align 1, !dbg !21863
  %170 = load i32, i32* %22, align 4, !dbg !21864
  %171 = load i8*, i8** %19, align 8, !dbg !21865
  %172 = zext i32 %170 to i64, !dbg !21865
  %173 = getelementptr inbounds i8, i8* %171, i64 %172, !dbg !21865
  store i8* %173, i8** %19, align 8, !dbg !21865
  %174 = load i8*, i8** %19, align 8, !dbg !21866
  %175 = getelementptr inbounds i8, i8* %174, i32 1, !dbg !21866
  store i8* %175, i8** %19, align 8, !dbg !21866
  store i8 -68, i8* %174, align 1, !dbg !21867
  %176 = load i32, i32* %13, align 4, !dbg !21868
  %177 = icmp eq i32 %176, 0, !dbg !21869
  br i1 %177, label %178, label %183, !dbg !21870

178:                                              ; preds = %138
  %179 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21871
  %180 = load i8*, i8** %17, align 8, !dbg !21872
  %181 = load i8*, i8** %17, align 8, !dbg !21873
  %182 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %179, i8* %180, i8* %181), !dbg !21874
  br label %190, !dbg !21870

183:                                              ; preds = %138
  %184 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21875
  %185 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !21876
  %186 = load i8*, i8** %12, align 8, !dbg !21877
  %187 = load i8*, i8** %17, align 8, !dbg !21878
  %188 = load i8*, i8** %17, align 8, !dbg !21879
  %189 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %184, i32 (i8*, i8*, i64)* %185, i8* %186, i8* %187, i8* %188), !dbg !21880
  br label %190, !dbg !21870

190:                                              ; preds = %183, %178
  %191 = phi i32 [ %182, %178 ], [ %189, %183 ], !dbg !21870
  store i32 %191, i32* %9, align 4, !dbg !21881
  br label %192, !dbg !21881

192:                                              ; preds = %190, %117, %88, %77, %64, %52, %40, %36
  %193 = load i32, i32* %9, align 4, !dbg !21882
  ret i32 %193, !dbg !21882
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsassa_pkcs1_v15_sign(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7) #0 !dbg !21883 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca %struct.mbedtls_md_info_t*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !21884, metadata !DIExpression()), !dbg !21885
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !21886, metadata !DIExpression()), !dbg !21887
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !21888, metadata !DIExpression()), !dbg !21889
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21890, metadata !DIExpression()), !dbg !21891
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !21892, metadata !DIExpression()), !dbg !21893
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !21894, metadata !DIExpression()), !dbg !21895
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !21896, metadata !DIExpression()), !dbg !21897
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !21898, metadata !DIExpression()), !dbg !21899
  call void @llvm.dbg.declare(metadata i64* %18, metadata !21900, metadata !DIExpression()), !dbg !21901
  call void @llvm.dbg.declare(metadata i64* %19, metadata !21902, metadata !DIExpression()), !dbg !21903
  call void @llvm.dbg.declare(metadata i64* %20, metadata !21904, metadata !DIExpression()), !dbg !21905
  store i64 0, i64* %20, align 8, !dbg !21905
  call void @llvm.dbg.declare(metadata i8** %21, metadata !21906, metadata !DIExpression()), !dbg !21907
  %30 = load i8*, i8** %17, align 8, !dbg !21908
  store i8* %30, i8** %21, align 8, !dbg !21907
  call void @llvm.dbg.declare(metadata i8** %22, metadata !21909, metadata !DIExpression()), !dbg !21910
  store i8* null, i8** %22, align 8, !dbg !21910
  call void @llvm.dbg.declare(metadata i8** %23, metadata !21911, metadata !DIExpression()), !dbg !21912
  store i8* null, i8** %23, align 8, !dbg !21912
  call void @llvm.dbg.declare(metadata i8** %24, metadata !21913, metadata !DIExpression()), !dbg !21914
  store i8* null, i8** %24, align 8, !dbg !21914
  call void @llvm.dbg.declare(metadata i64* %25, metadata !21915, metadata !DIExpression()), !dbg !21916
  call void @llvm.dbg.declare(metadata i8* %26, metadata !21917, metadata !DIExpression()), !dbg !21918
  call void @llvm.dbg.declare(metadata i8* %27, metadata !21919, metadata !DIExpression()), !dbg !21920
  call void @llvm.dbg.declare(metadata i32* %28, metadata !21921, metadata !DIExpression()), !dbg !21922
  %31 = load i32, i32* %13, align 4, !dbg !21923
  %32 = icmp eq i32 %31, 1, !dbg !21925
  br i1 %32, label %33, label %39, !dbg !21926

33:                                               ; preds = %8
  %34 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21927
  %35 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %34, i32 0, i32 15, !dbg !21928
  %36 = load i32, i32* %35, align 8, !dbg !21928
  %37 = icmp ne i32 %36, 0, !dbg !21929
  br i1 %37, label %38, label %39, !dbg !21930

38:                                               ; preds = %33
  store i32 -16512, i32* %9, align 4, !dbg !21931
  br label %229, !dbg !21931

39:                                               ; preds = %33, %8
  %40 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !21932
  %41 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %40, i32 0, i32 1, !dbg !21933
  %42 = load i64, i64* %41, align 8, !dbg !21933
  store i64 %42, i64* %19, align 8, !dbg !21934
  %43 = load i64, i64* %19, align 8, !dbg !21935
  %44 = sub i64 %43, 3, !dbg !21936
  store i64 %44, i64* %18, align 8, !dbg !21937
  %45 = load i32, i32* %14, align 4, !dbg !21938
  %46 = icmp ne i32 %45, 0, !dbg !21940
  br i1 %46, label %47, label %66, !dbg !21941

47:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %29, metadata !21942, metadata !DIExpression()), !dbg !21944
  %48 = load i32, i32* %14, align 4, !dbg !21945
  %49 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %48), !dbg !21946
  store %struct.mbedtls_md_info_t* %49, %struct.mbedtls_md_info_t** %29, align 8, !dbg !21944
  %50 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %29, align 8, !dbg !21947
  %51 = icmp eq %struct.mbedtls_md_info_t* %50, null, !dbg !21949
  br i1 %51, label %52, label %53, !dbg !21950

52:                                               ; preds = %47
  store i32 -16512, i32* %9, align 4, !dbg !21951
  br label %229, !dbg !21951

53:                                               ; preds = %47
  %54 = load i32, i32* %14, align 4, !dbg !21952
  %55 = call i32 @mbedtls_oid_get_oid_by_md(i32 %54, i8** %22, i64* %20), !dbg !21954
  %56 = icmp ne i32 %55, 0, !dbg !21955
  br i1 %56, label %57, label %58, !dbg !21956

57:                                               ; preds = %53
  store i32 -16512, i32* %9, align 4, !dbg !21957
  br label %229, !dbg !21957

58:                                               ; preds = %53
  %59 = load i64, i64* %20, align 8, !dbg !21958
  %60 = add i64 10, %59, !dbg !21959
  %61 = load i64, i64* %18, align 8, !dbg !21960
  %62 = sub i64 %61, %60, !dbg !21960
  store i64 %62, i64* %18, align 8, !dbg !21960
  %63 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %29, align 8, !dbg !21961
  %64 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %63), !dbg !21962
  %65 = zext i8 %64 to i32, !dbg !21962
  store i32 %65, i32* %15, align 4, !dbg !21963
  br label %66, !dbg !21964

66:                                               ; preds = %58, %39
  %67 = load i32, i32* %15, align 4, !dbg !21965
  %68 = zext i32 %67 to i64, !dbg !21965
  %69 = load i64, i64* %18, align 8, !dbg !21966
  %70 = sub i64 %69, %68, !dbg !21966
  store i64 %70, i64* %18, align 8, !dbg !21966
  %71 = load i64, i64* %18, align 8, !dbg !21967
  %72 = icmp ult i64 %71, 8, !dbg !21969
  br i1 %72, label %77, label %73, !dbg !21970

73:                                               ; preds = %66
  %74 = load i64, i64* %18, align 8, !dbg !21971
  %75 = load i64, i64* %19, align 8, !dbg !21972
  %76 = icmp ugt i64 %74, %75, !dbg !21973
  br i1 %76, label %77, label %78, !dbg !21974

77:                                               ; preds = %73, %66
  store i32 -16512, i32* %9, align 4, !dbg !21975
  br label %229, !dbg !21975

78:                                               ; preds = %73
  %79 = load i8*, i8** %21, align 8, !dbg !21976
  %80 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !21976
  store i8* %80, i8** %21, align 8, !dbg !21976
  store i8 0, i8* %79, align 1, !dbg !21977
  %81 = load i8*, i8** %21, align 8, !dbg !21978
  %82 = getelementptr inbounds i8, i8* %81, i32 1, !dbg !21978
  store i8* %82, i8** %21, align 8, !dbg !21978
  store i8 1, i8* %81, align 1, !dbg !21979
  %83 = load i8*, i8** %21, align 8, !dbg !21980
  %84 = load i64, i64* %18, align 8, !dbg !21981
  call void @llvm.memset.p0i8.i64(i8* align 1 %83, i8 -1, i64 %84, i1 false), !dbg !21982
  %85 = load i64, i64* %18, align 8, !dbg !21983
  %86 = load i8*, i8** %21, align 8, !dbg !21984
  %87 = getelementptr inbounds i8, i8* %86, i64 %85, !dbg !21984
  store i8* %87, i8** %21, align 8, !dbg !21984
  %88 = load i8*, i8** %21, align 8, !dbg !21985
  %89 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !21985
  store i8* %89, i8** %21, align 8, !dbg !21985
  store i8 0, i8* %88, align 1, !dbg !21986
  %90 = load i32, i32* %14, align 4, !dbg !21987
  %91 = icmp eq i32 %90, 0, !dbg !21989
  br i1 %91, label %92, label %97, !dbg !21990

92:                                               ; preds = %78
  %93 = load i8*, i8** %21, align 8, !dbg !21991
  %94 = load i8*, i8** %16, align 8, !dbg !21993
  %95 = load i32, i32* %15, align 4, !dbg !21994
  %96 = zext i32 %95 to i64, !dbg !21994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %93, i8* align 1 %94, i64 %96, i1 false), !dbg !21995
  br label %142, !dbg !21996

97:                                               ; preds = %78
  %98 = load i8*, i8** %21, align 8, !dbg !21997
  %99 = getelementptr inbounds i8, i8* %98, i32 1, !dbg !21997
  store i8* %99, i8** %21, align 8, !dbg !21997
  store i8 48, i8* %98, align 1, !dbg !21999
  %100 = load i64, i64* %20, align 8, !dbg !22000
  %101 = add i64 8, %100, !dbg !22001
  %102 = load i32, i32* %15, align 4, !dbg !22002
  %103 = zext i32 %102 to i64, !dbg !22002
  %104 = add i64 %101, %103, !dbg !22003
  %105 = trunc i64 %104 to i8, !dbg !22004
  %106 = load i8*, i8** %21, align 8, !dbg !22005
  %107 = getelementptr inbounds i8, i8* %106, i32 1, !dbg !22005
  store i8* %107, i8** %21, align 8, !dbg !22005
  store i8 %105, i8* %106, align 1, !dbg !22006
  %108 = load i8*, i8** %21, align 8, !dbg !22007
  %109 = getelementptr inbounds i8, i8* %108, i32 1, !dbg !22007
  store i8* %109, i8** %21, align 8, !dbg !22007
  store i8 48, i8* %108, align 1, !dbg !22008
  %110 = load i64, i64* %20, align 8, !dbg !22009
  %111 = add i64 4, %110, !dbg !22010
  %112 = trunc i64 %111 to i8, !dbg !22011
  %113 = load i8*, i8** %21, align 8, !dbg !22012
  %114 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !22012
  store i8* %114, i8** %21, align 8, !dbg !22012
  store i8 %112, i8* %113, align 1, !dbg !22013
  %115 = load i8*, i8** %21, align 8, !dbg !22014
  %116 = getelementptr inbounds i8, i8* %115, i32 1, !dbg !22014
  store i8* %116, i8** %21, align 8, !dbg !22014
  store i8 6, i8* %115, align 1, !dbg !22015
  %117 = load i64, i64* %20, align 8, !dbg !22016
  %118 = and i64 %117, 255, !dbg !22017
  %119 = trunc i64 %118 to i8, !dbg !22016
  %120 = load i8*, i8** %21, align 8, !dbg !22018
  %121 = getelementptr inbounds i8, i8* %120, i32 1, !dbg !22018
  store i8* %121, i8** %21, align 8, !dbg !22018
  store i8 %119, i8* %120, align 1, !dbg !22019
  %122 = load i8*, i8** %21, align 8, !dbg !22020
  %123 = load i8*, i8** %22, align 8, !dbg !22021
  %124 = load i64, i64* %20, align 8, !dbg !22022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %122, i8* align 1 %123, i64 %124, i1 false), !dbg !22023
  %125 = load i64, i64* %20, align 8, !dbg !22024
  %126 = load i8*, i8** %21, align 8, !dbg !22025
  %127 = getelementptr inbounds i8, i8* %126, i64 %125, !dbg !22025
  store i8* %127, i8** %21, align 8, !dbg !22025
  %128 = load i8*, i8** %21, align 8, !dbg !22026
  %129 = getelementptr inbounds i8, i8* %128, i32 1, !dbg !22026
  store i8* %129, i8** %21, align 8, !dbg !22026
  store i8 5, i8* %128, align 1, !dbg !22027
  %130 = load i8*, i8** %21, align 8, !dbg !22028
  %131 = getelementptr inbounds i8, i8* %130, i32 1, !dbg !22028
  store i8* %131, i8** %21, align 8, !dbg !22028
  store i8 0, i8* %130, align 1, !dbg !22029
  %132 = load i8*, i8** %21, align 8, !dbg !22030
  %133 = getelementptr inbounds i8, i8* %132, i32 1, !dbg !22030
  store i8* %133, i8** %21, align 8, !dbg !22030
  store i8 4, i8* %132, align 1, !dbg !22031
  %134 = load i32, i32* %15, align 4, !dbg !22032
  %135 = trunc i32 %134 to i8, !dbg !22032
  %136 = load i8*, i8** %21, align 8, !dbg !22033
  %137 = getelementptr inbounds i8, i8* %136, i32 1, !dbg !22033
  store i8* %137, i8** %21, align 8, !dbg !22033
  store i8 %135, i8* %136, align 1, !dbg !22034
  %138 = load i8*, i8** %21, align 8, !dbg !22035
  %139 = load i8*, i8** %16, align 8, !dbg !22036
  %140 = load i32, i32* %15, align 4, !dbg !22037
  %141 = zext i32 %140 to i64, !dbg !22037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %139, i64 %141, i1 false), !dbg !22038
  br label %142

142:                                              ; preds = %97, %92
  %143 = load i32, i32* %13, align 4, !dbg !22039
  %144 = icmp eq i32 %143, 0, !dbg !22041
  br i1 %144, label %145, label %150, !dbg !22042

145:                                              ; preds = %142
  %146 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22043
  %147 = load i8*, i8** %17, align 8, !dbg !22044
  %148 = load i8*, i8** %17, align 8, !dbg !22045
  %149 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %146, i8* %147, i8* %148), !dbg !22046
  store i32 %149, i32* %9, align 4, !dbg !22047
  br label %229, !dbg !22047

150:                                              ; preds = %142
  %151 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22048
  %152 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %151, i32 0, i32 1, !dbg !22049
  %153 = load i64, i64* %152, align 8, !dbg !22049
  %154 = call align 16 i8* @calloc(i64 1, i64 %153), !dbg !22050
  store i8* %154, i8** %23, align 8, !dbg !22051
  %155 = load i8*, i8** %23, align 8, !dbg !22052
  %156 = icmp eq i8* %155, null, !dbg !22054
  br i1 %156, label %157, label %158, !dbg !22055

157:                                              ; preds = %150
  store i32 -16, i32* %9, align 4, !dbg !22056
  br label %229, !dbg !22056

158:                                              ; preds = %150
  %159 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22057
  %160 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %159, i32 0, i32 1, !dbg !22058
  %161 = load i64, i64* %160, align 8, !dbg !22058
  %162 = call align 16 i8* @calloc(i64 1, i64 %161), !dbg !22059
  store i8* %162, i8** %24, align 8, !dbg !22060
  %163 = load i8*, i8** %24, align 8, !dbg !22061
  %164 = icmp eq i8* %163, null, !dbg !22063
  br i1 %164, label %165, label %167, !dbg !22064

165:                                              ; preds = %158
  %166 = load i8*, i8** %23, align 8, !dbg !22065
  call void @free(i8* %166), !dbg !22067
  store i32 -16, i32* %9, align 4, !dbg !22068
  br label %229, !dbg !22068

167:                                              ; preds = %158
  br label %168, !dbg !22069

168:                                              ; preds = %167
  %169 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22070
  %170 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !22070
  %171 = load i8*, i8** %12, align 8, !dbg !22070
  %172 = load i8*, i8** %17, align 8, !dbg !22070
  %173 = load i8*, i8** %23, align 8, !dbg !22070
  %174 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %169, i32 (i8*, i8*, i64)* %170, i8* %171, i8* %172, i8* %173), !dbg !22070
  store i32 %174, i32* %28, align 4, !dbg !22070
  %175 = icmp ne i32 %174, 0, !dbg !22070
  br i1 %175, label %176, label %177, !dbg !22073

176:                                              ; preds = %168
  br label %225, !dbg !22070

177:                                              ; preds = %168
  br label %178, !dbg !22073

178:                                              ; preds = %177
  br label %179, !dbg !22074

179:                                              ; preds = %178
  %180 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22075
  %181 = load i8*, i8** %23, align 8, !dbg !22075
  %182 = load i8*, i8** %24, align 8, !dbg !22075
  %183 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %180, i8* %181, i8* %182), !dbg !22075
  store i32 %183, i32* %28, align 4, !dbg !22075
  %184 = icmp ne i32 %183, 0, !dbg !22075
  br i1 %184, label %185, label %186, !dbg !22078

185:                                              ; preds = %179
  br label %225, !dbg !22075

186:                                              ; preds = %179
  br label %187, !dbg !22078

187:                                              ; preds = %186
  store i8 0, i8* %26, align 1, !dbg !22079
  store i64 0, i64* %25, align 8, !dbg !22081
  br label %188, !dbg !22082

188:                                              ; preds = %210, %187
  %189 = load i64, i64* %25, align 8, !dbg !22083
  %190 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22085
  %191 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %190, i32 0, i32 1, !dbg !22086
  %192 = load i64, i64* %191, align 8, !dbg !22086
  %193 = icmp ult i64 %189, %192, !dbg !22087
  br i1 %193, label %194, label %213, !dbg !22088

194:                                              ; preds = %188
  %195 = load i8*, i8** %24, align 8, !dbg !22089
  %196 = load i64, i64* %25, align 8, !dbg !22090
  %197 = getelementptr inbounds i8, i8* %195, i64 %196, !dbg !22089
  %198 = load i8, i8* %197, align 1, !dbg !22089
  %199 = zext i8 %198 to i32, !dbg !22089
  %200 = load i8*, i8** %17, align 8, !dbg !22091
  %201 = load i64, i64* %25, align 8, !dbg !22092
  %202 = getelementptr inbounds i8, i8* %200, i64 %201, !dbg !22091
  %203 = load i8, i8* %202, align 1, !dbg !22091
  %204 = zext i8 %203 to i32, !dbg !22091
  %205 = xor i32 %199, %204, !dbg !22093
  %206 = load i8, i8* %26, align 1, !dbg !22094
  %207 = zext i8 %206 to i32, !dbg !22094
  %208 = or i32 %207, %205, !dbg !22094
  %209 = trunc i32 %208 to i8, !dbg !22094
  store i8 %209, i8* %26, align 1, !dbg !22094
  br label %210, !dbg !22095

210:                                              ; preds = %194
  %211 = load i64, i64* %25, align 8, !dbg !22096
  %212 = add i64 %211, 1, !dbg !22096
  store i64 %212, i64* %25, align 8, !dbg !22096
  br label %188, !dbg !22097, !llvm.loop !22098

213:                                              ; preds = %188
  %214 = load i8, i8* %26, align 1, !dbg !22100
  store volatile i8 %214, i8* %27, align 1, !dbg !22101
  %215 = load volatile i8, i8* %27, align 1, !dbg !22102
  %216 = zext i8 %215 to i32, !dbg !22102
  %217 = icmp ne i32 %216, 0, !dbg !22104
  br i1 %217, label %218, label %219, !dbg !22105

218:                                              ; preds = %213
  store i32 -17152, i32* %28, align 4, !dbg !22106
  br label %225, !dbg !22108

219:                                              ; preds = %213
  %220 = load i8*, i8** %17, align 8, !dbg !22109
  %221 = load i8*, i8** %23, align 8, !dbg !22110
  %222 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22111
  %223 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %222, i32 0, i32 1, !dbg !22112
  %224 = load i64, i64* %223, align 8, !dbg !22112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %220, i8* align 1 %221, i64 %224, i1 false), !dbg !22113
  br label %225, !dbg !22113

225:                                              ; preds = %219, %218, %185, %176
  call void @llvm.dbg.label(metadata !22114), !dbg !22115
  %226 = load i8*, i8** %23, align 8, !dbg !22116
  call void @free(i8* %226), !dbg !22117
  %227 = load i8*, i8** %24, align 8, !dbg !22118
  call void @free(i8* %227), !dbg !22119
  %228 = load i32, i32* %28, align 4, !dbg !22120
  store i32 %228, i32* %9, align 4, !dbg !22121
  br label %229, !dbg !22121

229:                                              ; preds = %225, %165, %157, %145, %77, %57, %52, %38
  %230 = load i32, i32* %9, align 4, !dbg !22122
  ret i32 %230, !dbg !22122
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_pkcs1_sign(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7) #0 !dbg !22123 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !22124, metadata !DIExpression()), !dbg !22125
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !22126, metadata !DIExpression()), !dbg !22127
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !22128, metadata !DIExpression()), !dbg !22129
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !22130, metadata !DIExpression()), !dbg !22131
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !22132, metadata !DIExpression()), !dbg !22133
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !22134, metadata !DIExpression()), !dbg !22135
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !22136, metadata !DIExpression()), !dbg !22137
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !22138, metadata !DIExpression()), !dbg !22139
  %18 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22140
  %19 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %18, i32 0, i32 15, !dbg !22141
  %20 = load i32, i32* %19, align 8, !dbg !22141
  switch i32 %20, label %41 [
    i32 0, label %21
    i32 1, label %31
  ], !dbg !22142

21:                                               ; preds = %8
  %22 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22143
  %23 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !22145
  %24 = load i8*, i8** %12, align 8, !dbg !22146
  %25 = load i32, i32* %13, align 4, !dbg !22147
  %26 = load i32, i32* %14, align 4, !dbg !22148
  %27 = load i32, i32* %15, align 4, !dbg !22149
  %28 = load i8*, i8** %16, align 8, !dbg !22150
  %29 = load i8*, i8** %17, align 8, !dbg !22151
  %30 = call i32 @mbedtls_rsa_rsassa_pkcs1_v15_sign(%struct.mbedtls_rsa_context* %22, i32 (i8*, i8*, i64)* %23, i8* %24, i32 %25, i32 %26, i32 %27, i8* %28, i8* %29), !dbg !22152
  store i32 %30, i32* %9, align 4, !dbg !22153
  br label %42, !dbg !22153

31:                                               ; preds = %8
  %32 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22154
  %33 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !22155
  %34 = load i8*, i8** %12, align 8, !dbg !22156
  %35 = load i32, i32* %13, align 4, !dbg !22157
  %36 = load i32, i32* %14, align 4, !dbg !22158
  %37 = load i32, i32* %15, align 4, !dbg !22159
  %38 = load i8*, i8** %16, align 8, !dbg !22160
  %39 = load i8*, i8** %17, align 8, !dbg !22161
  %40 = call i32 @mbedtls_rsa_rsassa_pss_sign(%struct.mbedtls_rsa_context* %32, i32 (i8*, i8*, i64)* %33, i8* %34, i32 %35, i32 %36, i32 %37, i8* %38, i8* %39), !dbg !22162
  store i32 %40, i32* %9, align 4, !dbg !22163
  br label %42, !dbg !22163

41:                                               ; preds = %8
  store i32 -16640, i32* %9, align 4, !dbg !22164
  br label %42, !dbg !22164

42:                                               ; preds = %41, %31, %21
  %43 = load i32, i32* %9, align 4, !dbg !22165
  ret i32 %43, !dbg !22165
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsassa_pss_verify_ext(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i32 %7, i32 %8, i8* %9) #0 !dbg !22166 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.mbedtls_rsa_context*, align 8
  %13 = alloca i32 (i8*, i8*, i64)*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i8*, align 8
  %25 = alloca [64 x i8], align 16
  %26 = alloca [8 x i8], align 1
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %struct.mbedtls_md_info_t*, align 8
  %31 = alloca %struct.mbedtls_md_context_t, align 8
  %32 = alloca [1024 x i8], align 16
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %12, metadata !22169, metadata !DIExpression()), !dbg !22170
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %13, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %13, metadata !22171, metadata !DIExpression()), !dbg !22172
  store i8* %2, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !22173, metadata !DIExpression()), !dbg !22174
  store i32 %3, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !22175, metadata !DIExpression()), !dbg !22176
  store i32 %4, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !22177, metadata !DIExpression()), !dbg !22178
  store i32 %5, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !22179, metadata !DIExpression()), !dbg !22180
  store i8* %6, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !22181, metadata !DIExpression()), !dbg !22182
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !22183, metadata !DIExpression()), !dbg !22184
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !22185, metadata !DIExpression()), !dbg !22186
  store i8* %9, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !22187, metadata !DIExpression()), !dbg !22188
  call void @llvm.dbg.declare(metadata i32* %22, metadata !22189, metadata !DIExpression()), !dbg !22190
  call void @llvm.dbg.declare(metadata i64* %23, metadata !22191, metadata !DIExpression()), !dbg !22192
  call void @llvm.dbg.declare(metadata i8** %24, metadata !22193, metadata !DIExpression()), !dbg !22194
  call void @llvm.dbg.declare(metadata [64 x i8]* %25, metadata !22195, metadata !DIExpression()), !dbg !22196
  call void @llvm.dbg.declare(metadata [8 x i8]* %26, metadata !22197, metadata !DIExpression()), !dbg !22198
  call void @llvm.dbg.declare(metadata i32* %27, metadata !22199, metadata !DIExpression()), !dbg !22200
  call void @llvm.dbg.declare(metadata i64* %28, metadata !22201, metadata !DIExpression()), !dbg !22202
  call void @llvm.dbg.declare(metadata i64* %29, metadata !22203, metadata !DIExpression()), !dbg !22204
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %30, metadata !22205, metadata !DIExpression()), !dbg !22206
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t* %31, metadata !22207, metadata !DIExpression()), !dbg !22208
  call void @llvm.dbg.declare(metadata [1024 x i8]* %32, metadata !22209, metadata !DIExpression()), !dbg !22210
  %33 = load i32, i32* %15, align 4, !dbg !22211
  %34 = icmp eq i32 %33, 1, !dbg !22213
  br i1 %34, label %35, label %41, !dbg !22214

35:                                               ; preds = %10
  %36 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !22215
  %37 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %36, i32 0, i32 15, !dbg !22216
  %38 = load i32, i32* %37, align 8, !dbg !22216
  %39 = icmp ne i32 %38, 1, !dbg !22217
  br i1 %39, label %40, label %41, !dbg !22218

40:                                               ; preds = %35
  store i32 -16512, i32* %11, align 4, !dbg !22219
  br label %237, !dbg !22219

41:                                               ; preds = %35, %10
  %42 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !22220
  %43 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %42, i32 0, i32 1, !dbg !22221
  %44 = load i64, i64* %43, align 8, !dbg !22221
  store i64 %44, i64* %23, align 8, !dbg !22222
  %45 = load i64, i64* %23, align 8, !dbg !22223
  %46 = icmp ult i64 %45, 16, !dbg !22225
  br i1 %46, label %50, label %47, !dbg !22226

47:                                               ; preds = %41
  %48 = load i64, i64* %23, align 8, !dbg !22227
  %49 = icmp ugt i64 %48, 1024, !dbg !22228
  br i1 %49, label %50, label %51, !dbg !22229

50:                                               ; preds = %47, %41
  store i32 -16512, i32* %11, align 4, !dbg !22230
  br label %237, !dbg !22230

51:                                               ; preds = %47
  %52 = load i32, i32* %15, align 4, !dbg !22231
  %53 = icmp eq i32 %52, 0, !dbg !22232
  br i1 %53, label %54, label %59, !dbg !22233

54:                                               ; preds = %51
  %55 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !22234
  %56 = load i8*, i8** %21, align 8, !dbg !22235
  %57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22236
  %58 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %55, i8* %56, i8* %57), !dbg !22237
  br label %66, !dbg !22233

59:                                               ; preds = %51
  %60 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !22238
  %61 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %13, align 8, !dbg !22239
  %62 = load i8*, i8** %14, align 8, !dbg !22240
  %63 = load i8*, i8** %21, align 8, !dbg !22241
  %64 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22242
  %65 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %60, i32 (i8*, i8*, i64)* %61, i8* %62, i8* %63, i8* %64), !dbg !22243
  br label %66, !dbg !22233

66:                                               ; preds = %59, %54
  %67 = phi i32 [ %58, %54 ], [ %65, %59 ], !dbg !22233
  store i32 %67, i32* %22, align 4, !dbg !22244
  %68 = load i32, i32* %22, align 4, !dbg !22245
  %69 = icmp ne i32 %68, 0, !dbg !22247
  br i1 %69, label %70, label %72, !dbg !22248

70:                                               ; preds = %66
  %71 = load i32, i32* %22, align 4, !dbg !22249
  store i32 %71, i32* %11, align 4, !dbg !22250
  br label %237, !dbg !22250

72:                                               ; preds = %66
  %73 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22251
  store i8* %73, i8** %24, align 8, !dbg !22252
  %74 = load i64, i64* %23, align 8, !dbg !22253
  %75 = sub i64 %74, 1, !dbg !22255
  %76 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 %75, !dbg !22256
  %77 = load i8, i8* %76, align 1, !dbg !22256
  %78 = zext i8 %77 to i32, !dbg !22256
  %79 = icmp ne i32 %78, 188, !dbg !22257
  br i1 %79, label %80, label %81, !dbg !22258

80:                                               ; preds = %72
  store i32 -16640, i32* %11, align 4, !dbg !22259
  br label %237, !dbg !22259

81:                                               ; preds = %72
  %82 = load i32, i32* %16, align 4, !dbg !22260
  %83 = icmp ne i32 %82, 0, !dbg !22262
  br i1 %83, label %84, label %94, !dbg !22263

84:                                               ; preds = %81
  %85 = load i32, i32* %16, align 4, !dbg !22264
  %86 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %85), !dbg !22266
  store %struct.mbedtls_md_info_t* %86, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22267
  %87 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22268
  %88 = icmp eq %struct.mbedtls_md_info_t* %87, null, !dbg !22270
  br i1 %88, label %89, label %90, !dbg !22271

89:                                               ; preds = %84
  store i32 -16512, i32* %11, align 4, !dbg !22272
  br label %237, !dbg !22272

90:                                               ; preds = %84
  %91 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22273
  %92 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %91), !dbg !22274
  %93 = zext i8 %92 to i32, !dbg !22274
  store i32 %93, i32* %17, align 4, !dbg !22275
  br label %94, !dbg !22276

94:                                               ; preds = %90, %81
  %95 = load i32, i32* %19, align 4, !dbg !22277
  %96 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %95), !dbg !22278
  store %struct.mbedtls_md_info_t* %96, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22279
  %97 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22280
  %98 = icmp eq %struct.mbedtls_md_info_t* %97, null, !dbg !22282
  br i1 %98, label %99, label %100, !dbg !22283

99:                                               ; preds = %94
  store i32 -16512, i32* %11, align 4, !dbg !22284
  br label %237, !dbg !22284

100:                                              ; preds = %94
  %101 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22285
  %102 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %101), !dbg !22286
  %103 = zext i8 %102 to i32, !dbg !22286
  store i32 %103, i32* %27, align 4, !dbg !22287
  %104 = load i64, i64* %23, align 8, !dbg !22288
  %105 = load i32, i32* %27, align 4, !dbg !22289
  %106 = zext i32 %105 to i64, !dbg !22289
  %107 = sub i64 %104, %106, !dbg !22290
  %108 = sub i64 %107, 1, !dbg !22291
  store i64 %108, i64* %28, align 8, !dbg !22292
  %109 = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 0, !dbg !22293
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 0, i64 8, i1 false), !dbg !22293
  %110 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %12, align 8, !dbg !22294
  %111 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %110, i32 0, i32 2, !dbg !22295
  %112 = call i64 @mbedtls_mpi_bitlen(%struct.mbedtls_mpi* %111), !dbg !22296
  %113 = sub i64 %112, 1, !dbg !22297
  store i64 %113, i64* %29, align 8, !dbg !22298
  %114 = load i64, i64* %29, align 8, !dbg !22299
  %115 = urem i64 %114, 8, !dbg !22301
  %116 = icmp eq i64 %115, 0, !dbg !22302
  br i1 %116, label %117, label %122, !dbg !22303

117:                                              ; preds = %100
  %118 = load i8*, i8** %24, align 8, !dbg !22304
  %119 = getelementptr inbounds i8, i8* %118, i32 1, !dbg !22304
  store i8* %119, i8** %24, align 8, !dbg !22304
  %120 = load i64, i64* %23, align 8, !dbg !22306
  %121 = sub i64 %120, 1, !dbg !22306
  store i64 %121, i64* %23, align 8, !dbg !22306
  br label %122, !dbg !22307

122:                                              ; preds = %117, %100
  %123 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22308
  %124 = load i8, i8* %123, align 16, !dbg !22308
  %125 = zext i8 %124 to i32, !dbg !22308
  %126 = load i64, i64* %23, align 8, !dbg !22310
  %127 = mul i64 %126, 8, !dbg !22311
  %128 = sub i64 8, %127, !dbg !22312
  %129 = load i64, i64* %29, align 8, !dbg !22313
  %130 = add i64 %128, %129, !dbg !22314
  %131 = trunc i64 %130 to i32, !dbg !22315
  %132 = ashr i32 %125, %131, !dbg !22315
  %133 = icmp ne i32 %132, 0, !dbg !22315
  br i1 %133, label %134, label %135, !dbg !22316

134:                                              ; preds = %122
  store i32 -16512, i32* %11, align 4, !dbg !22317
  br label %237, !dbg !22317

135:                                              ; preds = %122
  call void @mbedtls_md_init(%struct.mbedtls_md_context_t* %31), !dbg !22318
  %136 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %30, align 8, !dbg !22319
  %137 = call i32 @mbedtls_md_setup(%struct.mbedtls_md_context_t* %31, %struct.mbedtls_md_info_t* %136, i32 0), !dbg !22321
  store i32 %137, i32* %22, align 4, !dbg !22322
  %138 = icmp ne i32 %137, 0, !dbg !22323
  br i1 %138, label %139, label %141, !dbg !22324

139:                                              ; preds = %135
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %31), !dbg !22325
  %140 = load i32, i32* %22, align 4, !dbg !22327
  store i32 %140, i32* %11, align 4, !dbg !22328
  br label %237, !dbg !22328

141:                                              ; preds = %135
  %142 = load i8*, i8** %24, align 8, !dbg !22329
  %143 = load i64, i64* %23, align 8, !dbg !22330
  %144 = load i32, i32* %27, align 4, !dbg !22331
  %145 = zext i32 %144 to i64, !dbg !22331
  %146 = sub i64 %143, %145, !dbg !22332
  %147 = sub i64 %146, 1, !dbg !22333
  %148 = load i8*, i8** %24, align 8, !dbg !22334
  %149 = load i64, i64* %23, align 8, !dbg !22335
  %150 = getelementptr inbounds i8, i8* %148, i64 %149, !dbg !22336
  %151 = load i32, i32* %27, align 4, !dbg !22337
  %152 = zext i32 %151 to i64, !dbg !22338
  %153 = sub i64 0, %152, !dbg !22338
  %154 = getelementptr inbounds i8, i8* %150, i64 %153, !dbg !22338
  %155 = getelementptr inbounds i8, i8* %154, i64 -1, !dbg !22339
  %156 = load i32, i32* %27, align 4, !dbg !22340
  %157 = zext i32 %156 to i64, !dbg !22340
  call void @mgf_mask(i8* %142, i64 %147, i8* %155, i64 %157, %struct.mbedtls_md_context_t* %31), !dbg !22341
  %158 = load i64, i64* %23, align 8, !dbg !22342
  %159 = mul i64 %158, 8, !dbg !22343
  %160 = load i64, i64* %29, align 8, !dbg !22344
  %161 = sub i64 %159, %160, !dbg !22345
  %162 = trunc i64 %161 to i32, !dbg !22346
  %163 = ashr i32 255, %162, !dbg !22346
  %164 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22347
  %165 = load i8, i8* %164, align 16, !dbg !22348
  %166 = zext i8 %165 to i32, !dbg !22348
  %167 = and i32 %166, %163, !dbg !22348
  %168 = trunc i32 %167 to i8, !dbg !22348
  store i8 %168, i8* %164, align 16, !dbg !22348
  br label %169, !dbg !22349

169:                                              ; preds = %182, %141
  %170 = load i8*, i8** %24, align 8, !dbg !22350
  %171 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22351
  %172 = load i64, i64* %23, align 8, !dbg !22352
  %173 = getelementptr inbounds i8, i8* %171, i64 %172, !dbg !22353
  %174 = icmp ult i8* %170, %173, !dbg !22354
  br i1 %174, label %175, label %180, !dbg !22355

175:                                              ; preds = %169
  %176 = load i8*, i8** %24, align 8, !dbg !22356
  %177 = load i8, i8* %176, align 1, !dbg !22357
  %178 = zext i8 %177 to i32, !dbg !22357
  %179 = icmp eq i32 %178, 0, !dbg !22358
  br label %180

180:                                              ; preds = %175, %169
  %181 = phi i1 [ false, %169 ], [ %179, %175 ], !dbg !22359
  br i1 %181, label %182, label %185, !dbg !22349

182:                                              ; preds = %180
  %183 = load i8*, i8** %24, align 8, !dbg !22360
  %184 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !22360
  store i8* %184, i8** %24, align 8, !dbg !22360
  br label %169, !dbg !22349, !llvm.loop !22361

185:                                              ; preds = %180
  %186 = load i8*, i8** %24, align 8, !dbg !22362
  %187 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22364
  %188 = load i64, i64* %23, align 8, !dbg !22365
  %189 = getelementptr inbounds i8, i8* %187, i64 %188, !dbg !22366
  %190 = icmp eq i8* %186, %189, !dbg !22367
  br i1 %190, label %197, label %191, !dbg !22368

191:                                              ; preds = %185
  %192 = load i8*, i8** %24, align 8, !dbg !22369
  %193 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !22369
  store i8* %193, i8** %24, align 8, !dbg !22369
  %194 = load i8, i8* %192, align 1, !dbg !22370
  %195 = zext i8 %194 to i32, !dbg !22370
  %196 = icmp ne i32 %195, 1, !dbg !22371
  br i1 %196, label %197, label %198, !dbg !22372

197:                                              ; preds = %191, %185
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %31), !dbg !22373
  store i32 -16640, i32* %11, align 4, !dbg !22375
  br label %237, !dbg !22375

198:                                              ; preds = %191
  %199 = load i8*, i8** %24, align 8, !dbg !22376
  %200 = getelementptr inbounds [1024 x i8], [1024 x i8]* %32, i64 0, i64 0, !dbg !22377
  %201 = ptrtoint i8* %199 to i64, !dbg !22378
  %202 = ptrtoint i8* %200 to i64, !dbg !22378
  %203 = sub i64 %201, %202, !dbg !22378
  %204 = load i64, i64* %28, align 8, !dbg !22379
  %205 = sub i64 %204, %203, !dbg !22379
  store i64 %205, i64* %28, align 8, !dbg !22379
  %206 = load i32, i32* %20, align 4, !dbg !22380
  %207 = icmp ne i32 %206, -1, !dbg !22382
  br i1 %207, label %208, label %214, !dbg !22383

208:                                              ; preds = %198
  %209 = load i64, i64* %28, align 8, !dbg !22384
  %210 = load i32, i32* %20, align 4, !dbg !22385
  %211 = sext i32 %210 to i64, !dbg !22386
  %212 = icmp ne i64 %209, %211, !dbg !22387
  br i1 %212, label %213, label %214, !dbg !22388

213:                                              ; preds = %208
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %31), !dbg !22389
  store i32 -16640, i32* %11, align 4, !dbg !22391
  br label %237, !dbg !22391

214:                                              ; preds = %208, %198
  %215 = call i32 @mbedtls_md_starts(%struct.mbedtls_md_context_t* %31), !dbg !22392
  %216 = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 0, !dbg !22393
  %217 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %31, i8* %216, i64 8), !dbg !22394
  %218 = load i8*, i8** %18, align 8, !dbg !22395
  %219 = load i32, i32* %17, align 4, !dbg !22396
  %220 = zext i32 %219 to i64, !dbg !22396
  %221 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %31, i8* %218, i64 %220), !dbg !22397
  %222 = load i8*, i8** %24, align 8, !dbg !22398
  %223 = load i64, i64* %28, align 8, !dbg !22399
  %224 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %31, i8* %222, i64 %223), !dbg !22400
  %225 = getelementptr inbounds [64 x i8], [64 x i8]* %25, i64 0, i64 0, !dbg !22401
  %226 = call i32 @mbedtls_md_finish(%struct.mbedtls_md_context_t* %31, i8* %225), !dbg !22402
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %31), !dbg !22403
  %227 = load i8*, i8** %24, align 8, !dbg !22404
  %228 = load i64, i64* %28, align 8, !dbg !22406
  %229 = getelementptr inbounds i8, i8* %227, i64 %228, !dbg !22407
  %230 = getelementptr inbounds [64 x i8], [64 x i8]* %25, i64 0, i64 0, !dbg !22408
  %231 = load i32, i32* %27, align 4, !dbg !22409
  %232 = zext i32 %231 to i64, !dbg !22409
  %233 = call i32 @memcmp(i8* %229, i8* %230, i64 %232), !dbg !22410
  %234 = icmp eq i32 %233, 0, !dbg !22411
  br i1 %234, label %235, label %236, !dbg !22412

235:                                              ; preds = %214
  store i32 0, i32* %11, align 4, !dbg !22413
  br label %237, !dbg !22413

236:                                              ; preds = %214
  store i32 -17280, i32* %11, align 4, !dbg !22414
  br label %237, !dbg !22414

237:                                              ; preds = %236, %235, %213, %197, %139, %134, %99, %89, %80, %70, %50, %40
  %238 = load i32, i32* %11, align 4, !dbg !22415
  ret i32 %238, !dbg !22415
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsassa_pss_verify(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7) #0 !dbg !22416 {
  %9 = alloca %struct.mbedtls_rsa_context*, align 8
  %10 = alloca i32 (i8*, i8*, i64)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %9, metadata !22419, metadata !DIExpression()), !dbg !22420
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %10, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %10, metadata !22421, metadata !DIExpression()), !dbg !22422
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !22423, metadata !DIExpression()), !dbg !22424
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !22425, metadata !DIExpression()), !dbg !22426
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !22427, metadata !DIExpression()), !dbg !22428
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !22429, metadata !DIExpression()), !dbg !22430
  store i8* %6, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !22431, metadata !DIExpression()), !dbg !22432
  store i8* %7, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !22433, metadata !DIExpression()), !dbg !22434
  call void @llvm.dbg.declare(metadata i32* %17, metadata !22435, metadata !DIExpression()), !dbg !22436
  %18 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !22437
  %19 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %18, i32 0, i32 16, !dbg !22438
  %20 = load i32, i32* %19, align 4, !dbg !22438
  %21 = icmp ne i32 %20, 0, !dbg !22439
  br i1 %21, label %22, label %26, !dbg !22440

22:                                               ; preds = %8
  %23 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !22441
  %24 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %23, i32 0, i32 16, !dbg !22442
  %25 = load i32, i32* %24, align 4, !dbg !22442
  br label %28, !dbg !22440

26:                                               ; preds = %8
  %27 = load i32, i32* %13, align 4, !dbg !22443
  br label %28, !dbg !22440

28:                                               ; preds = %26, %22
  %29 = phi i32 [ %25, %22 ], [ %27, %26 ], !dbg !22440
  store i32 %29, i32* %17, align 4, !dbg !22436
  %30 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %9, align 8, !dbg !22444
  %31 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %10, align 8, !dbg !22445
  %32 = load i8*, i8** %11, align 8, !dbg !22446
  %33 = load i32, i32* %12, align 4, !dbg !22447
  %34 = load i32, i32* %13, align 4, !dbg !22448
  %35 = load i32, i32* %14, align 4, !dbg !22449
  %36 = load i8*, i8** %15, align 8, !dbg !22450
  %37 = load i32, i32* %17, align 4, !dbg !22451
  %38 = load i8*, i8** %16, align 8, !dbg !22452
  %39 = call i32 @mbedtls_rsa_rsassa_pss_verify_ext(%struct.mbedtls_rsa_context* %30, i32 (i8*, i8*, i64)* %31, i8* %32, i32 %33, i32 %34, i32 %35, i8* %36, i32 %37, i32 -1, i8* %38), !dbg !22453
  ret i32 %39, !dbg !22454
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_rsassa_pkcs1_v15_verify(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7) #0 !dbg !22455 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct.mbedtls_md_info_t*, align 8
  %27 = alloca %struct.mbedtls_asn1_buf, align 8
  %28 = alloca [1024 x i8], align 16
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !22456, metadata !DIExpression()), !dbg !22457
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !22458, metadata !DIExpression()), !dbg !22459
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !22460, metadata !DIExpression()), !dbg !22461
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !22462, metadata !DIExpression()), !dbg !22463
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !22464, metadata !DIExpression()), !dbg !22465
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !22466, metadata !DIExpression()), !dbg !22467
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !22468, metadata !DIExpression()), !dbg !22469
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !22470, metadata !DIExpression()), !dbg !22471
  call void @llvm.dbg.declare(metadata i32* %18, metadata !22472, metadata !DIExpression()), !dbg !22473
  call void @llvm.dbg.declare(metadata i64* %19, metadata !22474, metadata !DIExpression()), !dbg !22475
  call void @llvm.dbg.declare(metadata i64* %20, metadata !22476, metadata !DIExpression()), !dbg !22477
  call void @llvm.dbg.declare(metadata i64* %21, metadata !22478, metadata !DIExpression()), !dbg !22479
  call void @llvm.dbg.declare(metadata i8** %22, metadata !22480, metadata !DIExpression()), !dbg !22481
  call void @llvm.dbg.declare(metadata i8** %23, metadata !22482, metadata !DIExpression()), !dbg !22483
  call void @llvm.dbg.declare(metadata i8** %24, metadata !22484, metadata !DIExpression()), !dbg !22485
  call void @llvm.dbg.declare(metadata i32* %25, metadata !22486, metadata !DIExpression()), !dbg !22487
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %26, metadata !22488, metadata !DIExpression()), !dbg !22489
  call void @llvm.dbg.declare(metadata %struct.mbedtls_asn1_buf* %27, metadata !22490, metadata !DIExpression()), !dbg !22497
  call void @llvm.dbg.declare(metadata [1024 x i8]* %28, metadata !22498, metadata !DIExpression()), !dbg !22499
  %29 = load i32, i32* %13, align 4, !dbg !22500
  %30 = icmp eq i32 %29, 1, !dbg !22502
  br i1 %30, label %31, label %37, !dbg !22503

31:                                               ; preds = %8
  %32 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22504
  %33 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %32, i32 0, i32 15, !dbg !22505
  %34 = load i32, i32* %33, align 8, !dbg !22505
  %35 = icmp ne i32 %34, 0, !dbg !22506
  br i1 %35, label %36, label %37, !dbg !22507

36:                                               ; preds = %31
  store i32 -16512, i32* %9, align 4, !dbg !22508
  br label %262, !dbg !22508

37:                                               ; preds = %31, %8
  %38 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22509
  %39 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %38, i32 0, i32 1, !dbg !22510
  %40 = load i64, i64* %39, align 8, !dbg !22510
  store i64 %40, i64* %20, align 8, !dbg !22511
  %41 = load i64, i64* %20, align 8, !dbg !22512
  %42 = icmp ult i64 %41, 16, !dbg !22514
  br i1 %42, label %46, label %43, !dbg !22515

43:                                               ; preds = %37
  %44 = load i64, i64* %20, align 8, !dbg !22516
  %45 = icmp ugt i64 %44, 1024, !dbg !22517
  br i1 %45, label %46, label %47, !dbg !22518

46:                                               ; preds = %43, %37
  store i32 -16512, i32* %9, align 4, !dbg !22519
  br label %262, !dbg !22519

47:                                               ; preds = %43
  %48 = load i32, i32* %13, align 4, !dbg !22520
  %49 = icmp eq i32 %48, 0, !dbg !22521
  br i1 %49, label %50, label %55, !dbg !22522

50:                                               ; preds = %47
  %51 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22523
  %52 = load i8*, i8** %17, align 8, !dbg !22524
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0, !dbg !22525
  %54 = call i32 @mbedtls_rsa_public(%struct.mbedtls_rsa_context* %51, i8* %52, i8* %53), !dbg !22526
  br label %62, !dbg !22522

55:                                               ; preds = %47
  %56 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22527
  %57 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !22528
  %58 = load i8*, i8** %12, align 8, !dbg !22529
  %59 = load i8*, i8** %17, align 8, !dbg !22530
  %60 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0, !dbg !22531
  %61 = call i32 @mbedtls_rsa_private(%struct.mbedtls_rsa_context* %56, i32 (i8*, i8*, i64)* %57, i8* %58, i8* %59, i8* %60), !dbg !22532
  br label %62, !dbg !22522

62:                                               ; preds = %55, %50
  %63 = phi i32 [ %54, %50 ], [ %61, %55 ], !dbg !22522
  store i32 %63, i32* %18, align 4, !dbg !22533
  %64 = load i32, i32* %18, align 4, !dbg !22534
  %65 = icmp ne i32 %64, 0, !dbg !22536
  br i1 %65, label %66, label %68, !dbg !22537

66:                                               ; preds = %62
  %67 = load i32, i32* %18, align 4, !dbg !22538
  store i32 %67, i32* %9, align 4, !dbg !22539
  br label %262, !dbg !22539

68:                                               ; preds = %62
  %69 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0, !dbg !22540
  store i8* %69, i8** %22, align 8, !dbg !22541
  %70 = load i8*, i8** %22, align 8, !dbg !22542
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !22542
  store i8* %71, i8** %22, align 8, !dbg !22542
  %72 = load i8, i8* %70, align 1, !dbg !22544
  %73 = zext i8 %72 to i32, !dbg !22544
  %74 = icmp ne i32 %73, 0, !dbg !22545
  br i1 %74, label %81, label %75, !dbg !22546

75:                                               ; preds = %68
  %76 = load i8*, i8** %22, align 8, !dbg !22547
  %77 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !22547
  store i8* %77, i8** %22, align 8, !dbg !22547
  %78 = load i8, i8* %76, align 1, !dbg !22548
  %79 = zext i8 %78 to i32, !dbg !22548
  %80 = icmp ne i32 %79, 1, !dbg !22549
  br i1 %80, label %81, label %82, !dbg !22550

81:                                               ; preds = %75, %68
  store i32 -16640, i32* %9, align 4, !dbg !22551
  br label %262, !dbg !22551

82:                                               ; preds = %75
  br label %83, !dbg !22552

83:                                               ; preds = %101, %82
  %84 = load i8*, i8** %22, align 8, !dbg !22553
  %85 = load i8, i8* %84, align 1, !dbg !22554
  %86 = zext i8 %85 to i32, !dbg !22554
  %87 = icmp ne i32 %86, 0, !dbg !22555
  br i1 %87, label %88, label %104, !dbg !22552

88:                                               ; preds = %83
  %89 = load i8*, i8** %22, align 8, !dbg !22556
  %90 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0, !dbg !22559
  %91 = load i64, i64* %20, align 8, !dbg !22560
  %92 = getelementptr inbounds i8, i8* %90, i64 %91, !dbg !22561
  %93 = getelementptr inbounds i8, i8* %92, i64 -1, !dbg !22562
  %94 = icmp uge i8* %89, %93, !dbg !22563
  br i1 %94, label %100, label %95, !dbg !22564

95:                                               ; preds = %88
  %96 = load i8*, i8** %22, align 8, !dbg !22565
  %97 = load i8, i8* %96, align 1, !dbg !22566
  %98 = zext i8 %97 to i32, !dbg !22566
  %99 = icmp ne i32 %98, 255, !dbg !22567
  br i1 %99, label %100, label %101, !dbg !22568

100:                                              ; preds = %95, %88
  store i32 -16640, i32* %9, align 4, !dbg !22569
  br label %262, !dbg !22569

101:                                              ; preds = %95
  %102 = load i8*, i8** %22, align 8, !dbg !22570
  %103 = getelementptr inbounds i8, i8* %102, i32 1, !dbg !22570
  store i8* %103, i8** %22, align 8, !dbg !22570
  br label %83, !dbg !22552, !llvm.loop !22571

104:                                              ; preds = %83
  %105 = load i8*, i8** %22, align 8, !dbg !22573
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !22573
  store i8* %106, i8** %22, align 8, !dbg !22573
  %107 = load i8*, i8** %22, align 8, !dbg !22574
  %108 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0, !dbg !22576
  %109 = ptrtoint i8* %107 to i64, !dbg !22577
  %110 = ptrtoint i8* %108 to i64, !dbg !22577
  %111 = sub i64 %109, %110, !dbg !22577
  %112 = icmp slt i64 %111, 11, !dbg !22578
  br i1 %112, label %113, label %114, !dbg !22579

113:                                              ; preds = %104
  store i32 -16640, i32* %9, align 4, !dbg !22580
  br label %262, !dbg !22580

114:                                              ; preds = %104
  %115 = load i64, i64* %20, align 8, !dbg !22581
  %116 = load i8*, i8** %22, align 8, !dbg !22582
  %117 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0, !dbg !22583
  %118 = ptrtoint i8* %116 to i64, !dbg !22584
  %119 = ptrtoint i8* %117 to i64, !dbg !22584
  %120 = sub i64 %118, %119, !dbg !22584
  %121 = sub i64 %115, %120, !dbg !22585
  store i64 %121, i64* %19, align 8, !dbg !22586
  %122 = load i64, i64* %19, align 8, !dbg !22587
  %123 = load i32, i32* %15, align 4, !dbg !22589
  %124 = zext i32 %123 to i64, !dbg !22589
  %125 = icmp eq i64 %122, %124, !dbg !22590
  br i1 %125, label %126, label %138, !dbg !22591

126:                                              ; preds = %114
  %127 = load i32, i32* %14, align 4, !dbg !22592
  %128 = icmp eq i32 %127, 0, !dbg !22593
  br i1 %128, label %129, label %138, !dbg !22594

129:                                              ; preds = %126
  %130 = load i8*, i8** %22, align 8, !dbg !22595
  %131 = load i8*, i8** %16, align 8, !dbg !22598
  %132 = load i32, i32* %15, align 4, !dbg !22599
  %133 = zext i32 %132 to i64, !dbg !22599
  %134 = call i32 @memcmp(i8* %130, i8* %131, i64 %133), !dbg !22600
  %135 = icmp eq i32 %134, 0, !dbg !22601
  br i1 %135, label %136, label %137, !dbg !22602

136:                                              ; preds = %129
  store i32 0, i32* %9, align 4, !dbg !22603
  br label %262, !dbg !22603

137:                                              ; preds = %129
  store i32 -17280, i32* %9, align 4, !dbg !22604
  br label %262, !dbg !22604

138:                                              ; preds = %126, %114
  %139 = load i32, i32* %14, align 4, !dbg !22605
  %140 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %139), !dbg !22606
  store %struct.mbedtls_md_info_t* %140, %struct.mbedtls_md_info_t** %26, align 8, !dbg !22607
  %141 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !22608
  %142 = icmp eq %struct.mbedtls_md_info_t* %141, null, !dbg !22610
  br i1 %142, label %143, label %144, !dbg !22611

143:                                              ; preds = %138
  store i32 -16512, i32* %9, align 4, !dbg !22612
  br label %262, !dbg !22612

144:                                              ; preds = %138
  %145 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %26, align 8, !dbg !22613
  %146 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %145), !dbg !22614
  %147 = zext i8 %146 to i32, !dbg !22614
  store i32 %147, i32* %15, align 4, !dbg !22615
  %148 = load i8*, i8** %22, align 8, !dbg !22616
  %149 = load i64, i64* %19, align 8, !dbg !22617
  %150 = getelementptr inbounds i8, i8* %148, i64 %149, !dbg !22618
  store i8* %150, i8** %24, align 8, !dbg !22619
  %151 = load i8*, i8** %22, align 8, !dbg !22620
  store i8* %151, i8** %23, align 8, !dbg !22621
  %152 = load i8*, i8** %24, align 8, !dbg !22622
  %153 = call i32 @mbedtls_asn1_get_tag(i8** %22, i8* %152, i64* %21, i32 48), !dbg !22624
  store i32 %153, i32* %18, align 4, !dbg !22625
  %154 = icmp ne i32 %153, 0, !dbg !22626
  br i1 %154, label %155, label %156, !dbg !22627

155:                                              ; preds = %144
  store i32 -17280, i32* %9, align 4, !dbg !22628
  br label %262, !dbg !22628

156:                                              ; preds = %144
  %157 = load i8*, i8** %22, align 8, !dbg !22629
  %158 = load i8*, i8** %23, align 8, !dbg !22631
  %159 = getelementptr inbounds i8, i8* %158, i64 2, !dbg !22632
  %160 = icmp ne i8* %157, %159, !dbg !22633
  br i1 %160, label %166, label %161, !dbg !22634

161:                                              ; preds = %156
  %162 = load i64, i64* %21, align 8, !dbg !22635
  %163 = add i64 %162, 2, !dbg !22636
  %164 = load i64, i64* %19, align 8, !dbg !22637
  %165 = icmp ne i64 %163, %164, !dbg !22638
  br i1 %165, label %166, label %167, !dbg !22639

166:                                              ; preds = %161, %156
  store i32 -17280, i32* %9, align 4, !dbg !22640
  br label %262, !dbg !22640

167:                                              ; preds = %161
  %168 = load i8*, i8** %22, align 8, !dbg !22641
  store i8* %168, i8** %23, align 8, !dbg !22642
  %169 = load i8*, i8** %24, align 8, !dbg !22643
  %170 = call i32 @mbedtls_asn1_get_tag(i8** %22, i8* %169, i64* %21, i32 48), !dbg !22645
  store i32 %170, i32* %18, align 4, !dbg !22646
  %171 = icmp ne i32 %170, 0, !dbg !22647
  br i1 %171, label %172, label %173, !dbg !22648

172:                                              ; preds = %167
  store i32 -17280, i32* %9, align 4, !dbg !22649
  br label %262, !dbg !22649

173:                                              ; preds = %167
  %174 = load i8*, i8** %22, align 8, !dbg !22650
  %175 = load i8*, i8** %23, align 8, !dbg !22652
  %176 = getelementptr inbounds i8, i8* %175, i64 2, !dbg !22653
  %177 = icmp ne i8* %174, %176, !dbg !22654
  br i1 %177, label %186, label %178, !dbg !22655

178:                                              ; preds = %173
  %179 = load i64, i64* %21, align 8, !dbg !22656
  %180 = add i64 %179, 6, !dbg !22657
  %181 = load i32, i32* %15, align 4, !dbg !22658
  %182 = zext i32 %181 to i64, !dbg !22658
  %183 = add i64 %180, %182, !dbg !22659
  %184 = load i64, i64* %19, align 8, !dbg !22660
  %185 = icmp ne i64 %183, %184, !dbg !22661
  br i1 %185, label %186, label %187, !dbg !22662

186:                                              ; preds = %178, %173
  store i32 -17280, i32* %9, align 4, !dbg !22663
  br label %262, !dbg !22663

187:                                              ; preds = %178
  %188 = load i8*, i8** %22, align 8, !dbg !22664
  store i8* %188, i8** %23, align 8, !dbg !22665
  %189 = load i8*, i8** %24, align 8, !dbg !22666
  %190 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %27, i32 0, i32 1, !dbg !22668
  %191 = call i32 @mbedtls_asn1_get_tag(i8** %22, i8* %189, i64* %190, i32 6), !dbg !22669
  store i32 %191, i32* %18, align 4, !dbg !22670
  %192 = icmp ne i32 %191, 0, !dbg !22671
  br i1 %192, label %193, label %194, !dbg !22672

193:                                              ; preds = %187
  store i32 -17280, i32* %9, align 4, !dbg !22673
  br label %262, !dbg !22673

194:                                              ; preds = %187
  %195 = load i8*, i8** %22, align 8, !dbg !22674
  %196 = load i8*, i8** %23, align 8, !dbg !22676
  %197 = getelementptr inbounds i8, i8* %196, i64 2, !dbg !22677
  %198 = icmp ne i8* %195, %197, !dbg !22678
  br i1 %198, label %199, label %200, !dbg !22679

199:                                              ; preds = %194
  store i32 -17280, i32* %9, align 4, !dbg !22680
  br label %262, !dbg !22680

200:                                              ; preds = %194
  %201 = load i8*, i8** %22, align 8, !dbg !22681
  %202 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %27, i32 0, i32 2, !dbg !22682
  store i8* %201, i8** %202, align 8, !dbg !22683
  %203 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %27, i32 0, i32 1, !dbg !22684
  %204 = load i64, i64* %203, align 8, !dbg !22684
  %205 = load i8*, i8** %22, align 8, !dbg !22685
  %206 = getelementptr inbounds i8, i8* %205, i64 %204, !dbg !22685
  store i8* %206, i8** %22, align 8, !dbg !22685
  %207 = call i32 @mbedtls_oid_get_md_alg(%struct.mbedtls_asn1_buf* %27, i32* %25), !dbg !22686
  %208 = icmp ne i32 %207, 0, !dbg !22688
  br i1 %208, label %209, label %210, !dbg !22689

209:                                              ; preds = %200
  store i32 -17280, i32* %9, align 4, !dbg !22690
  br label %262, !dbg !22690

210:                                              ; preds = %200
  %211 = load i32, i32* %14, align 4, !dbg !22691
  %212 = load i32, i32* %25, align 4, !dbg !22693
  %213 = icmp ne i32 %211, %212, !dbg !22694
  br i1 %213, label %214, label %215, !dbg !22695

214:                                              ; preds = %210
  store i32 -17280, i32* %9, align 4, !dbg !22696
  br label %262, !dbg !22696

215:                                              ; preds = %210
  %216 = load i8*, i8** %22, align 8, !dbg !22697
  store i8* %216, i8** %23, align 8, !dbg !22698
  %217 = load i8*, i8** %24, align 8, !dbg !22699
  %218 = call i32 @mbedtls_asn1_get_tag(i8** %22, i8* %217, i64* %21, i32 5), !dbg !22701
  store i32 %218, i32* %18, align 4, !dbg !22702
  %219 = icmp ne i32 %218, 0, !dbg !22703
  br i1 %219, label %220, label %221, !dbg !22704

220:                                              ; preds = %215
  store i32 -17280, i32* %9, align 4, !dbg !22705
  br label %262, !dbg !22705

221:                                              ; preds = %215
  %222 = load i8*, i8** %22, align 8, !dbg !22706
  %223 = load i8*, i8** %23, align 8, !dbg !22708
  %224 = getelementptr inbounds i8, i8* %223, i64 2, !dbg !22709
  %225 = icmp ne i8* %222, %224, !dbg !22710
  br i1 %225, label %226, label %227, !dbg !22711

226:                                              ; preds = %221
  store i32 -17280, i32* %9, align 4, !dbg !22712
  br label %262, !dbg !22712

227:                                              ; preds = %221
  %228 = load i8*, i8** %22, align 8, !dbg !22713
  store i8* %228, i8** %23, align 8, !dbg !22714
  %229 = load i8*, i8** %24, align 8, !dbg !22715
  %230 = call i32 @mbedtls_asn1_get_tag(i8** %22, i8* %229, i64* %21, i32 4), !dbg !22717
  store i32 %230, i32* %18, align 4, !dbg !22718
  %231 = icmp ne i32 %230, 0, !dbg !22719
  br i1 %231, label %232, label %233, !dbg !22720

232:                                              ; preds = %227
  store i32 -17280, i32* %9, align 4, !dbg !22721
  br label %262, !dbg !22721

233:                                              ; preds = %227
  %234 = load i8*, i8** %22, align 8, !dbg !22722
  %235 = load i8*, i8** %23, align 8, !dbg !22724
  %236 = getelementptr inbounds i8, i8* %235, i64 2, !dbg !22725
  %237 = icmp ne i8* %234, %236, !dbg !22726
  br i1 %237, label %243, label %238, !dbg !22727

238:                                              ; preds = %233
  %239 = load i64, i64* %21, align 8, !dbg !22728
  %240 = load i32, i32* %15, align 4, !dbg !22729
  %241 = zext i32 %240 to i64, !dbg !22729
  %242 = icmp ne i64 %239, %241, !dbg !22730
  br i1 %242, label %243, label %244, !dbg !22731

243:                                              ; preds = %238, %233
  store i32 -17280, i32* %9, align 4, !dbg !22732
  br label %262, !dbg !22732

244:                                              ; preds = %238
  %245 = load i8*, i8** %22, align 8, !dbg !22733
  %246 = load i8*, i8** %16, align 8, !dbg !22735
  %247 = load i32, i32* %15, align 4, !dbg !22736
  %248 = zext i32 %247 to i64, !dbg !22736
  %249 = call i32 @memcmp(i8* %245, i8* %246, i64 %248), !dbg !22737
  %250 = icmp ne i32 %249, 0, !dbg !22738
  br i1 %250, label %251, label %252, !dbg !22739

251:                                              ; preds = %244
  store i32 -17280, i32* %9, align 4, !dbg !22740
  br label %262, !dbg !22740

252:                                              ; preds = %244
  %253 = load i32, i32* %15, align 4, !dbg !22741
  %254 = load i8*, i8** %22, align 8, !dbg !22742
  %255 = zext i32 %253 to i64, !dbg !22742
  %256 = getelementptr inbounds i8, i8* %254, i64 %255, !dbg !22742
  store i8* %256, i8** %22, align 8, !dbg !22742
  %257 = load i8*, i8** %22, align 8, !dbg !22743
  %258 = load i8*, i8** %24, align 8, !dbg !22745
  %259 = icmp ne i8* %257, %258, !dbg !22746
  br i1 %259, label %260, label %261, !dbg !22747

260:                                              ; preds = %252
  store i32 -17280, i32* %9, align 4, !dbg !22748
  br label %262, !dbg !22748

261:                                              ; preds = %252
  store i32 0, i32* %9, align 4, !dbg !22749
  br label %262, !dbg !22749

262:                                              ; preds = %261, %260, %251, %243, %232, %226, %220, %214, %209, %199, %193, %186, %172, %166, %155, %143, %137, %136, %113, %100, %81, %66, %46, %36
  %263 = load i32, i32* %9, align 4, !dbg !22750
  ret i32 %263, !dbg !22750
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_pkcs1_verify(%struct.mbedtls_rsa_context* %0, i32 (i8*, i8*, i64)* %1, i8* %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7) #0 !dbg !22751 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mbedtls_rsa_context*, align 8
  %11 = alloca i32 (i8*, i8*, i64)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %10, metadata !22752, metadata !DIExpression()), !dbg !22753
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %11, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %11, metadata !22754, metadata !DIExpression()), !dbg !22755
  store i8* %2, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !22756, metadata !DIExpression()), !dbg !22757
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !22758, metadata !DIExpression()), !dbg !22759
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !22760, metadata !DIExpression()), !dbg !22761
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !22762, metadata !DIExpression()), !dbg !22763
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !22764, metadata !DIExpression()), !dbg !22765
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !22766, metadata !DIExpression()), !dbg !22767
  %18 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22768
  %19 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %18, i32 0, i32 15, !dbg !22769
  %20 = load i32, i32* %19, align 8, !dbg !22769
  switch i32 %20, label %41 [
    i32 0, label %21
    i32 1, label %31
  ], !dbg !22770

21:                                               ; preds = %8
  %22 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22771
  %23 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !22773
  %24 = load i8*, i8** %12, align 8, !dbg !22774
  %25 = load i32, i32* %13, align 4, !dbg !22775
  %26 = load i32, i32* %14, align 4, !dbg !22776
  %27 = load i32, i32* %15, align 4, !dbg !22777
  %28 = load i8*, i8** %16, align 8, !dbg !22778
  %29 = load i8*, i8** %17, align 8, !dbg !22779
  %30 = call i32 @mbedtls_rsa_rsassa_pkcs1_v15_verify(%struct.mbedtls_rsa_context* %22, i32 (i8*, i8*, i64)* %23, i8* %24, i32 %25, i32 %26, i32 %27, i8* %28, i8* %29), !dbg !22780
  store i32 %30, i32* %9, align 4, !dbg !22781
  br label %42, !dbg !22781

31:                                               ; preds = %8
  %32 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %10, align 8, !dbg !22782
  %33 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %11, align 8, !dbg !22783
  %34 = load i8*, i8** %12, align 8, !dbg !22784
  %35 = load i32, i32* %13, align 4, !dbg !22785
  %36 = load i32, i32* %14, align 4, !dbg !22786
  %37 = load i32, i32* %15, align 4, !dbg !22787
  %38 = load i8*, i8** %16, align 8, !dbg !22788
  %39 = load i8*, i8** %17, align 8, !dbg !22789
  %40 = call i32 @mbedtls_rsa_rsassa_pss_verify(%struct.mbedtls_rsa_context* %32, i32 (i8*, i8*, i64)* %33, i8* %34, i32 %35, i32 %36, i32 %37, i8* %38, i8* %39), !dbg !22790
  store i32 %40, i32* %9, align 4, !dbg !22791
  br label %42, !dbg !22791

41:                                               ; preds = %8
  store i32 -16640, i32* %9, align 4, !dbg !22792
  br label %42, !dbg !22792

42:                                               ; preds = %41, %31, %21
  %43 = load i32, i32* %9, align 4, !dbg !22793
  ret i32 %43, !dbg !22793
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_rsa_copy(%struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context* %1) #0 !dbg !22794 {
  %3 = alloca %struct.mbedtls_rsa_context*, align 8
  %4 = alloca %struct.mbedtls_rsa_context*, align 8
  %5 = alloca i32, align 4
  store %struct.mbedtls_rsa_context* %0, %struct.mbedtls_rsa_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %3, metadata !22797, metadata !DIExpression()), !dbg !22798
  store %struct.mbedtls_rsa_context* %1, %struct.mbedtls_rsa_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_rsa_context** %4, metadata !22799, metadata !DIExpression()), !dbg !22800
  call void @llvm.dbg.declare(metadata i32* %5, metadata !22801, metadata !DIExpression()), !dbg !22802
  %6 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22803
  %7 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %6, i32 0, i32 0, !dbg !22804
  %8 = load i32, i32* %7, align 8, !dbg !22804
  %9 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22805
  %10 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %9, i32 0, i32 0, !dbg !22806
  store i32 %8, i32* %10, align 8, !dbg !22807
  %11 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22808
  %12 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %11, i32 0, i32 1, !dbg !22809
  %13 = load i64, i64* %12, align 8, !dbg !22809
  %14 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22810
  %15 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %14, i32 0, i32 1, !dbg !22811
  store i64 %13, i64* %15, align 8, !dbg !22812
  br label %16, !dbg !22813

16:                                               ; preds = %2
  %17 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22814
  %18 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %17, i32 0, i32 2, !dbg !22814
  %19 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22814
  %20 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %19, i32 0, i32 2, !dbg !22814
  %21 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %18, %struct.mbedtls_mpi* %20), !dbg !22814
  store i32 %21, i32* %5, align 4, !dbg !22814
  %22 = icmp ne i32 %21, 0, !dbg !22814
  br i1 %22, label %23, label %24, !dbg !22817

23:                                               ; preds = %16
  br label %156, !dbg !22814

24:                                               ; preds = %16
  br label %25, !dbg !22817

25:                                               ; preds = %24
  br label %26, !dbg !22818

26:                                               ; preds = %25
  %27 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22819
  %28 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %27, i32 0, i32 3, !dbg !22819
  %29 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22819
  %30 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %29, i32 0, i32 3, !dbg !22819
  %31 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %28, %struct.mbedtls_mpi* %30), !dbg !22819
  store i32 %31, i32* %5, align 4, !dbg !22819
  %32 = icmp ne i32 %31, 0, !dbg !22819
  br i1 %32, label %33, label %34, !dbg !22822

33:                                               ; preds = %26
  br label %156, !dbg !22819

34:                                               ; preds = %26
  br label %35, !dbg !22822

35:                                               ; preds = %34
  br label %36, !dbg !22823

36:                                               ; preds = %35
  %37 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22824
  %38 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %37, i32 0, i32 4, !dbg !22824
  %39 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22824
  %40 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %39, i32 0, i32 4, !dbg !22824
  %41 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %38, %struct.mbedtls_mpi* %40), !dbg !22824
  store i32 %41, i32* %5, align 4, !dbg !22824
  %42 = icmp ne i32 %41, 0, !dbg !22824
  br i1 %42, label %43, label %44, !dbg !22827

43:                                               ; preds = %36
  br label %156, !dbg !22824

44:                                               ; preds = %36
  br label %45, !dbg !22827

45:                                               ; preds = %44
  br label %46, !dbg !22828

46:                                               ; preds = %45
  %47 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22829
  %48 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %47, i32 0, i32 5, !dbg !22829
  %49 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22829
  %50 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %49, i32 0, i32 5, !dbg !22829
  %51 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %48, %struct.mbedtls_mpi* %50), !dbg !22829
  store i32 %51, i32* %5, align 4, !dbg !22829
  %52 = icmp ne i32 %51, 0, !dbg !22829
  br i1 %52, label %53, label %54, !dbg !22832

53:                                               ; preds = %46
  br label %156, !dbg !22829

54:                                               ; preds = %46
  br label %55, !dbg !22832

55:                                               ; preds = %54
  br label %56, !dbg !22833

56:                                               ; preds = %55
  %57 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22834
  %58 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %57, i32 0, i32 6, !dbg !22834
  %59 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22834
  %60 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %59, i32 0, i32 6, !dbg !22834
  %61 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %58, %struct.mbedtls_mpi* %60), !dbg !22834
  store i32 %61, i32* %5, align 4, !dbg !22834
  %62 = icmp ne i32 %61, 0, !dbg !22834
  br i1 %62, label %63, label %64, !dbg !22837

63:                                               ; preds = %56
  br label %156, !dbg !22834

64:                                               ; preds = %56
  br label %65, !dbg !22837

65:                                               ; preds = %64
  br label %66, !dbg !22838

66:                                               ; preds = %65
  %67 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22839
  %68 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %67, i32 0, i32 7, !dbg !22839
  %69 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22839
  %70 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %69, i32 0, i32 7, !dbg !22839
  %71 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %68, %struct.mbedtls_mpi* %70), !dbg !22839
  store i32 %71, i32* %5, align 4, !dbg !22839
  %72 = icmp ne i32 %71, 0, !dbg !22839
  br i1 %72, label %73, label %74, !dbg !22842

73:                                               ; preds = %66
  br label %156, !dbg !22839

74:                                               ; preds = %66
  br label %75, !dbg !22842

75:                                               ; preds = %74
  br label %76, !dbg !22843

76:                                               ; preds = %75
  %77 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22844
  %78 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %77, i32 0, i32 8, !dbg !22844
  %79 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22844
  %80 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %79, i32 0, i32 8, !dbg !22844
  %81 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %78, %struct.mbedtls_mpi* %80), !dbg !22844
  store i32 %81, i32* %5, align 4, !dbg !22844
  %82 = icmp ne i32 %81, 0, !dbg !22844
  br i1 %82, label %83, label %84, !dbg !22847

83:                                               ; preds = %76
  br label %156, !dbg !22844

84:                                               ; preds = %76
  br label %85, !dbg !22847

85:                                               ; preds = %84
  br label %86, !dbg !22848

86:                                               ; preds = %85
  %87 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22849
  %88 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %87, i32 0, i32 9, !dbg !22849
  %89 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22849
  %90 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %89, i32 0, i32 9, !dbg !22849
  %91 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %88, %struct.mbedtls_mpi* %90), !dbg !22849
  store i32 %91, i32* %5, align 4, !dbg !22849
  %92 = icmp ne i32 %91, 0, !dbg !22849
  br i1 %92, label %93, label %94, !dbg !22852

93:                                               ; preds = %86
  br label %156, !dbg !22849

94:                                               ; preds = %86
  br label %95, !dbg !22852

95:                                               ; preds = %94
  br label %96, !dbg !22853

96:                                               ; preds = %95
  %97 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22854
  %98 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %97, i32 0, i32 10, !dbg !22854
  %99 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22854
  %100 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %99, i32 0, i32 10, !dbg !22854
  %101 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %98, %struct.mbedtls_mpi* %100), !dbg !22854
  store i32 %101, i32* %5, align 4, !dbg !22854
  %102 = icmp ne i32 %101, 0, !dbg !22854
  br i1 %102, label %103, label %104, !dbg !22857

103:                                              ; preds = %96
  br label %156, !dbg !22854

104:                                              ; preds = %96
  br label %105, !dbg !22857

105:                                              ; preds = %104
  br label %106, !dbg !22858

106:                                              ; preds = %105
  %107 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22859
  %108 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %107, i32 0, i32 11, !dbg !22859
  %109 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22859
  %110 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %109, i32 0, i32 11, !dbg !22859
  %111 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %108, %struct.mbedtls_mpi* %110), !dbg !22859
  store i32 %111, i32* %5, align 4, !dbg !22859
  %112 = icmp ne i32 %111, 0, !dbg !22859
  br i1 %112, label %113, label %114, !dbg !22862

113:                                              ; preds = %106
  br label %156, !dbg !22859

114:                                              ; preds = %106
  br label %115, !dbg !22862

115:                                              ; preds = %114
  br label %116, !dbg !22863

116:                                              ; preds = %115
  %117 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22864
  %118 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %117, i32 0, i32 12, !dbg !22864
  %119 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22864
  %120 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %119, i32 0, i32 12, !dbg !22864
  %121 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %118, %struct.mbedtls_mpi* %120), !dbg !22864
  store i32 %121, i32* %5, align 4, !dbg !22864
  %122 = icmp ne i32 %121, 0, !dbg !22864
  br i1 %122, label %123, label %124, !dbg !22867

123:                                              ; preds = %116
  br label %156, !dbg !22864

124:                                              ; preds = %116
  br label %125, !dbg !22867

125:                                              ; preds = %124
  br label %126, !dbg !22868

126:                                              ; preds = %125
  %127 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22869
  %128 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %127, i32 0, i32 13, !dbg !22869
  %129 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22869
  %130 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %129, i32 0, i32 13, !dbg !22869
  %131 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %128, %struct.mbedtls_mpi* %130), !dbg !22869
  store i32 %131, i32* %5, align 4, !dbg !22869
  %132 = icmp ne i32 %131, 0, !dbg !22869
  br i1 %132, label %133, label %134, !dbg !22872

133:                                              ; preds = %126
  br label %156, !dbg !22869

134:                                              ; preds = %126
  br label %135, !dbg !22872

135:                                              ; preds = %134
  br label %136, !dbg !22873

136:                                              ; preds = %135
  %137 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22874
  %138 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %137, i32 0, i32 14, !dbg !22874
  %139 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22874
  %140 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %139, i32 0, i32 14, !dbg !22874
  %141 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %138, %struct.mbedtls_mpi* %140), !dbg !22874
  store i32 %141, i32* %5, align 4, !dbg !22874
  %142 = icmp ne i32 %141, 0, !dbg !22874
  br i1 %142, label %143, label %144, !dbg !22877

143:                                              ; preds = %136
  br label %156, !dbg !22874

144:                                              ; preds = %136
  br label %145, !dbg !22877

145:                                              ; preds = %144
  %146 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22878
  %147 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %146, i32 0, i32 15, !dbg !22879
  %148 = load i32, i32* %147, align 8, !dbg !22879
  %149 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22880
  %150 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %149, i32 0, i32 15, !dbg !22881
  store i32 %148, i32* %150, align 8, !dbg !22882
  %151 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %4, align 8, !dbg !22883
  %152 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %151, i32 0, i32 16, !dbg !22884
  %153 = load i32, i32* %152, align 4, !dbg !22884
  %154 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22885
  %155 = getelementptr inbounds %struct.mbedtls_rsa_context, %struct.mbedtls_rsa_context* %154, i32 0, i32 16, !dbg !22886
  store i32 %153, i32* %155, align 4, !dbg !22887
  br label %156, !dbg !22885

156:                                              ; preds = %145, %143, %133, %123, %113, %103, %93, %83, %73, %63, %53, %43, %33, %23
  call void @llvm.dbg.label(metadata !22888), !dbg !22889
  %157 = load i32, i32* %5, align 4, !dbg !22890
  %158 = icmp ne i32 %157, 0, !dbg !22892
  br i1 %158, label %159, label %161, !dbg !22893

159:                                              ; preds = %156
  %160 = load %struct.mbedtls_rsa_context*, %struct.mbedtls_rsa_context** %3, align 8, !dbg !22894
  call void @mbedtls_rsa_free(%struct.mbedtls_rsa_context* %160), !dbg !22895
  br label %161, !dbg !22895

161:                                              ; preds = %159, %156
  %162 = load i32, i32* %5, align 4, !dbg !22896
  ret i32 %162, !dbg !22897
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_init(%struct.mbedtls_sha512_context* %0) #0 !dbg !22898 {
  %2 = alloca %struct.mbedtls_sha512_context*, align 8
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %2, metadata !22909, metadata !DIExpression()), !dbg !22910
  %3 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %2, align 8, !dbg !22911
  %4 = bitcast %struct.mbedtls_sha512_context* %3 to i8*, !dbg !22912
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 216, i1 false), !dbg !22912
  ret void, !dbg !22913
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_free(%struct.mbedtls_sha512_context* %0) #0 !dbg !22914 {
  %2 = alloca %struct.mbedtls_sha512_context*, align 8
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %2, metadata !22915, metadata !DIExpression()), !dbg !22916
  %3 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %2, align 8, !dbg !22917
  %4 = icmp eq %struct.mbedtls_sha512_context* %3, null, !dbg !22919
  br i1 %4, label %5, label %6, !dbg !22920

5:                                                ; preds = %1
  br label %9, !dbg !22921

6:                                                ; preds = %1
  %7 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %2, align 8, !dbg !22922
  %8 = bitcast %struct.mbedtls_sha512_context* %7 to i8*, !dbg !22922
  call void @mbedtls_zeroize.438(i8* %8, i64 216), !dbg !22923
  br label %9, !dbg !22924

9:                                                ; preds = %6, %5
  ret void, !dbg !22924
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize.438(i8* %0, i64 %1) #0 !dbg !22925 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !22926, metadata !DIExpression()), !dbg !22927
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !22928, metadata !DIExpression()), !dbg !22929
  call void @llvm.dbg.declare(metadata i8** %5, metadata !22930, metadata !DIExpression()), !dbg !22931
  %6 = load i8*, i8** %3, align 8, !dbg !22932
  store i8* %6, i8** %5, align 8, !dbg !22931
  br label %7, !dbg !22933

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !22934
  %9 = add i64 %8, -1, !dbg !22934
  store i64 %9, i64* %4, align 8, !dbg !22934
  %10 = icmp ne i64 %8, 0, !dbg !22933
  br i1 %10, label %11, label %14, !dbg !22933

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !22935
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !22935
  store i8* %13, i8** %5, align 8, !dbg !22935
  store volatile i8 0, i8* %12, align 1, !dbg !22936
  br label %7, !dbg !22933, !llvm.loop !22937

14:                                               ; preds = %7
  ret void, !dbg !22939
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_clone(%struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context* %1) #0 !dbg !22940 {
  %3 = alloca %struct.mbedtls_sha512_context*, align 8
  %4 = alloca %struct.mbedtls_sha512_context*, align 8
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %3, metadata !22945, metadata !DIExpression()), !dbg !22946
  store %struct.mbedtls_sha512_context* %1, %struct.mbedtls_sha512_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %4, metadata !22947, metadata !DIExpression()), !dbg !22948
  %5 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22949
  %6 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !22950
  %7 = bitcast %struct.mbedtls_sha512_context* %5 to i8*, !dbg !22951
  %8 = bitcast %struct.mbedtls_sha512_context* %6 to i8*, !dbg !22951
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 216, i1 false), !dbg !22951
  ret void, !dbg !22952
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_starts(%struct.mbedtls_sha512_context* %0, i32 %1) #0 !dbg !22953 {
  %3 = alloca %struct.mbedtls_sha512_context*, align 8
  %4 = alloca i32, align 4
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %3, metadata !22956, metadata !DIExpression()), !dbg !22957
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !22958, metadata !DIExpression()), !dbg !22959
  %5 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22960
  %6 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %5, i32 0, i32 0, !dbg !22961
  %7 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 0, !dbg !22960
  store i64 0, i64* %7, align 8, !dbg !22962
  %8 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22963
  %9 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %8, i32 0, i32 0, !dbg !22964
  %10 = getelementptr inbounds [2 x i64], [2 x i64]* %9, i64 0, i64 1, !dbg !22963
  store i64 0, i64* %10, align 8, !dbg !22965
  %11 = load i32, i32* %4, align 4, !dbg !22966
  %12 = icmp eq i32 %11, 0, !dbg !22968
  br i1 %12, label %13, label %38, !dbg !22969

13:                                               ; preds = %2
  %14 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22970
  %15 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %14, i32 0, i32 1, !dbg !22972
  %16 = getelementptr inbounds [8 x i64], [8 x i64]* %15, i64 0, i64 0, !dbg !22970
  store i64 7640891576956012808, i64* %16, align 8, !dbg !22973
  %17 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22974
  %18 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %17, i32 0, i32 1, !dbg !22975
  %19 = getelementptr inbounds [8 x i64], [8 x i64]* %18, i64 0, i64 1, !dbg !22974
  store i64 -4942790177534073029, i64* %19, align 8, !dbg !22976
  %20 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22977
  %21 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %20, i32 0, i32 1, !dbg !22978
  %22 = getelementptr inbounds [8 x i64], [8 x i64]* %21, i64 0, i64 2, !dbg !22977
  store i64 4354685564936845355, i64* %22, align 8, !dbg !22979
  %23 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22980
  %24 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %23, i32 0, i32 1, !dbg !22981
  %25 = getelementptr inbounds [8 x i64], [8 x i64]* %24, i64 0, i64 3, !dbg !22980
  store i64 -6534734903238641935, i64* %25, align 8, !dbg !22982
  %26 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22983
  %27 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %26, i32 0, i32 1, !dbg !22984
  %28 = getelementptr inbounds [8 x i64], [8 x i64]* %27, i64 0, i64 4, !dbg !22983
  store i64 5840696475078001361, i64* %28, align 8, !dbg !22985
  %29 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22986
  %30 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %29, i32 0, i32 1, !dbg !22987
  %31 = getelementptr inbounds [8 x i64], [8 x i64]* %30, i64 0, i64 5, !dbg !22986
  store i64 -7276294671716946913, i64* %31, align 8, !dbg !22988
  %32 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22989
  %33 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %32, i32 0, i32 1, !dbg !22990
  %34 = getelementptr inbounds [8 x i64], [8 x i64]* %33, i64 0, i64 6, !dbg !22989
  store i64 2270897969802886507, i64* %34, align 8, !dbg !22991
  %35 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22992
  %36 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %35, i32 0, i32 1, !dbg !22993
  %37 = getelementptr inbounds [8 x i64], [8 x i64]* %36, i64 0, i64 7, !dbg !22992
  store i64 6620516959819538809, i64* %37, align 8, !dbg !22994
  br label %63, !dbg !22995

38:                                               ; preds = %2
  %39 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !22996
  %40 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %39, i32 0, i32 1, !dbg !22998
  %41 = getelementptr inbounds [8 x i64], [8 x i64]* %40, i64 0, i64 0, !dbg !22996
  store i64 -3766243637369397544, i64* %41, align 8, !dbg !22999
  %42 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23000
  %43 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %42, i32 0, i32 1, !dbg !23001
  %44 = getelementptr inbounds [8 x i64], [8 x i64]* %43, i64 0, i64 1, !dbg !23000
  store i64 7105036623409894663, i64* %44, align 8, !dbg !23002
  %45 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23003
  %46 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %45, i32 0, i32 1, !dbg !23004
  %47 = getelementptr inbounds [8 x i64], [8 x i64]* %46, i64 0, i64 2, !dbg !23003
  store i64 -7973340178411365097, i64* %47, align 8, !dbg !23005
  %48 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23006
  %49 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %48, i32 0, i32 1, !dbg !23007
  %50 = getelementptr inbounds [8 x i64], [8 x i64]* %49, i64 0, i64 3, !dbg !23006
  store i64 1526699215303891257, i64* %50, align 8, !dbg !23008
  %51 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23009
  %52 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %51, i32 0, i32 1, !dbg !23010
  %53 = getelementptr inbounds [8 x i64], [8 x i64]* %52, i64 0, i64 4, !dbg !23009
  store i64 7436329637833083697, i64* %53, align 8, !dbg !23011
  %54 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23012
  %55 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %54, i32 0, i32 1, !dbg !23013
  %56 = getelementptr inbounds [8 x i64], [8 x i64]* %55, i64 0, i64 5, !dbg !23012
  store i64 -8163818279084223215, i64* %56, align 8, !dbg !23014
  %57 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23015
  %58 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %57, i32 0, i32 1, !dbg !23016
  %59 = getelementptr inbounds [8 x i64], [8 x i64]* %58, i64 0, i64 6, !dbg !23015
  store i64 -2662702644619276377, i64* %59, align 8, !dbg !23017
  %60 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23018
  %61 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %60, i32 0, i32 1, !dbg !23019
  %62 = getelementptr inbounds [8 x i64], [8 x i64]* %61, i64 0, i64 7, !dbg !23018
  store i64 5167115440072839076, i64* %62, align 8, !dbg !23020
  br label %63

63:                                               ; preds = %38, %13
  %64 = load i32, i32* %4, align 4, !dbg !23021
  %65 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23022
  %66 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %65, i32 0, i32 3, !dbg !23023
  store i32 %64, i32* %66, align 8, !dbg !23024
  ret void, !dbg !23025
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_process(%struct.mbedtls_sha512_context* %0, i8* %1) #0 !dbg !23026 {
  %3 = alloca %struct.mbedtls_sha512_context*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca [80 x i64], align 16
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %3, metadata !23029, metadata !DIExpression()), !dbg !23030
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !23031, metadata !DIExpression()), !dbg !23032
  call void @llvm.dbg.declare(metadata i32* %5, metadata !23033, metadata !DIExpression()), !dbg !23034
  call void @llvm.dbg.declare(metadata i64* %6, metadata !23035, metadata !DIExpression()), !dbg !23036
  call void @llvm.dbg.declare(metadata i64* %7, metadata !23037, metadata !DIExpression()), !dbg !23038
  call void @llvm.dbg.declare(metadata [80 x i64]* %8, metadata !23039, metadata !DIExpression()), !dbg !23041
  call void @llvm.dbg.declare(metadata i64* %9, metadata !23042, metadata !DIExpression()), !dbg !23043
  call void @llvm.dbg.declare(metadata i64* %10, metadata !23044, metadata !DIExpression()), !dbg !23045
  call void @llvm.dbg.declare(metadata i64* %11, metadata !23046, metadata !DIExpression()), !dbg !23047
  call void @llvm.dbg.declare(metadata i64* %12, metadata !23048, metadata !DIExpression()), !dbg !23049
  call void @llvm.dbg.declare(metadata i64* %13, metadata !23050, metadata !DIExpression()), !dbg !23051
  call void @llvm.dbg.declare(metadata i64* %14, metadata !23052, metadata !DIExpression()), !dbg !23053
  call void @llvm.dbg.declare(metadata i64* %15, metadata !23054, metadata !DIExpression()), !dbg !23055
  call void @llvm.dbg.declare(metadata i64* %16, metadata !23056, metadata !DIExpression()), !dbg !23057
  store i32 0, i32* %5, align 4, !dbg !23058
  br label %17, !dbg !23060

17:                                               ; preds = %101, %2
  %18 = load i32, i32* %5, align 4, !dbg !23061
  %19 = icmp slt i32 %18, 16, !dbg !23063
  br i1 %19, label %20, label %104, !dbg !23064

20:                                               ; preds = %17
  %21 = load i8*, i8** %4, align 8, !dbg !23065
  %22 = load i32, i32* %5, align 4, !dbg !23065
  %23 = shl i32 %22, 3, !dbg !23065
  %24 = sext i32 %23 to i64, !dbg !23065
  %25 = getelementptr inbounds i8, i8* %21, i64 %24, !dbg !23065
  %26 = load i8, i8* %25, align 1, !dbg !23065
  %27 = zext i8 %26 to i64, !dbg !23065
  %28 = shl i64 %27, 56, !dbg !23065
  %29 = load i8*, i8** %4, align 8, !dbg !23065
  %30 = load i32, i32* %5, align 4, !dbg !23065
  %31 = shl i32 %30, 3, !dbg !23065
  %32 = add nsw i32 %31, 1, !dbg !23065
  %33 = sext i32 %32 to i64, !dbg !23065
  %34 = getelementptr inbounds i8, i8* %29, i64 %33, !dbg !23065
  %35 = load i8, i8* %34, align 1, !dbg !23065
  %36 = zext i8 %35 to i64, !dbg !23065
  %37 = shl i64 %36, 48, !dbg !23065
  %38 = or i64 %28, %37, !dbg !23065
  %39 = load i8*, i8** %4, align 8, !dbg !23065
  %40 = load i32, i32* %5, align 4, !dbg !23065
  %41 = shl i32 %40, 3, !dbg !23065
  %42 = add nsw i32 %41, 2, !dbg !23065
  %43 = sext i32 %42 to i64, !dbg !23065
  %44 = getelementptr inbounds i8, i8* %39, i64 %43, !dbg !23065
  %45 = load i8, i8* %44, align 1, !dbg !23065
  %46 = zext i8 %45 to i64, !dbg !23065
  %47 = shl i64 %46, 40, !dbg !23065
  %48 = or i64 %38, %47, !dbg !23065
  %49 = load i8*, i8** %4, align 8, !dbg !23065
  %50 = load i32, i32* %5, align 4, !dbg !23065
  %51 = shl i32 %50, 3, !dbg !23065
  %52 = add nsw i32 %51, 3, !dbg !23065
  %53 = sext i32 %52 to i64, !dbg !23065
  %54 = getelementptr inbounds i8, i8* %49, i64 %53, !dbg !23065
  %55 = load i8, i8* %54, align 1, !dbg !23065
  %56 = zext i8 %55 to i64, !dbg !23065
  %57 = shl i64 %56, 32, !dbg !23065
  %58 = or i64 %48, %57, !dbg !23065
  %59 = load i8*, i8** %4, align 8, !dbg !23065
  %60 = load i32, i32* %5, align 4, !dbg !23065
  %61 = shl i32 %60, 3, !dbg !23065
  %62 = add nsw i32 %61, 4, !dbg !23065
  %63 = sext i32 %62 to i64, !dbg !23065
  %64 = getelementptr inbounds i8, i8* %59, i64 %63, !dbg !23065
  %65 = load i8, i8* %64, align 1, !dbg !23065
  %66 = zext i8 %65 to i64, !dbg !23065
  %67 = shl i64 %66, 24, !dbg !23065
  %68 = or i64 %58, %67, !dbg !23065
  %69 = load i8*, i8** %4, align 8, !dbg !23065
  %70 = load i32, i32* %5, align 4, !dbg !23065
  %71 = shl i32 %70, 3, !dbg !23065
  %72 = add nsw i32 %71, 5, !dbg !23065
  %73 = sext i32 %72 to i64, !dbg !23065
  %74 = getelementptr inbounds i8, i8* %69, i64 %73, !dbg !23065
  %75 = load i8, i8* %74, align 1, !dbg !23065
  %76 = zext i8 %75 to i64, !dbg !23065
  %77 = shl i64 %76, 16, !dbg !23065
  %78 = or i64 %68, %77, !dbg !23065
  %79 = load i8*, i8** %4, align 8, !dbg !23065
  %80 = load i32, i32* %5, align 4, !dbg !23065
  %81 = shl i32 %80, 3, !dbg !23065
  %82 = add nsw i32 %81, 6, !dbg !23065
  %83 = sext i32 %82 to i64, !dbg !23065
  %84 = getelementptr inbounds i8, i8* %79, i64 %83, !dbg !23065
  %85 = load i8, i8* %84, align 1, !dbg !23065
  %86 = zext i8 %85 to i64, !dbg !23065
  %87 = shl i64 %86, 8, !dbg !23065
  %88 = or i64 %78, %87, !dbg !23065
  %89 = load i8*, i8** %4, align 8, !dbg !23065
  %90 = load i32, i32* %5, align 4, !dbg !23065
  %91 = shl i32 %90, 3, !dbg !23065
  %92 = add nsw i32 %91, 7, !dbg !23065
  %93 = sext i32 %92 to i64, !dbg !23065
  %94 = getelementptr inbounds i8, i8* %89, i64 %93, !dbg !23065
  %95 = load i8, i8* %94, align 1, !dbg !23065
  %96 = zext i8 %95 to i64, !dbg !23065
  %97 = or i64 %88, %96, !dbg !23065
  %98 = load i32, i32* %5, align 4, !dbg !23065
  %99 = sext i32 %98 to i64, !dbg !23065
  %100 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %99, !dbg !23065
  store i64 %97, i64* %100, align 8, !dbg !23065
  br label %101, !dbg !23068

101:                                              ; preds = %20
  %102 = load i32, i32* %5, align 4, !dbg !23069
  %103 = add nsw i32 %102, 1, !dbg !23069
  store i32 %103, i32* %5, align 4, !dbg !23069
  br label %17, !dbg !23070, !llvm.loop !23071

104:                                              ; preds = %17
  br label %105, !dbg !23073

105:                                              ; preds = %193, %104
  %106 = load i32, i32* %5, align 4, !dbg !23074
  %107 = icmp slt i32 %106, 80, !dbg !23077
  br i1 %107, label %108, label %196, !dbg !23078

108:                                              ; preds = %105
  %109 = load i32, i32* %5, align 4, !dbg !23079
  %110 = sub nsw i32 %109, 2, !dbg !23079
  %111 = sext i32 %110 to i64, !dbg !23079
  %112 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %111, !dbg !23079
  %113 = load i64, i64* %112, align 8, !dbg !23079
  %114 = lshr i64 %113, 19, !dbg !23079
  %115 = load i32, i32* %5, align 4, !dbg !23079
  %116 = sub nsw i32 %115, 2, !dbg !23079
  %117 = sext i32 %116 to i64, !dbg !23079
  %118 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %117, !dbg !23079
  %119 = load i64, i64* %118, align 8, !dbg !23079
  %120 = shl i64 %119, 45, !dbg !23079
  %121 = or i64 %114, %120, !dbg !23079
  %122 = load i32, i32* %5, align 4, !dbg !23079
  %123 = sub nsw i32 %122, 2, !dbg !23079
  %124 = sext i32 %123 to i64, !dbg !23079
  %125 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %124, !dbg !23079
  %126 = load i64, i64* %125, align 8, !dbg !23079
  %127 = lshr i64 %126, 61, !dbg !23079
  %128 = load i32, i32* %5, align 4, !dbg !23079
  %129 = sub nsw i32 %128, 2, !dbg !23079
  %130 = sext i32 %129 to i64, !dbg !23079
  %131 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %130, !dbg !23079
  %132 = load i64, i64* %131, align 8, !dbg !23079
  %133 = shl i64 %132, 3, !dbg !23079
  %134 = or i64 %127, %133, !dbg !23079
  %135 = xor i64 %121, %134, !dbg !23079
  %136 = load i32, i32* %5, align 4, !dbg !23079
  %137 = sub nsw i32 %136, 2, !dbg !23079
  %138 = sext i32 %137 to i64, !dbg !23079
  %139 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %138, !dbg !23079
  %140 = load i64, i64* %139, align 8, !dbg !23079
  %141 = lshr i64 %140, 6, !dbg !23079
  %142 = xor i64 %135, %141, !dbg !23079
  %143 = load i32, i32* %5, align 4, !dbg !23081
  %144 = sub nsw i32 %143, 7, !dbg !23082
  %145 = sext i32 %144 to i64, !dbg !23083
  %146 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %145, !dbg !23083
  %147 = load i64, i64* %146, align 8, !dbg !23083
  %148 = add i64 %142, %147, !dbg !23084
  %149 = load i32, i32* %5, align 4, !dbg !23085
  %150 = sub nsw i32 %149, 15, !dbg !23085
  %151 = sext i32 %150 to i64, !dbg !23085
  %152 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %151, !dbg !23085
  %153 = load i64, i64* %152, align 8, !dbg !23085
  %154 = lshr i64 %153, 1, !dbg !23085
  %155 = load i32, i32* %5, align 4, !dbg !23085
  %156 = sub nsw i32 %155, 15, !dbg !23085
  %157 = sext i32 %156 to i64, !dbg !23085
  %158 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %157, !dbg !23085
  %159 = load i64, i64* %158, align 8, !dbg !23085
  %160 = shl i64 %159, 63, !dbg !23085
  %161 = or i64 %154, %160, !dbg !23085
  %162 = load i32, i32* %5, align 4, !dbg !23085
  %163 = sub nsw i32 %162, 15, !dbg !23085
  %164 = sext i32 %163 to i64, !dbg !23085
  %165 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %164, !dbg !23085
  %166 = load i64, i64* %165, align 8, !dbg !23085
  %167 = lshr i64 %166, 8, !dbg !23085
  %168 = load i32, i32* %5, align 4, !dbg !23085
  %169 = sub nsw i32 %168, 15, !dbg !23085
  %170 = sext i32 %169 to i64, !dbg !23085
  %171 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %170, !dbg !23085
  %172 = load i64, i64* %171, align 8, !dbg !23085
  %173 = shl i64 %172, 56, !dbg !23085
  %174 = or i64 %167, %173, !dbg !23085
  %175 = xor i64 %161, %174, !dbg !23085
  %176 = load i32, i32* %5, align 4, !dbg !23085
  %177 = sub nsw i32 %176, 15, !dbg !23085
  %178 = sext i32 %177 to i64, !dbg !23085
  %179 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %178, !dbg !23085
  %180 = load i64, i64* %179, align 8, !dbg !23085
  %181 = lshr i64 %180, 7, !dbg !23085
  %182 = xor i64 %175, %181, !dbg !23085
  %183 = add i64 %148, %182, !dbg !23086
  %184 = load i32, i32* %5, align 4, !dbg !23087
  %185 = sub nsw i32 %184, 16, !dbg !23088
  %186 = sext i32 %185 to i64, !dbg !23089
  %187 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %186, !dbg !23089
  %188 = load i64, i64* %187, align 8, !dbg !23089
  %189 = add i64 %183, %188, !dbg !23090
  %190 = load i32, i32* %5, align 4, !dbg !23091
  %191 = sext i32 %190 to i64, !dbg !23092
  %192 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %191, !dbg !23092
  store i64 %189, i64* %192, align 8, !dbg !23093
  br label %193, !dbg !23094

193:                                              ; preds = %108
  %194 = load i32, i32* %5, align 4, !dbg !23095
  %195 = add nsw i32 %194, 1, !dbg !23095
  store i32 %195, i32* %5, align 4, !dbg !23095
  br label %105, !dbg !23096, !llvm.loop !23097

196:                                              ; preds = %105
  %197 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23099
  %198 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %197, i32 0, i32 1, !dbg !23100
  %199 = getelementptr inbounds [8 x i64], [8 x i64]* %198, i64 0, i64 0, !dbg !23099
  %200 = load i64, i64* %199, align 8, !dbg !23099
  store i64 %200, i64* %9, align 8, !dbg !23101
  %201 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23102
  %202 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %201, i32 0, i32 1, !dbg !23103
  %203 = getelementptr inbounds [8 x i64], [8 x i64]* %202, i64 0, i64 1, !dbg !23102
  %204 = load i64, i64* %203, align 8, !dbg !23102
  store i64 %204, i64* %10, align 8, !dbg !23104
  %205 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23105
  %206 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %205, i32 0, i32 1, !dbg !23106
  %207 = getelementptr inbounds [8 x i64], [8 x i64]* %206, i64 0, i64 2, !dbg !23105
  %208 = load i64, i64* %207, align 8, !dbg !23105
  store i64 %208, i64* %11, align 8, !dbg !23107
  %209 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23108
  %210 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %209, i32 0, i32 1, !dbg !23109
  %211 = getelementptr inbounds [8 x i64], [8 x i64]* %210, i64 0, i64 3, !dbg !23108
  %212 = load i64, i64* %211, align 8, !dbg !23108
  store i64 %212, i64* %12, align 8, !dbg !23110
  %213 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23111
  %214 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %213, i32 0, i32 1, !dbg !23112
  %215 = getelementptr inbounds [8 x i64], [8 x i64]* %214, i64 0, i64 4, !dbg !23111
  %216 = load i64, i64* %215, align 8, !dbg !23111
  store i64 %216, i64* %13, align 8, !dbg !23113
  %217 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23114
  %218 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %217, i32 0, i32 1, !dbg !23115
  %219 = getelementptr inbounds [8 x i64], [8 x i64]* %218, i64 0, i64 5, !dbg !23114
  %220 = load i64, i64* %219, align 8, !dbg !23114
  store i64 %220, i64* %14, align 8, !dbg !23116
  %221 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23117
  %222 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %221, i32 0, i32 1, !dbg !23118
  %223 = getelementptr inbounds [8 x i64], [8 x i64]* %222, i64 0, i64 6, !dbg !23117
  %224 = load i64, i64* %223, align 8, !dbg !23117
  store i64 %224, i64* %15, align 8, !dbg !23119
  %225 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23120
  %226 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %225, i32 0, i32 1, !dbg !23121
  %227 = getelementptr inbounds [8 x i64], [8 x i64]* %226, i64 0, i64 7, !dbg !23120
  %228 = load i64, i64* %227, align 8, !dbg !23120
  store i64 %228, i64* %16, align 8, !dbg !23122
  store i32 0, i32* %5, align 4, !dbg !23123
  br label %229, !dbg !23124

229:                                              ; preds = %806, %196
  %230 = load i64, i64* %16, align 8, !dbg !23125
  %231 = load i64, i64* %13, align 8, !dbg !23125
  %232 = lshr i64 %231, 14, !dbg !23125
  %233 = load i64, i64* %13, align 8, !dbg !23125
  %234 = shl i64 %233, 50, !dbg !23125
  %235 = or i64 %232, %234, !dbg !23125
  %236 = load i64, i64* %13, align 8, !dbg !23125
  %237 = lshr i64 %236, 18, !dbg !23125
  %238 = load i64, i64* %13, align 8, !dbg !23125
  %239 = shl i64 %238, 46, !dbg !23125
  %240 = or i64 %237, %239, !dbg !23125
  %241 = xor i64 %235, %240, !dbg !23125
  %242 = load i64, i64* %13, align 8, !dbg !23125
  %243 = lshr i64 %242, 41, !dbg !23125
  %244 = load i64, i64* %13, align 8, !dbg !23125
  %245 = shl i64 %244, 23, !dbg !23125
  %246 = or i64 %243, %245, !dbg !23125
  %247 = xor i64 %241, %246, !dbg !23125
  %248 = add i64 %230, %247, !dbg !23125
  %249 = load i64, i64* %15, align 8, !dbg !23125
  %250 = load i64, i64* %13, align 8, !dbg !23125
  %251 = load i64, i64* %14, align 8, !dbg !23125
  %252 = load i64, i64* %15, align 8, !dbg !23125
  %253 = xor i64 %251, %252, !dbg !23125
  %254 = and i64 %250, %253, !dbg !23125
  %255 = xor i64 %249, %254, !dbg !23125
  %256 = add i64 %248, %255, !dbg !23125
  %257 = load i32, i32* %5, align 4, !dbg !23125
  %258 = sext i32 %257 to i64, !dbg !23125
  %259 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %258, !dbg !23125
  %260 = load i64, i64* %259, align 8, !dbg !23125
  %261 = add i64 %256, %260, !dbg !23125
  %262 = load i32, i32* %5, align 4, !dbg !23125
  %263 = sext i32 %262 to i64, !dbg !23125
  %264 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %263, !dbg !23125
  %265 = load i64, i64* %264, align 8, !dbg !23125
  %266 = add i64 %261, %265, !dbg !23125
  store i64 %266, i64* %6, align 8, !dbg !23125
  %267 = load i64, i64* %9, align 8, !dbg !23125
  %268 = lshr i64 %267, 28, !dbg !23125
  %269 = load i64, i64* %9, align 8, !dbg !23125
  %270 = shl i64 %269, 36, !dbg !23125
  %271 = or i64 %268, %270, !dbg !23125
  %272 = load i64, i64* %9, align 8, !dbg !23125
  %273 = lshr i64 %272, 34, !dbg !23125
  %274 = load i64, i64* %9, align 8, !dbg !23125
  %275 = shl i64 %274, 30, !dbg !23125
  %276 = or i64 %273, %275, !dbg !23125
  %277 = xor i64 %271, %276, !dbg !23125
  %278 = load i64, i64* %9, align 8, !dbg !23125
  %279 = lshr i64 %278, 39, !dbg !23125
  %280 = load i64, i64* %9, align 8, !dbg !23125
  %281 = shl i64 %280, 25, !dbg !23125
  %282 = or i64 %279, %281, !dbg !23125
  %283 = xor i64 %277, %282, !dbg !23125
  %284 = load i64, i64* %9, align 8, !dbg !23125
  %285 = load i64, i64* %10, align 8, !dbg !23125
  %286 = and i64 %284, %285, !dbg !23125
  %287 = load i64, i64* %11, align 8, !dbg !23125
  %288 = load i64, i64* %9, align 8, !dbg !23125
  %289 = load i64, i64* %10, align 8, !dbg !23125
  %290 = or i64 %288, %289, !dbg !23125
  %291 = and i64 %287, %290, !dbg !23125
  %292 = or i64 %286, %291, !dbg !23125
  %293 = add i64 %283, %292, !dbg !23125
  store i64 %293, i64* %7, align 8, !dbg !23125
  %294 = load i64, i64* %6, align 8, !dbg !23125
  %295 = load i64, i64* %12, align 8, !dbg !23125
  %296 = add i64 %295, %294, !dbg !23125
  store i64 %296, i64* %12, align 8, !dbg !23125
  %297 = load i64, i64* %6, align 8, !dbg !23125
  %298 = load i64, i64* %7, align 8, !dbg !23125
  %299 = add i64 %297, %298, !dbg !23125
  store i64 %299, i64* %16, align 8, !dbg !23125
  %300 = load i32, i32* %5, align 4, !dbg !23128
  %301 = add nsw i32 %300, 1, !dbg !23128
  store i32 %301, i32* %5, align 4, !dbg !23128
  %302 = load i64, i64* %15, align 8, !dbg !23129
  %303 = load i64, i64* %12, align 8, !dbg !23129
  %304 = lshr i64 %303, 14, !dbg !23129
  %305 = load i64, i64* %12, align 8, !dbg !23129
  %306 = shl i64 %305, 50, !dbg !23129
  %307 = or i64 %304, %306, !dbg !23129
  %308 = load i64, i64* %12, align 8, !dbg !23129
  %309 = lshr i64 %308, 18, !dbg !23129
  %310 = load i64, i64* %12, align 8, !dbg !23129
  %311 = shl i64 %310, 46, !dbg !23129
  %312 = or i64 %309, %311, !dbg !23129
  %313 = xor i64 %307, %312, !dbg !23129
  %314 = load i64, i64* %12, align 8, !dbg !23129
  %315 = lshr i64 %314, 41, !dbg !23129
  %316 = load i64, i64* %12, align 8, !dbg !23129
  %317 = shl i64 %316, 23, !dbg !23129
  %318 = or i64 %315, %317, !dbg !23129
  %319 = xor i64 %313, %318, !dbg !23129
  %320 = add i64 %302, %319, !dbg !23129
  %321 = load i64, i64* %14, align 8, !dbg !23129
  %322 = load i64, i64* %12, align 8, !dbg !23129
  %323 = load i64, i64* %13, align 8, !dbg !23129
  %324 = load i64, i64* %14, align 8, !dbg !23129
  %325 = xor i64 %323, %324, !dbg !23129
  %326 = and i64 %322, %325, !dbg !23129
  %327 = xor i64 %321, %326, !dbg !23129
  %328 = add i64 %320, %327, !dbg !23129
  %329 = load i32, i32* %5, align 4, !dbg !23129
  %330 = sext i32 %329 to i64, !dbg !23129
  %331 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %330, !dbg !23129
  %332 = load i64, i64* %331, align 8, !dbg !23129
  %333 = add i64 %328, %332, !dbg !23129
  %334 = load i32, i32* %5, align 4, !dbg !23129
  %335 = sext i32 %334 to i64, !dbg !23129
  %336 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %335, !dbg !23129
  %337 = load i64, i64* %336, align 8, !dbg !23129
  %338 = add i64 %333, %337, !dbg !23129
  store i64 %338, i64* %6, align 8, !dbg !23129
  %339 = load i64, i64* %16, align 8, !dbg !23129
  %340 = lshr i64 %339, 28, !dbg !23129
  %341 = load i64, i64* %16, align 8, !dbg !23129
  %342 = shl i64 %341, 36, !dbg !23129
  %343 = or i64 %340, %342, !dbg !23129
  %344 = load i64, i64* %16, align 8, !dbg !23129
  %345 = lshr i64 %344, 34, !dbg !23129
  %346 = load i64, i64* %16, align 8, !dbg !23129
  %347 = shl i64 %346, 30, !dbg !23129
  %348 = or i64 %345, %347, !dbg !23129
  %349 = xor i64 %343, %348, !dbg !23129
  %350 = load i64, i64* %16, align 8, !dbg !23129
  %351 = lshr i64 %350, 39, !dbg !23129
  %352 = load i64, i64* %16, align 8, !dbg !23129
  %353 = shl i64 %352, 25, !dbg !23129
  %354 = or i64 %351, %353, !dbg !23129
  %355 = xor i64 %349, %354, !dbg !23129
  %356 = load i64, i64* %16, align 8, !dbg !23129
  %357 = load i64, i64* %9, align 8, !dbg !23129
  %358 = and i64 %356, %357, !dbg !23129
  %359 = load i64, i64* %10, align 8, !dbg !23129
  %360 = load i64, i64* %16, align 8, !dbg !23129
  %361 = load i64, i64* %9, align 8, !dbg !23129
  %362 = or i64 %360, %361, !dbg !23129
  %363 = and i64 %359, %362, !dbg !23129
  %364 = or i64 %358, %363, !dbg !23129
  %365 = add i64 %355, %364, !dbg !23129
  store i64 %365, i64* %7, align 8, !dbg !23129
  %366 = load i64, i64* %6, align 8, !dbg !23129
  %367 = load i64, i64* %11, align 8, !dbg !23129
  %368 = add i64 %367, %366, !dbg !23129
  store i64 %368, i64* %11, align 8, !dbg !23129
  %369 = load i64, i64* %6, align 8, !dbg !23129
  %370 = load i64, i64* %7, align 8, !dbg !23129
  %371 = add i64 %369, %370, !dbg !23129
  store i64 %371, i64* %15, align 8, !dbg !23129
  %372 = load i32, i32* %5, align 4, !dbg !23131
  %373 = add nsw i32 %372, 1, !dbg !23131
  store i32 %373, i32* %5, align 4, !dbg !23131
  %374 = load i64, i64* %14, align 8, !dbg !23132
  %375 = load i64, i64* %11, align 8, !dbg !23132
  %376 = lshr i64 %375, 14, !dbg !23132
  %377 = load i64, i64* %11, align 8, !dbg !23132
  %378 = shl i64 %377, 50, !dbg !23132
  %379 = or i64 %376, %378, !dbg !23132
  %380 = load i64, i64* %11, align 8, !dbg !23132
  %381 = lshr i64 %380, 18, !dbg !23132
  %382 = load i64, i64* %11, align 8, !dbg !23132
  %383 = shl i64 %382, 46, !dbg !23132
  %384 = or i64 %381, %383, !dbg !23132
  %385 = xor i64 %379, %384, !dbg !23132
  %386 = load i64, i64* %11, align 8, !dbg !23132
  %387 = lshr i64 %386, 41, !dbg !23132
  %388 = load i64, i64* %11, align 8, !dbg !23132
  %389 = shl i64 %388, 23, !dbg !23132
  %390 = or i64 %387, %389, !dbg !23132
  %391 = xor i64 %385, %390, !dbg !23132
  %392 = add i64 %374, %391, !dbg !23132
  %393 = load i64, i64* %13, align 8, !dbg !23132
  %394 = load i64, i64* %11, align 8, !dbg !23132
  %395 = load i64, i64* %12, align 8, !dbg !23132
  %396 = load i64, i64* %13, align 8, !dbg !23132
  %397 = xor i64 %395, %396, !dbg !23132
  %398 = and i64 %394, %397, !dbg !23132
  %399 = xor i64 %393, %398, !dbg !23132
  %400 = add i64 %392, %399, !dbg !23132
  %401 = load i32, i32* %5, align 4, !dbg !23132
  %402 = sext i32 %401 to i64, !dbg !23132
  %403 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %402, !dbg !23132
  %404 = load i64, i64* %403, align 8, !dbg !23132
  %405 = add i64 %400, %404, !dbg !23132
  %406 = load i32, i32* %5, align 4, !dbg !23132
  %407 = sext i32 %406 to i64, !dbg !23132
  %408 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %407, !dbg !23132
  %409 = load i64, i64* %408, align 8, !dbg !23132
  %410 = add i64 %405, %409, !dbg !23132
  store i64 %410, i64* %6, align 8, !dbg !23132
  %411 = load i64, i64* %15, align 8, !dbg !23132
  %412 = lshr i64 %411, 28, !dbg !23132
  %413 = load i64, i64* %15, align 8, !dbg !23132
  %414 = shl i64 %413, 36, !dbg !23132
  %415 = or i64 %412, %414, !dbg !23132
  %416 = load i64, i64* %15, align 8, !dbg !23132
  %417 = lshr i64 %416, 34, !dbg !23132
  %418 = load i64, i64* %15, align 8, !dbg !23132
  %419 = shl i64 %418, 30, !dbg !23132
  %420 = or i64 %417, %419, !dbg !23132
  %421 = xor i64 %415, %420, !dbg !23132
  %422 = load i64, i64* %15, align 8, !dbg !23132
  %423 = lshr i64 %422, 39, !dbg !23132
  %424 = load i64, i64* %15, align 8, !dbg !23132
  %425 = shl i64 %424, 25, !dbg !23132
  %426 = or i64 %423, %425, !dbg !23132
  %427 = xor i64 %421, %426, !dbg !23132
  %428 = load i64, i64* %15, align 8, !dbg !23132
  %429 = load i64, i64* %16, align 8, !dbg !23132
  %430 = and i64 %428, %429, !dbg !23132
  %431 = load i64, i64* %9, align 8, !dbg !23132
  %432 = load i64, i64* %15, align 8, !dbg !23132
  %433 = load i64, i64* %16, align 8, !dbg !23132
  %434 = or i64 %432, %433, !dbg !23132
  %435 = and i64 %431, %434, !dbg !23132
  %436 = or i64 %430, %435, !dbg !23132
  %437 = add i64 %427, %436, !dbg !23132
  store i64 %437, i64* %7, align 8, !dbg !23132
  %438 = load i64, i64* %6, align 8, !dbg !23132
  %439 = load i64, i64* %10, align 8, !dbg !23132
  %440 = add i64 %439, %438, !dbg !23132
  store i64 %440, i64* %10, align 8, !dbg !23132
  %441 = load i64, i64* %6, align 8, !dbg !23132
  %442 = load i64, i64* %7, align 8, !dbg !23132
  %443 = add i64 %441, %442, !dbg !23132
  store i64 %443, i64* %14, align 8, !dbg !23132
  %444 = load i32, i32* %5, align 4, !dbg !23134
  %445 = add nsw i32 %444, 1, !dbg !23134
  store i32 %445, i32* %5, align 4, !dbg !23134
  %446 = load i64, i64* %13, align 8, !dbg !23135
  %447 = load i64, i64* %10, align 8, !dbg !23135
  %448 = lshr i64 %447, 14, !dbg !23135
  %449 = load i64, i64* %10, align 8, !dbg !23135
  %450 = shl i64 %449, 50, !dbg !23135
  %451 = or i64 %448, %450, !dbg !23135
  %452 = load i64, i64* %10, align 8, !dbg !23135
  %453 = lshr i64 %452, 18, !dbg !23135
  %454 = load i64, i64* %10, align 8, !dbg !23135
  %455 = shl i64 %454, 46, !dbg !23135
  %456 = or i64 %453, %455, !dbg !23135
  %457 = xor i64 %451, %456, !dbg !23135
  %458 = load i64, i64* %10, align 8, !dbg !23135
  %459 = lshr i64 %458, 41, !dbg !23135
  %460 = load i64, i64* %10, align 8, !dbg !23135
  %461 = shl i64 %460, 23, !dbg !23135
  %462 = or i64 %459, %461, !dbg !23135
  %463 = xor i64 %457, %462, !dbg !23135
  %464 = add i64 %446, %463, !dbg !23135
  %465 = load i64, i64* %12, align 8, !dbg !23135
  %466 = load i64, i64* %10, align 8, !dbg !23135
  %467 = load i64, i64* %11, align 8, !dbg !23135
  %468 = load i64, i64* %12, align 8, !dbg !23135
  %469 = xor i64 %467, %468, !dbg !23135
  %470 = and i64 %466, %469, !dbg !23135
  %471 = xor i64 %465, %470, !dbg !23135
  %472 = add i64 %464, %471, !dbg !23135
  %473 = load i32, i32* %5, align 4, !dbg !23135
  %474 = sext i32 %473 to i64, !dbg !23135
  %475 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %474, !dbg !23135
  %476 = load i64, i64* %475, align 8, !dbg !23135
  %477 = add i64 %472, %476, !dbg !23135
  %478 = load i32, i32* %5, align 4, !dbg !23135
  %479 = sext i32 %478 to i64, !dbg !23135
  %480 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %479, !dbg !23135
  %481 = load i64, i64* %480, align 8, !dbg !23135
  %482 = add i64 %477, %481, !dbg !23135
  store i64 %482, i64* %6, align 8, !dbg !23135
  %483 = load i64, i64* %14, align 8, !dbg !23135
  %484 = lshr i64 %483, 28, !dbg !23135
  %485 = load i64, i64* %14, align 8, !dbg !23135
  %486 = shl i64 %485, 36, !dbg !23135
  %487 = or i64 %484, %486, !dbg !23135
  %488 = load i64, i64* %14, align 8, !dbg !23135
  %489 = lshr i64 %488, 34, !dbg !23135
  %490 = load i64, i64* %14, align 8, !dbg !23135
  %491 = shl i64 %490, 30, !dbg !23135
  %492 = or i64 %489, %491, !dbg !23135
  %493 = xor i64 %487, %492, !dbg !23135
  %494 = load i64, i64* %14, align 8, !dbg !23135
  %495 = lshr i64 %494, 39, !dbg !23135
  %496 = load i64, i64* %14, align 8, !dbg !23135
  %497 = shl i64 %496, 25, !dbg !23135
  %498 = or i64 %495, %497, !dbg !23135
  %499 = xor i64 %493, %498, !dbg !23135
  %500 = load i64, i64* %14, align 8, !dbg !23135
  %501 = load i64, i64* %15, align 8, !dbg !23135
  %502 = and i64 %500, %501, !dbg !23135
  %503 = load i64, i64* %16, align 8, !dbg !23135
  %504 = load i64, i64* %14, align 8, !dbg !23135
  %505 = load i64, i64* %15, align 8, !dbg !23135
  %506 = or i64 %504, %505, !dbg !23135
  %507 = and i64 %503, %506, !dbg !23135
  %508 = or i64 %502, %507, !dbg !23135
  %509 = add i64 %499, %508, !dbg !23135
  store i64 %509, i64* %7, align 8, !dbg !23135
  %510 = load i64, i64* %6, align 8, !dbg !23135
  %511 = load i64, i64* %9, align 8, !dbg !23135
  %512 = add i64 %511, %510, !dbg !23135
  store i64 %512, i64* %9, align 8, !dbg !23135
  %513 = load i64, i64* %6, align 8, !dbg !23135
  %514 = load i64, i64* %7, align 8, !dbg !23135
  %515 = add i64 %513, %514, !dbg !23135
  store i64 %515, i64* %13, align 8, !dbg !23135
  %516 = load i32, i32* %5, align 4, !dbg !23137
  %517 = add nsw i32 %516, 1, !dbg !23137
  store i32 %517, i32* %5, align 4, !dbg !23137
  %518 = load i64, i64* %12, align 8, !dbg !23138
  %519 = load i64, i64* %9, align 8, !dbg !23138
  %520 = lshr i64 %519, 14, !dbg !23138
  %521 = load i64, i64* %9, align 8, !dbg !23138
  %522 = shl i64 %521, 50, !dbg !23138
  %523 = or i64 %520, %522, !dbg !23138
  %524 = load i64, i64* %9, align 8, !dbg !23138
  %525 = lshr i64 %524, 18, !dbg !23138
  %526 = load i64, i64* %9, align 8, !dbg !23138
  %527 = shl i64 %526, 46, !dbg !23138
  %528 = or i64 %525, %527, !dbg !23138
  %529 = xor i64 %523, %528, !dbg !23138
  %530 = load i64, i64* %9, align 8, !dbg !23138
  %531 = lshr i64 %530, 41, !dbg !23138
  %532 = load i64, i64* %9, align 8, !dbg !23138
  %533 = shl i64 %532, 23, !dbg !23138
  %534 = or i64 %531, %533, !dbg !23138
  %535 = xor i64 %529, %534, !dbg !23138
  %536 = add i64 %518, %535, !dbg !23138
  %537 = load i64, i64* %11, align 8, !dbg !23138
  %538 = load i64, i64* %9, align 8, !dbg !23138
  %539 = load i64, i64* %10, align 8, !dbg !23138
  %540 = load i64, i64* %11, align 8, !dbg !23138
  %541 = xor i64 %539, %540, !dbg !23138
  %542 = and i64 %538, %541, !dbg !23138
  %543 = xor i64 %537, %542, !dbg !23138
  %544 = add i64 %536, %543, !dbg !23138
  %545 = load i32, i32* %5, align 4, !dbg !23138
  %546 = sext i32 %545 to i64, !dbg !23138
  %547 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %546, !dbg !23138
  %548 = load i64, i64* %547, align 8, !dbg !23138
  %549 = add i64 %544, %548, !dbg !23138
  %550 = load i32, i32* %5, align 4, !dbg !23138
  %551 = sext i32 %550 to i64, !dbg !23138
  %552 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %551, !dbg !23138
  %553 = load i64, i64* %552, align 8, !dbg !23138
  %554 = add i64 %549, %553, !dbg !23138
  store i64 %554, i64* %6, align 8, !dbg !23138
  %555 = load i64, i64* %13, align 8, !dbg !23138
  %556 = lshr i64 %555, 28, !dbg !23138
  %557 = load i64, i64* %13, align 8, !dbg !23138
  %558 = shl i64 %557, 36, !dbg !23138
  %559 = or i64 %556, %558, !dbg !23138
  %560 = load i64, i64* %13, align 8, !dbg !23138
  %561 = lshr i64 %560, 34, !dbg !23138
  %562 = load i64, i64* %13, align 8, !dbg !23138
  %563 = shl i64 %562, 30, !dbg !23138
  %564 = or i64 %561, %563, !dbg !23138
  %565 = xor i64 %559, %564, !dbg !23138
  %566 = load i64, i64* %13, align 8, !dbg !23138
  %567 = lshr i64 %566, 39, !dbg !23138
  %568 = load i64, i64* %13, align 8, !dbg !23138
  %569 = shl i64 %568, 25, !dbg !23138
  %570 = or i64 %567, %569, !dbg !23138
  %571 = xor i64 %565, %570, !dbg !23138
  %572 = load i64, i64* %13, align 8, !dbg !23138
  %573 = load i64, i64* %14, align 8, !dbg !23138
  %574 = and i64 %572, %573, !dbg !23138
  %575 = load i64, i64* %15, align 8, !dbg !23138
  %576 = load i64, i64* %13, align 8, !dbg !23138
  %577 = load i64, i64* %14, align 8, !dbg !23138
  %578 = or i64 %576, %577, !dbg !23138
  %579 = and i64 %575, %578, !dbg !23138
  %580 = or i64 %574, %579, !dbg !23138
  %581 = add i64 %571, %580, !dbg !23138
  store i64 %581, i64* %7, align 8, !dbg !23138
  %582 = load i64, i64* %6, align 8, !dbg !23138
  %583 = load i64, i64* %16, align 8, !dbg !23138
  %584 = add i64 %583, %582, !dbg !23138
  store i64 %584, i64* %16, align 8, !dbg !23138
  %585 = load i64, i64* %6, align 8, !dbg !23138
  %586 = load i64, i64* %7, align 8, !dbg !23138
  %587 = add i64 %585, %586, !dbg !23138
  store i64 %587, i64* %12, align 8, !dbg !23138
  %588 = load i32, i32* %5, align 4, !dbg !23140
  %589 = add nsw i32 %588, 1, !dbg !23140
  store i32 %589, i32* %5, align 4, !dbg !23140
  %590 = load i64, i64* %11, align 8, !dbg !23141
  %591 = load i64, i64* %16, align 8, !dbg !23141
  %592 = lshr i64 %591, 14, !dbg !23141
  %593 = load i64, i64* %16, align 8, !dbg !23141
  %594 = shl i64 %593, 50, !dbg !23141
  %595 = or i64 %592, %594, !dbg !23141
  %596 = load i64, i64* %16, align 8, !dbg !23141
  %597 = lshr i64 %596, 18, !dbg !23141
  %598 = load i64, i64* %16, align 8, !dbg !23141
  %599 = shl i64 %598, 46, !dbg !23141
  %600 = or i64 %597, %599, !dbg !23141
  %601 = xor i64 %595, %600, !dbg !23141
  %602 = load i64, i64* %16, align 8, !dbg !23141
  %603 = lshr i64 %602, 41, !dbg !23141
  %604 = load i64, i64* %16, align 8, !dbg !23141
  %605 = shl i64 %604, 23, !dbg !23141
  %606 = or i64 %603, %605, !dbg !23141
  %607 = xor i64 %601, %606, !dbg !23141
  %608 = add i64 %590, %607, !dbg !23141
  %609 = load i64, i64* %10, align 8, !dbg !23141
  %610 = load i64, i64* %16, align 8, !dbg !23141
  %611 = load i64, i64* %9, align 8, !dbg !23141
  %612 = load i64, i64* %10, align 8, !dbg !23141
  %613 = xor i64 %611, %612, !dbg !23141
  %614 = and i64 %610, %613, !dbg !23141
  %615 = xor i64 %609, %614, !dbg !23141
  %616 = add i64 %608, %615, !dbg !23141
  %617 = load i32, i32* %5, align 4, !dbg !23141
  %618 = sext i32 %617 to i64, !dbg !23141
  %619 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %618, !dbg !23141
  %620 = load i64, i64* %619, align 8, !dbg !23141
  %621 = add i64 %616, %620, !dbg !23141
  %622 = load i32, i32* %5, align 4, !dbg !23141
  %623 = sext i32 %622 to i64, !dbg !23141
  %624 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %623, !dbg !23141
  %625 = load i64, i64* %624, align 8, !dbg !23141
  %626 = add i64 %621, %625, !dbg !23141
  store i64 %626, i64* %6, align 8, !dbg !23141
  %627 = load i64, i64* %12, align 8, !dbg !23141
  %628 = lshr i64 %627, 28, !dbg !23141
  %629 = load i64, i64* %12, align 8, !dbg !23141
  %630 = shl i64 %629, 36, !dbg !23141
  %631 = or i64 %628, %630, !dbg !23141
  %632 = load i64, i64* %12, align 8, !dbg !23141
  %633 = lshr i64 %632, 34, !dbg !23141
  %634 = load i64, i64* %12, align 8, !dbg !23141
  %635 = shl i64 %634, 30, !dbg !23141
  %636 = or i64 %633, %635, !dbg !23141
  %637 = xor i64 %631, %636, !dbg !23141
  %638 = load i64, i64* %12, align 8, !dbg !23141
  %639 = lshr i64 %638, 39, !dbg !23141
  %640 = load i64, i64* %12, align 8, !dbg !23141
  %641 = shl i64 %640, 25, !dbg !23141
  %642 = or i64 %639, %641, !dbg !23141
  %643 = xor i64 %637, %642, !dbg !23141
  %644 = load i64, i64* %12, align 8, !dbg !23141
  %645 = load i64, i64* %13, align 8, !dbg !23141
  %646 = and i64 %644, %645, !dbg !23141
  %647 = load i64, i64* %14, align 8, !dbg !23141
  %648 = load i64, i64* %12, align 8, !dbg !23141
  %649 = load i64, i64* %13, align 8, !dbg !23141
  %650 = or i64 %648, %649, !dbg !23141
  %651 = and i64 %647, %650, !dbg !23141
  %652 = or i64 %646, %651, !dbg !23141
  %653 = add i64 %643, %652, !dbg !23141
  store i64 %653, i64* %7, align 8, !dbg !23141
  %654 = load i64, i64* %6, align 8, !dbg !23141
  %655 = load i64, i64* %15, align 8, !dbg !23141
  %656 = add i64 %655, %654, !dbg !23141
  store i64 %656, i64* %15, align 8, !dbg !23141
  %657 = load i64, i64* %6, align 8, !dbg !23141
  %658 = load i64, i64* %7, align 8, !dbg !23141
  %659 = add i64 %657, %658, !dbg !23141
  store i64 %659, i64* %11, align 8, !dbg !23141
  %660 = load i32, i32* %5, align 4, !dbg !23143
  %661 = add nsw i32 %660, 1, !dbg !23143
  store i32 %661, i32* %5, align 4, !dbg !23143
  %662 = load i64, i64* %10, align 8, !dbg !23144
  %663 = load i64, i64* %15, align 8, !dbg !23144
  %664 = lshr i64 %663, 14, !dbg !23144
  %665 = load i64, i64* %15, align 8, !dbg !23144
  %666 = shl i64 %665, 50, !dbg !23144
  %667 = or i64 %664, %666, !dbg !23144
  %668 = load i64, i64* %15, align 8, !dbg !23144
  %669 = lshr i64 %668, 18, !dbg !23144
  %670 = load i64, i64* %15, align 8, !dbg !23144
  %671 = shl i64 %670, 46, !dbg !23144
  %672 = or i64 %669, %671, !dbg !23144
  %673 = xor i64 %667, %672, !dbg !23144
  %674 = load i64, i64* %15, align 8, !dbg !23144
  %675 = lshr i64 %674, 41, !dbg !23144
  %676 = load i64, i64* %15, align 8, !dbg !23144
  %677 = shl i64 %676, 23, !dbg !23144
  %678 = or i64 %675, %677, !dbg !23144
  %679 = xor i64 %673, %678, !dbg !23144
  %680 = add i64 %662, %679, !dbg !23144
  %681 = load i64, i64* %9, align 8, !dbg !23144
  %682 = load i64, i64* %15, align 8, !dbg !23144
  %683 = load i64, i64* %16, align 8, !dbg !23144
  %684 = load i64, i64* %9, align 8, !dbg !23144
  %685 = xor i64 %683, %684, !dbg !23144
  %686 = and i64 %682, %685, !dbg !23144
  %687 = xor i64 %681, %686, !dbg !23144
  %688 = add i64 %680, %687, !dbg !23144
  %689 = load i32, i32* %5, align 4, !dbg !23144
  %690 = sext i32 %689 to i64, !dbg !23144
  %691 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %690, !dbg !23144
  %692 = load i64, i64* %691, align 8, !dbg !23144
  %693 = add i64 %688, %692, !dbg !23144
  %694 = load i32, i32* %5, align 4, !dbg !23144
  %695 = sext i32 %694 to i64, !dbg !23144
  %696 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %695, !dbg !23144
  %697 = load i64, i64* %696, align 8, !dbg !23144
  %698 = add i64 %693, %697, !dbg !23144
  store i64 %698, i64* %6, align 8, !dbg !23144
  %699 = load i64, i64* %11, align 8, !dbg !23144
  %700 = lshr i64 %699, 28, !dbg !23144
  %701 = load i64, i64* %11, align 8, !dbg !23144
  %702 = shl i64 %701, 36, !dbg !23144
  %703 = or i64 %700, %702, !dbg !23144
  %704 = load i64, i64* %11, align 8, !dbg !23144
  %705 = lshr i64 %704, 34, !dbg !23144
  %706 = load i64, i64* %11, align 8, !dbg !23144
  %707 = shl i64 %706, 30, !dbg !23144
  %708 = or i64 %705, %707, !dbg !23144
  %709 = xor i64 %703, %708, !dbg !23144
  %710 = load i64, i64* %11, align 8, !dbg !23144
  %711 = lshr i64 %710, 39, !dbg !23144
  %712 = load i64, i64* %11, align 8, !dbg !23144
  %713 = shl i64 %712, 25, !dbg !23144
  %714 = or i64 %711, %713, !dbg !23144
  %715 = xor i64 %709, %714, !dbg !23144
  %716 = load i64, i64* %11, align 8, !dbg !23144
  %717 = load i64, i64* %12, align 8, !dbg !23144
  %718 = and i64 %716, %717, !dbg !23144
  %719 = load i64, i64* %13, align 8, !dbg !23144
  %720 = load i64, i64* %11, align 8, !dbg !23144
  %721 = load i64, i64* %12, align 8, !dbg !23144
  %722 = or i64 %720, %721, !dbg !23144
  %723 = and i64 %719, %722, !dbg !23144
  %724 = or i64 %718, %723, !dbg !23144
  %725 = add i64 %715, %724, !dbg !23144
  store i64 %725, i64* %7, align 8, !dbg !23144
  %726 = load i64, i64* %6, align 8, !dbg !23144
  %727 = load i64, i64* %14, align 8, !dbg !23144
  %728 = add i64 %727, %726, !dbg !23144
  store i64 %728, i64* %14, align 8, !dbg !23144
  %729 = load i64, i64* %6, align 8, !dbg !23144
  %730 = load i64, i64* %7, align 8, !dbg !23144
  %731 = add i64 %729, %730, !dbg !23144
  store i64 %731, i64* %10, align 8, !dbg !23144
  %732 = load i32, i32* %5, align 4, !dbg !23146
  %733 = add nsw i32 %732, 1, !dbg !23146
  store i32 %733, i32* %5, align 4, !dbg !23146
  %734 = load i64, i64* %9, align 8, !dbg !23147
  %735 = load i64, i64* %14, align 8, !dbg !23147
  %736 = lshr i64 %735, 14, !dbg !23147
  %737 = load i64, i64* %14, align 8, !dbg !23147
  %738 = shl i64 %737, 50, !dbg !23147
  %739 = or i64 %736, %738, !dbg !23147
  %740 = load i64, i64* %14, align 8, !dbg !23147
  %741 = lshr i64 %740, 18, !dbg !23147
  %742 = load i64, i64* %14, align 8, !dbg !23147
  %743 = shl i64 %742, 46, !dbg !23147
  %744 = or i64 %741, %743, !dbg !23147
  %745 = xor i64 %739, %744, !dbg !23147
  %746 = load i64, i64* %14, align 8, !dbg !23147
  %747 = lshr i64 %746, 41, !dbg !23147
  %748 = load i64, i64* %14, align 8, !dbg !23147
  %749 = shl i64 %748, 23, !dbg !23147
  %750 = or i64 %747, %749, !dbg !23147
  %751 = xor i64 %745, %750, !dbg !23147
  %752 = add i64 %734, %751, !dbg !23147
  %753 = load i64, i64* %16, align 8, !dbg !23147
  %754 = load i64, i64* %14, align 8, !dbg !23147
  %755 = load i64, i64* %15, align 8, !dbg !23147
  %756 = load i64, i64* %16, align 8, !dbg !23147
  %757 = xor i64 %755, %756, !dbg !23147
  %758 = and i64 %754, %757, !dbg !23147
  %759 = xor i64 %753, %758, !dbg !23147
  %760 = add i64 %752, %759, !dbg !23147
  %761 = load i32, i32* %5, align 4, !dbg !23147
  %762 = sext i32 %761 to i64, !dbg !23147
  %763 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %762, !dbg !23147
  %764 = load i64, i64* %763, align 8, !dbg !23147
  %765 = add i64 %760, %764, !dbg !23147
  %766 = load i32, i32* %5, align 4, !dbg !23147
  %767 = sext i32 %766 to i64, !dbg !23147
  %768 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %767, !dbg !23147
  %769 = load i64, i64* %768, align 8, !dbg !23147
  %770 = add i64 %765, %769, !dbg !23147
  store i64 %770, i64* %6, align 8, !dbg !23147
  %771 = load i64, i64* %10, align 8, !dbg !23147
  %772 = lshr i64 %771, 28, !dbg !23147
  %773 = load i64, i64* %10, align 8, !dbg !23147
  %774 = shl i64 %773, 36, !dbg !23147
  %775 = or i64 %772, %774, !dbg !23147
  %776 = load i64, i64* %10, align 8, !dbg !23147
  %777 = lshr i64 %776, 34, !dbg !23147
  %778 = load i64, i64* %10, align 8, !dbg !23147
  %779 = shl i64 %778, 30, !dbg !23147
  %780 = or i64 %777, %779, !dbg !23147
  %781 = xor i64 %775, %780, !dbg !23147
  %782 = load i64, i64* %10, align 8, !dbg !23147
  %783 = lshr i64 %782, 39, !dbg !23147
  %784 = load i64, i64* %10, align 8, !dbg !23147
  %785 = shl i64 %784, 25, !dbg !23147
  %786 = or i64 %783, %785, !dbg !23147
  %787 = xor i64 %781, %786, !dbg !23147
  %788 = load i64, i64* %10, align 8, !dbg !23147
  %789 = load i64, i64* %11, align 8, !dbg !23147
  %790 = and i64 %788, %789, !dbg !23147
  %791 = load i64, i64* %12, align 8, !dbg !23147
  %792 = load i64, i64* %10, align 8, !dbg !23147
  %793 = load i64, i64* %11, align 8, !dbg !23147
  %794 = or i64 %792, %793, !dbg !23147
  %795 = and i64 %791, %794, !dbg !23147
  %796 = or i64 %790, %795, !dbg !23147
  %797 = add i64 %787, %796, !dbg !23147
  store i64 %797, i64* %7, align 8, !dbg !23147
  %798 = load i64, i64* %6, align 8, !dbg !23147
  %799 = load i64, i64* %13, align 8, !dbg !23147
  %800 = add i64 %799, %798, !dbg !23147
  store i64 %800, i64* %13, align 8, !dbg !23147
  %801 = load i64, i64* %6, align 8, !dbg !23147
  %802 = load i64, i64* %7, align 8, !dbg !23147
  %803 = add i64 %801, %802, !dbg !23147
  store i64 %803, i64* %9, align 8, !dbg !23147
  %804 = load i32, i32* %5, align 4, !dbg !23149
  %805 = add nsw i32 %804, 1, !dbg !23149
  store i32 %805, i32* %5, align 4, !dbg !23149
  br label %806, !dbg !23150

806:                                              ; preds = %229
  %807 = load i32, i32* %5, align 4, !dbg !23151
  %808 = icmp slt i32 %807, 80, !dbg !23152
  br i1 %808, label %229, label %809, !dbg !23150, !llvm.loop !23153

809:                                              ; preds = %806
  %810 = load i64, i64* %9, align 8, !dbg !23155
  %811 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23156
  %812 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %811, i32 0, i32 1, !dbg !23157
  %813 = getelementptr inbounds [8 x i64], [8 x i64]* %812, i64 0, i64 0, !dbg !23156
  %814 = load i64, i64* %813, align 8, !dbg !23158
  %815 = add i64 %814, %810, !dbg !23158
  store i64 %815, i64* %813, align 8, !dbg !23158
  %816 = load i64, i64* %10, align 8, !dbg !23159
  %817 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23160
  %818 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %817, i32 0, i32 1, !dbg !23161
  %819 = getelementptr inbounds [8 x i64], [8 x i64]* %818, i64 0, i64 1, !dbg !23160
  %820 = load i64, i64* %819, align 8, !dbg !23162
  %821 = add i64 %820, %816, !dbg !23162
  store i64 %821, i64* %819, align 8, !dbg !23162
  %822 = load i64, i64* %11, align 8, !dbg !23163
  %823 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23164
  %824 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %823, i32 0, i32 1, !dbg !23165
  %825 = getelementptr inbounds [8 x i64], [8 x i64]* %824, i64 0, i64 2, !dbg !23164
  %826 = load i64, i64* %825, align 8, !dbg !23166
  %827 = add i64 %826, %822, !dbg !23166
  store i64 %827, i64* %825, align 8, !dbg !23166
  %828 = load i64, i64* %12, align 8, !dbg !23167
  %829 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23168
  %830 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %829, i32 0, i32 1, !dbg !23169
  %831 = getelementptr inbounds [8 x i64], [8 x i64]* %830, i64 0, i64 3, !dbg !23168
  %832 = load i64, i64* %831, align 8, !dbg !23170
  %833 = add i64 %832, %828, !dbg !23170
  store i64 %833, i64* %831, align 8, !dbg !23170
  %834 = load i64, i64* %13, align 8, !dbg !23171
  %835 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23172
  %836 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %835, i32 0, i32 1, !dbg !23173
  %837 = getelementptr inbounds [8 x i64], [8 x i64]* %836, i64 0, i64 4, !dbg !23172
  %838 = load i64, i64* %837, align 8, !dbg !23174
  %839 = add i64 %838, %834, !dbg !23174
  store i64 %839, i64* %837, align 8, !dbg !23174
  %840 = load i64, i64* %14, align 8, !dbg !23175
  %841 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23176
  %842 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %841, i32 0, i32 1, !dbg !23177
  %843 = getelementptr inbounds [8 x i64], [8 x i64]* %842, i64 0, i64 5, !dbg !23176
  %844 = load i64, i64* %843, align 8, !dbg !23178
  %845 = add i64 %844, %840, !dbg !23178
  store i64 %845, i64* %843, align 8, !dbg !23178
  %846 = load i64, i64* %15, align 8, !dbg !23179
  %847 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23180
  %848 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %847, i32 0, i32 1, !dbg !23181
  %849 = getelementptr inbounds [8 x i64], [8 x i64]* %848, i64 0, i64 6, !dbg !23180
  %850 = load i64, i64* %849, align 8, !dbg !23182
  %851 = add i64 %850, %846, !dbg !23182
  store i64 %851, i64* %849, align 8, !dbg !23182
  %852 = load i64, i64* %16, align 8, !dbg !23183
  %853 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23184
  %854 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %853, i32 0, i32 1, !dbg !23185
  %855 = getelementptr inbounds [8 x i64], [8 x i64]* %854, i64 0, i64 7, !dbg !23184
  %856 = load i64, i64* %855, align 8, !dbg !23186
  %857 = add i64 %856, %852, !dbg !23186
  store i64 %857, i64* %855, align 8, !dbg !23186
  ret void, !dbg !23187
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %0, i8* %1, i64 %2) #0 !dbg !23188 {
  %4 = alloca %struct.mbedtls_sha512_context*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %4, metadata !23191, metadata !DIExpression()), !dbg !23192
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !23193, metadata !DIExpression()), !dbg !23194
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !23195, metadata !DIExpression()), !dbg !23196
  call void @llvm.dbg.declare(metadata i64* %7, metadata !23197, metadata !DIExpression()), !dbg !23198
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23199, metadata !DIExpression()), !dbg !23200
  %9 = load i64, i64* %6, align 8, !dbg !23201
  %10 = icmp eq i64 %9, 0, !dbg !23203
  br i1 %10, label %11, label %12, !dbg !23204

11:                                               ; preds = %3
  br label %89, !dbg !23205

12:                                               ; preds = %3
  %13 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23206
  %14 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %13, i32 0, i32 0, !dbg !23207
  %15 = getelementptr inbounds [2 x i64], [2 x i64]* %14, i64 0, i64 0, !dbg !23206
  %16 = load i64, i64* %15, align 8, !dbg !23206
  %17 = and i64 %16, 127, !dbg !23208
  %18 = trunc i64 %17 to i32, !dbg !23209
  store i32 %18, i32* %8, align 4, !dbg !23210
  %19 = load i32, i32* %8, align 4, !dbg !23211
  %20 = sub i32 128, %19, !dbg !23212
  %21 = zext i32 %20 to i64, !dbg !23213
  store i64 %21, i64* %7, align 8, !dbg !23214
  %22 = load i64, i64* %6, align 8, !dbg !23215
  %23 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23216
  %24 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %23, i32 0, i32 0, !dbg !23217
  %25 = getelementptr inbounds [2 x i64], [2 x i64]* %24, i64 0, i64 0, !dbg !23216
  %26 = load i64, i64* %25, align 8, !dbg !23218
  %27 = add i64 %26, %22, !dbg !23218
  store i64 %27, i64* %25, align 8, !dbg !23218
  %28 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23219
  %29 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %28, i32 0, i32 0, !dbg !23221
  %30 = getelementptr inbounds [2 x i64], [2 x i64]* %29, i64 0, i64 0, !dbg !23219
  %31 = load i64, i64* %30, align 8, !dbg !23219
  %32 = load i64, i64* %6, align 8, !dbg !23222
  %33 = icmp ult i64 %31, %32, !dbg !23223
  br i1 %33, label %34, label %40, !dbg !23224

34:                                               ; preds = %12
  %35 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23225
  %36 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %35, i32 0, i32 0, !dbg !23226
  %37 = getelementptr inbounds [2 x i64], [2 x i64]* %36, i64 0, i64 1, !dbg !23225
  %38 = load i64, i64* %37, align 8, !dbg !23227
  %39 = add i64 %38, 1, !dbg !23227
  store i64 %39, i64* %37, align 8, !dbg !23227
  br label %40, !dbg !23225

40:                                               ; preds = %34, %12
  %41 = load i32, i32* %8, align 4, !dbg !23228
  %42 = icmp ne i32 %41, 0, !dbg !23228
  br i1 %42, label %43, label %66, !dbg !23230

43:                                               ; preds = %40
  %44 = load i64, i64* %6, align 8, !dbg !23231
  %45 = load i64, i64* %7, align 8, !dbg !23232
  %46 = icmp uge i64 %44, %45, !dbg !23233
  br i1 %46, label %47, label %66, !dbg !23234

47:                                               ; preds = %43
  %48 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23235
  %49 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %48, i32 0, i32 2, !dbg !23237
  %50 = getelementptr inbounds [128 x i8], [128 x i8]* %49, i64 0, i64 0, !dbg !23235
  %51 = load i32, i32* %8, align 4, !dbg !23238
  %52 = zext i32 %51 to i64, !dbg !23239
  %53 = getelementptr inbounds i8, i8* %50, i64 %52, !dbg !23239
  %54 = load i8*, i8** %5, align 8, !dbg !23240
  %55 = load i64, i64* %7, align 8, !dbg !23241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 %55, i1 false), !dbg !23242
  %56 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23243
  %57 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23244
  %58 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %57, i32 0, i32 2, !dbg !23245
  %59 = getelementptr inbounds [128 x i8], [128 x i8]* %58, i64 0, i64 0, !dbg !23244
  call void @mbedtls_sha512_process(%struct.mbedtls_sha512_context* %56, i8* %59), !dbg !23246
  %60 = load i64, i64* %7, align 8, !dbg !23247
  %61 = load i8*, i8** %5, align 8, !dbg !23248
  %62 = getelementptr inbounds i8, i8* %61, i64 %60, !dbg !23248
  store i8* %62, i8** %5, align 8, !dbg !23248
  %63 = load i64, i64* %7, align 8, !dbg !23249
  %64 = load i64, i64* %6, align 8, !dbg !23250
  %65 = sub i64 %64, %63, !dbg !23250
  store i64 %65, i64* %6, align 8, !dbg !23250
  store i32 0, i32* %8, align 4, !dbg !23251
  br label %66, !dbg !23252

66:                                               ; preds = %47, %43, %40
  br label %67, !dbg !23253

67:                                               ; preds = %70, %66
  %68 = load i64, i64* %6, align 8, !dbg !23254
  %69 = icmp uge i64 %68, 128, !dbg !23255
  br i1 %69, label %70, label %77, !dbg !23253

70:                                               ; preds = %67
  %71 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23256
  %72 = load i8*, i8** %5, align 8, !dbg !23258
  call void @mbedtls_sha512_process(%struct.mbedtls_sha512_context* %71, i8* %72), !dbg !23259
  %73 = load i8*, i8** %5, align 8, !dbg !23260
  %74 = getelementptr inbounds i8, i8* %73, i64 128, !dbg !23260
  store i8* %74, i8** %5, align 8, !dbg !23260
  %75 = load i64, i64* %6, align 8, !dbg !23261
  %76 = sub i64 %75, 128, !dbg !23261
  store i64 %76, i64* %6, align 8, !dbg !23261
  br label %67, !dbg !23253, !llvm.loop !23262

77:                                               ; preds = %67
  %78 = load i64, i64* %6, align 8, !dbg !23264
  %79 = icmp ugt i64 %78, 0, !dbg !23266
  br i1 %79, label %80, label %89, !dbg !23267

80:                                               ; preds = %77
  %81 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %4, align 8, !dbg !23268
  %82 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %81, i32 0, i32 2, !dbg !23269
  %83 = getelementptr inbounds [128 x i8], [128 x i8]* %82, i64 0, i64 0, !dbg !23268
  %84 = load i32, i32* %8, align 4, !dbg !23270
  %85 = zext i32 %84 to i64, !dbg !23271
  %86 = getelementptr inbounds i8, i8* %83, i64 %85, !dbg !23271
  %87 = load i8*, i8** %5, align 8, !dbg !23272
  %88 = load i64, i64* %6, align 8, !dbg !23273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %87, i64 %88, i1 false), !dbg !23274
  br label %89, !dbg !23274

89:                                               ; preds = %11, %80, %77
  ret void, !dbg !23275
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512_finish(%struct.mbedtls_sha512_context* %0, i8* %1) #0 !dbg !23276 {
  %3 = alloca %struct.mbedtls_sha512_context*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca [16 x i8], align 16
  store %struct.mbedtls_sha512_context* %0, %struct.mbedtls_sha512_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context** %3, metadata !23279, metadata !DIExpression()), !dbg !23280
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !23281, metadata !DIExpression()), !dbg !23282
  call void @llvm.dbg.declare(metadata i64* %5, metadata !23283, metadata !DIExpression()), !dbg !23284
  call void @llvm.dbg.declare(metadata i64* %6, metadata !23285, metadata !DIExpression()), !dbg !23286
  call void @llvm.dbg.declare(metadata i64* %7, metadata !23287, metadata !DIExpression()), !dbg !23288
  call void @llvm.dbg.declare(metadata i64* %8, metadata !23289, metadata !DIExpression()), !dbg !23290
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !23291, metadata !DIExpression()), !dbg !23292
  %10 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23293
  %11 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %10, i32 0, i32 0, !dbg !23294
  %12 = getelementptr inbounds [2 x i64], [2 x i64]* %11, i64 0, i64 0, !dbg !23293
  %13 = load i64, i64* %12, align 8, !dbg !23293
  %14 = lshr i64 %13, 61, !dbg !23295
  %15 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23296
  %16 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %15, i32 0, i32 0, !dbg !23297
  %17 = getelementptr inbounds [2 x i64], [2 x i64]* %16, i64 0, i64 1, !dbg !23296
  %18 = load i64, i64* %17, align 8, !dbg !23296
  %19 = shl i64 %18, 3, !dbg !23298
  %20 = or i64 %14, %19, !dbg !23299
  store i64 %20, i64* %7, align 8, !dbg !23300
  %21 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23301
  %22 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %21, i32 0, i32 0, !dbg !23302
  %23 = getelementptr inbounds [2 x i64], [2 x i64]* %22, i64 0, i64 0, !dbg !23301
  %24 = load i64, i64* %23, align 8, !dbg !23301
  %25 = shl i64 %24, 3, !dbg !23303
  store i64 %25, i64* %8, align 8, !dbg !23304
  %26 = load i64, i64* %7, align 8, !dbg !23305
  %27 = lshr i64 %26, 56, !dbg !23305
  %28 = trunc i64 %27 to i8, !dbg !23305
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !23305
  store i8 %28, i8* %29, align 16, !dbg !23305
  %30 = load i64, i64* %7, align 8, !dbg !23305
  %31 = lshr i64 %30, 48, !dbg !23305
  %32 = trunc i64 %31 to i8, !dbg !23305
  %33 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 1, !dbg !23305
  store i8 %32, i8* %33, align 1, !dbg !23305
  %34 = load i64, i64* %7, align 8, !dbg !23305
  %35 = lshr i64 %34, 40, !dbg !23305
  %36 = trunc i64 %35 to i8, !dbg !23305
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 2, !dbg !23305
  store i8 %36, i8* %37, align 2, !dbg !23305
  %38 = load i64, i64* %7, align 8, !dbg !23305
  %39 = lshr i64 %38, 32, !dbg !23305
  %40 = trunc i64 %39 to i8, !dbg !23305
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 3, !dbg !23305
  store i8 %40, i8* %41, align 1, !dbg !23305
  %42 = load i64, i64* %7, align 8, !dbg !23305
  %43 = lshr i64 %42, 24, !dbg !23305
  %44 = trunc i64 %43 to i8, !dbg !23305
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 4, !dbg !23305
  store i8 %44, i8* %45, align 4, !dbg !23305
  %46 = load i64, i64* %7, align 8, !dbg !23305
  %47 = lshr i64 %46, 16, !dbg !23305
  %48 = trunc i64 %47 to i8, !dbg !23305
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 5, !dbg !23305
  store i8 %48, i8* %49, align 1, !dbg !23305
  %50 = load i64, i64* %7, align 8, !dbg !23305
  %51 = lshr i64 %50, 8, !dbg !23305
  %52 = trunc i64 %51 to i8, !dbg !23305
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 6, !dbg !23305
  store i8 %52, i8* %53, align 2, !dbg !23305
  %54 = load i64, i64* %7, align 8, !dbg !23305
  %55 = trunc i64 %54 to i8, !dbg !23305
  %56 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 7, !dbg !23305
  store i8 %55, i8* %56, align 1, !dbg !23305
  %57 = load i64, i64* %8, align 8, !dbg !23307
  %58 = lshr i64 %57, 56, !dbg !23307
  %59 = trunc i64 %58 to i8, !dbg !23307
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 8, !dbg !23307
  store i8 %59, i8* %60, align 8, !dbg !23307
  %61 = load i64, i64* %8, align 8, !dbg !23307
  %62 = lshr i64 %61, 48, !dbg !23307
  %63 = trunc i64 %62 to i8, !dbg !23307
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 9, !dbg !23307
  store i8 %63, i8* %64, align 1, !dbg !23307
  %65 = load i64, i64* %8, align 8, !dbg !23307
  %66 = lshr i64 %65, 40, !dbg !23307
  %67 = trunc i64 %66 to i8, !dbg !23307
  %68 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 10, !dbg !23307
  store i8 %67, i8* %68, align 2, !dbg !23307
  %69 = load i64, i64* %8, align 8, !dbg !23307
  %70 = lshr i64 %69, 32, !dbg !23307
  %71 = trunc i64 %70 to i8, !dbg !23307
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 11, !dbg !23307
  store i8 %71, i8* %72, align 1, !dbg !23307
  %73 = load i64, i64* %8, align 8, !dbg !23307
  %74 = lshr i64 %73, 24, !dbg !23307
  %75 = trunc i64 %74 to i8, !dbg !23307
  %76 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 12, !dbg !23307
  store i8 %75, i8* %76, align 4, !dbg !23307
  %77 = load i64, i64* %8, align 8, !dbg !23307
  %78 = lshr i64 %77, 16, !dbg !23307
  %79 = trunc i64 %78 to i8, !dbg !23307
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 13, !dbg !23307
  store i8 %79, i8* %80, align 1, !dbg !23307
  %81 = load i64, i64* %8, align 8, !dbg !23307
  %82 = lshr i64 %81, 8, !dbg !23307
  %83 = trunc i64 %82 to i8, !dbg !23307
  %84 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 14, !dbg !23307
  store i8 %83, i8* %84, align 2, !dbg !23307
  %85 = load i64, i64* %8, align 8, !dbg !23307
  %86 = trunc i64 %85 to i8, !dbg !23307
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 15, !dbg !23307
  store i8 %86, i8* %87, align 1, !dbg !23307
  %88 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23309
  %89 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %88, i32 0, i32 0, !dbg !23310
  %90 = getelementptr inbounds [2 x i64], [2 x i64]* %89, i64 0, i64 0, !dbg !23309
  %91 = load i64, i64* %90, align 8, !dbg !23309
  %92 = and i64 %91, 127, !dbg !23311
  store i64 %92, i64* %5, align 8, !dbg !23312
  %93 = load i64, i64* %5, align 8, !dbg !23313
  %94 = icmp ult i64 %93, 112, !dbg !23314
  br i1 %94, label %95, label %98, !dbg !23315

95:                                               ; preds = %2
  %96 = load i64, i64* %5, align 8, !dbg !23316
  %97 = sub i64 112, %96, !dbg !23317
  br label %101, !dbg !23315

98:                                               ; preds = %2
  %99 = load i64, i64* %5, align 8, !dbg !23318
  %100 = sub i64 240, %99, !dbg !23319
  br label %101, !dbg !23315

101:                                              ; preds = %98, %95
  %102 = phi i64 [ %97, %95 ], [ %100, %98 ], !dbg !23315
  store i64 %102, i64* %6, align 8, !dbg !23320
  %103 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23321
  %104 = load i64, i64* %6, align 8, !dbg !23322
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %103, i8* getelementptr inbounds ([128 x i8], [128 x i8]* bitcast (<{ i8, [127 x i8] }>* @sha512_padding to [128 x i8]*), i64 0, i64 0), i64 %104), !dbg !23323
  %105 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23324
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !23325
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %105, i8* %106, i64 16), !dbg !23326
  %107 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %108 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %107, i32 0, i32 1, !dbg !23327
  %109 = getelementptr inbounds [8 x i64], [8 x i64]* %108, i64 0, i64 0, !dbg !23327
  %110 = load i64, i64* %109, align 8, !dbg !23327
  %111 = lshr i64 %110, 56, !dbg !23327
  %112 = trunc i64 %111 to i8, !dbg !23327
  %113 = load i8*, i8** %4, align 8, !dbg !23327
  %114 = getelementptr inbounds i8, i8* %113, i64 0, !dbg !23327
  store i8 %112, i8* %114, align 1, !dbg !23327
  %115 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %116 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %115, i32 0, i32 1, !dbg !23327
  %117 = getelementptr inbounds [8 x i64], [8 x i64]* %116, i64 0, i64 0, !dbg !23327
  %118 = load i64, i64* %117, align 8, !dbg !23327
  %119 = lshr i64 %118, 48, !dbg !23327
  %120 = trunc i64 %119 to i8, !dbg !23327
  %121 = load i8*, i8** %4, align 8, !dbg !23327
  %122 = getelementptr inbounds i8, i8* %121, i64 1, !dbg !23327
  store i8 %120, i8* %122, align 1, !dbg !23327
  %123 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %124 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %123, i32 0, i32 1, !dbg !23327
  %125 = getelementptr inbounds [8 x i64], [8 x i64]* %124, i64 0, i64 0, !dbg !23327
  %126 = load i64, i64* %125, align 8, !dbg !23327
  %127 = lshr i64 %126, 40, !dbg !23327
  %128 = trunc i64 %127 to i8, !dbg !23327
  %129 = load i8*, i8** %4, align 8, !dbg !23327
  %130 = getelementptr inbounds i8, i8* %129, i64 2, !dbg !23327
  store i8 %128, i8* %130, align 1, !dbg !23327
  %131 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %132 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %131, i32 0, i32 1, !dbg !23327
  %133 = getelementptr inbounds [8 x i64], [8 x i64]* %132, i64 0, i64 0, !dbg !23327
  %134 = load i64, i64* %133, align 8, !dbg !23327
  %135 = lshr i64 %134, 32, !dbg !23327
  %136 = trunc i64 %135 to i8, !dbg !23327
  %137 = load i8*, i8** %4, align 8, !dbg !23327
  %138 = getelementptr inbounds i8, i8* %137, i64 3, !dbg !23327
  store i8 %136, i8* %138, align 1, !dbg !23327
  %139 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %140 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %139, i32 0, i32 1, !dbg !23327
  %141 = getelementptr inbounds [8 x i64], [8 x i64]* %140, i64 0, i64 0, !dbg !23327
  %142 = load i64, i64* %141, align 8, !dbg !23327
  %143 = lshr i64 %142, 24, !dbg !23327
  %144 = trunc i64 %143 to i8, !dbg !23327
  %145 = load i8*, i8** %4, align 8, !dbg !23327
  %146 = getelementptr inbounds i8, i8* %145, i64 4, !dbg !23327
  store i8 %144, i8* %146, align 1, !dbg !23327
  %147 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %148 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %147, i32 0, i32 1, !dbg !23327
  %149 = getelementptr inbounds [8 x i64], [8 x i64]* %148, i64 0, i64 0, !dbg !23327
  %150 = load i64, i64* %149, align 8, !dbg !23327
  %151 = lshr i64 %150, 16, !dbg !23327
  %152 = trunc i64 %151 to i8, !dbg !23327
  %153 = load i8*, i8** %4, align 8, !dbg !23327
  %154 = getelementptr inbounds i8, i8* %153, i64 5, !dbg !23327
  store i8 %152, i8* %154, align 1, !dbg !23327
  %155 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %156 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %155, i32 0, i32 1, !dbg !23327
  %157 = getelementptr inbounds [8 x i64], [8 x i64]* %156, i64 0, i64 0, !dbg !23327
  %158 = load i64, i64* %157, align 8, !dbg !23327
  %159 = lshr i64 %158, 8, !dbg !23327
  %160 = trunc i64 %159 to i8, !dbg !23327
  %161 = load i8*, i8** %4, align 8, !dbg !23327
  %162 = getelementptr inbounds i8, i8* %161, i64 6, !dbg !23327
  store i8 %160, i8* %162, align 1, !dbg !23327
  %163 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23327
  %164 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %163, i32 0, i32 1, !dbg !23327
  %165 = getelementptr inbounds [8 x i64], [8 x i64]* %164, i64 0, i64 0, !dbg !23327
  %166 = load i64, i64* %165, align 8, !dbg !23327
  %167 = trunc i64 %166 to i8, !dbg !23327
  %168 = load i8*, i8** %4, align 8, !dbg !23327
  %169 = getelementptr inbounds i8, i8* %168, i64 7, !dbg !23327
  store i8 %167, i8* %169, align 1, !dbg !23327
  %170 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %171 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %170, i32 0, i32 1, !dbg !23329
  %172 = getelementptr inbounds [8 x i64], [8 x i64]* %171, i64 0, i64 1, !dbg !23329
  %173 = load i64, i64* %172, align 8, !dbg !23329
  %174 = lshr i64 %173, 56, !dbg !23329
  %175 = trunc i64 %174 to i8, !dbg !23329
  %176 = load i8*, i8** %4, align 8, !dbg !23329
  %177 = getelementptr inbounds i8, i8* %176, i64 8, !dbg !23329
  store i8 %175, i8* %177, align 1, !dbg !23329
  %178 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %179 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %178, i32 0, i32 1, !dbg !23329
  %180 = getelementptr inbounds [8 x i64], [8 x i64]* %179, i64 0, i64 1, !dbg !23329
  %181 = load i64, i64* %180, align 8, !dbg !23329
  %182 = lshr i64 %181, 48, !dbg !23329
  %183 = trunc i64 %182 to i8, !dbg !23329
  %184 = load i8*, i8** %4, align 8, !dbg !23329
  %185 = getelementptr inbounds i8, i8* %184, i64 9, !dbg !23329
  store i8 %183, i8* %185, align 1, !dbg !23329
  %186 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %187 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %186, i32 0, i32 1, !dbg !23329
  %188 = getelementptr inbounds [8 x i64], [8 x i64]* %187, i64 0, i64 1, !dbg !23329
  %189 = load i64, i64* %188, align 8, !dbg !23329
  %190 = lshr i64 %189, 40, !dbg !23329
  %191 = trunc i64 %190 to i8, !dbg !23329
  %192 = load i8*, i8** %4, align 8, !dbg !23329
  %193 = getelementptr inbounds i8, i8* %192, i64 10, !dbg !23329
  store i8 %191, i8* %193, align 1, !dbg !23329
  %194 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %195 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %194, i32 0, i32 1, !dbg !23329
  %196 = getelementptr inbounds [8 x i64], [8 x i64]* %195, i64 0, i64 1, !dbg !23329
  %197 = load i64, i64* %196, align 8, !dbg !23329
  %198 = lshr i64 %197, 32, !dbg !23329
  %199 = trunc i64 %198 to i8, !dbg !23329
  %200 = load i8*, i8** %4, align 8, !dbg !23329
  %201 = getelementptr inbounds i8, i8* %200, i64 11, !dbg !23329
  store i8 %199, i8* %201, align 1, !dbg !23329
  %202 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %203 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %202, i32 0, i32 1, !dbg !23329
  %204 = getelementptr inbounds [8 x i64], [8 x i64]* %203, i64 0, i64 1, !dbg !23329
  %205 = load i64, i64* %204, align 8, !dbg !23329
  %206 = lshr i64 %205, 24, !dbg !23329
  %207 = trunc i64 %206 to i8, !dbg !23329
  %208 = load i8*, i8** %4, align 8, !dbg !23329
  %209 = getelementptr inbounds i8, i8* %208, i64 12, !dbg !23329
  store i8 %207, i8* %209, align 1, !dbg !23329
  %210 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %211 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %210, i32 0, i32 1, !dbg !23329
  %212 = getelementptr inbounds [8 x i64], [8 x i64]* %211, i64 0, i64 1, !dbg !23329
  %213 = load i64, i64* %212, align 8, !dbg !23329
  %214 = lshr i64 %213, 16, !dbg !23329
  %215 = trunc i64 %214 to i8, !dbg !23329
  %216 = load i8*, i8** %4, align 8, !dbg !23329
  %217 = getelementptr inbounds i8, i8* %216, i64 13, !dbg !23329
  store i8 %215, i8* %217, align 1, !dbg !23329
  %218 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %219 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %218, i32 0, i32 1, !dbg !23329
  %220 = getelementptr inbounds [8 x i64], [8 x i64]* %219, i64 0, i64 1, !dbg !23329
  %221 = load i64, i64* %220, align 8, !dbg !23329
  %222 = lshr i64 %221, 8, !dbg !23329
  %223 = trunc i64 %222 to i8, !dbg !23329
  %224 = load i8*, i8** %4, align 8, !dbg !23329
  %225 = getelementptr inbounds i8, i8* %224, i64 14, !dbg !23329
  store i8 %223, i8* %225, align 1, !dbg !23329
  %226 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23329
  %227 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %226, i32 0, i32 1, !dbg !23329
  %228 = getelementptr inbounds [8 x i64], [8 x i64]* %227, i64 0, i64 1, !dbg !23329
  %229 = load i64, i64* %228, align 8, !dbg !23329
  %230 = trunc i64 %229 to i8, !dbg !23329
  %231 = load i8*, i8** %4, align 8, !dbg !23329
  %232 = getelementptr inbounds i8, i8* %231, i64 15, !dbg !23329
  store i8 %230, i8* %232, align 1, !dbg !23329
  %233 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %234 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %233, i32 0, i32 1, !dbg !23331
  %235 = getelementptr inbounds [8 x i64], [8 x i64]* %234, i64 0, i64 2, !dbg !23331
  %236 = load i64, i64* %235, align 8, !dbg !23331
  %237 = lshr i64 %236, 56, !dbg !23331
  %238 = trunc i64 %237 to i8, !dbg !23331
  %239 = load i8*, i8** %4, align 8, !dbg !23331
  %240 = getelementptr inbounds i8, i8* %239, i64 16, !dbg !23331
  store i8 %238, i8* %240, align 1, !dbg !23331
  %241 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %242 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %241, i32 0, i32 1, !dbg !23331
  %243 = getelementptr inbounds [8 x i64], [8 x i64]* %242, i64 0, i64 2, !dbg !23331
  %244 = load i64, i64* %243, align 8, !dbg !23331
  %245 = lshr i64 %244, 48, !dbg !23331
  %246 = trunc i64 %245 to i8, !dbg !23331
  %247 = load i8*, i8** %4, align 8, !dbg !23331
  %248 = getelementptr inbounds i8, i8* %247, i64 17, !dbg !23331
  store i8 %246, i8* %248, align 1, !dbg !23331
  %249 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %250 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %249, i32 0, i32 1, !dbg !23331
  %251 = getelementptr inbounds [8 x i64], [8 x i64]* %250, i64 0, i64 2, !dbg !23331
  %252 = load i64, i64* %251, align 8, !dbg !23331
  %253 = lshr i64 %252, 40, !dbg !23331
  %254 = trunc i64 %253 to i8, !dbg !23331
  %255 = load i8*, i8** %4, align 8, !dbg !23331
  %256 = getelementptr inbounds i8, i8* %255, i64 18, !dbg !23331
  store i8 %254, i8* %256, align 1, !dbg !23331
  %257 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %258 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %257, i32 0, i32 1, !dbg !23331
  %259 = getelementptr inbounds [8 x i64], [8 x i64]* %258, i64 0, i64 2, !dbg !23331
  %260 = load i64, i64* %259, align 8, !dbg !23331
  %261 = lshr i64 %260, 32, !dbg !23331
  %262 = trunc i64 %261 to i8, !dbg !23331
  %263 = load i8*, i8** %4, align 8, !dbg !23331
  %264 = getelementptr inbounds i8, i8* %263, i64 19, !dbg !23331
  store i8 %262, i8* %264, align 1, !dbg !23331
  %265 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %266 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %265, i32 0, i32 1, !dbg !23331
  %267 = getelementptr inbounds [8 x i64], [8 x i64]* %266, i64 0, i64 2, !dbg !23331
  %268 = load i64, i64* %267, align 8, !dbg !23331
  %269 = lshr i64 %268, 24, !dbg !23331
  %270 = trunc i64 %269 to i8, !dbg !23331
  %271 = load i8*, i8** %4, align 8, !dbg !23331
  %272 = getelementptr inbounds i8, i8* %271, i64 20, !dbg !23331
  store i8 %270, i8* %272, align 1, !dbg !23331
  %273 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %274 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %273, i32 0, i32 1, !dbg !23331
  %275 = getelementptr inbounds [8 x i64], [8 x i64]* %274, i64 0, i64 2, !dbg !23331
  %276 = load i64, i64* %275, align 8, !dbg !23331
  %277 = lshr i64 %276, 16, !dbg !23331
  %278 = trunc i64 %277 to i8, !dbg !23331
  %279 = load i8*, i8** %4, align 8, !dbg !23331
  %280 = getelementptr inbounds i8, i8* %279, i64 21, !dbg !23331
  store i8 %278, i8* %280, align 1, !dbg !23331
  %281 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %282 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %281, i32 0, i32 1, !dbg !23331
  %283 = getelementptr inbounds [8 x i64], [8 x i64]* %282, i64 0, i64 2, !dbg !23331
  %284 = load i64, i64* %283, align 8, !dbg !23331
  %285 = lshr i64 %284, 8, !dbg !23331
  %286 = trunc i64 %285 to i8, !dbg !23331
  %287 = load i8*, i8** %4, align 8, !dbg !23331
  %288 = getelementptr inbounds i8, i8* %287, i64 22, !dbg !23331
  store i8 %286, i8* %288, align 1, !dbg !23331
  %289 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23331
  %290 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %289, i32 0, i32 1, !dbg !23331
  %291 = getelementptr inbounds [8 x i64], [8 x i64]* %290, i64 0, i64 2, !dbg !23331
  %292 = load i64, i64* %291, align 8, !dbg !23331
  %293 = trunc i64 %292 to i8, !dbg !23331
  %294 = load i8*, i8** %4, align 8, !dbg !23331
  %295 = getelementptr inbounds i8, i8* %294, i64 23, !dbg !23331
  store i8 %293, i8* %295, align 1, !dbg !23331
  %296 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %297 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %296, i32 0, i32 1, !dbg !23333
  %298 = getelementptr inbounds [8 x i64], [8 x i64]* %297, i64 0, i64 3, !dbg !23333
  %299 = load i64, i64* %298, align 8, !dbg !23333
  %300 = lshr i64 %299, 56, !dbg !23333
  %301 = trunc i64 %300 to i8, !dbg !23333
  %302 = load i8*, i8** %4, align 8, !dbg !23333
  %303 = getelementptr inbounds i8, i8* %302, i64 24, !dbg !23333
  store i8 %301, i8* %303, align 1, !dbg !23333
  %304 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %305 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %304, i32 0, i32 1, !dbg !23333
  %306 = getelementptr inbounds [8 x i64], [8 x i64]* %305, i64 0, i64 3, !dbg !23333
  %307 = load i64, i64* %306, align 8, !dbg !23333
  %308 = lshr i64 %307, 48, !dbg !23333
  %309 = trunc i64 %308 to i8, !dbg !23333
  %310 = load i8*, i8** %4, align 8, !dbg !23333
  %311 = getelementptr inbounds i8, i8* %310, i64 25, !dbg !23333
  store i8 %309, i8* %311, align 1, !dbg !23333
  %312 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %313 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %312, i32 0, i32 1, !dbg !23333
  %314 = getelementptr inbounds [8 x i64], [8 x i64]* %313, i64 0, i64 3, !dbg !23333
  %315 = load i64, i64* %314, align 8, !dbg !23333
  %316 = lshr i64 %315, 40, !dbg !23333
  %317 = trunc i64 %316 to i8, !dbg !23333
  %318 = load i8*, i8** %4, align 8, !dbg !23333
  %319 = getelementptr inbounds i8, i8* %318, i64 26, !dbg !23333
  store i8 %317, i8* %319, align 1, !dbg !23333
  %320 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %321 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %320, i32 0, i32 1, !dbg !23333
  %322 = getelementptr inbounds [8 x i64], [8 x i64]* %321, i64 0, i64 3, !dbg !23333
  %323 = load i64, i64* %322, align 8, !dbg !23333
  %324 = lshr i64 %323, 32, !dbg !23333
  %325 = trunc i64 %324 to i8, !dbg !23333
  %326 = load i8*, i8** %4, align 8, !dbg !23333
  %327 = getelementptr inbounds i8, i8* %326, i64 27, !dbg !23333
  store i8 %325, i8* %327, align 1, !dbg !23333
  %328 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %329 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %328, i32 0, i32 1, !dbg !23333
  %330 = getelementptr inbounds [8 x i64], [8 x i64]* %329, i64 0, i64 3, !dbg !23333
  %331 = load i64, i64* %330, align 8, !dbg !23333
  %332 = lshr i64 %331, 24, !dbg !23333
  %333 = trunc i64 %332 to i8, !dbg !23333
  %334 = load i8*, i8** %4, align 8, !dbg !23333
  %335 = getelementptr inbounds i8, i8* %334, i64 28, !dbg !23333
  store i8 %333, i8* %335, align 1, !dbg !23333
  %336 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %337 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %336, i32 0, i32 1, !dbg !23333
  %338 = getelementptr inbounds [8 x i64], [8 x i64]* %337, i64 0, i64 3, !dbg !23333
  %339 = load i64, i64* %338, align 8, !dbg !23333
  %340 = lshr i64 %339, 16, !dbg !23333
  %341 = trunc i64 %340 to i8, !dbg !23333
  %342 = load i8*, i8** %4, align 8, !dbg !23333
  %343 = getelementptr inbounds i8, i8* %342, i64 29, !dbg !23333
  store i8 %341, i8* %343, align 1, !dbg !23333
  %344 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %345 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %344, i32 0, i32 1, !dbg !23333
  %346 = getelementptr inbounds [8 x i64], [8 x i64]* %345, i64 0, i64 3, !dbg !23333
  %347 = load i64, i64* %346, align 8, !dbg !23333
  %348 = lshr i64 %347, 8, !dbg !23333
  %349 = trunc i64 %348 to i8, !dbg !23333
  %350 = load i8*, i8** %4, align 8, !dbg !23333
  %351 = getelementptr inbounds i8, i8* %350, i64 30, !dbg !23333
  store i8 %349, i8* %351, align 1, !dbg !23333
  %352 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23333
  %353 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %352, i32 0, i32 1, !dbg !23333
  %354 = getelementptr inbounds [8 x i64], [8 x i64]* %353, i64 0, i64 3, !dbg !23333
  %355 = load i64, i64* %354, align 8, !dbg !23333
  %356 = trunc i64 %355 to i8, !dbg !23333
  %357 = load i8*, i8** %4, align 8, !dbg !23333
  %358 = getelementptr inbounds i8, i8* %357, i64 31, !dbg !23333
  store i8 %356, i8* %358, align 1, !dbg !23333
  %359 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %360 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %359, i32 0, i32 1, !dbg !23335
  %361 = getelementptr inbounds [8 x i64], [8 x i64]* %360, i64 0, i64 4, !dbg !23335
  %362 = load i64, i64* %361, align 8, !dbg !23335
  %363 = lshr i64 %362, 56, !dbg !23335
  %364 = trunc i64 %363 to i8, !dbg !23335
  %365 = load i8*, i8** %4, align 8, !dbg !23335
  %366 = getelementptr inbounds i8, i8* %365, i64 32, !dbg !23335
  store i8 %364, i8* %366, align 1, !dbg !23335
  %367 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %368 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %367, i32 0, i32 1, !dbg !23335
  %369 = getelementptr inbounds [8 x i64], [8 x i64]* %368, i64 0, i64 4, !dbg !23335
  %370 = load i64, i64* %369, align 8, !dbg !23335
  %371 = lshr i64 %370, 48, !dbg !23335
  %372 = trunc i64 %371 to i8, !dbg !23335
  %373 = load i8*, i8** %4, align 8, !dbg !23335
  %374 = getelementptr inbounds i8, i8* %373, i64 33, !dbg !23335
  store i8 %372, i8* %374, align 1, !dbg !23335
  %375 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %376 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %375, i32 0, i32 1, !dbg !23335
  %377 = getelementptr inbounds [8 x i64], [8 x i64]* %376, i64 0, i64 4, !dbg !23335
  %378 = load i64, i64* %377, align 8, !dbg !23335
  %379 = lshr i64 %378, 40, !dbg !23335
  %380 = trunc i64 %379 to i8, !dbg !23335
  %381 = load i8*, i8** %4, align 8, !dbg !23335
  %382 = getelementptr inbounds i8, i8* %381, i64 34, !dbg !23335
  store i8 %380, i8* %382, align 1, !dbg !23335
  %383 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %384 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %383, i32 0, i32 1, !dbg !23335
  %385 = getelementptr inbounds [8 x i64], [8 x i64]* %384, i64 0, i64 4, !dbg !23335
  %386 = load i64, i64* %385, align 8, !dbg !23335
  %387 = lshr i64 %386, 32, !dbg !23335
  %388 = trunc i64 %387 to i8, !dbg !23335
  %389 = load i8*, i8** %4, align 8, !dbg !23335
  %390 = getelementptr inbounds i8, i8* %389, i64 35, !dbg !23335
  store i8 %388, i8* %390, align 1, !dbg !23335
  %391 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %392 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %391, i32 0, i32 1, !dbg !23335
  %393 = getelementptr inbounds [8 x i64], [8 x i64]* %392, i64 0, i64 4, !dbg !23335
  %394 = load i64, i64* %393, align 8, !dbg !23335
  %395 = lshr i64 %394, 24, !dbg !23335
  %396 = trunc i64 %395 to i8, !dbg !23335
  %397 = load i8*, i8** %4, align 8, !dbg !23335
  %398 = getelementptr inbounds i8, i8* %397, i64 36, !dbg !23335
  store i8 %396, i8* %398, align 1, !dbg !23335
  %399 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %400 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %399, i32 0, i32 1, !dbg !23335
  %401 = getelementptr inbounds [8 x i64], [8 x i64]* %400, i64 0, i64 4, !dbg !23335
  %402 = load i64, i64* %401, align 8, !dbg !23335
  %403 = lshr i64 %402, 16, !dbg !23335
  %404 = trunc i64 %403 to i8, !dbg !23335
  %405 = load i8*, i8** %4, align 8, !dbg !23335
  %406 = getelementptr inbounds i8, i8* %405, i64 37, !dbg !23335
  store i8 %404, i8* %406, align 1, !dbg !23335
  %407 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %408 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %407, i32 0, i32 1, !dbg !23335
  %409 = getelementptr inbounds [8 x i64], [8 x i64]* %408, i64 0, i64 4, !dbg !23335
  %410 = load i64, i64* %409, align 8, !dbg !23335
  %411 = lshr i64 %410, 8, !dbg !23335
  %412 = trunc i64 %411 to i8, !dbg !23335
  %413 = load i8*, i8** %4, align 8, !dbg !23335
  %414 = getelementptr inbounds i8, i8* %413, i64 38, !dbg !23335
  store i8 %412, i8* %414, align 1, !dbg !23335
  %415 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23335
  %416 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %415, i32 0, i32 1, !dbg !23335
  %417 = getelementptr inbounds [8 x i64], [8 x i64]* %416, i64 0, i64 4, !dbg !23335
  %418 = load i64, i64* %417, align 8, !dbg !23335
  %419 = trunc i64 %418 to i8, !dbg !23335
  %420 = load i8*, i8** %4, align 8, !dbg !23335
  %421 = getelementptr inbounds i8, i8* %420, i64 39, !dbg !23335
  store i8 %419, i8* %421, align 1, !dbg !23335
  %422 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %423 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %422, i32 0, i32 1, !dbg !23337
  %424 = getelementptr inbounds [8 x i64], [8 x i64]* %423, i64 0, i64 5, !dbg !23337
  %425 = load i64, i64* %424, align 8, !dbg !23337
  %426 = lshr i64 %425, 56, !dbg !23337
  %427 = trunc i64 %426 to i8, !dbg !23337
  %428 = load i8*, i8** %4, align 8, !dbg !23337
  %429 = getelementptr inbounds i8, i8* %428, i64 40, !dbg !23337
  store i8 %427, i8* %429, align 1, !dbg !23337
  %430 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %431 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %430, i32 0, i32 1, !dbg !23337
  %432 = getelementptr inbounds [8 x i64], [8 x i64]* %431, i64 0, i64 5, !dbg !23337
  %433 = load i64, i64* %432, align 8, !dbg !23337
  %434 = lshr i64 %433, 48, !dbg !23337
  %435 = trunc i64 %434 to i8, !dbg !23337
  %436 = load i8*, i8** %4, align 8, !dbg !23337
  %437 = getelementptr inbounds i8, i8* %436, i64 41, !dbg !23337
  store i8 %435, i8* %437, align 1, !dbg !23337
  %438 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %439 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %438, i32 0, i32 1, !dbg !23337
  %440 = getelementptr inbounds [8 x i64], [8 x i64]* %439, i64 0, i64 5, !dbg !23337
  %441 = load i64, i64* %440, align 8, !dbg !23337
  %442 = lshr i64 %441, 40, !dbg !23337
  %443 = trunc i64 %442 to i8, !dbg !23337
  %444 = load i8*, i8** %4, align 8, !dbg !23337
  %445 = getelementptr inbounds i8, i8* %444, i64 42, !dbg !23337
  store i8 %443, i8* %445, align 1, !dbg !23337
  %446 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %447 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %446, i32 0, i32 1, !dbg !23337
  %448 = getelementptr inbounds [8 x i64], [8 x i64]* %447, i64 0, i64 5, !dbg !23337
  %449 = load i64, i64* %448, align 8, !dbg !23337
  %450 = lshr i64 %449, 32, !dbg !23337
  %451 = trunc i64 %450 to i8, !dbg !23337
  %452 = load i8*, i8** %4, align 8, !dbg !23337
  %453 = getelementptr inbounds i8, i8* %452, i64 43, !dbg !23337
  store i8 %451, i8* %453, align 1, !dbg !23337
  %454 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %455 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %454, i32 0, i32 1, !dbg !23337
  %456 = getelementptr inbounds [8 x i64], [8 x i64]* %455, i64 0, i64 5, !dbg !23337
  %457 = load i64, i64* %456, align 8, !dbg !23337
  %458 = lshr i64 %457, 24, !dbg !23337
  %459 = trunc i64 %458 to i8, !dbg !23337
  %460 = load i8*, i8** %4, align 8, !dbg !23337
  %461 = getelementptr inbounds i8, i8* %460, i64 44, !dbg !23337
  store i8 %459, i8* %461, align 1, !dbg !23337
  %462 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %463 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %462, i32 0, i32 1, !dbg !23337
  %464 = getelementptr inbounds [8 x i64], [8 x i64]* %463, i64 0, i64 5, !dbg !23337
  %465 = load i64, i64* %464, align 8, !dbg !23337
  %466 = lshr i64 %465, 16, !dbg !23337
  %467 = trunc i64 %466 to i8, !dbg !23337
  %468 = load i8*, i8** %4, align 8, !dbg !23337
  %469 = getelementptr inbounds i8, i8* %468, i64 45, !dbg !23337
  store i8 %467, i8* %469, align 1, !dbg !23337
  %470 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %471 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %470, i32 0, i32 1, !dbg !23337
  %472 = getelementptr inbounds [8 x i64], [8 x i64]* %471, i64 0, i64 5, !dbg !23337
  %473 = load i64, i64* %472, align 8, !dbg !23337
  %474 = lshr i64 %473, 8, !dbg !23337
  %475 = trunc i64 %474 to i8, !dbg !23337
  %476 = load i8*, i8** %4, align 8, !dbg !23337
  %477 = getelementptr inbounds i8, i8* %476, i64 46, !dbg !23337
  store i8 %475, i8* %477, align 1, !dbg !23337
  %478 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23337
  %479 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %478, i32 0, i32 1, !dbg !23337
  %480 = getelementptr inbounds [8 x i64], [8 x i64]* %479, i64 0, i64 5, !dbg !23337
  %481 = load i64, i64* %480, align 8, !dbg !23337
  %482 = trunc i64 %481 to i8, !dbg !23337
  %483 = load i8*, i8** %4, align 8, !dbg !23337
  %484 = getelementptr inbounds i8, i8* %483, i64 47, !dbg !23337
  store i8 %482, i8* %484, align 1, !dbg !23337
  %485 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23339
  %486 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %485, i32 0, i32 3, !dbg !23341
  %487 = load i32, i32* %486, align 8, !dbg !23341
  %488 = icmp eq i32 %487, 0, !dbg !23342
  br i1 %488, label %489, label %616, !dbg !23343

489:                                              ; preds = %101
  %490 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %491 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %490, i32 0, i32 1, !dbg !23344
  %492 = getelementptr inbounds [8 x i64], [8 x i64]* %491, i64 0, i64 6, !dbg !23344
  %493 = load i64, i64* %492, align 8, !dbg !23344
  %494 = lshr i64 %493, 56, !dbg !23344
  %495 = trunc i64 %494 to i8, !dbg !23344
  %496 = load i8*, i8** %4, align 8, !dbg !23344
  %497 = getelementptr inbounds i8, i8* %496, i64 48, !dbg !23344
  store i8 %495, i8* %497, align 1, !dbg !23344
  %498 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %499 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %498, i32 0, i32 1, !dbg !23344
  %500 = getelementptr inbounds [8 x i64], [8 x i64]* %499, i64 0, i64 6, !dbg !23344
  %501 = load i64, i64* %500, align 8, !dbg !23344
  %502 = lshr i64 %501, 48, !dbg !23344
  %503 = trunc i64 %502 to i8, !dbg !23344
  %504 = load i8*, i8** %4, align 8, !dbg !23344
  %505 = getelementptr inbounds i8, i8* %504, i64 49, !dbg !23344
  store i8 %503, i8* %505, align 1, !dbg !23344
  %506 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %507 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %506, i32 0, i32 1, !dbg !23344
  %508 = getelementptr inbounds [8 x i64], [8 x i64]* %507, i64 0, i64 6, !dbg !23344
  %509 = load i64, i64* %508, align 8, !dbg !23344
  %510 = lshr i64 %509, 40, !dbg !23344
  %511 = trunc i64 %510 to i8, !dbg !23344
  %512 = load i8*, i8** %4, align 8, !dbg !23344
  %513 = getelementptr inbounds i8, i8* %512, i64 50, !dbg !23344
  store i8 %511, i8* %513, align 1, !dbg !23344
  %514 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %515 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %514, i32 0, i32 1, !dbg !23344
  %516 = getelementptr inbounds [8 x i64], [8 x i64]* %515, i64 0, i64 6, !dbg !23344
  %517 = load i64, i64* %516, align 8, !dbg !23344
  %518 = lshr i64 %517, 32, !dbg !23344
  %519 = trunc i64 %518 to i8, !dbg !23344
  %520 = load i8*, i8** %4, align 8, !dbg !23344
  %521 = getelementptr inbounds i8, i8* %520, i64 51, !dbg !23344
  store i8 %519, i8* %521, align 1, !dbg !23344
  %522 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %523 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %522, i32 0, i32 1, !dbg !23344
  %524 = getelementptr inbounds [8 x i64], [8 x i64]* %523, i64 0, i64 6, !dbg !23344
  %525 = load i64, i64* %524, align 8, !dbg !23344
  %526 = lshr i64 %525, 24, !dbg !23344
  %527 = trunc i64 %526 to i8, !dbg !23344
  %528 = load i8*, i8** %4, align 8, !dbg !23344
  %529 = getelementptr inbounds i8, i8* %528, i64 52, !dbg !23344
  store i8 %527, i8* %529, align 1, !dbg !23344
  %530 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %531 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %530, i32 0, i32 1, !dbg !23344
  %532 = getelementptr inbounds [8 x i64], [8 x i64]* %531, i64 0, i64 6, !dbg !23344
  %533 = load i64, i64* %532, align 8, !dbg !23344
  %534 = lshr i64 %533, 16, !dbg !23344
  %535 = trunc i64 %534 to i8, !dbg !23344
  %536 = load i8*, i8** %4, align 8, !dbg !23344
  %537 = getelementptr inbounds i8, i8* %536, i64 53, !dbg !23344
  store i8 %535, i8* %537, align 1, !dbg !23344
  %538 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %539 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %538, i32 0, i32 1, !dbg !23344
  %540 = getelementptr inbounds [8 x i64], [8 x i64]* %539, i64 0, i64 6, !dbg !23344
  %541 = load i64, i64* %540, align 8, !dbg !23344
  %542 = lshr i64 %541, 8, !dbg !23344
  %543 = trunc i64 %542 to i8, !dbg !23344
  %544 = load i8*, i8** %4, align 8, !dbg !23344
  %545 = getelementptr inbounds i8, i8* %544, i64 54, !dbg !23344
  store i8 %543, i8* %545, align 1, !dbg !23344
  %546 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23344
  %547 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %546, i32 0, i32 1, !dbg !23344
  %548 = getelementptr inbounds [8 x i64], [8 x i64]* %547, i64 0, i64 6, !dbg !23344
  %549 = load i64, i64* %548, align 8, !dbg !23344
  %550 = trunc i64 %549 to i8, !dbg !23344
  %551 = load i8*, i8** %4, align 8, !dbg !23344
  %552 = getelementptr inbounds i8, i8* %551, i64 55, !dbg !23344
  store i8 %550, i8* %552, align 1, !dbg !23344
  %553 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %554 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %553, i32 0, i32 1, !dbg !23347
  %555 = getelementptr inbounds [8 x i64], [8 x i64]* %554, i64 0, i64 7, !dbg !23347
  %556 = load i64, i64* %555, align 8, !dbg !23347
  %557 = lshr i64 %556, 56, !dbg !23347
  %558 = trunc i64 %557 to i8, !dbg !23347
  %559 = load i8*, i8** %4, align 8, !dbg !23347
  %560 = getelementptr inbounds i8, i8* %559, i64 56, !dbg !23347
  store i8 %558, i8* %560, align 1, !dbg !23347
  %561 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %562 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %561, i32 0, i32 1, !dbg !23347
  %563 = getelementptr inbounds [8 x i64], [8 x i64]* %562, i64 0, i64 7, !dbg !23347
  %564 = load i64, i64* %563, align 8, !dbg !23347
  %565 = lshr i64 %564, 48, !dbg !23347
  %566 = trunc i64 %565 to i8, !dbg !23347
  %567 = load i8*, i8** %4, align 8, !dbg !23347
  %568 = getelementptr inbounds i8, i8* %567, i64 57, !dbg !23347
  store i8 %566, i8* %568, align 1, !dbg !23347
  %569 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %570 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %569, i32 0, i32 1, !dbg !23347
  %571 = getelementptr inbounds [8 x i64], [8 x i64]* %570, i64 0, i64 7, !dbg !23347
  %572 = load i64, i64* %571, align 8, !dbg !23347
  %573 = lshr i64 %572, 40, !dbg !23347
  %574 = trunc i64 %573 to i8, !dbg !23347
  %575 = load i8*, i8** %4, align 8, !dbg !23347
  %576 = getelementptr inbounds i8, i8* %575, i64 58, !dbg !23347
  store i8 %574, i8* %576, align 1, !dbg !23347
  %577 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %578 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %577, i32 0, i32 1, !dbg !23347
  %579 = getelementptr inbounds [8 x i64], [8 x i64]* %578, i64 0, i64 7, !dbg !23347
  %580 = load i64, i64* %579, align 8, !dbg !23347
  %581 = lshr i64 %580, 32, !dbg !23347
  %582 = trunc i64 %581 to i8, !dbg !23347
  %583 = load i8*, i8** %4, align 8, !dbg !23347
  %584 = getelementptr inbounds i8, i8* %583, i64 59, !dbg !23347
  store i8 %582, i8* %584, align 1, !dbg !23347
  %585 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %586 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %585, i32 0, i32 1, !dbg !23347
  %587 = getelementptr inbounds [8 x i64], [8 x i64]* %586, i64 0, i64 7, !dbg !23347
  %588 = load i64, i64* %587, align 8, !dbg !23347
  %589 = lshr i64 %588, 24, !dbg !23347
  %590 = trunc i64 %589 to i8, !dbg !23347
  %591 = load i8*, i8** %4, align 8, !dbg !23347
  %592 = getelementptr inbounds i8, i8* %591, i64 60, !dbg !23347
  store i8 %590, i8* %592, align 1, !dbg !23347
  %593 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %594 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %593, i32 0, i32 1, !dbg !23347
  %595 = getelementptr inbounds [8 x i64], [8 x i64]* %594, i64 0, i64 7, !dbg !23347
  %596 = load i64, i64* %595, align 8, !dbg !23347
  %597 = lshr i64 %596, 16, !dbg !23347
  %598 = trunc i64 %597 to i8, !dbg !23347
  %599 = load i8*, i8** %4, align 8, !dbg !23347
  %600 = getelementptr inbounds i8, i8* %599, i64 61, !dbg !23347
  store i8 %598, i8* %600, align 1, !dbg !23347
  %601 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %602 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %601, i32 0, i32 1, !dbg !23347
  %603 = getelementptr inbounds [8 x i64], [8 x i64]* %602, i64 0, i64 7, !dbg !23347
  %604 = load i64, i64* %603, align 8, !dbg !23347
  %605 = lshr i64 %604, 8, !dbg !23347
  %606 = trunc i64 %605 to i8, !dbg !23347
  %607 = load i8*, i8** %4, align 8, !dbg !23347
  %608 = getelementptr inbounds i8, i8* %607, i64 62, !dbg !23347
  store i8 %606, i8* %608, align 1, !dbg !23347
  %609 = load %struct.mbedtls_sha512_context*, %struct.mbedtls_sha512_context** %3, align 8, !dbg !23347
  %610 = getelementptr inbounds %struct.mbedtls_sha512_context, %struct.mbedtls_sha512_context* %609, i32 0, i32 1, !dbg !23347
  %611 = getelementptr inbounds [8 x i64], [8 x i64]* %610, i64 0, i64 7, !dbg !23347
  %612 = load i64, i64* %611, align 8, !dbg !23347
  %613 = trunc i64 %612 to i8, !dbg !23347
  %614 = load i8*, i8** %4, align 8, !dbg !23347
  %615 = getelementptr inbounds i8, i8* %614, i64 63, !dbg !23347
  store i8 %613, i8* %615, align 1, !dbg !23347
  br label %616, !dbg !23349

616:                                              ; preds = %489, %101
  ret void, !dbg !23350
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_sha512(i8* %0, i64 %1, i8* %2, i32 %3) #0 !dbg !23351 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mbedtls_sha512_context, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !23354, metadata !DIExpression()), !dbg !23355
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !23356, metadata !DIExpression()), !dbg !23357
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !23358, metadata !DIExpression()), !dbg !23359
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23360, metadata !DIExpression()), !dbg !23361
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context* %9, metadata !23362, metadata !DIExpression()), !dbg !23363
  call void @mbedtls_sha512_init(%struct.mbedtls_sha512_context* %9), !dbg !23364
  %10 = load i32, i32* %8, align 4, !dbg !23365
  call void @mbedtls_sha512_starts(%struct.mbedtls_sha512_context* %9, i32 %10), !dbg !23366
  %11 = load i8*, i8** %5, align 8, !dbg !23367
  %12 = load i64, i64* %6, align 8, !dbg !23368
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %9, i8* %11, i64 %12), !dbg !23369
  %13 = load i8*, i8** %7, align 8, !dbg !23370
  call void @mbedtls_sha512_finish(%struct.mbedtls_sha512_context* %9, i8* %13), !dbg !23371
  call void @mbedtls_sha512_free(%struct.mbedtls_sha512_context* %9), !dbg !23372
  ret void, !dbg !23373
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_sha512_self_test(i32 %0) #0 !dbg !23374 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca [64 x i8], align 16
  %11 = alloca %struct.mbedtls_sha512_context, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23375, metadata !DIExpression()), !dbg !23376
  call void @llvm.dbg.declare(metadata i32* %4, metadata !23377, metadata !DIExpression()), !dbg !23378
  call void @llvm.dbg.declare(metadata i32* %5, metadata !23379, metadata !DIExpression()), !dbg !23380
  call void @llvm.dbg.declare(metadata i32* %6, metadata !23381, metadata !DIExpression()), !dbg !23382
  call void @llvm.dbg.declare(metadata i32* %7, metadata !23383, metadata !DIExpression()), !dbg !23384
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23385, metadata !DIExpression()), !dbg !23386
  store i32 0, i32* %8, align 4, !dbg !23386
  call void @llvm.dbg.declare(metadata i8** %9, metadata !23387, metadata !DIExpression()), !dbg !23388
  call void @llvm.dbg.declare(metadata [64 x i8]* %10, metadata !23389, metadata !DIExpression()), !dbg !23390
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha512_context* %11, metadata !23391, metadata !DIExpression()), !dbg !23392
  %12 = call align 16 i8* @calloc(i64 1024, i64 1), !dbg !23393
  store i8* %12, i8** %9, align 8, !dbg !23394
  %13 = load i8*, i8** %9, align 8, !dbg !23395
  %14 = icmp eq i8* null, %13, !dbg !23397
  br i1 %14, label %15, label %21, !dbg !23398

15:                                               ; preds = %1
  %16 = load i32, i32* %3, align 4, !dbg !23399
  %17 = icmp ne i32 %16, 0, !dbg !23402
  br i1 %17, label %18, label %20, !dbg !23403

18:                                               ; preds = %15
  %19 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.447, i64 0, i64 0)), !dbg !23404
  br label %20, !dbg !23404

20:                                               ; preds = %18, %15
  store i32 1, i32* %2, align 4, !dbg !23405
  br label %104, !dbg !23405

21:                                               ; preds = %1
  call void @mbedtls_sha512_init(%struct.mbedtls_sha512_context* %11), !dbg !23406
  store i32 0, i32* %4, align 4, !dbg !23407
  br label %22, !dbg !23409

22:                                               ; preds = %92, %21
  %23 = load i32, i32* %4, align 4, !dbg !23410
  %24 = icmp slt i32 %23, 6, !dbg !23412
  br i1 %24, label %25, label %95, !dbg !23413

25:                                               ; preds = %22
  %26 = load i32, i32* %4, align 4, !dbg !23414
  %27 = srem i32 %26, 3, !dbg !23416
  store i32 %27, i32* %5, align 4, !dbg !23417
  %28 = load i32, i32* %4, align 4, !dbg !23418
  %29 = icmp slt i32 %28, 3, !dbg !23419
  %30 = zext i1 %29 to i32, !dbg !23419
  store i32 %30, i32* %6, align 4, !dbg !23420
  %31 = load i32, i32* %3, align 4, !dbg !23421
  %32 = icmp ne i32 %31, 0, !dbg !23423
  br i1 %32, label %33, label %40, !dbg !23424

33:                                               ; preds = %25
  %34 = load i32, i32* %6, align 4, !dbg !23425
  %35 = mul nsw i32 %34, 128, !dbg !23426
  %36 = sub nsw i32 512, %35, !dbg !23427
  %37 = load i32, i32* %5, align 4, !dbg !23428
  %38 = add nsw i32 %37, 1, !dbg !23429
  %39 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.448, i64 0, i64 0), i32 %36, i32 %38), !dbg !23430
  br label %40, !dbg !23430

40:                                               ; preds = %33, %25
  %41 = load i32, i32* %6, align 4, !dbg !23431
  call void @mbedtls_sha512_starts(%struct.mbedtls_sha512_context* %11, i32 %41), !dbg !23432
  %42 = load i32, i32* %5, align 4, !dbg !23433
  %43 = icmp eq i32 %42, 2, !dbg !23435
  br i1 %43, label %44, label %57, !dbg !23436

44:                                               ; preds = %40
  %45 = load i8*, i8** %9, align 8, !dbg !23437
  store i32 1000, i32* %7, align 4, !dbg !23439
  call void @llvm.memset.p0i8.i64(i8* align 1 %45, i8 97, i64 1000, i1 false), !dbg !23440
  store i32 0, i32* %5, align 4, !dbg !23441
  br label %46, !dbg !23443

46:                                               ; preds = %53, %44
  %47 = load i32, i32* %5, align 4, !dbg !23444
  %48 = icmp slt i32 %47, 1000, !dbg !23446
  br i1 %48, label %49, label %56, !dbg !23447

49:                                               ; preds = %46
  %50 = load i8*, i8** %9, align 8, !dbg !23448
  %51 = load i32, i32* %7, align 4, !dbg !23449
  %52 = sext i32 %51 to i64, !dbg !23449
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %11, i8* %50, i64 %52), !dbg !23450
  br label %53, !dbg !23450

53:                                               ; preds = %49
  %54 = load i32, i32* %5, align 4, !dbg !23451
  %55 = add nsw i32 %54, 1, !dbg !23451
  store i32 %55, i32* %5, align 4, !dbg !23451
  br label %46, !dbg !23452, !llvm.loop !23453

56:                                               ; preds = %46
  br label %67, !dbg !23455

57:                                               ; preds = %40
  %58 = load i32, i32* %5, align 4, !dbg !23456
  %59 = sext i32 %58 to i64, !dbg !23457
  %60 = getelementptr inbounds [3 x [113 x i8]], [3 x [113 x i8]]* @sha512_test_buf, i64 0, i64 %59, !dbg !23457
  %61 = getelementptr inbounds [113 x i8], [113 x i8]* %60, i64 0, i64 0, !dbg !23457
  %62 = load i32, i32* %5, align 4, !dbg !23458
  %63 = sext i32 %62 to i64, !dbg !23459
  %64 = getelementptr inbounds [3 x i32], [3 x i32]* @sha512_test_buflen, i64 0, i64 %63, !dbg !23459
  %65 = load i32, i32* %64, align 4, !dbg !23459
  %66 = sext i32 %65 to i64, !dbg !23459
  call void @mbedtls_sha512_update(%struct.mbedtls_sha512_context* %11, i8* %61, i64 %66), !dbg !23460
  br label %67

67:                                               ; preds = %57, %56
  %68 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0, !dbg !23461
  call void @mbedtls_sha512_finish(%struct.mbedtls_sha512_context* %11, i8* %68), !dbg !23462
  %69 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0, !dbg !23463
  %70 = load i32, i32* %4, align 4, !dbg !23465
  %71 = sext i32 %70 to i64, !dbg !23466
  %72 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* bitcast (<{ <{ [48 x i8], [16 x i8] }>, <{ [48 x i8], [16 x i8] }>, <{ [48 x i8], [16 x i8] }>, [64 x i8], [64 x i8], [64 x i8] }>* @sha512_test_sum to [6 x [64 x i8]]*), i64 0, i64 %71, !dbg !23466
  %73 = getelementptr inbounds [64 x i8], [64 x i8]* %72, i64 0, i64 0, !dbg !23466
  %74 = load i32, i32* %6, align 4, !dbg !23467
  %75 = mul nsw i32 %74, 16, !dbg !23468
  %76 = sub nsw i32 64, %75, !dbg !23469
  %77 = sext i32 %76 to i64, !dbg !23470
  %78 = call i32 @memcmp(i8* %69, i8* %73, i64 %77), !dbg !23471
  %79 = icmp ne i32 %78, 0, !dbg !23472
  br i1 %79, label %80, label %86, !dbg !23473

80:                                               ; preds = %67
  %81 = load i32, i32* %3, align 4, !dbg !23474
  %82 = icmp ne i32 %81, 0, !dbg !23477
  br i1 %82, label %83, label %85, !dbg !23478

83:                                               ; preds = %80
  %84 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.449, i64 0, i64 0)), !dbg !23479
  br label %85, !dbg !23479

85:                                               ; preds = %83, %80
  store i32 1, i32* %8, align 4, !dbg !23480
  br label %101, !dbg !23481

86:                                               ; preds = %67
  %87 = load i32, i32* %3, align 4, !dbg !23482
  %88 = icmp ne i32 %87, 0, !dbg !23484
  br i1 %88, label %89, label %91, !dbg !23485

89:                                               ; preds = %86
  %90 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.450, i64 0, i64 0)), !dbg !23486
  br label %91, !dbg !23486

91:                                               ; preds = %89, %86
  br label %92, !dbg !23487

92:                                               ; preds = %91
  %93 = load i32, i32* %4, align 4, !dbg !23488
  %94 = add nsw i32 %93, 1, !dbg !23488
  store i32 %94, i32* %4, align 4, !dbg !23488
  br label %22, !dbg !23489, !llvm.loop !23490

95:                                               ; preds = %22
  %96 = load i32, i32* %3, align 4, !dbg !23492
  %97 = icmp ne i32 %96, 0, !dbg !23494
  br i1 %97, label %98, label %100, !dbg !23495

98:                                               ; preds = %95
  %99 = call i32 (i8*, ...) @printf_sgx(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.451, i64 0, i64 0)), !dbg !23496
  br label %100, !dbg !23496

100:                                              ; preds = %98, %95
  br label %101, !dbg !23497

101:                                              ; preds = %100, %85
  call void @llvm.dbg.label(metadata !23498), !dbg !23499
  call void @mbedtls_sha512_free(%struct.mbedtls_sha512_context* %11), !dbg !23500
  %102 = load i8*, i8** %9, align 8, !dbg !23501
  call void @free(i8* %102), !dbg !23502
  %103 = load i32, i32* %8, align 4, !dbg !23503
  store i32 %103, i32* %2, align 4, !dbg !23504
  br label %104, !dbg !23504

104:                                              ; preds = %101, %20
  %105 = load i32, i32* %2, align 4, !dbg !23505
  ret i32 %105, !dbg !23505
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32* @mbedtls_ssl_list_ciphersuites() #0 !dbg !23506 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %4 = load i32, i32* @supported_init, align 4, !dbg !23509
  %5 = icmp eq i32 %4, 0, !dbg !23511
  br i1 %5, label %6, label %37, !dbg !23512

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata i32** %1, metadata !23513, metadata !DIExpression()), !dbg !23515
  call void @llvm.dbg.declare(metadata i32** %2, metadata !23516, metadata !DIExpression()), !dbg !23517
  store i32* getelementptr inbounds ([163 x i32], [163 x i32]* @ciphersuite_preference, i64 0, i64 0), i32** %1, align 8, !dbg !23518
  store i32* getelementptr inbounds ([141 x i32], [141 x i32]* @supported_ciphersuites, i64 0, i64 0), i32** %2, align 8, !dbg !23520
  br label %7, !dbg !23521

7:                                                ; preds = %32, %6
  %8 = load i32*, i32** %1, align 8, !dbg !23522
  %9 = load i32, i32* %8, align 4, !dbg !23524
  %10 = icmp ne i32 %9, 0, !dbg !23525
  br i1 %10, label %11, label %14, !dbg !23526

11:                                               ; preds = %7
  %12 = load i32*, i32** %2, align 8, !dbg !23527
  %13 = icmp ult i32* %12, getelementptr inbounds ([141 x i32], [141 x i32]* @supported_ciphersuites, i64 0, i64 140), !dbg !23528
  br label %14

14:                                               ; preds = %11, %7
  %15 = phi i1 [ false, %7 ], [ %13, %11 ], !dbg !23529
  br i1 %15, label %16, label %35, !dbg !23530

16:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %3, metadata !23531, metadata !DIExpression()), !dbg !23534
  %17 = load i32*, i32** %1, align 8, !dbg !23535
  %18 = load i32, i32* %17, align 4, !dbg !23537
  %19 = call %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_id(i32 %18), !dbg !23538
  store %struct.mbedtls_ssl_ciphersuite_t* %19, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8, !dbg !23539
  %20 = icmp ne %struct.mbedtls_ssl_ciphersuite_t* %19, null, !dbg !23540
  br i1 %20, label %21, label %31, !dbg !23541

21:                                               ; preds = %16
  %22 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8, !dbg !23542
  %23 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %22, i32 0, i32 2, !dbg !23543
  %24 = load i32, i32* %23, align 8, !dbg !23543
  %25 = icmp ne i32 %24, 42, !dbg !23544
  br i1 %25, label %26, label %31, !dbg !23545

26:                                               ; preds = %21
  %27 = load i32*, i32** %1, align 8, !dbg !23546
  %28 = load i32, i32* %27, align 4, !dbg !23547
  %29 = load i32*, i32** %2, align 8, !dbg !23548
  %30 = getelementptr inbounds i32, i32* %29, i32 1, !dbg !23548
  store i32* %30, i32** %2, align 8, !dbg !23548
  store i32 %28, i32* %29, align 4, !dbg !23549
  br label %31, !dbg !23550

31:                                               ; preds = %26, %21, %16
  br label %32, !dbg !23551

32:                                               ; preds = %31
  %33 = load i32*, i32** %1, align 8, !dbg !23552
  %34 = getelementptr inbounds i32, i32* %33, i32 1, !dbg !23552
  store i32* %34, i32** %1, align 8, !dbg !23552
  br label %7, !dbg !23553, !llvm.loop !23554

35:                                               ; preds = %14
  %36 = load i32*, i32** %2, align 8, !dbg !23556
  store i32 0, i32* %36, align 4, !dbg !23557
  store i32 1, i32* @supported_init, align 4, !dbg !23558
  br label %37, !dbg !23559

37:                                               ; preds = %35, %0
  ret i32* getelementptr inbounds ([141 x i32], [141 x i32]* @supported_ciphersuites, i64 0, i64 0), !dbg !23560
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_id(i32 %0) #0 !dbg !23561 {
  %2 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23564, metadata !DIExpression()), !dbg !23565
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %4, metadata !23566, metadata !DIExpression()), !dbg !23567
  store %struct.mbedtls_ssl_ciphersuite_t* getelementptr inbounds ([141 x %struct.mbedtls_ssl_ciphersuite_t], [141 x %struct.mbedtls_ssl_ciphersuite_t]* @ciphersuite_definitions, i64 0, i64 0), %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23567
  br label %5, !dbg !23568

5:                                                ; preds = %18, %1
  %6 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23569
  %7 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %6, i32 0, i32 0, !dbg !23570
  %8 = load i32, i32* %7, align 8, !dbg !23570
  %9 = icmp ne i32 %8, 0, !dbg !23571
  br i1 %9, label %10, label %21, !dbg !23568

10:                                               ; preds = %5
  %11 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23572
  %12 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %11, i32 0, i32 0, !dbg !23575
  %13 = load i32, i32* %12, align 8, !dbg !23575
  %14 = load i32, i32* %3, align 4, !dbg !23576
  %15 = icmp eq i32 %13, %14, !dbg !23577
  br i1 %15, label %16, label %18, !dbg !23578

16:                                               ; preds = %10
  %17 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23579
  store %struct.mbedtls_ssl_ciphersuite_t* %17, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23580
  br label %22, !dbg !23580

18:                                               ; preds = %10
  %19 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23581
  %20 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %19, i32 1, !dbg !23581
  store %struct.mbedtls_ssl_ciphersuite_t* %20, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23581
  br label %5, !dbg !23568, !llvm.loop !23582

21:                                               ; preds = %5
  store %struct.mbedtls_ssl_ciphersuite_t* null, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23584
  br label %22, !dbg !23584

22:                                               ; preds = %21, %16
  %23 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23585
  ret %struct.mbedtls_ssl_ciphersuite_t* %23, !dbg !23585
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_string(i8* %0) #0 !dbg !23586 {
  %2 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !23589, metadata !DIExpression()), !dbg !23590
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %4, metadata !23591, metadata !DIExpression()), !dbg !23592
  store %struct.mbedtls_ssl_ciphersuite_t* getelementptr inbounds ([141 x %struct.mbedtls_ssl_ciphersuite_t], [141 x %struct.mbedtls_ssl_ciphersuite_t]* @ciphersuite_definitions, i64 0, i64 0), %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23592
  %5 = load i8*, i8** %3, align 8, !dbg !23593
  %6 = icmp eq i8* null, %5, !dbg !23595
  br i1 %6, label %7, label %8, !dbg !23596

7:                                                ; preds = %1
  store %struct.mbedtls_ssl_ciphersuite_t* null, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23597
  br label %27, !dbg !23597

8:                                                ; preds = %1
  br label %9, !dbg !23598

9:                                                ; preds = %23, %8
  %10 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23599
  %11 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %10, i32 0, i32 0, !dbg !23600
  %12 = load i32, i32* %11, align 8, !dbg !23600
  %13 = icmp ne i32 %12, 0, !dbg !23601
  br i1 %13, label %14, label %26, !dbg !23598

14:                                               ; preds = %9
  %15 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23602
  %16 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %15, i32 0, i32 1, !dbg !23605
  %17 = load i8*, i8** %16, align 8, !dbg !23605
  %18 = load i8*, i8** %3, align 8, !dbg !23606
  %19 = call i32 @strcmp(i8* %17, i8* %18), !dbg !23607
  %20 = icmp eq i32 0, %19, !dbg !23608
  br i1 %20, label %21, label %23, !dbg !23609

21:                                               ; preds = %14
  %22 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23610
  store %struct.mbedtls_ssl_ciphersuite_t* %22, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23611
  br label %27, !dbg !23611

23:                                               ; preds = %14
  %24 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23612
  %25 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %24, i32 1, !dbg !23612
  store %struct.mbedtls_ssl_ciphersuite_t* %25, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23612
  br label %9, !dbg !23598, !llvm.loop !23613

26:                                               ; preds = %9
  store %struct.mbedtls_ssl_ciphersuite_t* null, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23615
  br label %27, !dbg !23615

27:                                               ; preds = %26, %21, %7
  %28 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %2, align 8, !dbg !23616
  ret %struct.mbedtls_ssl_ciphersuite_t* %28, !dbg !23616
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i8* @mbedtls_ssl_get_ciphersuite_name(i32 %0) #0 !dbg !23617 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !23620, metadata !DIExpression()), !dbg !23621
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %4, metadata !23622, metadata !DIExpression()), !dbg !23623
  %5 = load i32, i32* %3, align 4, !dbg !23624
  %6 = call %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_id(i32 %5), !dbg !23625
  store %struct.mbedtls_ssl_ciphersuite_t* %6, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23626
  %7 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23627
  %8 = icmp eq %struct.mbedtls_ssl_ciphersuite_t* %7, null, !dbg !23629
  br i1 %8, label %9, label %10, !dbg !23630

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.599, i64 0, i64 0), i8** %2, align 8, !dbg !23631
  br label %14, !dbg !23631

10:                                               ; preds = %1
  %11 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23632
  %12 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %11, i32 0, i32 1, !dbg !23633
  %13 = load i8*, i8** %12, align 8, !dbg !23633
  store i8* %13, i8** %2, align 8, !dbg !23634
  br label %14, !dbg !23634

14:                                               ; preds = %10, %9
  %15 = load i8*, i8** %2, align 8, !dbg !23635
  ret i8* %15, !dbg !23635
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_get_ciphersuite_id(i8* %0) #0 !dbg !23636 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !23637, metadata !DIExpression()), !dbg !23638
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %4, metadata !23639, metadata !DIExpression()), !dbg !23640
  %5 = load i8*, i8** %3, align 8, !dbg !23641
  %6 = call %struct.mbedtls_ssl_ciphersuite_t* @mbedtls_ssl_ciphersuite_from_string(i8* %5), !dbg !23642
  store %struct.mbedtls_ssl_ciphersuite_t* %6, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23643
  %7 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23644
  %8 = icmp eq %struct.mbedtls_ssl_ciphersuite_t* %7, null, !dbg !23646
  br i1 %8, label %9, label %10, !dbg !23647

9:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !23648
  br label %14, !dbg !23648

10:                                               ; preds = %1
  %11 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %4, align 8, !dbg !23649
  %12 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %11, i32 0, i32 0, !dbg !23650
  %13 = load i32, i32* %12, align 8, !dbg !23650
  store i32 %13, i32* %2, align 4, !dbg !23651
  br label %14, !dbg !23651

14:                                               ; preds = %10, %9
  %15 = load i32, i32* %2, align 4, !dbg !23652
  ret i32 %15, !dbg !23652
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_get_ciphersuite_sig_pk_alg(%struct.mbedtls_ssl_ciphersuite_t* %0) #0 !dbg !23653 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store %struct.mbedtls_ssl_ciphersuite_t* %0, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %3, metadata !23656, metadata !DIExpression()), !dbg !23657
  %4 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8, !dbg !23658
  %5 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %4, i32 0, i32 4, !dbg !23659
  %6 = load i32, i32* %5, align 8, !dbg !23659
  switch i32 %6, label %10 [
    i32 1, label %7
    i32 2, label %7
    i32 3, label %7
    i32 7, label %7
    i32 4, label %8
    i32 9, label %9
    i32 10, label %9
  ], !dbg !23660

7:                                                ; preds = %1, %1, %1, %1
  store i32 1, i32* %2, align 4, !dbg !23661
  br label %11, !dbg !23661

8:                                                ; preds = %1
  store i32 4, i32* %2, align 4, !dbg !23663
  br label %11, !dbg !23663

9:                                                ; preds = %1, %1
  store i32 2, i32* %2, align 4, !dbg !23664
  br label %11, !dbg !23664

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !23665
  br label %11, !dbg !23665

11:                                               ; preds = %10, %9, %8, %7
  %12 = load i32, i32* %2, align 4, !dbg !23666
  ret i32 %12, !dbg !23666
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_get_ciphersuite_sig_alg(%struct.mbedtls_ssl_ciphersuite_t* %0) #0 !dbg !23667 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store %struct.mbedtls_ssl_ciphersuite_t* %0, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %3, metadata !23668, metadata !DIExpression()), !dbg !23669
  %4 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8, !dbg !23670
  %5 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %4, i32 0, i32 4, !dbg !23671
  %6 = load i32, i32* %5, align 8, !dbg !23671
  switch i32 %6, label %9 [
    i32 1, label %7
    i32 2, label %7
    i32 3, label %7
    i32 4, label %8
  ], !dbg !23672

7:                                                ; preds = %1, %1, %1
  store i32 1, i32* %2, align 4, !dbg !23673
  br label %10, !dbg !23673

8:                                                ; preds = %1
  store i32 4, i32* %2, align 4, !dbg !23675
  br label %10, !dbg !23675

9:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !23676
  br label %10, !dbg !23676

10:                                               ; preds = %9, %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !23677
  ret i32 %11, !dbg !23677
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_ciphersuite_uses_ec(%struct.mbedtls_ssl_ciphersuite_t* %0) #0 !dbg !23678 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store %struct.mbedtls_ssl_ciphersuite_t* %0, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %3, metadata !23681, metadata !DIExpression()), !dbg !23682
  %4 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8, !dbg !23683
  %5 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %4, i32 0, i32 4, !dbg !23684
  %6 = load i32, i32* %5, align 8, !dbg !23684
  switch i32 %6, label %8 [
    i32 3, label %7
    i32 4, label %7
    i32 8, label %7
    i32 9, label %7
    i32 10, label %7
  ], !dbg !23685

7:                                                ; preds = %1, %1, %1, %1, %1
  store i32 1, i32* %2, align 4, !dbg !23686
  br label %9, !dbg !23686

8:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !23688
  br label %9, !dbg !23688

9:                                                ; preds = %8, %7
  %10 = load i32, i32* %2, align 4, !dbg !23689
  ret i32 %10, !dbg !23689
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_ciphersuite_uses_psk(%struct.mbedtls_ssl_ciphersuite_t* %0) #0 !dbg !23690 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  store %struct.mbedtls_ssl_ciphersuite_t* %0, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %3, metadata !23691, metadata !DIExpression()), !dbg !23692
  %4 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %3, align 8, !dbg !23693
  %5 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %4, i32 0, i32 4, !dbg !23694
  %6 = load i32, i32* %5, align 8, !dbg !23694
  switch i32 %6, label %8 [
    i32 5, label %7
    i32 7, label %7
    i32 6, label %7
    i32 8, label %7
  ], !dbg !23695

7:                                                ; preds = %1, %1, %1, %1
  store i32 1, i32* %2, align 4, !dbg !23696
  br label %9, !dbg !23696

8:                                                ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !23698
  br label %9, !dbg !23698

9:                                                ; preds = %8, %7
  %10 = load i32, i32* %2, align 4, !dbg !23699
  ret i32 %10, !dbg !23699
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ssl_cookie_init(%struct.mbedtls_ssl_cookie_ctx* %0) #0 !dbg !23700 {
  %2 = alloca %struct.mbedtls_ssl_cookie_ctx*, align 8
  store %struct.mbedtls_ssl_cookie_ctx* %0, %struct.mbedtls_ssl_cookie_ctx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx** %2, metadata !23704, metadata !DIExpression()), !dbg !23705
  %3 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %2, align 8, !dbg !23706
  %4 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %3, i32 0, i32 0, !dbg !23707
  call void @mbedtls_md_init(%struct.mbedtls_md_context_t* %4), !dbg !23708
  %5 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %2, align 8, !dbg !23709
  %6 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %5, i32 0, i32 1, !dbg !23710
  store i64 0, i64* %6, align 8, !dbg !23711
  %7 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %2, align 8, !dbg !23712
  %8 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %7, i32 0, i32 2, !dbg !23713
  store i64 60, i64* %8, align 8, !dbg !23714
  ret void, !dbg !23715
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ssl_cookie_set_timeout(%struct.mbedtls_ssl_cookie_ctx* %0, i64 %1) #0 !dbg !23716 {
  %3 = alloca %struct.mbedtls_ssl_cookie_ctx*, align 8
  %4 = alloca i64, align 8
  store %struct.mbedtls_ssl_cookie_ctx* %0, %struct.mbedtls_ssl_cookie_ctx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx** %3, metadata !23719, metadata !DIExpression()), !dbg !23720
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !23721, metadata !DIExpression()), !dbg !23722
  %5 = load i64, i64* %4, align 8, !dbg !23723
  %6 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %3, align 8, !dbg !23724
  %7 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %6, i32 0, i32 2, !dbg !23725
  store i64 %5, i64* %7, align 8, !dbg !23726
  ret void, !dbg !23727
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ssl_cookie_free(%struct.mbedtls_ssl_cookie_ctx* %0) #0 !dbg !23728 {
  %2 = alloca %struct.mbedtls_ssl_cookie_ctx*, align 8
  store %struct.mbedtls_ssl_cookie_ctx* %0, %struct.mbedtls_ssl_cookie_ctx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx** %2, metadata !23729, metadata !DIExpression()), !dbg !23730
  %3 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %2, align 8, !dbg !23731
  %4 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %3, i32 0, i32 0, !dbg !23732
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %4), !dbg !23733
  %5 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %2, align 8, !dbg !23734
  %6 = bitcast %struct.mbedtls_ssl_cookie_ctx* %5 to i8*, !dbg !23734
  call void @mbedtls_zeroize.606(i8* %6, i64 40), !dbg !23735
  ret void, !dbg !23736
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mbedtls_zeroize.606(i8* %0, i64 %1) #0 !dbg !23737 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !23738, metadata !DIExpression()), !dbg !23739
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !23740, metadata !DIExpression()), !dbg !23741
  call void @llvm.dbg.declare(metadata i8** %5, metadata !23742, metadata !DIExpression()), !dbg !23743
  %6 = load i8*, i8** %3, align 8, !dbg !23744
  store i8* %6, i8** %5, align 8, !dbg !23743
  br label %7, !dbg !23745

7:                                                ; preds = %11, %2
  %8 = load i64, i64* %4, align 8, !dbg !23746
  %9 = add i64 %8, -1, !dbg !23746
  store i64 %9, i64* %4, align 8, !dbg !23746
  %10 = icmp ne i64 %8, 0, !dbg !23745
  br i1 %10, label %11, label %14, !dbg !23745

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8, !dbg !23747
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !23747
  store i8* %13, i8** %5, align 8, !dbg !23747
  store volatile i8 0, i8* %12, align 1, !dbg !23748
  br label %7, !dbg !23745, !llvm.loop !23749

14:                                               ; preds = %7
  ret void, !dbg !23751
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_cookie_setup(%struct.mbedtls_ssl_cookie_ctx* %0, i32 (i8*, i8*, i64)* %1, i8* %2) #0 !dbg !23752 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_ssl_cookie_ctx*, align 8
  %6 = alloca i32 (i8*, i8*, i64)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca [32 x i8], align 16
  store %struct.mbedtls_ssl_cookie_ctx* %0, %struct.mbedtls_ssl_cookie_ctx** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx** %5, metadata !23755, metadata !DIExpression()), !dbg !23756
  store i32 (i8*, i8*, i64)* %1, i32 (i8*, i8*, i64)** %6, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64)** %6, metadata !23757, metadata !DIExpression()), !dbg !23758
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !23759, metadata !DIExpression()), !dbg !23760
  call void @llvm.dbg.declare(metadata i32* %8, metadata !23761, metadata !DIExpression()), !dbg !23762
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !23763, metadata !DIExpression()), !dbg !23764
  %10 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %6, align 8, !dbg !23765
  %11 = load i8*, i8** %7, align 8, !dbg !23767
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0, !dbg !23768
  %13 = call i32 %10(i8* %11, i8* %12, i64 32), !dbg !23765
  store i32 %13, i32* %8, align 4, !dbg !23769
  %14 = icmp ne i32 %13, 0, !dbg !23770
  br i1 %14, label %15, label %17, !dbg !23771

15:                                               ; preds = %3
  %16 = load i32, i32* %8, align 4, !dbg !23772
  store i32 %16, i32* %4, align 4, !dbg !23773
  br label %37, !dbg !23773

17:                                               ; preds = %3
  %18 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %5, align 8, !dbg !23774
  %19 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %18, i32 0, i32 0, !dbg !23775
  %20 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 5), !dbg !23776
  %21 = call i32 @mbedtls_md_setup(%struct.mbedtls_md_context_t* %19, %struct.mbedtls_md_info_t* %20, i32 1), !dbg !23777
  store i32 %21, i32* %8, align 4, !dbg !23778
  %22 = load i32, i32* %8, align 4, !dbg !23779
  %23 = icmp ne i32 %22, 0, !dbg !23781
  br i1 %23, label %24, label %26, !dbg !23782

24:                                               ; preds = %17
  %25 = load i32, i32* %8, align 4, !dbg !23783
  store i32 %25, i32* %4, align 4, !dbg !23784
  br label %37, !dbg !23784

26:                                               ; preds = %17
  %27 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %5, align 8, !dbg !23785
  %28 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %27, i32 0, i32 0, !dbg !23786
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0, !dbg !23787
  %30 = call i32 @mbedtls_md_hmac_starts(%struct.mbedtls_md_context_t* %28, i8* %29, i64 32), !dbg !23788
  store i32 %30, i32* %8, align 4, !dbg !23789
  %31 = load i32, i32* %8, align 4, !dbg !23790
  %32 = icmp ne i32 %31, 0, !dbg !23792
  br i1 %32, label %33, label %35, !dbg !23793

33:                                               ; preds = %26
  %34 = load i32, i32* %8, align 4, !dbg !23794
  store i32 %34, i32* %4, align 4, !dbg !23795
  br label %37, !dbg !23795

35:                                               ; preds = %26
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0, !dbg !23796
  call void @mbedtls_zeroize.606(i8* %36, i64 32), !dbg !23797
  store i32 0, i32* %4, align 4, !dbg !23798
  br label %37, !dbg !23798

37:                                               ; preds = %35, %33, %24, %15
  %38 = load i32, i32* %4, align 4, !dbg !23799
  ret i32 %38, !dbg !23799
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_cookie_write(i8* %0, i8** %1, i8* %2, i8* %3, i64 %4) #0 !dbg !23800 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.mbedtls_ssl_cookie_ctx*, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !23801, metadata !DIExpression()), !dbg !23802
  store i8** %1, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !23803, metadata !DIExpression()), !dbg !23804
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !23805, metadata !DIExpression()), !dbg !23806
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !23807, metadata !DIExpression()), !dbg !23808
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !23809, metadata !DIExpression()), !dbg !23810
  call void @llvm.dbg.declare(metadata i32* %12, metadata !23811, metadata !DIExpression()), !dbg !23812
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx** %13, metadata !23813, metadata !DIExpression()), !dbg !23814
  %15 = load i8*, i8** %7, align 8, !dbg !23815
  %16 = bitcast i8* %15 to %struct.mbedtls_ssl_cookie_ctx*, !dbg !23816
  store %struct.mbedtls_ssl_cookie_ctx* %16, %struct.mbedtls_ssl_cookie_ctx** %13, align 8, !dbg !23814
  call void @llvm.dbg.declare(metadata i64* %14, metadata !23817, metadata !DIExpression()), !dbg !23818
  %17 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %13, align 8, !dbg !23819
  %18 = icmp eq %struct.mbedtls_ssl_cookie_ctx* %17, null, !dbg !23821
  br i1 %18, label %22, label %19, !dbg !23822

19:                                               ; preds = %5
  %20 = load i8*, i8** %10, align 8, !dbg !23823
  %21 = icmp eq i8* %20, null, !dbg !23824
  br i1 %21, label %22, label %23, !dbg !23825

22:                                               ; preds = %19, %5
  store i32 -28928, i32* %6, align 4, !dbg !23826
  br label %74, !dbg !23826

23:                                               ; preds = %19
  %24 = load i8*, i8** %9, align 8, !dbg !23827
  %25 = load i8**, i8*** %8, align 8, !dbg !23829
  %26 = load i8*, i8** %25, align 8, !dbg !23830
  %27 = ptrtoint i8* %24 to i64, !dbg !23831
  %28 = ptrtoint i8* %26 to i64, !dbg !23831
  %29 = sub i64 %27, %28, !dbg !23831
  %30 = icmp ult i64 %29, 32, !dbg !23832
  br i1 %30, label %31, label %32, !dbg !23833

31:                                               ; preds = %23
  store i32 -27136, i32* %6, align 4, !dbg !23834
  br label %74, !dbg !23834

32:                                               ; preds = %23
  %33 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %13, align 8, !dbg !23835
  %34 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %33, i32 0, i32 1, !dbg !23836
  %35 = load i64, i64* %34, align 8, !dbg !23837
  %36 = add i64 %35, 1, !dbg !23837
  store i64 %36, i64* %34, align 8, !dbg !23837
  store i64 %35, i64* %14, align 8, !dbg !23838
  %37 = load i64, i64* %14, align 8, !dbg !23839
  %38 = lshr i64 %37, 24, !dbg !23840
  %39 = trunc i64 %38 to i8, !dbg !23841
  %40 = load i8**, i8*** %8, align 8, !dbg !23842
  %41 = load i8*, i8** %40, align 8, !dbg !23843
  %42 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !23844
  store i8 %39, i8* %42, align 1, !dbg !23845
  %43 = load i64, i64* %14, align 8, !dbg !23846
  %44 = lshr i64 %43, 16, !dbg !23847
  %45 = trunc i64 %44 to i8, !dbg !23848
  %46 = load i8**, i8*** %8, align 8, !dbg !23849
  %47 = load i8*, i8** %46, align 8, !dbg !23850
  %48 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !23851
  store i8 %45, i8* %48, align 1, !dbg !23852
  %49 = load i64, i64* %14, align 8, !dbg !23853
  %50 = lshr i64 %49, 8, !dbg !23854
  %51 = trunc i64 %50 to i8, !dbg !23855
  %52 = load i8**, i8*** %8, align 8, !dbg !23856
  %53 = load i8*, i8** %52, align 8, !dbg !23857
  %54 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !23858
  store i8 %51, i8* %54, align 1, !dbg !23859
  %55 = load i64, i64* %14, align 8, !dbg !23860
  %56 = trunc i64 %55 to i8, !dbg !23861
  %57 = load i8**, i8*** %8, align 8, !dbg !23862
  %58 = load i8*, i8** %57, align 8, !dbg !23863
  %59 = getelementptr inbounds i8, i8* %58, i64 3, !dbg !23864
  store i8 %56, i8* %59, align 1, !dbg !23865
  %60 = load i8**, i8*** %8, align 8, !dbg !23866
  %61 = load i8*, i8** %60, align 8, !dbg !23867
  %62 = getelementptr inbounds i8, i8* %61, i64 4, !dbg !23867
  store i8* %62, i8** %60, align 8, !dbg !23867
  %63 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %13, align 8, !dbg !23868
  %64 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %63, i32 0, i32 0, !dbg !23869
  %65 = load i8**, i8*** %8, align 8, !dbg !23870
  %66 = load i8*, i8** %65, align 8, !dbg !23871
  %67 = getelementptr inbounds i8, i8* %66, i64 -4, !dbg !23872
  %68 = load i8**, i8*** %8, align 8, !dbg !23873
  %69 = load i8*, i8** %9, align 8, !dbg !23874
  %70 = load i8*, i8** %10, align 8, !dbg !23875
  %71 = load i64, i64* %11, align 8, !dbg !23876
  %72 = call i32 @ssl_cookie_hmac(%struct.mbedtls_md_context_t* %64, i8* %67, i8** %68, i8* %69, i8* %70, i64 %71), !dbg !23877
  store i32 %72, i32* %12, align 4, !dbg !23878
  %73 = load i32, i32* %12, align 4, !dbg !23879
  store i32 %73, i32* %6, align 4, !dbg !23880
  br label %74, !dbg !23880

74:                                               ; preds = %32, %31, %22
  %75 = load i32, i32* %6, align 4, !dbg !23881
  ret i32 %75, !dbg !23881
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_cookie_hmac(%struct.mbedtls_md_context_t* %0, i8* %1, i8** %2, i8* %3, i8* %4, i64 %5) #0 !dbg !23882 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.mbedtls_md_context_t*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  store %struct.mbedtls_md_context_t* %0, %struct.mbedtls_md_context_t** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t** %8, metadata !23886, metadata !DIExpression()), !dbg !23887
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !23888, metadata !DIExpression()), !dbg !23889
  store i8** %2, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !23890, metadata !DIExpression()), !dbg !23891
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !23892, metadata !DIExpression()), !dbg !23893
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !23894, metadata !DIExpression()), !dbg !23895
  store i64 %5, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !23896, metadata !DIExpression()), !dbg !23897
  call void @llvm.dbg.declare(metadata [32 x i8]* %14, metadata !23898, metadata !DIExpression()), !dbg !23899
  %15 = load i8*, i8** %11, align 8, !dbg !23900
  %16 = load i8**, i8*** %10, align 8, !dbg !23902
  %17 = load i8*, i8** %16, align 8, !dbg !23903
  %18 = ptrtoint i8* %15 to i64, !dbg !23904
  %19 = ptrtoint i8* %17 to i64, !dbg !23904
  %20 = sub i64 %18, %19, !dbg !23904
  %21 = icmp ult i64 %20, 28, !dbg !23905
  br i1 %21, label %22, label %23, !dbg !23906

22:                                               ; preds = %6
  store i32 -27136, i32* %7, align 4, !dbg !23907
  br label %51, !dbg !23907

23:                                               ; preds = %6
  %24 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %8, align 8, !dbg !23908
  %25 = call i32 @mbedtls_md_hmac_reset(%struct.mbedtls_md_context_t* %24), !dbg !23910
  %26 = icmp ne i32 %25, 0, !dbg !23911
  br i1 %26, label %43, label %27, !dbg !23912

27:                                               ; preds = %23
  %28 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %8, align 8, !dbg !23913
  %29 = load i8*, i8** %9, align 8, !dbg !23914
  %30 = call i32 @mbedtls_md_hmac_update(%struct.mbedtls_md_context_t* %28, i8* %29, i64 4), !dbg !23915
  %31 = icmp ne i32 %30, 0, !dbg !23916
  br i1 %31, label %43, label %32, !dbg !23917

32:                                               ; preds = %27
  %33 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %8, align 8, !dbg !23918
  %34 = load i8*, i8** %12, align 8, !dbg !23919
  %35 = load i64, i64* %13, align 8, !dbg !23920
  %36 = call i32 @mbedtls_md_hmac_update(%struct.mbedtls_md_context_t* %33, i8* %34, i64 %35), !dbg !23921
  %37 = icmp ne i32 %36, 0, !dbg !23922
  br i1 %37, label %43, label %38, !dbg !23923

38:                                               ; preds = %32
  %39 = load %struct.mbedtls_md_context_t*, %struct.mbedtls_md_context_t** %8, align 8, !dbg !23924
  %40 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0, !dbg !23925
  %41 = call i32 @mbedtls_md_hmac_finish(%struct.mbedtls_md_context_t* %39, i8* %40), !dbg !23926
  %42 = icmp ne i32 %41, 0, !dbg !23927
  br i1 %42, label %43, label %44, !dbg !23928

43:                                               ; preds = %38, %32, %27, %23
  store i32 -27648, i32* %7, align 4, !dbg !23929
  br label %51, !dbg !23929

44:                                               ; preds = %38
  %45 = load i8**, i8*** %10, align 8, !dbg !23931
  %46 = load i8*, i8** %45, align 8, !dbg !23932
  %47 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0, !dbg !23933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 16 %47, i64 28, i1 false), !dbg !23933
  %48 = load i8**, i8*** %10, align 8, !dbg !23934
  %49 = load i8*, i8** %48, align 8, !dbg !23935
  %50 = getelementptr inbounds i8, i8* %49, i64 28, !dbg !23935
  store i8* %50, i8** %48, align 8, !dbg !23935
  store i32 0, i32* %7, align 4, !dbg !23936
  br label %51, !dbg !23936

51:                                               ; preds = %44, %43, %22
  %52 = load i32, i32* %7, align 4, !dbg !23937
  ret i32 %52, !dbg !23937
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_cookie_check(i8* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 !dbg !23938 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [28 x i8], align 16
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.mbedtls_ssl_cookie_ctx*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !23939, metadata !DIExpression()), !dbg !23940
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !23941, metadata !DIExpression()), !dbg !23942
  store i64 %2, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !23943, metadata !DIExpression()), !dbg !23944
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !23945, metadata !DIExpression()), !dbg !23946
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !23947, metadata !DIExpression()), !dbg !23948
  call void @llvm.dbg.declare(metadata [28 x i8]* %12, metadata !23949, metadata !DIExpression()), !dbg !23953
  call void @llvm.dbg.declare(metadata i32* %13, metadata !23954, metadata !DIExpression()), !dbg !23955
  store i32 0, i32* %13, align 4, !dbg !23955
  call void @llvm.dbg.declare(metadata i8** %14, metadata !23956, metadata !DIExpression()), !dbg !23957
  %18 = getelementptr inbounds [28 x i8], [28 x i8]* %12, i64 0, i64 0, !dbg !23958
  store i8* %18, i8** %14, align 8, !dbg !23957
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_cookie_ctx** %15, metadata !23959, metadata !DIExpression()), !dbg !23960
  %19 = load i8*, i8** %7, align 8, !dbg !23961
  %20 = bitcast i8* %19 to %struct.mbedtls_ssl_cookie_ctx*, !dbg !23962
  store %struct.mbedtls_ssl_cookie_ctx* %20, %struct.mbedtls_ssl_cookie_ctx** %15, align 8, !dbg !23960
  call void @llvm.dbg.declare(metadata i64* %16, metadata !23963, metadata !DIExpression()), !dbg !23964
  call void @llvm.dbg.declare(metadata i64* %17, metadata !23965, metadata !DIExpression()), !dbg !23966
  %21 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %15, align 8, !dbg !23967
  %22 = icmp eq %struct.mbedtls_ssl_cookie_ctx* %21, null, !dbg !23969
  br i1 %22, label %26, label %23, !dbg !23970

23:                                               ; preds = %5
  %24 = load i8*, i8** %10, align 8, !dbg !23971
  %25 = icmp eq i8* %24, null, !dbg !23972
  br i1 %25, label %26, label %27, !dbg !23973

26:                                               ; preds = %23, %5
  store i32 -28928, i32* %6, align 4, !dbg !23974
  br label %94, !dbg !23974

27:                                               ; preds = %23
  %28 = load i64, i64* %9, align 8, !dbg !23975
  %29 = icmp ne i64 %28, 32, !dbg !23977
  br i1 %29, label %30, label %31, !dbg !23978

30:                                               ; preds = %27
  store i32 -1, i32* %6, align 4, !dbg !23979
  br label %94, !dbg !23979

31:                                               ; preds = %27
  %32 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %15, align 8, !dbg !23980
  %33 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %32, i32 0, i32 0, !dbg !23982
  %34 = load i8*, i8** %8, align 8, !dbg !23983
  %35 = load i8*, i8** %14, align 8, !dbg !23984
  %36 = getelementptr inbounds i8, i8* %35, i64 28, !dbg !23985
  %37 = load i8*, i8** %10, align 8, !dbg !23986
  %38 = load i64, i64* %11, align 8, !dbg !23987
  %39 = call i32 @ssl_cookie_hmac(%struct.mbedtls_md_context_t* %33, i8* %34, i8** %14, i8* %36, i8* %37, i64 %38), !dbg !23988
  %40 = icmp ne i32 %39, 0, !dbg !23989
  br i1 %40, label %41, label %42, !dbg !23990

41:                                               ; preds = %31
  store i32 -1, i32* %13, align 4, !dbg !23991
  br label %42, !dbg !23992

42:                                               ; preds = %41, %31
  %43 = load i32, i32* %13, align 4, !dbg !23993
  %44 = icmp ne i32 %43, 0, !dbg !23995
  br i1 %44, label %45, label %47, !dbg !23996

45:                                               ; preds = %42
  %46 = load i32, i32* %13, align 4, !dbg !23997
  store i32 %46, i32* %6, align 4, !dbg !23998
  br label %94, !dbg !23998

47:                                               ; preds = %42
  %48 = load i8*, i8** %8, align 8, !dbg !23999
  %49 = getelementptr inbounds i8, i8* %48, i64 4, !dbg !24001
  %50 = getelementptr inbounds [28 x i8], [28 x i8]* %12, i64 0, i64 0, !dbg !24002
  %51 = call i32 @mbedtls_ssl_safer_memcmp(i8* %49, i8* %50, i64 28), !dbg !24003
  %52 = icmp ne i32 %51, 0, !dbg !24004
  br i1 %52, label %53, label %54, !dbg !24005

53:                                               ; preds = %47
  store i32 -1, i32* %6, align 4, !dbg !24006
  br label %94, !dbg !24006

54:                                               ; preds = %47
  %55 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %15, align 8, !dbg !24007
  %56 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %55, i32 0, i32 1, !dbg !24008
  %57 = load i64, i64* %56, align 8, !dbg !24008
  store i64 %57, i64* %16, align 8, !dbg !24009
  %58 = load i8*, i8** %8, align 8, !dbg !24010
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !24010
  %60 = load i8, i8* %59, align 1, !dbg !24010
  %61 = zext i8 %60 to i64, !dbg !24011
  %62 = shl i64 %61, 24, !dbg !24012
  %63 = load i8*, i8** %8, align 8, !dbg !24013
  %64 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !24013
  %65 = load i8, i8* %64, align 1, !dbg !24013
  %66 = zext i8 %65 to i64, !dbg !24014
  %67 = shl i64 %66, 16, !dbg !24015
  %68 = or i64 %62, %67, !dbg !24016
  %69 = load i8*, i8** %8, align 8, !dbg !24017
  %70 = getelementptr inbounds i8, i8* %69, i64 2, !dbg !24017
  %71 = load i8, i8* %70, align 1, !dbg !24017
  %72 = zext i8 %71 to i64, !dbg !24018
  %73 = shl i64 %72, 8, !dbg !24019
  %74 = or i64 %68, %73, !dbg !24020
  %75 = load i8*, i8** %8, align 8, !dbg !24021
  %76 = getelementptr inbounds i8, i8* %75, i64 3, !dbg !24021
  %77 = load i8, i8* %76, align 1, !dbg !24021
  %78 = zext i8 %77 to i64, !dbg !24022
  %79 = or i64 %74, %78, !dbg !24023
  store i64 %79, i64* %17, align 8, !dbg !24024
  %80 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %15, align 8, !dbg !24025
  %81 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %80, i32 0, i32 2, !dbg !24027
  %82 = load i64, i64* %81, align 8, !dbg !24027
  %83 = icmp ne i64 %82, 0, !dbg !24028
  br i1 %83, label %84, label %93, !dbg !24029

84:                                               ; preds = %54
  %85 = load i64, i64* %16, align 8, !dbg !24030
  %86 = load i64, i64* %17, align 8, !dbg !24031
  %87 = sub i64 %85, %86, !dbg !24032
  %88 = load %struct.mbedtls_ssl_cookie_ctx*, %struct.mbedtls_ssl_cookie_ctx** %15, align 8, !dbg !24033
  %89 = getelementptr inbounds %struct.mbedtls_ssl_cookie_ctx, %struct.mbedtls_ssl_cookie_ctx* %88, i32 0, i32 2, !dbg !24034
  %90 = load i64, i64* %89, align 8, !dbg !24034
  %91 = icmp ugt i64 %87, %90, !dbg !24035
  br i1 %91, label %92, label %93, !dbg !24036

92:                                               ; preds = %84
  store i32 -1, i32* %6, align 4, !dbg !24037
  br label %94, !dbg !24037

93:                                               ; preds = %84, %54
  store i32 0, i32* %6, align 4, !dbg !24038
  br label %94, !dbg !24038

94:                                               ; preds = %93, %92, %53, %45, %30, %26
  %95 = load i32, i32* %6, align 4, !dbg !24039
  ret i32 %95, !dbg !24039
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mbedtls_ssl_safer_memcmp(i8* %0, i8* %1, i64 %2) #0 !dbg !24040 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !24042, metadata !DIExpression()), !dbg !24043
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !24044, metadata !DIExpression()), !dbg !24045
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !24046, metadata !DIExpression()), !dbg !24047
  call void @llvm.dbg.declare(metadata i64* %7, metadata !24048, metadata !DIExpression()), !dbg !24049
  call void @llvm.dbg.declare(metadata i8** %8, metadata !24050, metadata !DIExpression()), !dbg !24051
  %11 = load i8*, i8** %4, align 8, !dbg !24052
  store i8* %11, i8** %8, align 8, !dbg !24051
  call void @llvm.dbg.declare(metadata i8** %9, metadata !24053, metadata !DIExpression()), !dbg !24054
  %12 = load i8*, i8** %5, align 8, !dbg !24055
  store i8* %12, i8** %9, align 8, !dbg !24054
  call void @llvm.dbg.declare(metadata i8* %10, metadata !24056, metadata !DIExpression()), !dbg !24057
  store i8 0, i8* %10, align 1, !dbg !24057
  store i64 0, i64* %7, align 8, !dbg !24058
  br label %13, !dbg !24060

13:                                               ; preds = %33, %3
  %14 = load i64, i64* %7, align 8, !dbg !24061
  %15 = load i64, i64* %6, align 8, !dbg !24063
  %16 = icmp ult i64 %14, %15, !dbg !24064
  br i1 %16, label %17, label %36, !dbg !24065

17:                                               ; preds = %13
  %18 = load i8*, i8** %8, align 8, !dbg !24066
  %19 = load i64, i64* %7, align 8, !dbg !24067
  %20 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !24066
  %21 = load i8, i8* %20, align 1, !dbg !24066
  %22 = zext i8 %21 to i32, !dbg !24066
  %23 = load i8*, i8** %9, align 8, !dbg !24068
  %24 = load i64, i64* %7, align 8, !dbg !24069
  %25 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !24068
  %26 = load i8, i8* %25, align 1, !dbg !24068
  %27 = zext i8 %26 to i32, !dbg !24068
  %28 = xor i32 %22, %27, !dbg !24070
  %29 = load i8, i8* %10, align 1, !dbg !24071
  %30 = zext i8 %29 to i32, !dbg !24071
  %31 = or i32 %30, %28, !dbg !24071
  %32 = trunc i32 %31 to i8, !dbg !24071
  store i8 %32, i8* %10, align 1, !dbg !24071
  br label %33, !dbg !24072

33:                                               ; preds = %17
  %34 = load i64, i64* %7, align 8, !dbg !24073
  %35 = add i64 %34, 1, !dbg !24073
  store i64 %35, i64* %7, align 8, !dbg !24073
  br label %13, !dbg !24074, !llvm.loop !24075

36:                                               ; preds = %13
  %37 = load i8, i8* %10, align 1, !dbg !24077
  %38 = zext i8 %37 to i32, !dbg !24078
  ret i32 %38, !dbg !24079
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_set_client_transport_id(%struct.mbedtls_ssl_context* %0, i8* %1, i64 %2) #0 !dbg !24080 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_ssl_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %5, metadata !24571, metadata !DIExpression()), !dbg !24572
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !24573, metadata !DIExpression()), !dbg !24574
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !24575, metadata !DIExpression()), !dbg !24576
  %8 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %5, align 8, !dbg !24577
  %9 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %8, i32 0, i32 0, !dbg !24579
  %10 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %9, align 8, !dbg !24579
  %11 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %10, i32 0, i32 46, !dbg !24580
  %12 = bitcast i24* %11 to i32*, !dbg !24580
  %13 = load i32, i32* %12, align 4, !dbg !24580
  %14 = and i32 %13, 1, !dbg !24580
  %15 = icmp ne i32 %14, 1, !dbg !24581
  br i1 %15, label %16, label %17, !dbg !24582

16:                                               ; preds = %3
  store i32 -28928, i32* %4, align 4, !dbg !24583
  br label %36, !dbg !24583

17:                                               ; preds = %3
  %18 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %5, align 8, !dbg !24584
  %19 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %18, i32 0, i32 53, !dbg !24585
  %20 = load i8*, i8** %19, align 8, !dbg !24585
  call void @free(i8* %20), !dbg !24586
  %21 = load i64, i64* %7, align 8, !dbg !24587
  %22 = call align 16 i8* @calloc(i64 1, i64 %21), !dbg !24589
  %23 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %5, align 8, !dbg !24590
  %24 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %23, i32 0, i32 53, !dbg !24591
  store i8* %22, i8** %24, align 8, !dbg !24592
  %25 = icmp eq i8* %22, null, !dbg !24593
  br i1 %25, label %26, label %27, !dbg !24594

26:                                               ; preds = %17
  store i32 -32512, i32* %4, align 4, !dbg !24595
  br label %36, !dbg !24595

27:                                               ; preds = %17
  %28 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %5, align 8, !dbg !24596
  %29 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %28, i32 0, i32 53, !dbg !24597
  %30 = load i8*, i8** %29, align 8, !dbg !24597
  %31 = load i8*, i8** %6, align 8, !dbg !24598
  %32 = load i64, i64* %7, align 8, !dbg !24599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false), !dbg !24600
  %33 = load i64, i64* %7, align 8, !dbg !24601
  %34 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %5, align 8, !dbg !24602
  %35 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %34, i32 0, i32 54, !dbg !24603
  store i64 %33, i64* %35, align 8, !dbg !24604
  store i32 0, i32* %4, align 4, !dbg !24605
  br label %36, !dbg !24605

36:                                               ; preds = %27, %26, %16
  %37 = load i32, i32* %4, align 4, !dbg !24606
  ret i32 %37, !dbg !24606
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @mbedtls_ssl_conf_dtls_cookies(%struct.mbedtls_ssl_config* %0, i32 (i8*, i8**, i8*, i8*, i64)* %1, i32 (i8*, i8*, i64, i8*, i64)* %2, i8* %3) #0 !dbg !24607 {
  %5 = alloca %struct.mbedtls_ssl_config*, align 8
  %6 = alloca i32 (i8*, i8**, i8*, i8*, i64)*, align 8
  %7 = alloca i32 (i8*, i8*, i64, i8*, i64)*, align 8
  %8 = alloca i8*, align 8
  store %struct.mbedtls_ssl_config* %0, %struct.mbedtls_ssl_config** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_config** %5, metadata !24615, metadata !DIExpression()), !dbg !24616
  store i32 (i8*, i8**, i8*, i8*, i64)* %1, i32 (i8*, i8**, i8*, i8*, i64)** %6, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8**, i8*, i8*, i64)** %6, metadata !24617, metadata !DIExpression()), !dbg !24618
  store i32 (i8*, i8*, i64, i8*, i64)* %2, i32 (i8*, i8*, i64, i8*, i64)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i64, i8*, i64)** %7, metadata !24619, metadata !DIExpression()), !dbg !24620
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !24621, metadata !DIExpression()), !dbg !24622
  %9 = load i32 (i8*, i8**, i8*, i8*, i64)*, i32 (i8*, i8**, i8*, i8*, i64)** %6, align 8, !dbg !24623
  %10 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %5, align 8, !dbg !24624
  %11 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %10, i32 0, i32 14, !dbg !24625
  store i32 (i8*, i8**, i8*, i8*, i64)* %9, i32 (i8*, i8**, i8*, i8*, i64)** %11, align 8, !dbg !24626
  %12 = load i32 (i8*, i8*, i64, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)** %7, align 8, !dbg !24627
  %13 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %5, align 8, !dbg !24628
  %14 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %13, i32 0, i32 15, !dbg !24629
  store i32 (i8*, i8*, i64, i8*, i64)* %12, i32 (i8*, i8*, i64, i8*, i64)** %14, align 8, !dbg !24630
  %15 = load i8*, i8** %8, align 8, !dbg !24631
  %16 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %5, align 8, !dbg !24632
  %17 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %16, i32 0, i32 16, !dbg !24633
  store i8* %15, i8** %17, align 8, !dbg !24634
  ret void, !dbg !24635
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @mbedtls_ssl_handshake_server_step(%struct.mbedtls_ssl_context* %0) #0 !dbg !24636 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_context*, align 8
  %4 = alloca i32, align 4
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %3, metadata !24639, metadata !DIExpression()), !dbg !24640
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24641, metadata !DIExpression()), !dbg !24642
  store i32 0, i32* %4, align 4, !dbg !24642
  %5 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24643
  %6 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %5, i32 0, i32 1, !dbg !24645
  %7 = load i32, i32* %6, align 8, !dbg !24645
  %8 = icmp eq i32 %7, 16, !dbg !24646
  br i1 %8, label %14, label %9, !dbg !24647

9:                                                ; preds = %1
  %10 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24648
  %11 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %10, i32 0, i32 15, !dbg !24649
  %12 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %11, align 8, !dbg !24649
  %13 = icmp eq %struct.mbedtls_ssl_handshake_params* %12, null, !dbg !24650
  br i1 %13, label %14, label %15, !dbg !24651

14:                                               ; preds = %9, %1
  store i32 -28928, i32* %2, align 4, !dbg !24652
  br label %121, !dbg !24652

15:                                               ; preds = %9
  %16 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24653
  %17 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24653
  %18 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %17, i32 0, i32 1, !dbg !24653
  %19 = load i32, i32* %18, align 8, !dbg !24653
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %16, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 4016, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.618, i64 0, i64 0), i32 %19), !dbg !24653
  %20 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24654
  %21 = call i32 @mbedtls_ssl_flush_output(%struct.mbedtls_ssl_context* %20), !dbg !24656
  store i32 %21, i32* %4, align 4, !dbg !24657
  %22 = icmp ne i32 %21, 0, !dbg !24658
  br i1 %22, label %23, label %25, !dbg !24659

23:                                               ; preds = %15
  %24 = load i32, i32* %4, align 4, !dbg !24660
  store i32 %24, i32* %2, align 4, !dbg !24661
  br label %121, !dbg !24661

25:                                               ; preds = %15
  %26 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24662
  %27 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %26, i32 0, i32 0, !dbg !24664
  %28 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %27, align 8, !dbg !24664
  %29 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %28, i32 0, i32 46, !dbg !24665
  %30 = bitcast i24* %29 to i32*, !dbg !24665
  %31 = load i32, i32* %30, align 4, !dbg !24665
  %32 = lshr i32 %31, 1, !dbg !24665
  %33 = and i32 %32, 1, !dbg !24665
  %34 = icmp eq i32 %33, 1, !dbg !24666
  br i1 %34, label %35, label %50, !dbg !24667

35:                                               ; preds = %25
  %36 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24668
  %37 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %36, i32 0, i32 15, !dbg !24669
  %38 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %37, align 8, !dbg !24669
  %39 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %38, i32 0, i32 17, !dbg !24670
  %40 = load i8, i8* %39, align 4, !dbg !24670
  %41 = zext i8 %40 to i32, !dbg !24668
  %42 = icmp eq i32 %41, 1, !dbg !24671
  br i1 %42, label %43, label %50, !dbg !24672

43:                                               ; preds = %35
  %44 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24673
  %45 = call i32 @mbedtls_ssl_resend(%struct.mbedtls_ssl_context* %44), !dbg !24676
  store i32 %45, i32* %4, align 4, !dbg !24677
  %46 = icmp ne i32 %45, 0, !dbg !24678
  br i1 %46, label %47, label %49, !dbg !24679

47:                                               ; preds = %43
  %48 = load i32, i32* %4, align 4, !dbg !24680
  store i32 %48, i32* %2, align 4, !dbg !24681
  br label %121, !dbg !24681

49:                                               ; preds = %43
  br label %50, !dbg !24682

50:                                               ; preds = %49, %35, %25
  %51 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24683
  %52 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %51, i32 0, i32 1, !dbg !24684
  %53 = load i32, i32* %52, align 8, !dbg !24684
  switch i32 %53, label %114 [
    i32 0, label %54
    i32 1, label %57
    i32 18, label %60
    i32 2, label %61
    i32 3, label %64
    i32 4, label %67
    i32 5, label %70
    i32 6, label %73
    i32 7, label %76
    i32 8, label %79
    i32 9, label %82
    i32 10, label %85
    i32 11, label %88
    i32 12, label %91
    i32 13, label %105
    i32 14, label %108
    i32 15, label %112
  ], !dbg !24685

54:                                               ; preds = %50
  %55 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24686
  %56 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %55, i32 0, i32 1, !dbg !24688
  store i32 1, i32* %56, align 8, !dbg !24689
  br label %119, !dbg !24690

57:                                               ; preds = %50
  %58 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24691
  %59 = call i32 @ssl_parse_client_hello(%struct.mbedtls_ssl_context* %58), !dbg !24692
  store i32 %59, i32* %4, align 4, !dbg !24693
  br label %119, !dbg !24694

60:                                               ; preds = %50
  store i32 -27264, i32* %2, align 4, !dbg !24695
  br label %121, !dbg !24695

61:                                               ; preds = %50
  %62 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24696
  %63 = call i32 @ssl_write_server_hello(%struct.mbedtls_ssl_context* %62), !dbg !24697
  store i32 %63, i32* %4, align 4, !dbg !24698
  br label %119, !dbg !24699

64:                                               ; preds = %50
  %65 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24700
  %66 = call i32 @mbedtls_ssl_write_certificate(%struct.mbedtls_ssl_context* %65), !dbg !24701
  store i32 %66, i32* %4, align 4, !dbg !24702
  br label %119, !dbg !24703

67:                                               ; preds = %50
  %68 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24704
  %69 = call i32 @ssl_write_server_key_exchange(%struct.mbedtls_ssl_context* %68), !dbg !24705
  store i32 %69, i32* %4, align 4, !dbg !24706
  br label %119, !dbg !24707

70:                                               ; preds = %50
  %71 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24708
  %72 = call i32 @ssl_write_certificate_request(%struct.mbedtls_ssl_context* %71), !dbg !24709
  store i32 %72, i32* %4, align 4, !dbg !24710
  br label %119, !dbg !24711

73:                                               ; preds = %50
  %74 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24712
  %75 = call i32 @ssl_write_server_hello_done(%struct.mbedtls_ssl_context* %74), !dbg !24713
  store i32 %75, i32* %4, align 4, !dbg !24714
  br label %119, !dbg !24715

76:                                               ; preds = %50
  %77 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24716
  %78 = call i32 @mbedtls_ssl_parse_certificate(%struct.mbedtls_ssl_context* %77), !dbg !24717
  store i32 %78, i32* %4, align 4, !dbg !24718
  br label %119, !dbg !24719

79:                                               ; preds = %50
  %80 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24720
  %81 = call i32 @ssl_parse_client_key_exchange(%struct.mbedtls_ssl_context* %80), !dbg !24721
  store i32 %81, i32* %4, align 4, !dbg !24722
  br label %119, !dbg !24723

82:                                               ; preds = %50
  %83 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24724
  %84 = call i32 @ssl_parse_certificate_verify(%struct.mbedtls_ssl_context* %83), !dbg !24725
  store i32 %84, i32* %4, align 4, !dbg !24726
  br label %119, !dbg !24727

85:                                               ; preds = %50
  %86 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24728
  %87 = call i32 @mbedtls_ssl_parse_change_cipher_spec(%struct.mbedtls_ssl_context* %86), !dbg !24729
  store i32 %87, i32* %4, align 4, !dbg !24730
  br label %119, !dbg !24731

88:                                               ; preds = %50
  %89 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24732
  %90 = call i32 @mbedtls_ssl_parse_finished(%struct.mbedtls_ssl_context* %89), !dbg !24733
  store i32 %90, i32* %4, align 4, !dbg !24734
  br label %119, !dbg !24735

91:                                               ; preds = %50
  %92 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24736
  %93 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %92, i32 0, i32 15, !dbg !24738
  %94 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %93, align 8, !dbg !24738
  %95 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %94, i32 0, i32 38, !dbg !24739
  %96 = load i32, i32* %95, align 4, !dbg !24739
  %97 = icmp ne i32 %96, 0, !dbg !24740
  br i1 %97, label %98, label %101, !dbg !24741

98:                                               ; preds = %91
  %99 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24742
  %100 = call i32 @ssl_write_new_session_ticket(%struct.mbedtls_ssl_context* %99), !dbg !24743
  store i32 %100, i32* %4, align 4, !dbg !24744
  br label %104, !dbg !24745

101:                                              ; preds = %91
  %102 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24746
  %103 = call i32 @mbedtls_ssl_write_change_cipher_spec(%struct.mbedtls_ssl_context* %102), !dbg !24747
  store i32 %103, i32* %4, align 4, !dbg !24748
  br label %104

104:                                              ; preds = %101, %98
  br label %119, !dbg !24749

105:                                              ; preds = %50
  %106 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24750
  %107 = call i32 @mbedtls_ssl_write_finished(%struct.mbedtls_ssl_context* %106), !dbg !24751
  store i32 %107, i32* %4, align 4, !dbg !24752
  br label %119, !dbg !24753

108:                                              ; preds = %50
  %109 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24754
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %109, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 4121, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.619, i64 0, i64 0)), !dbg !24754
  %110 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24755
  %111 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %110, i32 0, i32 1, !dbg !24756
  store i32 15, i32* %111, align 8, !dbg !24757
  br label %119, !dbg !24758

112:                                              ; preds = %50
  %113 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24759
  call void @mbedtls_ssl_handshake_wrapup(%struct.mbedtls_ssl_context* %113), !dbg !24760
  br label %119, !dbg !24761

114:                                              ; preds = %50
  %115 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24762
  %116 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24762
  %117 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %116, i32 0, i32 1, !dbg !24762
  %118 = load i32, i32* %117, align 8, !dbg !24762
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %115, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 4130, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.620, i64 0, i64 0), i32 %118), !dbg !24762
  store i32 -28928, i32* %2, align 4, !dbg !24763
  br label %121, !dbg !24763

119:                                              ; preds = %112, %108, %105, %104, %88, %85, %82, %79, %76, %73, %70, %67, %64, %61, %57, %54
  %120 = load i32, i32* %4, align 4, !dbg !24764
  store i32 %120, i32* %2, align 4, !dbg !24765
  br label %121, !dbg !24765

121:                                              ; preds = %119, %114, %60, %47, %23, %14
  %122 = load i32, i32* %2, align 4, !dbg !24766
  ret i32 %122, !dbg !24766
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_parse_client_hello(%struct.mbedtls_ssl_context* %0) #0 !dbg !24767 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32*, align 8
  %24 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %3, metadata !24768, metadata !DIExpression()), !dbg !24769
  call void @llvm.dbg.declare(metadata i32* %4, metadata !24770, metadata !DIExpression()), !dbg !24771
  call void @llvm.dbg.declare(metadata i32* %5, metadata !24772, metadata !DIExpression()), !dbg !24773
  call void @llvm.dbg.declare(metadata i64* %6, metadata !24774, metadata !DIExpression()), !dbg !24775
  call void @llvm.dbg.declare(metadata i64* %7, metadata !24776, metadata !DIExpression()), !dbg !24777
  call void @llvm.dbg.declare(metadata i64* %8, metadata !24778, metadata !DIExpression()), !dbg !24779
  call void @llvm.dbg.declare(metadata i64* %9, metadata !24780, metadata !DIExpression()), !dbg !24781
  call void @llvm.dbg.declare(metadata i64* %10, metadata !24782, metadata !DIExpression()), !dbg !24783
  call void @llvm.dbg.declare(metadata i64* %11, metadata !24784, metadata !DIExpression()), !dbg !24785
  call void @llvm.dbg.declare(metadata i64* %12, metadata !24786, metadata !DIExpression()), !dbg !24787
  call void @llvm.dbg.declare(metadata i64* %13, metadata !24788, metadata !DIExpression()), !dbg !24789
  call void @llvm.dbg.declare(metadata i64* %14, metadata !24790, metadata !DIExpression()), !dbg !24791
  call void @llvm.dbg.declare(metadata i64* %15, metadata !24792, metadata !DIExpression()), !dbg !24793
  call void @llvm.dbg.declare(metadata i64* %16, metadata !24794, metadata !DIExpression()), !dbg !24795
  call void @llvm.dbg.declare(metadata i64* %17, metadata !24796, metadata !DIExpression()), !dbg !24797
  call void @llvm.dbg.declare(metadata i8** %18, metadata !24798, metadata !DIExpression()), !dbg !24799
  call void @llvm.dbg.declare(metadata i8** %19, metadata !24800, metadata !DIExpression()), !dbg !24801
  call void @llvm.dbg.declare(metadata i8** %20, metadata !24802, metadata !DIExpression()), !dbg !24803
  call void @llvm.dbg.declare(metadata i32* %21, metadata !24804, metadata !DIExpression()), !dbg !24805
  store i32 0, i32* %21, align 4, !dbg !24805
  call void @llvm.dbg.declare(metadata i32* %22, metadata !24806, metadata !DIExpression()), !dbg !24807
  store i32 0, i32* %22, align 4, !dbg !24807
  call void @llvm.dbg.declare(metadata i32** %23, metadata !24808, metadata !DIExpression()), !dbg !24809
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %24, metadata !24810, metadata !DIExpression()), !dbg !24811
  call void @llvm.dbg.declare(metadata i32* %25, metadata !24812, metadata !DIExpression()), !dbg !24813
  call void @llvm.dbg.declare(metadata i32* %26, metadata !24814, metadata !DIExpression()), !dbg !24815
  call void @llvm.dbg.declare(metadata i32* %27, metadata !24816, metadata !DIExpression()), !dbg !24817
  store i32 0, i32* %27, align 4, !dbg !24817
  %35 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24818
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %35, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1190, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.719, i64 0, i64 0)), !dbg !24818
  br label %36, !dbg !24818

36:                                               ; preds = %154, %1
  call void @llvm.dbg.label(metadata !24819), !dbg !24820
  %37 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24821
  %38 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %37, i32 0, i32 2, !dbg !24823
  %39 = load i32, i32* %38, align 4, !dbg !24823
  %40 = icmp eq i32 %39, 0, !dbg !24824
  br i1 %40, label %41, label %50, !dbg !24825

41:                                               ; preds = %36
  %42 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24826
  %43 = call i32 @mbedtls_ssl_fetch_input(%struct.mbedtls_ssl_context* %42, i64 5), !dbg !24829
  store i32 %43, i32* %4, align 4, !dbg !24830
  %44 = icmp ne i32 %43, 0, !dbg !24831
  br i1 %44, label %45, label %49, !dbg !24832

45:                                               ; preds = %41
  %46 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24833
  %47 = load i32, i32* %4, align 4, !dbg !24833
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %46, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1207, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.720, i64 0, i64 0), i32 %47), !dbg !24833
  %48 = load i32, i32* %4, align 4, !dbg !24835
  store i32 %48, i32* %2, align 4, !dbg !24836
  br label %1408, !dbg !24836

49:                                               ; preds = %41
  br label %50, !dbg !24837

50:                                               ; preds = %49, %36
  %51 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24838
  %52 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %51, i32 0, i32 25, !dbg !24839
  %53 = load i8*, i8** %52, align 8, !dbg !24839
  store i8* %53, i8** %18, align 8, !dbg !24840
  %54 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24841
  %55 = load i8*, i8** %18, align 8, !dbg !24841
  %56 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24841
  %57 = call i64 @mbedtls_ssl_hdr_len(%struct.mbedtls_ssl_context* %56), !dbg !24841
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %54, i32 4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1222, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.721, i64 0, i64 0), i8* %55, i64 %57), !dbg !24841
  %58 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24842
  %59 = load i8*, i8** %18, align 8, !dbg !24842
  %60 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !24842
  %61 = load i8, i8* %60, align 1, !dbg !24842
  %62 = zext i8 %61 to i32, !dbg !24842
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %58, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1234, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7.722, i64 0, i64 0), i32 %62), !dbg !24842
  %63 = load i8*, i8** %18, align 8, !dbg !24843
  %64 = getelementptr inbounds i8, i8* %63, i64 0, !dbg !24843
  %65 = load i8, i8* %64, align 1, !dbg !24843
  %66 = zext i8 %65 to i32, !dbg !24843
  %67 = icmp ne i32 %66, 22, !dbg !24845
  br i1 %67, label %68, label %70, !dbg !24846

68:                                               ; preds = %50
  %69 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24847
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %69, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1238, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !24847
  store i32 -30976, i32* %2, align 4, !dbg !24849
  br label %1408, !dbg !24849

70:                                               ; preds = %50
  %71 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24850
  %72 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24850
  %73 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %72, i32 0, i32 26, !dbg !24850
  %74 = load i8*, i8** %73, align 8, !dbg !24850
  %75 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !24850
  %76 = load i8, i8* %75, align 1, !dbg !24850
  %77 = zext i8 %76 to i32, !dbg !24850
  %78 = shl i32 %77, 8, !dbg !24850
  %79 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24850
  %80 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %79, i32 0, i32 26, !dbg !24850
  %81 = load i8*, i8** %80, align 8, !dbg !24850
  %82 = getelementptr inbounds i8, i8* %81, i64 1, !dbg !24850
  %83 = load i8, i8* %82, align 1, !dbg !24850
  %84 = zext i8 %83 to i32, !dbg !24850
  %85 = or i32 %78, %84, !dbg !24850
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %71, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1243, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.724, i64 0, i64 0), i32 %85), !dbg !24850
  %86 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24851
  %87 = load i8*, i8** %18, align 8, !dbg !24851
  %88 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !24851
  %89 = load i8, i8* %88, align 1, !dbg !24851
  %90 = zext i8 %89 to i32, !dbg !24851
  %91 = load i8*, i8** %18, align 8, !dbg !24851
  %92 = getelementptr inbounds i8, i8* %91, i64 2, !dbg !24851
  %93 = load i8, i8* %92, align 1, !dbg !24851
  %94 = zext i8 %93 to i32, !dbg !24851
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %86, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1246, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.725, i64 0, i64 0), i32 %90, i32 %94), !dbg !24851
  %95 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24852
  %96 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %95, i32 0, i32 0, !dbg !24853
  %97 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %96, align 8, !dbg !24853
  %98 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %97, i32 0, i32 46, !dbg !24854
  %99 = bitcast i24* %98 to i32*, !dbg !24854
  %100 = load i32, i32* %99, align 4, !dbg !24854
  %101 = lshr i32 %100, 1, !dbg !24854
  %102 = and i32 %101, 1, !dbg !24854
  %103 = load i8*, i8** %18, align 8, !dbg !24855
  %104 = getelementptr inbounds i8, i8* %103, i64 1, !dbg !24856
  call void @mbedtls_ssl_read_version(i32* %25, i32* %26, i32 %102, i8* %104), !dbg !24857
  %105 = load i32, i32* %25, align 4, !dbg !24858
  %106 = icmp slt i32 %105, 3, !dbg !24860
  br i1 %106, label %107, label %109, !dbg !24861

107:                                              ; preds = %70
  %108 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24862
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %108, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1256, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !24862
  store i32 -30976, i32* %2, align 4, !dbg !24864
  br label %1408, !dbg !24864

109:                                              ; preds = %70
  %110 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24865
  %111 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %110, i32 0, i32 0, !dbg !24867
  %112 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %111, align 8, !dbg !24867
  %113 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %112, i32 0, i32 46, !dbg !24868
  %114 = bitcast i24* %113 to i32*, !dbg !24868
  %115 = load i32, i32* %114, align 4, !dbg !24868
  %116 = lshr i32 %115, 1, !dbg !24868
  %117 = and i32 %116, 1, !dbg !24868
  %118 = icmp eq i32 %117, 1, !dbg !24869
  br i1 %118, label %119, label %162, !dbg !24870

119:                                              ; preds = %109
  %120 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24871
  %121 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %120, i32 0, i32 2, !dbg !24872
  %122 = load i32, i32* %121, align 4, !dbg !24872
  %123 = icmp eq i32 %122, 0, !dbg !24873
  br i1 %123, label %124, label %162, !dbg !24874

124:                                              ; preds = %119
  %125 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24875
  %126 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %125, i32 0, i32 24, !dbg !24878
  %127 = load i8*, i8** %126, align 8, !dbg !24878
  %128 = getelementptr inbounds i8, i8* %127, i64 0, !dbg !24875
  %129 = load i8, i8* %128, align 1, !dbg !24875
  %130 = zext i8 %129 to i32, !dbg !24875
  %131 = icmp ne i32 %130, 0, !dbg !24879
  br i1 %131, label %140, label %132, !dbg !24880

132:                                              ; preds = %124
  %133 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24881
  %134 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %133, i32 0, i32 24, !dbg !24882
  %135 = load i8*, i8** %134, align 8, !dbg !24882
  %136 = getelementptr inbounds i8, i8* %135, i64 1, !dbg !24881
  %137 = load i8, i8* %136, align 1, !dbg !24881
  %138 = zext i8 %137 to i32, !dbg !24881
  %139 = icmp ne i32 %138, 0, !dbg !24883
  br i1 %139, label %140, label %142, !dbg !24884

140:                                              ; preds = %132, %124
  %141 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24885
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %141, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1272, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !24885
  store i32 -30976, i32* %2, align 4, !dbg !24887
  br label %1408, !dbg !24887

142:                                              ; preds = %132
  %143 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24888
  %144 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %143, i32 0, i32 41, !dbg !24889
  %145 = load i8*, i8** %144, align 8, !dbg !24889
  %146 = getelementptr inbounds i8, i8* %145, i64 2, !dbg !24890
  %147 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24891
  %148 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %147, i32 0, i32 24, !dbg !24892
  %149 = load i8*, i8** %148, align 8, !dbg !24892
  %150 = getelementptr inbounds i8, i8* %149, i64 2, !dbg !24893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %146, i8* align 1 %150, i64 6, i1 false), !dbg !24894
  %151 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24895
  %152 = call i32 @mbedtls_ssl_dtls_replay_check(%struct.mbedtls_ssl_context* %151), !dbg !24897
  %153 = icmp ne i32 %152, 0, !dbg !24898
  br i1 %153, label %154, label %160, !dbg !24899

154:                                              ; preds = %142
  %155 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24900
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %155, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1281, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.726, i64 0, i64 0)), !dbg !24900
  %156 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24902
  %157 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %156, i32 0, i32 34, !dbg !24903
  store i64 0, i64* %157, align 8, !dbg !24904
  %158 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24905
  %159 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %158, i32 0, i32 32, !dbg !24906
  store i64 0, i64* %159, align 8, !dbg !24907
  br label %36, !dbg !24908

160:                                              ; preds = %142
  %161 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24909
  call void @mbedtls_ssl_dtls_replay_update(%struct.mbedtls_ssl_context* %161), !dbg !24910
  br label %162, !dbg !24911

162:                                              ; preds = %160, %119, %109
  %163 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24912
  %164 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %163, i32 0, i32 26, !dbg !24913
  %165 = load i8*, i8** %164, align 8, !dbg !24913
  %166 = getelementptr inbounds i8, i8* %165, i64 0, !dbg !24912
  %167 = load i8, i8* %166, align 1, !dbg !24912
  %168 = zext i8 %167 to i32, !dbg !24912
  %169 = shl i32 %168, 8, !dbg !24914
  %170 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24915
  %171 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %170, i32 0, i32 26, !dbg !24916
  %172 = load i8*, i8** %171, align 8, !dbg !24916
  %173 = getelementptr inbounds i8, i8* %172, i64 1, !dbg !24915
  %174 = load i8, i8* %173, align 1, !dbg !24915
  %175 = zext i8 %174 to i32, !dbg !24915
  %176 = or i32 %169, %175, !dbg !24917
  %177 = sext i32 %176 to i64, !dbg !24918
  store i64 %177, i64* %11, align 8, !dbg !24919
  %178 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24920
  %179 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %178, i32 0, i32 2, !dbg !24922
  %180 = load i32, i32* %179, align 4, !dbg !24922
  %181 = icmp ne i32 %180, 0, !dbg !24923
  br i1 %181, label %182, label %186, !dbg !24924

182:                                              ; preds = %162
  %183 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24925
  %184 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %183, i32 0, i32 37, !dbg !24927
  %185 = load i64, i64* %184, align 8, !dbg !24927
  store i64 %185, i64* %11, align 8, !dbg !24928
  br label %224, !dbg !24929

186:                                              ; preds = %162
  %187 = load i64, i64* %11, align 8, !dbg !24930
  %188 = icmp ugt i64 %187, 16384, !dbg !24933
  br i1 %188, label %189, label %191, !dbg !24934

189:                                              ; preds = %186
  %190 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24935
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %190, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1306, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !24935
  store i32 -30976, i32* %2, align 4, !dbg !24937
  br label %1408, !dbg !24937

191:                                              ; preds = %186
  %192 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24938
  %193 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24940
  %194 = call i64 @mbedtls_ssl_hdr_len(%struct.mbedtls_ssl_context* %193), !dbg !24941
  %195 = load i64, i64* %11, align 8, !dbg !24942
  %196 = add i64 %194, %195, !dbg !24943
  %197 = call i32 @mbedtls_ssl_fetch_input(%struct.mbedtls_ssl_context* %192, i64 %196), !dbg !24944
  store i32 %197, i32* %4, align 4, !dbg !24945
  %198 = icmp ne i32 %197, 0, !dbg !24946
  br i1 %198, label %199, label %203, !dbg !24947

199:                                              ; preds = %191
  %200 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24948
  %201 = load i32, i32* %4, align 4, !dbg !24948
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %200, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1313, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.720, i64 0, i64 0), i32 %201), !dbg !24948
  %202 = load i32, i32* %4, align 4, !dbg !24950
  store i32 %202, i32* %2, align 4, !dbg !24951
  br label %1408, !dbg !24951

203:                                              ; preds = %191
  %204 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24952
  %205 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %204, i32 0, i32 0, !dbg !24954
  %206 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %205, align 8, !dbg !24954
  %207 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %206, i32 0, i32 46, !dbg !24955
  %208 = bitcast i24* %207 to i32*, !dbg !24955
  %209 = load i32, i32* %208, align 4, !dbg !24955
  %210 = lshr i32 %209, 1, !dbg !24955
  %211 = and i32 %210, 1, !dbg !24955
  %212 = icmp eq i32 %211, 1, !dbg !24956
  br i1 %212, label %213, label %220, !dbg !24957

213:                                              ; preds = %203
  %214 = load i64, i64* %11, align 8, !dbg !24958
  %215 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24959
  %216 = call i64 @mbedtls_ssl_hdr_len(%struct.mbedtls_ssl_context* %215), !dbg !24960
  %217 = add i64 %214, %216, !dbg !24961
  %218 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24962
  %219 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %218, i32 0, i32 34, !dbg !24963
  store i64 %217, i64* %219, align 8, !dbg !24964
  br label %223, !dbg !24962

220:                                              ; preds = %203
  %221 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24965
  %222 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %221, i32 0, i32 32, !dbg !24966
  store i64 0, i64* %222, align 8, !dbg !24967
  br label %223

223:                                              ; preds = %220, %213
  br label %224

224:                                              ; preds = %223, %182
  %225 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24968
  %226 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %225, i32 0, i32 28, !dbg !24969
  %227 = load i8*, i8** %226, align 8, !dbg !24969
  store i8* %227, i8** %18, align 8, !dbg !24970
  %228 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24971
  %229 = load i8*, i8** %18, align 8, !dbg !24971
  %230 = load i64, i64* %11, align 8, !dbg !24971
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %228, i32 4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1328, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12.727, i64 0, i64 0), i8* %229, i64 %230), !dbg !24971
  %231 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24972
  %232 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %231, i32 0, i32 15, !dbg !24973
  %233 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %232, align 8, !dbg !24973
  %234 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %233, i32 0, i32 27, !dbg !24974
  %235 = load void (%struct.mbedtls_ssl_context*, i8*, i64)*, void (%struct.mbedtls_ssl_context*, i8*, i64)** %234, align 8, !dbg !24974
  %236 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24975
  %237 = load i8*, i8** %18, align 8, !dbg !24976
  %238 = load i64, i64* %11, align 8, !dbg !24977
  call void %235(%struct.mbedtls_ssl_context* %236, i8* %237, i64 %238), !dbg !24972
  %239 = load i64, i64* %11, align 8, !dbg !24978
  %240 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24980
  %241 = call i64 @mbedtls_ssl_hs_hdr_len(%struct.mbedtls_ssl_context* %240), !dbg !24981
  %242 = icmp ult i64 %239, %241, !dbg !24982
  br i1 %242, label %243, label %245, !dbg !24983

243:                                              ; preds = %224
  %244 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24984
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %244, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1342, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !24984
  store i32 -30976, i32* %2, align 4, !dbg !24986
  br label %1408, !dbg !24986

245:                                              ; preds = %224
  %246 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24987
  %247 = load i8*, i8** %18, align 8, !dbg !24987
  %248 = getelementptr inbounds i8, i8* %247, i64 0, !dbg !24987
  %249 = load i8, i8* %248, align 1, !dbg !24987
  %250 = zext i8 %249 to i32, !dbg !24987
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %246, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1346, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.728, i64 0, i64 0), i32 %250), !dbg !24987
  %251 = load i8*, i8** %18, align 8, !dbg !24988
  %252 = getelementptr inbounds i8, i8* %251, i64 0, !dbg !24988
  %253 = load i8, i8* %252, align 1, !dbg !24988
  %254 = zext i8 %253 to i32, !dbg !24988
  %255 = icmp ne i32 %254, 1, !dbg !24990
  br i1 %255, label %256, label %258, !dbg !24991

256:                                              ; preds = %245
  %257 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24992
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %257, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1350, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !24992
  store i32 -30976, i32* %2, align 4, !dbg !24994
  br label %1408, !dbg !24994

258:                                              ; preds = %245
  %259 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !24995
  %260 = load i8*, i8** %18, align 8, !dbg !24995
  %261 = getelementptr inbounds i8, i8* %260, i64 1, !dbg !24995
  %262 = load i8, i8* %261, align 1, !dbg !24995
  %263 = zext i8 %262 to i32, !dbg !24995
  %264 = shl i32 %263, 16, !dbg !24995
  %265 = load i8*, i8** %18, align 8, !dbg !24995
  %266 = getelementptr inbounds i8, i8* %265, i64 2, !dbg !24995
  %267 = load i8, i8* %266, align 1, !dbg !24995
  %268 = zext i8 %267 to i32, !dbg !24995
  %269 = shl i32 %268, 8, !dbg !24995
  %270 = or i32 %264, %269, !dbg !24995
  %271 = load i8*, i8** %18, align 8, !dbg !24995
  %272 = getelementptr inbounds i8, i8* %271, i64 3, !dbg !24995
  %273 = load i8, i8* %272, align 1, !dbg !24995
  %274 = zext i8 %273 to i32, !dbg !24995
  %275 = or i32 %270, %274, !dbg !24995
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %259, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1355, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14.729, i64 0, i64 0), i32 %275), !dbg !24995
  %276 = load i8*, i8** %18, align 8, !dbg !24996
  %277 = getelementptr inbounds i8, i8* %276, i64 1, !dbg !24996
  %278 = load i8, i8* %277, align 1, !dbg !24996
  %279 = zext i8 %278 to i32, !dbg !24996
  %280 = icmp ne i32 %279, 0, !dbg !24998
  br i1 %280, label %298, label %281, !dbg !24999

281:                                              ; preds = %258
  %282 = load i64, i64* %11, align 8, !dbg !25000
  %283 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25001
  %284 = call i64 @mbedtls_ssl_hs_hdr_len(%struct.mbedtls_ssl_context* %283), !dbg !25002
  %285 = load i8*, i8** %18, align 8, !dbg !25003
  %286 = getelementptr inbounds i8, i8* %285, i64 2, !dbg !25003
  %287 = load i8, i8* %286, align 1, !dbg !25003
  %288 = zext i8 %287 to i32, !dbg !25003
  %289 = shl i32 %288, 8, !dbg !25004
  %290 = load i8*, i8** %18, align 8, !dbg !25005
  %291 = getelementptr inbounds i8, i8* %290, i64 3, !dbg !25005
  %292 = load i8, i8* %291, align 1, !dbg !25005
  %293 = zext i8 %292 to i32, !dbg !25005
  %294 = or i32 %289, %293, !dbg !25006
  %295 = sext i32 %294 to i64, !dbg !25007
  %296 = add i64 %284, %295, !dbg !25008
  %297 = icmp ne i64 %282, %296, !dbg !25009
  br i1 %297, label %298, label %300, !dbg !25010

298:                                              ; preds = %281, %258
  %299 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25011
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %299, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1361, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25011
  store i32 -30976, i32* %2, align 4, !dbg !25013
  br label %1408, !dbg !25013

300:                                              ; preds = %281
  %301 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25014
  %302 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %301, i32 0, i32 0, !dbg !25016
  %303 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %302, align 8, !dbg !25016
  %304 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %303, i32 0, i32 46, !dbg !25017
  %305 = bitcast i24* %304 to i32*, !dbg !25017
  %306 = load i32, i32* %305, align 4, !dbg !25017
  %307 = lshr i32 %306, 1, !dbg !25017
  %308 = and i32 %307, 1, !dbg !25017
  %309 = icmp eq i32 %308, 1, !dbg !25018
  br i1 %309, label %310, label %416, !dbg !25019

310:                                              ; preds = %300
  %311 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25020
  %312 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %311, i32 0, i32 2, !dbg !25023
  %313 = load i32, i32* %312, align 4, !dbg !25023
  %314 = icmp eq i32 %313, 1, !dbg !25024
  br i1 %314, label %315, label %352, !dbg !25025

315:                                              ; preds = %310
  call void @llvm.dbg.declare(metadata i32* %28, metadata !25026, metadata !DIExpression()), !dbg !25028
  %316 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25029
  %317 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %316, i32 0, i32 28, !dbg !25030
  %318 = load i8*, i8** %317, align 8, !dbg !25030
  %319 = getelementptr inbounds i8, i8* %318, i64 4, !dbg !25029
  %320 = load i8, i8* %319, align 1, !dbg !25029
  %321 = zext i8 %320 to i32, !dbg !25029
  %322 = shl i32 %321, 8, !dbg !25031
  %323 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25032
  %324 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %323, i32 0, i32 28, !dbg !25033
  %325 = load i8*, i8** %324, align 8, !dbg !25033
  %326 = getelementptr inbounds i8, i8* %325, i64 5, !dbg !25032
  %327 = load i8, i8* %326, align 1, !dbg !25032
  %328 = zext i8 %327 to i32, !dbg !25032
  %329 = or i32 %322, %328, !dbg !25034
  store i32 %329, i32* %28, align 4, !dbg !25028
  %330 = load i32, i32* %28, align 4, !dbg !25035
  %331 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25037
  %332 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %331, i32 0, i32 15, !dbg !25038
  %333 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %332, align 8, !dbg !25038
  %334 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %333, i32 0, i32 12, !dbg !25039
  %335 = load i32, i32* %334, align 4, !dbg !25039
  %336 = icmp ne i32 %330, %335, !dbg !25040
  br i1 %336, label %337, label %345, !dbg !25041

337:                                              ; preds = %315
  %338 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25042
  %339 = load i32, i32* %28, align 4, !dbg !25042
  %340 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25042
  %341 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %340, i32 0, i32 15, !dbg !25042
  %342 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %341, align 8, !dbg !25042
  %343 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %342, i32 0, i32 12, !dbg !25042
  %344 = load i32, i32* %343, align 4, !dbg !25042
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %338, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1383, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15.730, i64 0, i64 0), i32 %339, i32 %344), !dbg !25042
  store i32 -30976, i32* %2, align 4, !dbg !25044
  br label %1408, !dbg !25044

345:                                              ; preds = %315
  %346 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25045
  %347 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %346, i32 0, i32 15, !dbg !25046
  %348 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %347, align 8, !dbg !25046
  %349 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %348, i32 0, i32 12, !dbg !25047
  %350 = load i32, i32* %349, align 4, !dbg !25048
  %351 = add i32 %350, 1, !dbg !25048
  store i32 %351, i32* %349, align 4, !dbg !25048
  br label %378, !dbg !25049

352:                                              ; preds = %310
  call void @llvm.dbg.declare(metadata i32* %29, metadata !25050, metadata !DIExpression()), !dbg !25052
  %353 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25053
  %354 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %353, i32 0, i32 28, !dbg !25054
  %355 = load i8*, i8** %354, align 8, !dbg !25054
  %356 = getelementptr inbounds i8, i8* %355, i64 4, !dbg !25053
  %357 = load i8, i8* %356, align 1, !dbg !25053
  %358 = zext i8 %357 to i32, !dbg !25053
  %359 = shl i32 %358, 8, !dbg !25055
  %360 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25056
  %361 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %360, i32 0, i32 28, !dbg !25057
  %362 = load i8*, i8** %361, align 8, !dbg !25057
  %363 = getelementptr inbounds i8, i8* %362, i64 5, !dbg !25056
  %364 = load i8, i8* %363, align 1, !dbg !25056
  %365 = zext i8 %364 to i32, !dbg !25056
  %366 = or i32 %359, %365, !dbg !25058
  store i32 %366, i32* %29, align 4, !dbg !25052
  %367 = load i32, i32* %29, align 4, !dbg !25059
  %368 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25060
  %369 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %368, i32 0, i32 15, !dbg !25061
  %370 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %369, align 8, !dbg !25061
  %371 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %370, i32 0, i32 11, !dbg !25062
  store i32 %367, i32* %371, align 8, !dbg !25063
  %372 = load i32, i32* %29, align 4, !dbg !25064
  %373 = add i32 %372, 1, !dbg !25065
  %374 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25066
  %375 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %374, i32 0, i32 15, !dbg !25067
  %376 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %375, align 8, !dbg !25067
  %377 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %376, i32 0, i32 12, !dbg !25068
  store i32 %373, i32* %377, align 4, !dbg !25069
  br label %378

378:                                              ; preds = %352, %345
  %379 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25070
  %380 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %379, i32 0, i32 28, !dbg !25072
  %381 = load i8*, i8** %380, align 8, !dbg !25072
  %382 = getelementptr inbounds i8, i8* %381, i64 6, !dbg !25070
  %383 = load i8, i8* %382, align 1, !dbg !25070
  %384 = zext i8 %383 to i32, !dbg !25070
  %385 = icmp ne i32 %384, 0, !dbg !25073
  br i1 %385, label %413, label %386, !dbg !25074

386:                                              ; preds = %378
  %387 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25075
  %388 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %387, i32 0, i32 28, !dbg !25076
  %389 = load i8*, i8** %388, align 8, !dbg !25076
  %390 = getelementptr inbounds i8, i8* %389, i64 7, !dbg !25075
  %391 = load i8, i8* %390, align 1, !dbg !25075
  %392 = zext i8 %391 to i32, !dbg !25075
  %393 = icmp ne i32 %392, 0, !dbg !25077
  br i1 %393, label %413, label %394, !dbg !25078

394:                                              ; preds = %386
  %395 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25079
  %396 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %395, i32 0, i32 28, !dbg !25080
  %397 = load i8*, i8** %396, align 8, !dbg !25080
  %398 = getelementptr inbounds i8, i8* %397, i64 8, !dbg !25079
  %399 = load i8, i8* %398, align 1, !dbg !25079
  %400 = zext i8 %399 to i32, !dbg !25079
  %401 = icmp ne i32 %400, 0, !dbg !25081
  br i1 %401, label %413, label %402, !dbg !25082

402:                                              ; preds = %394
  %403 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25083
  %404 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %403, i32 0, i32 28, !dbg !25084
  %405 = load i8*, i8** %404, align 8, !dbg !25084
  %406 = getelementptr inbounds i8, i8* %405, i64 1, !dbg !25085
  %407 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25086
  %408 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %407, i32 0, i32 28, !dbg !25087
  %409 = load i8*, i8** %408, align 8, !dbg !25087
  %410 = getelementptr inbounds i8, i8* %409, i64 9, !dbg !25088
  %411 = call i32 @memcmp(i8* %406, i8* %410, i64 3), !dbg !25089
  %412 = icmp ne i32 %411, 0, !dbg !25090
  br i1 %412, label %413, label %415, !dbg !25091

413:                                              ; preds = %402, %394, %386, %378
  %414 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25092
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %414, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1405, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16.731, i64 0, i64 0)), !dbg !25092
  store i32 -28800, i32* %2, align 4, !dbg !25094
  br label %1408, !dbg !25094

415:                                              ; preds = %402
  br label %416, !dbg !25095

416:                                              ; preds = %415, %300
  %417 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25096
  %418 = call i64 @mbedtls_ssl_hs_hdr_len(%struct.mbedtls_ssl_context* %417), !dbg !25097
  %419 = load i8*, i8** %18, align 8, !dbg !25098
  %420 = getelementptr inbounds i8, i8* %419, i64 %418, !dbg !25098
  store i8* %420, i8** %18, align 8, !dbg !25098
  %421 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25099
  %422 = call i64 @mbedtls_ssl_hs_hdr_len(%struct.mbedtls_ssl_context* %421), !dbg !25100
  %423 = load i64, i64* %11, align 8, !dbg !25101
  %424 = sub i64 %423, %422, !dbg !25101
  store i64 %424, i64* %11, align 8, !dbg !25101
  %425 = load i64, i64* %11, align 8, !dbg !25102
  %426 = icmp ult i64 %425, 38, !dbg !25104
  br i1 %426, label %427, label %429, !dbg !25105

427:                                              ; preds = %416
  %428 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25106
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %428, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1437, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25106
  store i32 -30976, i32* %2, align 4, !dbg !25108
  br label %1408, !dbg !25108

429:                                              ; preds = %416
  %430 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25109
  %431 = load i8*, i8** %18, align 8, !dbg !25109
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %430, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1444, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.732, i64 0, i64 0), i8* %431, i64 2), !dbg !25109
  %432 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25110
  %433 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %432, i32 0, i32 4, !dbg !25111
  %434 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25112
  %435 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %434, i32 0, i32 5, !dbg !25113
  %436 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25114
  %437 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %436, i32 0, i32 0, !dbg !25115
  %438 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %437, align 8, !dbg !25115
  %439 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %438, i32 0, i32 46, !dbg !25116
  %440 = bitcast i24* %439 to i32*, !dbg !25116
  %441 = load i32, i32* %440, align 4, !dbg !25116
  %442 = lshr i32 %441, 1, !dbg !25116
  %443 = and i32 %442, 1, !dbg !25116
  %444 = load i8*, i8** %18, align 8, !dbg !25117
  call void @mbedtls_ssl_read_version(i32* %433, i32* %435, i32 %443, i8* %444), !dbg !25118
  %445 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25119
  %446 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %445, i32 0, i32 4, !dbg !25120
  %447 = load i32, i32* %446, align 4, !dbg !25120
  %448 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25121
  %449 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %448, i32 0, i32 15, !dbg !25122
  %450 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %449, align 8, !dbg !25122
  %451 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %450, i32 0, i32 35, !dbg !25123
  store i32 %447, i32* %451, align 8, !dbg !25124
  %452 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25125
  %453 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %452, i32 0, i32 5, !dbg !25126
  %454 = load i32, i32* %453, align 8, !dbg !25126
  %455 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25127
  %456 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %455, i32 0, i32 15, !dbg !25128
  %457 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %456, align 8, !dbg !25128
  %458 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %457, i32 0, i32 36, !dbg !25129
  store i32 %454, i32* %458, align 4, !dbg !25130
  %459 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25131
  %460 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %459, i32 0, i32 4, !dbg !25133
  %461 = load i32, i32* %460, align 4, !dbg !25133
  %462 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25134
  %463 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %462, i32 0, i32 0, !dbg !25135
  %464 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %463, align 8, !dbg !25135
  %465 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %464, i32 0, i32 44, !dbg !25136
  %466 = load i8, i8* %465, align 2, !dbg !25136
  %467 = zext i8 %466 to i32, !dbg !25134
  %468 = icmp slt i32 %461, %467, !dbg !25137
  br i1 %468, label %480, label %469, !dbg !25138

469:                                              ; preds = %429
  %470 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25139
  %471 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %470, i32 0, i32 5, !dbg !25140
  %472 = load i32, i32* %471, align 8, !dbg !25140
  %473 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25141
  %474 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %473, i32 0, i32 0, !dbg !25142
  %475 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %474, align 8, !dbg !25142
  %476 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %475, i32 0, i32 45, !dbg !25143
  %477 = load i8, i8* %476, align 1, !dbg !25143
  %478 = zext i8 %477 to i32, !dbg !25141
  %479 = icmp slt i32 %472, %478, !dbg !25144
  br i1 %479, label %480, label %502, !dbg !25145

480:                                              ; preds = %469, %429
  %481 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25146
  %482 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25146
  %483 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %482, i32 0, i32 4, !dbg !25146
  %484 = load i32, i32* %483, align 4, !dbg !25146
  %485 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25146
  %486 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %485, i32 0, i32 5, !dbg !25146
  %487 = load i32, i32* %486, align 8, !dbg !25146
  %488 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25146
  %489 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %488, i32 0, i32 0, !dbg !25146
  %490 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %489, align 8, !dbg !25146
  %491 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %490, i32 0, i32 44, !dbg !25146
  %492 = load i8, i8* %491, align 2, !dbg !25146
  %493 = zext i8 %492 to i32, !dbg !25146
  %494 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25146
  %495 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %494, i32 0, i32 0, !dbg !25146
  %496 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %495, align 8, !dbg !25146
  %497 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %496, i32 0, i32 45, !dbg !25146
  %498 = load i8, i8* %497, align 1, !dbg !25146
  %499 = zext i8 %498 to i32, !dbg !25146
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %481, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1458, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18.733, i64 0, i64 0), i32 %484, i32 %487, i32 %493, i32 %499), !dbg !25146
  %500 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25148
  %501 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %500, i8 zeroext 2, i8 zeroext 70), !dbg !25149
  store i32 -28288, i32* %2, align 4, !dbg !25150
  br label %1408, !dbg !25150

502:                                              ; preds = %469
  %503 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25151
  %504 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %503, i32 0, i32 4, !dbg !25153
  %505 = load i32, i32* %504, align 4, !dbg !25153
  %506 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25154
  %507 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %506, i32 0, i32 0, !dbg !25155
  %508 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %507, align 8, !dbg !25155
  %509 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %508, i32 0, i32 42, !dbg !25156
  %510 = load i8, i8* %509, align 8, !dbg !25156
  %511 = zext i8 %510 to i32, !dbg !25154
  %512 = icmp sgt i32 %505, %511, !dbg !25157
  br i1 %512, label %513, label %530, !dbg !25158

513:                                              ; preds = %502
  %514 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25159
  %515 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %514, i32 0, i32 0, !dbg !25161
  %516 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %515, align 8, !dbg !25161
  %517 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %516, i32 0, i32 42, !dbg !25162
  %518 = load i8, i8* %517, align 8, !dbg !25162
  %519 = zext i8 %518 to i32, !dbg !25159
  %520 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25163
  %521 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %520, i32 0, i32 4, !dbg !25164
  store i32 %519, i32* %521, align 4, !dbg !25165
  %522 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25166
  %523 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %522, i32 0, i32 0, !dbg !25167
  %524 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %523, align 8, !dbg !25167
  %525 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %524, i32 0, i32 43, !dbg !25168
  %526 = load i8, i8* %525, align 1, !dbg !25168
  %527 = zext i8 %526 to i32, !dbg !25166
  %528 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25169
  %529 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %528, i32 0, i32 5, !dbg !25170
  store i32 %527, i32* %529, align 8, !dbg !25171
  br label %551, !dbg !25172

530:                                              ; preds = %502
  %531 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25173
  %532 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %531, i32 0, i32 5, !dbg !25175
  %533 = load i32, i32* %532, align 8, !dbg !25175
  %534 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25176
  %535 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %534, i32 0, i32 0, !dbg !25177
  %536 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %535, align 8, !dbg !25177
  %537 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %536, i32 0, i32 43, !dbg !25178
  %538 = load i8, i8* %537, align 1, !dbg !25178
  %539 = zext i8 %538 to i32, !dbg !25176
  %540 = icmp sgt i32 %533, %539, !dbg !25179
  br i1 %540, label %541, label %550, !dbg !25180

541:                                              ; preds = %530
  %542 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25181
  %543 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %542, i32 0, i32 0, !dbg !25182
  %544 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %543, align 8, !dbg !25182
  %545 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %544, i32 0, i32 43, !dbg !25183
  %546 = load i8, i8* %545, align 1, !dbg !25183
  %547 = zext i8 %546 to i32, !dbg !25181
  %548 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25184
  %549 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %548, i32 0, i32 5, !dbg !25185
  store i32 %547, i32* %549, align 8, !dbg !25186
  br label %550, !dbg !25184

550:                                              ; preds = %541, %530
  br label %551

551:                                              ; preds = %550, %513
  %552 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25187
  %553 = load i8*, i8** %18, align 8, !dbg !25187
  %554 = getelementptr inbounds i8, i8* %553, i64 2, !dbg !25187
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %552, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1475, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19.734, i64 0, i64 0), i8* %554, i64 32), !dbg !25187
  %555 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25188
  %556 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %555, i32 0, i32 15, !dbg !25189
  %557 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %556, align 8, !dbg !25189
  %558 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %557, i32 0, i32 32, !dbg !25190
  %559 = getelementptr inbounds [64 x i8], [64 x i8]* %558, i64 0, i64 0, !dbg !25191
  %560 = load i8*, i8** %18, align 8, !dbg !25192
  %561 = getelementptr inbounds i8, i8* %560, i64 2, !dbg !25193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %559, i8* align 1 %561, i64 32, i1 false), !dbg !25191
  %562 = load i8*, i8** %18, align 8, !dbg !25194
  %563 = getelementptr inbounds i8, i8* %562, i64 34, !dbg !25194
  %564 = load i8, i8* %563, align 1, !dbg !25194
  %565 = zext i8 %564 to i64, !dbg !25194
  store i64 %565, i64* %13, align 8, !dbg !25195
  %566 = load i64, i64* %13, align 8, !dbg !25196
  %567 = icmp ugt i64 %566, 32, !dbg !25198
  br i1 %567, label %574, label %568, !dbg !25199

568:                                              ; preds = %551
  %569 = load i64, i64* %13, align 8, !dbg !25200
  %570 = add i64 %569, 34, !dbg !25201
  %571 = add i64 %570, 2, !dbg !25202
  %572 = load i64, i64* %11, align 8, !dbg !25203
  %573 = icmp ugt i64 %571, %572, !dbg !25204
  br i1 %573, label %574, label %578, !dbg !25205

574:                                              ; preds = %568, %551
  %575 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25206
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %575, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1487, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25206
  %576 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25208
  %577 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %576, i8 zeroext 2, i8 zeroext 50), !dbg !25209
  store i32 -30976, i32* %2, align 4, !dbg !25210
  br label %1408, !dbg !25210

578:                                              ; preds = %568
  %579 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25211
  %580 = load i8*, i8** %18, align 8, !dbg !25211
  %581 = getelementptr inbounds i8, i8* %580, i64 35, !dbg !25211
  %582 = load i64, i64* %13, align 8, !dbg !25211
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %579, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1493, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20.735, i64 0, i64 0), i8* %581, i64 %582), !dbg !25211
  %583 = load i64, i64* %13, align 8, !dbg !25212
  %584 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25213
  %585 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %584, i32 0, i32 14, !dbg !25214
  %586 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %585, align 8, !dbg !25214
  %587 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %586, i32 0, i32 2, !dbg !25215
  store i64 %583, i64* %587, align 8, !dbg !25216
  %588 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25217
  %589 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %588, i32 0, i32 14, !dbg !25218
  %590 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %589, align 8, !dbg !25218
  %591 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %590, i32 0, i32 3, !dbg !25219
  %592 = getelementptr inbounds [32 x i8], [32 x i8]* %591, i64 0, i64 0, !dbg !25220
  call void @llvm.memset.p0i8.i64(i8* align 8 %592, i8 0, i64 32, i1 false), !dbg !25220
  %593 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25221
  %594 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %593, i32 0, i32 14, !dbg !25222
  %595 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %594, align 8, !dbg !25222
  %596 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %595, i32 0, i32 3, !dbg !25223
  %597 = getelementptr inbounds [32 x i8], [32 x i8]* %596, i64 0, i64 0, !dbg !25224
  %598 = load i8*, i8** %18, align 8, !dbg !25225
  %599 = getelementptr inbounds i8, i8* %598, i64 35, !dbg !25226
  %600 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25227
  %601 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %600, i32 0, i32 14, !dbg !25228
  %602 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %601, align 8, !dbg !25228
  %603 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %602, i32 0, i32 2, !dbg !25229
  %604 = load i64, i64* %603, align 8, !dbg !25229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %597, i8* align 1 %599, i64 %604, i1 false), !dbg !25224
  %605 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25230
  %606 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %605, i32 0, i32 0, !dbg !25232
  %607 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %606, align 8, !dbg !25232
  %608 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %607, i32 0, i32 46, !dbg !25233
  %609 = bitcast i24* %608 to i32*, !dbg !25233
  %610 = load i32, i32* %609, align 4, !dbg !25233
  %611 = lshr i32 %610, 1, !dbg !25233
  %612 = and i32 %611, 1, !dbg !25233
  %613 = icmp eq i32 %612, 1, !dbg !25234
  br i1 %613, label %614, label %700, !dbg !25235

614:                                              ; preds = %578
  %615 = load i64, i64* %13, align 8, !dbg !25236
  %616 = add i64 35, %615, !dbg !25238
  store i64 %616, i64* %16, align 8, !dbg !25239
  %617 = load i8*, i8** %18, align 8, !dbg !25240
  %618 = load i64, i64* %16, align 8, !dbg !25241
  %619 = getelementptr inbounds i8, i8* %617, i64 %618, !dbg !25240
  %620 = load i8, i8* %619, align 1, !dbg !25240
  %621 = zext i8 %620 to i64, !dbg !25240
  store i64 %621, i64* %17, align 8, !dbg !25242
  %622 = load i64, i64* %16, align 8, !dbg !25243
  %623 = add i64 %622, 1, !dbg !25245
  %624 = load i64, i64* %17, align 8, !dbg !25246
  %625 = add i64 %623, %624, !dbg !25247
  %626 = add i64 %625, 2, !dbg !25248
  %627 = load i64, i64* %11, align 8, !dbg !25249
  %628 = icmp ugt i64 %626, %627, !dbg !25250
  br i1 %628, label %629, label %633, !dbg !25251

629:                                              ; preds = %614
  %630 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25252
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %630, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1512, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25252
  %631 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25254
  %632 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %631, i8 zeroext 2, i8 zeroext 70), !dbg !25255
  store i32 -30976, i32* %2, align 4, !dbg !25256
  br label %1408, !dbg !25256

633:                                              ; preds = %614
  %634 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25257
  %635 = load i8*, i8** %18, align 8, !dbg !25257
  %636 = load i64, i64* %16, align 8, !dbg !25257
  %637 = getelementptr inbounds i8, i8* %635, i64 %636, !dbg !25257
  %638 = getelementptr inbounds i8, i8* %637, i64 1, !dbg !25257
  %639 = load i64, i64* %17, align 8, !dbg !25257
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %634, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1519, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.736, i64 0, i64 0), i8* %638, i64 %639), !dbg !25257
  %640 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25258
  %641 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %640, i32 0, i32 0, !dbg !25260
  %642 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %641, align 8, !dbg !25260
  %643 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %642, i32 0, i32 15, !dbg !25261
  %644 = load i32 (i8*, i8*, i64, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)** %643, align 8, !dbg !25261
  %645 = icmp ne i32 (i8*, i8*, i64, i8*, i64)* %644, null, !dbg !25262
  br i1 %645, label %646, label %688, !dbg !25263

646:                                              ; preds = %633
  %647 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25264
  %648 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %647, i32 0, i32 2, !dbg !25265
  %649 = load i32, i32* %648, align 4, !dbg !25265
  %650 = icmp eq i32 %649, 0, !dbg !25266
  br i1 %650, label %651, label %688, !dbg !25267

651:                                              ; preds = %646
  %652 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25268
  %653 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %652, i32 0, i32 0, !dbg !25271
  %654 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %653, align 8, !dbg !25271
  %655 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %654, i32 0, i32 15, !dbg !25272
  %656 = load i32 (i8*, i8*, i64, i8*, i64)*, i32 (i8*, i8*, i64, i8*, i64)** %655, align 8, !dbg !25272
  %657 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25273
  %658 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %657, i32 0, i32 0, !dbg !25274
  %659 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %658, align 8, !dbg !25274
  %660 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %659, i32 0, i32 16, !dbg !25275
  %661 = load i8*, i8** %660, align 8, !dbg !25275
  %662 = load i8*, i8** %18, align 8, !dbg !25276
  %663 = load i64, i64* %16, align 8, !dbg !25277
  %664 = getelementptr inbounds i8, i8* %662, i64 %663, !dbg !25278
  %665 = getelementptr inbounds i8, i8* %664, i64 1, !dbg !25279
  %666 = load i64, i64* %17, align 8, !dbg !25280
  %667 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25281
  %668 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %667, i32 0, i32 53, !dbg !25282
  %669 = load i8*, i8** %668, align 8, !dbg !25282
  %670 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25283
  %671 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %670, i32 0, i32 54, !dbg !25284
  %672 = load i64, i64* %671, align 8, !dbg !25284
  %673 = call i32 %656(i8* %661, i8* %665, i64 %666, i8* %669, i64 %672), !dbg !25268
  %674 = icmp ne i32 %673, 0, !dbg !25285
  br i1 %674, label %675, label %681, !dbg !25286

675:                                              ; preds = %651
  %676 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25287
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %676, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1532, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.737, i64 0, i64 0)), !dbg !25287
  %677 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25289
  %678 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %677, i32 0, i32 15, !dbg !25290
  %679 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %678, align 8, !dbg !25290
  %680 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %679, i32 0, i32 14, !dbg !25291
  store i8 1, i8* %680, align 8, !dbg !25292
  br label %687, !dbg !25293

681:                                              ; preds = %651
  %682 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25294
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %682, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1537, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23.738, i64 0, i64 0)), !dbg !25294
  %683 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25296
  %684 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %683, i32 0, i32 15, !dbg !25297
  %685 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %684, align 8, !dbg !25297
  %686 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %685, i32 0, i32 14, !dbg !25298
  store i8 0, i8* %686, align 8, !dbg !25299
  br label %687

687:                                              ; preds = %681, %675
  br label %695, !dbg !25300

688:                                              ; preds = %646, %633
  %689 = load i64, i64* %17, align 8, !dbg !25301
  %690 = icmp ne i64 %689, 0, !dbg !25304
  br i1 %690, label %691, label %693, !dbg !25305

691:                                              ; preds = %688
  %692 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25306
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %692, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1548, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25306
  store i32 -30976, i32* %2, align 4, !dbg !25308
  br label %1408, !dbg !25308

693:                                              ; preds = %688
  %694 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25309
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %694, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1552, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24.739, i64 0, i64 0)), !dbg !25309
  br label %695

695:                                              ; preds = %693, %687
  %696 = load i64, i64* %16, align 8, !dbg !25310
  %697 = add i64 %696, 1, !dbg !25311
  %698 = load i64, i64* %17, align 8, !dbg !25312
  %699 = add i64 %697, %698, !dbg !25313
  store i64 %699, i64* %8, align 8, !dbg !25314
  br label %703, !dbg !25315

700:                                              ; preds = %578
  %701 = load i64, i64* %13, align 8, !dbg !25316
  %702 = add i64 35, %701, !dbg !25317
  store i64 %702, i64* %8, align 8, !dbg !25318
  br label %703

703:                                              ; preds = %700, %695
  %704 = load i8*, i8** %18, align 8, !dbg !25319
  %705 = load i64, i64* %8, align 8, !dbg !25320
  %706 = add i64 %705, 0, !dbg !25321
  %707 = getelementptr inbounds i8, i8* %704, i64 %706, !dbg !25319
  %708 = load i8, i8* %707, align 1, !dbg !25319
  %709 = zext i8 %708 to i32, !dbg !25319
  %710 = shl i32 %709, 8, !dbg !25322
  %711 = load i8*, i8** %18, align 8, !dbg !25323
  %712 = load i64, i64* %8, align 8, !dbg !25324
  %713 = add i64 %712, 1, !dbg !25325
  %714 = getelementptr inbounds i8, i8* %711, i64 %713, !dbg !25323
  %715 = load i8, i8* %714, align 1, !dbg !25323
  %716 = zext i8 %715 to i32, !dbg !25326
  %717 = or i32 %710, %716, !dbg !25327
  %718 = sext i32 %717 to i64, !dbg !25328
  store i64 %718, i64* %12, align 8, !dbg !25329
  %719 = load i64, i64* %12, align 8, !dbg !25330
  %720 = icmp ult i64 %719, 2, !dbg !25332
  br i1 %720, label %733, label %721, !dbg !25333

721:                                              ; preds = %703
  %722 = load i64, i64* %12, align 8, !dbg !25334
  %723 = add i64 %722, 2, !dbg !25335
  %724 = load i64, i64* %8, align 8, !dbg !25336
  %725 = add i64 %723, %724, !dbg !25337
  %726 = add i64 %725, 1, !dbg !25338
  %727 = load i64, i64* %11, align 8, !dbg !25339
  %728 = icmp ugt i64 %726, %727, !dbg !25340
  br i1 %728, label %733, label %729, !dbg !25341

729:                                              ; preds = %721
  %730 = load i64, i64* %12, align 8, !dbg !25342
  %731 = urem i64 %730, 2, !dbg !25343
  %732 = icmp ne i64 %731, 0, !dbg !25344
  br i1 %732, label %733, label %737, !dbg !25345

733:                                              ; preds = %729, %721, %703
  %734 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25346
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %734, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1571, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25346
  %735 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25348
  %736 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %735, i8 zeroext 2, i8 zeroext 50), !dbg !25349
  store i32 -30976, i32* %2, align 4, !dbg !25350
  br label %1408, !dbg !25350

737:                                              ; preds = %729
  %738 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25351
  %739 = load i8*, i8** %18, align 8, !dbg !25351
  %740 = load i64, i64* %8, align 8, !dbg !25351
  %741 = getelementptr inbounds i8, i8* %739, i64 %740, !dbg !25351
  %742 = getelementptr inbounds i8, i8* %741, i64 2, !dbg !25351
  %743 = load i64, i64* %12, align 8, !dbg !25351
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %738, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1578, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25.740, i64 0, i64 0), i8* %742, i64 %743), !dbg !25351
  %744 = load i64, i64* %8, align 8, !dbg !25352
  %745 = add i64 %744, 2, !dbg !25353
  %746 = load i64, i64* %12, align 8, !dbg !25354
  %747 = add i64 %745, %746, !dbg !25355
  store i64 %747, i64* %9, align 8, !dbg !25356
  %748 = load i8*, i8** %18, align 8, !dbg !25357
  %749 = load i64, i64* %9, align 8, !dbg !25358
  %750 = getelementptr inbounds i8, i8* %748, i64 %749, !dbg !25357
  %751 = load i8, i8* %750, align 1, !dbg !25357
  %752 = zext i8 %751 to i64, !dbg !25357
  store i64 %752, i64* %14, align 8, !dbg !25359
  %753 = load i64, i64* %14, align 8, !dbg !25360
  %754 = icmp ult i64 %753, 1, !dbg !25362
  br i1 %754, label %765, label %755, !dbg !25363

755:                                              ; preds = %737
  %756 = load i64, i64* %14, align 8, !dbg !25364
  %757 = icmp ugt i64 %756, 16, !dbg !25365
  br i1 %757, label %765, label %758, !dbg !25366

758:                                              ; preds = %755
  %759 = load i64, i64* %14, align 8, !dbg !25367
  %760 = load i64, i64* %9, align 8, !dbg !25368
  %761 = add i64 %759, %760, !dbg !25369
  %762 = add i64 %761, 1, !dbg !25370
  %763 = load i64, i64* %11, align 8, !dbg !25371
  %764 = icmp ugt i64 %762, %763, !dbg !25372
  br i1 %764, label %765, label %769, !dbg !25373

765:                                              ; preds = %758, %755, %737
  %766 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25374
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %766, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1591, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25374
  %767 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25376
  %768 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %767, i8 zeroext 2, i8 zeroext 50), !dbg !25377
  store i32 -30976, i32* %2, align 4, !dbg !25378
  br label %1408, !dbg !25378

769:                                              ; preds = %758
  %770 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25379
  %771 = load i8*, i8** %18, align 8, !dbg !25379
  %772 = load i64, i64* %9, align 8, !dbg !25379
  %773 = getelementptr inbounds i8, i8* %771, i64 %772, !dbg !25379
  %774 = getelementptr inbounds i8, i8* %773, i64 1, !dbg !25379
  %775 = load i64, i64* %14, align 8, !dbg !25379
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %770, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1598, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26.741, i64 0, i64 0), i8* %774, i64 %775), !dbg !25379
  %776 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25380
  %777 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %776, i32 0, i32 14, !dbg !25381
  %778 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %777, align 8, !dbg !25381
  %779 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %778, i32 0, i32 1, !dbg !25382
  store i32 0, i32* %779, align 4, !dbg !25383
  %780 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25384
  %781 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %780, i32 0, i32 0, !dbg !25386
  %782 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %781, align 8, !dbg !25386
  %783 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %782, i32 0, i32 46, !dbg !25387
  %784 = bitcast i24* %783 to i32*, !dbg !25387
  %785 = load i32, i32* %784, align 4, !dbg !25387
  %786 = lshr i32 %785, 1, !dbg !25387
  %787 = and i32 %786, 1, !dbg !25387
  %788 = icmp eq i32 %787, 1, !dbg !25388
  br i1 %788, label %789, label %794, !dbg !25389

789:                                              ; preds = %769
  %790 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25390
  %791 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %790, i32 0, i32 14, !dbg !25391
  %792 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %791, align 8, !dbg !25391
  %793 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %792, i32 0, i32 1, !dbg !25392
  store i32 0, i32* %793, align 4, !dbg !25393
  br label %794, !dbg !25390

794:                                              ; preds = %789, %769
  %795 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25394
  %796 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %795, i32 0, i32 4, !dbg !25396
  %797 = load i32, i32* %796, align 4, !dbg !25396
  %798 = icmp ne i32 %797, 3, !dbg !25397
  br i1 %798, label %804, label %799, !dbg !25398

799:                                              ; preds = %794
  %800 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25399
  %801 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %800, i32 0, i32 5, !dbg !25400
  %802 = load i32, i32* %801, align 8, !dbg !25400
  %803 = icmp ne i32 %802, 0, !dbg !25401
  br i1 %803, label %804, label %1086, !dbg !25402

804:                                              ; preds = %799, %794
  %805 = load i64, i64* %9, align 8, !dbg !25403
  %806 = add i64 %805, 1, !dbg !25405
  %807 = load i64, i64* %14, align 8, !dbg !25406
  %808 = add i64 %806, %807, !dbg !25407
  store i64 %808, i64* %10, align 8, !dbg !25408
  %809 = load i64, i64* %11, align 8, !dbg !25409
  %810 = load i64, i64* %10, align 8, !dbg !25411
  %811 = icmp ugt i64 %809, %810, !dbg !25412
  br i1 %811, label %812, label %854, !dbg !25413

812:                                              ; preds = %804
  %813 = load i64, i64* %11, align 8, !dbg !25414
  %814 = load i64, i64* %10, align 8, !dbg !25417
  %815 = add i64 %814, 2, !dbg !25418
  %816 = icmp ult i64 %813, %815, !dbg !25419
  br i1 %816, label %817, label %821, !dbg !25420

817:                                              ; preds = %812
  %818 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25421
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %818, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1631, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25421
  %819 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25423
  %820 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %819, i8 zeroext 2, i8 zeroext 50), !dbg !25424
  store i32 -30976, i32* %2, align 4, !dbg !25425
  br label %1408, !dbg !25425

821:                                              ; preds = %812
  %822 = load i8*, i8** %18, align 8, !dbg !25426
  %823 = load i64, i64* %10, align 8, !dbg !25427
  %824 = add i64 %823, 0, !dbg !25428
  %825 = getelementptr inbounds i8, i8* %822, i64 %824, !dbg !25426
  %826 = load i8, i8* %825, align 1, !dbg !25426
  %827 = zext i8 %826 to i32, !dbg !25426
  %828 = shl i32 %827, 8, !dbg !25429
  %829 = load i8*, i8** %18, align 8, !dbg !25430
  %830 = load i64, i64* %10, align 8, !dbg !25431
  %831 = add i64 %830, 1, !dbg !25432
  %832 = getelementptr inbounds i8, i8* %829, i64 %831, !dbg !25430
  %833 = load i8, i8* %832, align 1, !dbg !25430
  %834 = zext i8 %833 to i32, !dbg !25433
  %835 = or i32 %828, %834, !dbg !25434
  %836 = sext i32 %835 to i64, !dbg !25435
  store i64 %836, i64* %15, align 8, !dbg !25436
  %837 = load i64, i64* %15, align 8, !dbg !25437
  %838 = icmp ugt i64 %837, 0, !dbg !25439
  br i1 %838, label %839, label %842, !dbg !25440

839:                                              ; preds = %821
  %840 = load i64, i64* %15, align 8, !dbg !25441
  %841 = icmp ult i64 %840, 4, !dbg !25442
  br i1 %841, label %849, label %842, !dbg !25443

842:                                              ; preds = %839, %821
  %843 = load i64, i64* %11, align 8, !dbg !25444
  %844 = load i64, i64* %10, align 8, !dbg !25445
  %845 = add i64 %844, 2, !dbg !25446
  %846 = load i64, i64* %15, align 8, !dbg !25447
  %847 = add i64 %845, %846, !dbg !25448
  %848 = icmp ne i64 %843, %847, !dbg !25449
  br i1 %848, label %849, label %853, !dbg !25450

849:                                              ; preds = %842, %839
  %850 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25451
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %850, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1643, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25451
  %851 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25453
  %852 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %851, i8 zeroext 2, i8 zeroext 50), !dbg !25454
  store i32 -30976, i32* %2, align 4, !dbg !25455
  br label %1408, !dbg !25455

853:                                              ; preds = %842
  br label %855, !dbg !25456

854:                                              ; preds = %804
  store i64 0, i64* %15, align 8, !dbg !25457
  br label %855

855:                                              ; preds = %854, %853
  %856 = load i8*, i8** %18, align 8, !dbg !25458
  %857 = load i64, i64* %10, align 8, !dbg !25459
  %858 = getelementptr inbounds i8, i8* %856, i64 %857, !dbg !25460
  %859 = getelementptr inbounds i8, i8* %858, i64 2, !dbg !25461
  store i8* %859, i8** %20, align 8, !dbg !25462
  %860 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25463
  %861 = load i8*, i8** %20, align 8, !dbg !25463
  %862 = load i64, i64* %15, align 8, !dbg !25463
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %860, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1653, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.742, i64 0, i64 0), i8* %861, i64 %862), !dbg !25463
  br label %863, !dbg !25464

863:                                              ; preds = %1084, %855
  %864 = load i64, i64* %15, align 8, !dbg !25465
  %865 = icmp ne i64 %864, 0, !dbg !25466
  br i1 %865, label %866, label %1085, !dbg !25464

866:                                              ; preds = %863
  call void @llvm.dbg.declare(metadata i32* %30, metadata !25467, metadata !DIExpression()), !dbg !25469
  %867 = load i8*, i8** %20, align 8, !dbg !25470
  %868 = getelementptr inbounds i8, i8* %867, i64 0, !dbg !25470
  %869 = load i8, i8* %868, align 1, !dbg !25470
  %870 = zext i8 %869 to i32, !dbg !25470
  %871 = shl i32 %870, 8, !dbg !25471
  %872 = load i8*, i8** %20, align 8, !dbg !25472
  %873 = getelementptr inbounds i8, i8* %872, i64 1, !dbg !25472
  %874 = load i8, i8* %873, align 1, !dbg !25472
  %875 = zext i8 %874 to i32, !dbg !25473
  %876 = or i32 %871, %875, !dbg !25474
  store i32 %876, i32* %30, align 4, !dbg !25469
  call void @llvm.dbg.declare(metadata i32* %31, metadata !25475, metadata !DIExpression()), !dbg !25476
  %877 = load i8*, i8** %20, align 8, !dbg !25477
  %878 = getelementptr inbounds i8, i8* %877, i64 2, !dbg !25477
  %879 = load i8, i8* %878, align 1, !dbg !25477
  %880 = zext i8 %879 to i32, !dbg !25477
  %881 = shl i32 %880, 8, !dbg !25478
  %882 = load i8*, i8** %20, align 8, !dbg !25479
  %883 = getelementptr inbounds i8, i8* %882, i64 3, !dbg !25479
  %884 = load i8, i8* %883, align 1, !dbg !25479
  %885 = zext i8 %884 to i32, !dbg !25480
  %886 = or i32 %881, %885, !dbg !25481
  store i32 %886, i32* %31, align 4, !dbg !25476
  %887 = load i32, i32* %31, align 4, !dbg !25482
  %888 = add i32 %887, 4, !dbg !25484
  %889 = zext i32 %888 to i64, !dbg !25482
  %890 = load i64, i64* %15, align 8, !dbg !25485
  %891 = icmp ugt i64 %889, %890, !dbg !25486
  br i1 %891, label %892, label %896, !dbg !25487

892:                                              ; preds = %866
  %893 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25488
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %893, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1664, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25488
  %894 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25490
  %895 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %894, i8 zeroext 2, i8 zeroext 50), !dbg !25491
  store i32 -30976, i32* %2, align 4, !dbg !25492
  br label %1408, !dbg !25492

896:                                              ; preds = %866
  %897 = load i32, i32* %30, align 4, !dbg !25493
  switch i32 %897, label %1061 [
    i32 0, label %898
    i32 65281, label %919
    i32 13, label %932
    i32 10, label %951
    i32 11, label %964
    i32 1, label %983
    i32 4, label %996
    i32 22, label %1009
    i32 23, label %1022
    i32 35, label %1035
    i32 16, label %1048
  ], !dbg !25494

898:                                              ; preds = %896
  %899 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25495
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %899, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1673, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28.743, i64 0, i64 0)), !dbg !25495
  %900 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25497
  %901 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %900, i32 0, i32 0, !dbg !25499
  %902 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %901, align 8, !dbg !25499
  %903 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %902, i32 0, i32 8, !dbg !25500
  %904 = load i32 (i8*, %struct.mbedtls_ssl_context*, i8*, i64)*, i32 (i8*, %struct.mbedtls_ssl_context*, i8*, i64)** %903, align 8, !dbg !25500
  %905 = icmp eq i32 (i8*, %struct.mbedtls_ssl_context*, i8*, i64)* %904, null, !dbg !25501
  br i1 %905, label %906, label %907, !dbg !25502

906:                                              ; preds = %898
  br label %1064, !dbg !25503

907:                                              ; preds = %898
  %908 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25504
  %909 = load i8*, i8** %20, align 8, !dbg !25505
  %910 = getelementptr inbounds i8, i8* %909, i64 4, !dbg !25506
  %911 = load i32, i32* %31, align 4, !dbg !25507
  %912 = zext i32 %911 to i64, !dbg !25507
  %913 = call i32 @ssl_parse_servername_ext(%struct.mbedtls_ssl_context* %908, i8* %910, i64 %912), !dbg !25508
  store i32 %913, i32* %4, align 4, !dbg !25509
  %914 = load i32, i32* %4, align 4, !dbg !25510
  %915 = icmp ne i32 %914, 0, !dbg !25512
  br i1 %915, label %916, label %918, !dbg !25513

916:                                              ; preds = %907
  %917 = load i32, i32* %4, align 4, !dbg !25514
  store i32 %917, i32* %2, align 4, !dbg !25515
  br label %1408, !dbg !25515

918:                                              ; preds = %907
  br label %1064, !dbg !25516

919:                                              ; preds = %896
  %920 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25517
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %920, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1684, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29.744, i64 0, i64 0)), !dbg !25517
  store i32 1, i32* %21, align 4, !dbg !25518
  %921 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25519
  %922 = load i8*, i8** %20, align 8, !dbg !25520
  %923 = getelementptr inbounds i8, i8* %922, i64 4, !dbg !25521
  %924 = load i32, i32* %31, align 4, !dbg !25522
  %925 = zext i32 %924 to i64, !dbg !25522
  %926 = call i32 @ssl_parse_renegotiation_info(%struct.mbedtls_ssl_context* %921, i8* %923, i64 %925), !dbg !25523
  store i32 %926, i32* %4, align 4, !dbg !25524
  %927 = load i32, i32* %4, align 4, !dbg !25525
  %928 = icmp ne i32 %927, 0, !dbg !25527
  br i1 %928, label %929, label %931, !dbg !25528

929:                                              ; preds = %919
  %930 = load i32, i32* %4, align 4, !dbg !25529
  store i32 %930, i32* %2, align 4, !dbg !25530
  br label %1408, !dbg !25530

931:                                              ; preds = %919
  br label %1064, !dbg !25531

932:                                              ; preds = %896
  %933 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25532
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %933, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1697, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.30.745, i64 0, i64 0)), !dbg !25532
  %934 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25533
  %935 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %934, i32 0, i32 2, !dbg !25535
  %936 = load i32, i32* %935, align 4, !dbg !25535
  %937 = icmp eq i32 %936, 1, !dbg !25536
  br i1 %937, label %938, label %939, !dbg !25537

938:                                              ; preds = %932
  br label %1064, !dbg !25538

939:                                              ; preds = %932
  %940 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25539
  %941 = load i8*, i8** %20, align 8, !dbg !25540
  %942 = getelementptr inbounds i8, i8* %941, i64 4, !dbg !25541
  %943 = load i32, i32* %31, align 4, !dbg !25542
  %944 = zext i32 %943 to i64, !dbg !25542
  %945 = call i32 @ssl_parse_signature_algorithms_ext(%struct.mbedtls_ssl_context* %940, i8* %942, i64 %944), !dbg !25543
  store i32 %945, i32* %4, align 4, !dbg !25544
  %946 = load i32, i32* %4, align 4, !dbg !25545
  %947 = icmp ne i32 %946, 0, !dbg !25547
  br i1 %947, label %948, label %950, !dbg !25548

948:                                              ; preds = %939
  %949 = load i32, i32* %4, align 4, !dbg !25549
  store i32 %949, i32* %2, align 4, !dbg !25550
  br label %1408, !dbg !25550

950:                                              ; preds = %939
  store i32 1, i32* %27, align 4, !dbg !25551
  br label %1064, !dbg !25552

951:                                              ; preds = %896
  %952 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25553
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %952, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1714, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31.746, i64 0, i64 0)), !dbg !25553
  %953 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25554
  %954 = load i8*, i8** %20, align 8, !dbg !25555
  %955 = getelementptr inbounds i8, i8* %954, i64 4, !dbg !25556
  %956 = load i32, i32* %31, align 4, !dbg !25557
  %957 = zext i32 %956 to i64, !dbg !25557
  %958 = call i32 @ssl_parse_supported_elliptic_curves(%struct.mbedtls_ssl_context* %953, i8* %955, i64 %957), !dbg !25558
  store i32 %958, i32* %4, align 4, !dbg !25559
  %959 = load i32, i32* %4, align 4, !dbg !25560
  %960 = icmp ne i32 %959, 0, !dbg !25562
  br i1 %960, label %961, label %963, !dbg !25563

961:                                              ; preds = %951
  %962 = load i32, i32* %4, align 4, !dbg !25564
  store i32 %962, i32* %2, align 4, !dbg !25565
  br label %1408, !dbg !25565

963:                                              ; preds = %951
  br label %1064, !dbg !25566

964:                                              ; preds = %896
  %965 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25567
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %965, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1722, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32.747, i64 0, i64 0)), !dbg !25567
  %966 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25568
  %967 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %966, i32 0, i32 15, !dbg !25569
  %968 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %967, align 8, !dbg !25569
  %969 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %968, i32 0, i32 37, !dbg !25570
  %970 = load i32, i32* %969, align 8, !dbg !25571
  %971 = or i32 %970, 1, !dbg !25571
  store i32 %971, i32* %969, align 8, !dbg !25571
  %972 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25572
  %973 = load i8*, i8** %20, align 8, !dbg !25573
  %974 = getelementptr inbounds i8, i8* %973, i64 4, !dbg !25574
  %975 = load i32, i32* %31, align 4, !dbg !25575
  %976 = zext i32 %975 to i64, !dbg !25575
  %977 = call i32 @ssl_parse_supported_point_formats(%struct.mbedtls_ssl_context* %972, i8* %974, i64 %976), !dbg !25576
  store i32 %977, i32* %4, align 4, !dbg !25577
  %978 = load i32, i32* %4, align 4, !dbg !25578
  %979 = icmp ne i32 %978, 0, !dbg !25580
  br i1 %979, label %980, label %982, !dbg !25581

980:                                              ; preds = %964
  %981 = load i32, i32* %4, align 4, !dbg !25582
  store i32 %981, i32* %2, align 4, !dbg !25583
  br label %1408, !dbg !25583

982:                                              ; preds = %964
  br label %1064, !dbg !25584

983:                                              ; preds = %896
  %984 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25585
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %984, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1744, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.33.748, i64 0, i64 0)), !dbg !25585
  %985 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25586
  %986 = load i8*, i8** %20, align 8, !dbg !25587
  %987 = getelementptr inbounds i8, i8* %986, i64 4, !dbg !25588
  %988 = load i32, i32* %31, align 4, !dbg !25589
  %989 = zext i32 %988 to i64, !dbg !25589
  %990 = call i32 @ssl_parse_max_fragment_length_ext(%struct.mbedtls_ssl_context* %985, i8* %987, i64 %989), !dbg !25590
  store i32 %990, i32* %4, align 4, !dbg !25591
  %991 = load i32, i32* %4, align 4, !dbg !25592
  %992 = icmp ne i32 %991, 0, !dbg !25594
  br i1 %992, label %993, label %995, !dbg !25595

993:                                              ; preds = %983
  %994 = load i32, i32* %4, align 4, !dbg !25596
  store i32 %994, i32* %2, align 4, !dbg !25597
  br label %1408, !dbg !25597

995:                                              ; preds = %983
  br label %1064, !dbg !25598

996:                                              ; preds = %896
  %997 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25599
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %997, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1754, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34.749, i64 0, i64 0)), !dbg !25599
  %998 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25600
  %999 = load i8*, i8** %20, align 8, !dbg !25601
  %1000 = getelementptr inbounds i8, i8* %999, i64 4, !dbg !25602
  %1001 = load i32, i32* %31, align 4, !dbg !25603
  %1002 = zext i32 %1001 to i64, !dbg !25603
  %1003 = call i32 @ssl_parse_truncated_hmac_ext(%struct.mbedtls_ssl_context* %998, i8* %1000, i64 %1002), !dbg !25604
  store i32 %1003, i32* %4, align 4, !dbg !25605
  %1004 = load i32, i32* %4, align 4, !dbg !25606
  %1005 = icmp ne i32 %1004, 0, !dbg !25608
  br i1 %1005, label %1006, label %1008, !dbg !25609

1006:                                             ; preds = %996
  %1007 = load i32, i32* %4, align 4, !dbg !25610
  store i32 %1007, i32* %2, align 4, !dbg !25611
  br label %1408, !dbg !25611

1008:                                             ; preds = %996
  br label %1064, !dbg !25612

1009:                                             ; preds = %896
  %1010 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25613
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1010, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1764, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35.750, i64 0, i64 0)), !dbg !25613
  %1011 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25614
  %1012 = load i8*, i8** %20, align 8, !dbg !25615
  %1013 = getelementptr inbounds i8, i8* %1012, i64 4, !dbg !25616
  %1014 = load i32, i32* %31, align 4, !dbg !25617
  %1015 = zext i32 %1014 to i64, !dbg !25617
  %1016 = call i32 @ssl_parse_encrypt_then_mac_ext(%struct.mbedtls_ssl_context* %1011, i8* %1013, i64 %1015), !dbg !25618
  store i32 %1016, i32* %4, align 4, !dbg !25619
  %1017 = load i32, i32* %4, align 4, !dbg !25620
  %1018 = icmp ne i32 %1017, 0, !dbg !25622
  br i1 %1018, label %1019, label %1021, !dbg !25623

1019:                                             ; preds = %1009
  %1020 = load i32, i32* %4, align 4, !dbg !25624
  store i32 %1020, i32* %2, align 4, !dbg !25625
  br label %1408, !dbg !25625

1021:                                             ; preds = %1009
  br label %1064, !dbg !25626

1022:                                             ; preds = %896
  %1023 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25627
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1023, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1774, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36.751, i64 0, i64 0)), !dbg !25627
  %1024 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25628
  %1025 = load i8*, i8** %20, align 8, !dbg !25629
  %1026 = getelementptr inbounds i8, i8* %1025, i64 4, !dbg !25630
  %1027 = load i32, i32* %31, align 4, !dbg !25631
  %1028 = zext i32 %1027 to i64, !dbg !25631
  %1029 = call i32 @ssl_parse_extended_ms_ext(%struct.mbedtls_ssl_context* %1024, i8* %1026, i64 %1028), !dbg !25632
  store i32 %1029, i32* %4, align 4, !dbg !25633
  %1030 = load i32, i32* %4, align 4, !dbg !25634
  %1031 = icmp ne i32 %1030, 0, !dbg !25636
  br i1 %1031, label %1032, label %1034, !dbg !25637

1032:                                             ; preds = %1022
  %1033 = load i32, i32* %4, align 4, !dbg !25638
  store i32 %1033, i32* %2, align 4, !dbg !25639
  br label %1408, !dbg !25639

1034:                                             ; preds = %1022
  br label %1064, !dbg !25640

1035:                                             ; preds = %896
  %1036 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25641
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1036, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1784, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37.752, i64 0, i64 0)), !dbg !25641
  %1037 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25642
  %1038 = load i8*, i8** %20, align 8, !dbg !25643
  %1039 = getelementptr inbounds i8, i8* %1038, i64 4, !dbg !25644
  %1040 = load i32, i32* %31, align 4, !dbg !25645
  %1041 = zext i32 %1040 to i64, !dbg !25645
  %1042 = call i32 @ssl_parse_session_ticket_ext(%struct.mbedtls_ssl_context* %1037, i8* %1039, i64 %1041), !dbg !25646
  store i32 %1042, i32* %4, align 4, !dbg !25647
  %1043 = load i32, i32* %4, align 4, !dbg !25648
  %1044 = icmp ne i32 %1043, 0, !dbg !25650
  br i1 %1044, label %1045, label %1047, !dbg !25651

1045:                                             ; preds = %1035
  %1046 = load i32, i32* %4, align 4, !dbg !25652
  store i32 %1046, i32* %2, align 4, !dbg !25653
  br label %1408, !dbg !25653

1047:                                             ; preds = %1035
  br label %1064, !dbg !25654

1048:                                             ; preds = %896
  %1049 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25655
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1049, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1794, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38.753, i64 0, i64 0)), !dbg !25655
  %1050 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25656
  %1051 = load i8*, i8** %20, align 8, !dbg !25657
  %1052 = getelementptr inbounds i8, i8* %1051, i64 4, !dbg !25658
  %1053 = load i32, i32* %31, align 4, !dbg !25659
  %1054 = zext i32 %1053 to i64, !dbg !25659
  %1055 = call i32 @ssl_parse_alpn_ext(%struct.mbedtls_ssl_context* %1050, i8* %1052, i64 %1054), !dbg !25660
  store i32 %1055, i32* %4, align 4, !dbg !25661
  %1056 = load i32, i32* %4, align 4, !dbg !25662
  %1057 = icmp ne i32 %1056, 0, !dbg !25664
  br i1 %1057, label %1058, label %1060, !dbg !25665

1058:                                             ; preds = %1048
  %1059 = load i32, i32* %4, align 4, !dbg !25666
  store i32 %1059, i32* %2, align 4, !dbg !25667
  br label %1408, !dbg !25667

1060:                                             ; preds = %1048
  br label %1064, !dbg !25668

1061:                                             ; preds = %896
  %1062 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25669
  %1063 = load i32, i32* %30, align 4, !dbg !25669
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1062, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1804, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.39.754, i64 0, i64 0), i32 %1063), !dbg !25669
  br label %1064, !dbg !25670

1064:                                             ; preds = %1061, %1060, %1047, %1034, %1021, %1008, %995, %982, %963, %950, %938, %931, %918, %906
  %1065 = load i32, i32* %31, align 4, !dbg !25671
  %1066 = add i32 4, %1065, !dbg !25672
  %1067 = zext i32 %1066 to i64, !dbg !25673
  %1068 = load i64, i64* %15, align 8, !dbg !25674
  %1069 = sub i64 %1068, %1067, !dbg !25674
  store i64 %1069, i64* %15, align 8, !dbg !25674
  %1070 = load i32, i32* %31, align 4, !dbg !25675
  %1071 = add i32 4, %1070, !dbg !25676
  %1072 = load i8*, i8** %20, align 8, !dbg !25677
  %1073 = zext i32 %1071 to i64, !dbg !25677
  %1074 = getelementptr inbounds i8, i8* %1072, i64 %1073, !dbg !25677
  store i8* %1074, i8** %20, align 8, !dbg !25677
  %1075 = load i64, i64* %15, align 8, !dbg !25678
  %1076 = icmp ugt i64 %1075, 0, !dbg !25680
  br i1 %1076, label %1077, label %1084, !dbg !25681

1077:                                             ; preds = %1064
  %1078 = load i64, i64* %15, align 8, !dbg !25682
  %1079 = icmp ult i64 %1078, 4, !dbg !25683
  br i1 %1079, label %1080, label %1084, !dbg !25684

1080:                                             ; preds = %1077
  %1081 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25685
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1081, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1812, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.723, i64 0, i64 0)), !dbg !25685
  %1082 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25687
  %1083 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %1082, i8 zeroext 2, i8 zeroext 50), !dbg !25688
  store i32 -30976, i32* %2, align 4, !dbg !25689
  br label %1408, !dbg !25689

1084:                                             ; preds = %1077, %1064
  br label %863, !dbg !25464, !llvm.loop !25690

1085:                                             ; preds = %863
  br label %1086, !dbg !25692

1086:                                             ; preds = %1085, %799
  store i64 0, i64* %6, align 8, !dbg !25693
  %1087 = load i8*, i8** %18, align 8, !dbg !25695
  %1088 = load i64, i64* %8, align 8, !dbg !25696
  %1089 = getelementptr inbounds i8, i8* %1087, i64 %1088, !dbg !25697
  %1090 = getelementptr inbounds i8, i8* %1089, i64 2, !dbg !25698
  store i8* %1090, i8** %19, align 8, !dbg !25699
  br label %1091, !dbg !25700

1091:                                             ; preds = %1125, %1086
  %1092 = load i64, i64* %6, align 8, !dbg !25701
  %1093 = load i64, i64* %12, align 8, !dbg !25703
  %1094 = icmp ult i64 %1092, %1093, !dbg !25704
  br i1 %1094, label %1095, label %1130, !dbg !25705

1095:                                             ; preds = %1091
  %1096 = load i8*, i8** %19, align 8, !dbg !25706
  %1097 = getelementptr inbounds i8, i8* %1096, i64 0, !dbg !25706
  %1098 = load i8, i8* %1097, align 1, !dbg !25706
  %1099 = zext i8 %1098 to i32, !dbg !25706
  %1100 = icmp eq i32 %1099, 86, !dbg !25709
  br i1 %1100, label %1101, label %1124, !dbg !25710

1101:                                             ; preds = %1095
  %1102 = load i8*, i8** %19, align 8, !dbg !25711
  %1103 = getelementptr inbounds i8, i8* %1102, i64 1, !dbg !25711
  %1104 = load i8, i8* %1103, align 1, !dbg !25711
  %1105 = zext i8 %1104 to i32, !dbg !25711
  %1106 = icmp eq i32 %1105, 0, !dbg !25712
  br i1 %1106, label %1107, label %1124, !dbg !25713

1107:                                             ; preds = %1101
  %1108 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25714
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1108, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1828, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40.755, i64 0, i64 0)), !dbg !25714
  %1109 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25716
  %1110 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1109, i32 0, i32 5, !dbg !25718
  %1111 = load i32, i32* %1110, align 8, !dbg !25718
  %1112 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25719
  %1113 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1112, i32 0, i32 0, !dbg !25720
  %1114 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %1113, align 8, !dbg !25720
  %1115 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %1114, i32 0, i32 43, !dbg !25721
  %1116 = load i8, i8* %1115, align 1, !dbg !25721
  %1117 = zext i8 %1116 to i32, !dbg !25719
  %1118 = icmp slt i32 %1111, %1117, !dbg !25722
  br i1 %1118, label %1119, label %1123, !dbg !25723

1119:                                             ; preds = %1107
  %1120 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25724
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1120, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1832, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41.756, i64 0, i64 0)), !dbg !25724
  %1121 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25726
  %1122 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %1121, i8 zeroext 2, i8 zeroext 86), !dbg !25727
  store i32 -30976, i32* %2, align 4, !dbg !25728
  br label %1408, !dbg !25728

1123:                                             ; preds = %1107
  br label %1130, !dbg !25729

1124:                                             ; preds = %1101, %1095
  br label %1125, !dbg !25730

1125:                                             ; preds = %1124
  %1126 = load i64, i64* %6, align 8, !dbg !25731
  %1127 = add i64 %1126, 2, !dbg !25731
  store i64 %1127, i64* %6, align 8, !dbg !25731
  %1128 = load i8*, i8** %19, align 8, !dbg !25732
  %1129 = getelementptr inbounds i8, i8* %1128, i64 2, !dbg !25732
  store i8* %1129, i8** %19, align 8, !dbg !25732
  br label %1091, !dbg !25733, !llvm.loop !25734

1130:                                             ; preds = %1123, %1091
  %1131 = load i32, i32* %27, align 4, !dbg !25736
  %1132 = icmp eq i32 %1131, 0, !dbg !25738
  br i1 %1132, label %1133, label %1145, !dbg !25739

1133:                                             ; preds = %1130
  call void @llvm.dbg.declare(metadata i32* %32, metadata !25740, metadata !DIExpression()), !dbg !25742
  store i32 4, i32* %32, align 4, !dbg !25742
  %1134 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25743
  %1135 = load i32, i32* %32, align 4, !dbg !25745
  %1136 = call i32 @mbedtls_ssl_check_sig_hash(%struct.mbedtls_ssl_context* %1134, i32 %1135), !dbg !25746
  %1137 = icmp ne i32 %1136, 0, !dbg !25747
  br i1 %1137, label %1138, label %1139, !dbg !25748

1138:                                             ; preds = %1133
  store i32 0, i32* %32, align 4, !dbg !25749
  br label %1139, !dbg !25750

1139:                                             ; preds = %1138, %1133
  %1140 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25751
  %1141 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1140, i32 0, i32 15, !dbg !25752
  %1142 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %1141, align 8, !dbg !25752
  %1143 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %1142, i32 0, i32 0, !dbg !25753
  %1144 = load i32, i32* %32, align 4, !dbg !25754
  call void @mbedtls_ssl_sig_hash_set_const_hash(%struct.mbedtls_pk_rsassa_pss_options* %1143, i32 %1144), !dbg !25755
  br label %1145, !dbg !25756

1145:                                             ; preds = %1139, %1130
  store i64 0, i64* %6, align 8, !dbg !25757
  %1146 = load i8*, i8** %18, align 8, !dbg !25759
  %1147 = load i64, i64* %8, align 8, !dbg !25760
  %1148 = getelementptr inbounds i8, i8* %1146, i64 %1147, !dbg !25761
  %1149 = getelementptr inbounds i8, i8* %1148, i64 2, !dbg !25762
  store i8* %1149, i8** %19, align 8, !dbg !25763
  br label %1150, !dbg !25764

1150:                                             ; preds = %1180, %1145
  %1151 = load i64, i64* %6, align 8, !dbg !25765
  %1152 = load i64, i64* %12, align 8, !dbg !25767
  %1153 = icmp ult i64 %1151, %1152, !dbg !25768
  br i1 %1153, label %1154, label %1185, !dbg !25769

1154:                                             ; preds = %1150
  %1155 = load i8*, i8** %19, align 8, !dbg !25770
  %1156 = getelementptr inbounds i8, i8* %1155, i64 0, !dbg !25770
  %1157 = load i8, i8* %1156, align 1, !dbg !25770
  %1158 = zext i8 %1157 to i32, !dbg !25770
  %1159 = icmp eq i32 %1158, 0, !dbg !25773
  br i1 %1159, label %1160, label %1179, !dbg !25774

1160:                                             ; preds = %1154
  %1161 = load i8*, i8** %19, align 8, !dbg !25775
  %1162 = getelementptr inbounds i8, i8* %1161, i64 1, !dbg !25775
  %1163 = load i8, i8* %1162, align 1, !dbg !25775
  %1164 = zext i8 %1163 to i32, !dbg !25775
  %1165 = icmp eq i32 %1164, 255, !dbg !25776
  br i1 %1165, label %1166, label %1179, !dbg !25777

1166:                                             ; preds = %1160
  %1167 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25778
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1167, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1872, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.42.757, i64 0, i64 0)), !dbg !25778
  %1168 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25780
  %1169 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1168, i32 0, i32 2, !dbg !25782
  %1170 = load i32, i32* %1169, align 4, !dbg !25782
  %1171 = icmp eq i32 %1170, 1, !dbg !25783
  br i1 %1171, label %1172, label %1176, !dbg !25784

1172:                                             ; preds = %1166
  %1173 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25785
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1173, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1877, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.43.758, i64 0, i64 0)), !dbg !25785
  %1174 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25787
  %1175 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %1174, i8 zeroext 2, i8 zeroext 40), !dbg !25788
  store i32 -30976, i32* %2, align 4, !dbg !25789
  br label %1408, !dbg !25789

1176:                                             ; preds = %1166
  %1177 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25790
  %1178 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1177, i32 0, i32 55, !dbg !25791
  store i32 1, i32* %1178, align 8, !dbg !25792
  br label %1185, !dbg !25793

1179:                                             ; preds = %1160, %1154
  br label %1180, !dbg !25794

1180:                                             ; preds = %1179
  %1181 = load i64, i64* %6, align 8, !dbg !25795
  %1182 = add i64 %1181, 2, !dbg !25795
  store i64 %1182, i64* %6, align 8, !dbg !25795
  %1183 = load i8*, i8** %19, align 8, !dbg !25796
  %1184 = getelementptr inbounds i8, i8* %1183, i64 2, !dbg !25796
  store i8* %1184, i8** %19, align 8, !dbg !25796
  br label %1150, !dbg !25797, !llvm.loop !25798

1185:                                             ; preds = %1176, %1150
  %1186 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25800
  %1187 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1186, i32 0, i32 55, !dbg !25802
  %1188 = load i32, i32* %1187, align 8, !dbg !25802
  %1189 = icmp ne i32 %1188, 1, !dbg !25803
  br i1 %1189, label %1190, label %1202, !dbg !25804

1190:                                             ; preds = %1185
  %1191 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25805
  %1192 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1191, i32 0, i32 0, !dbg !25806
  %1193 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %1192, align 8, !dbg !25806
  %1194 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %1193, i32 0, i32 46, !dbg !25807
  %1195 = bitcast i24* %1194 to i32*, !dbg !25807
  %1196 = load i32, i32* %1195, align 4, !dbg !25807
  %1197 = lshr i32 %1196, 4, !dbg !25807
  %1198 = and i32 %1197, 3, !dbg !25807
  %1199 = icmp eq i32 %1198, 2, !dbg !25808
  br i1 %1199, label %1200, label %1202, !dbg !25809

1200:                                             ; preds = %1190
  %1201 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25810
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1201, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1894, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.44.759, i64 0, i64 0)), !dbg !25810
  store i32 1, i32* %22, align 4, !dbg !25812
  br label %1257, !dbg !25813

1202:                                             ; preds = %1190, %1185
  %1203 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25814
  %1204 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1203, i32 0, i32 2, !dbg !25816
  %1205 = load i32, i32* %1204, align 4, !dbg !25816
  %1206 = icmp eq i32 %1205, 1, !dbg !25817
  br i1 %1206, label %1207, label %1217, !dbg !25818

1207:                                             ; preds = %1202
  %1208 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25819
  %1209 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1208, i32 0, i32 55, !dbg !25820
  %1210 = load i32, i32* %1209, align 8, !dbg !25820
  %1211 = icmp eq i32 %1210, 1, !dbg !25821
  br i1 %1211, label %1212, label %1217, !dbg !25822

1212:                                             ; preds = %1207
  %1213 = load i32, i32* %21, align 4, !dbg !25823
  %1214 = icmp eq i32 %1213, 0, !dbg !25824
  br i1 %1214, label %1215, label %1217, !dbg !25825

1215:                                             ; preds = %1212
  %1216 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25826
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1216, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1902, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.45.760, i64 0, i64 0)), !dbg !25826
  store i32 1, i32* %22, align 4, !dbg !25828
  br label %1256, !dbg !25829

1217:                                             ; preds = %1212, %1207, %1202
  %1218 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25830
  %1219 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1218, i32 0, i32 2, !dbg !25832
  %1220 = load i32, i32* %1219, align 4, !dbg !25832
  %1221 = icmp eq i32 %1220, 1, !dbg !25833
  br i1 %1221, label %1222, label %1239, !dbg !25834

1222:                                             ; preds = %1217
  %1223 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25835
  %1224 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1223, i32 0, i32 55, !dbg !25836
  %1225 = load i32, i32* %1224, align 8, !dbg !25836
  %1226 = icmp eq i32 %1225, 0, !dbg !25837
  br i1 %1226, label %1227, label %1239, !dbg !25838

1227:                                             ; preds = %1222
  %1228 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25839
  %1229 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1228, i32 0, i32 0, !dbg !25840
  %1230 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %1229, align 8, !dbg !25840
  %1231 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %1230, i32 0, i32 46, !dbg !25841
  %1232 = bitcast i24* %1231 to i32*, !dbg !25841
  %1233 = load i32, i32* %1232, align 4, !dbg !25841
  %1234 = lshr i32 %1233, 4, !dbg !25841
  %1235 = and i32 %1234, 3, !dbg !25841
  %1236 = icmp eq i32 %1235, 0, !dbg !25842
  br i1 %1236, label %1237, label %1239, !dbg !25843

1237:                                             ; preds = %1227
  %1238 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25844
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1238, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1909, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46.761, i64 0, i64 0)), !dbg !25844
  store i32 1, i32* %22, align 4, !dbg !25846
  br label %1255, !dbg !25847

1239:                                             ; preds = %1227, %1222, %1217
  %1240 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25848
  %1241 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1240, i32 0, i32 2, !dbg !25850
  %1242 = load i32, i32* %1241, align 4, !dbg !25850
  %1243 = icmp eq i32 %1242, 1, !dbg !25851
  br i1 %1243, label %1244, label %1254, !dbg !25852

1244:                                             ; preds = %1239
  %1245 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25853
  %1246 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1245, i32 0, i32 55, !dbg !25854
  %1247 = load i32, i32* %1246, align 8, !dbg !25854
  %1248 = icmp eq i32 %1247, 0, !dbg !25855
  br i1 %1248, label %1249, label %1254, !dbg !25856

1249:                                             ; preds = %1244
  %1250 = load i32, i32* %21, align 4, !dbg !25857
  %1251 = icmp eq i32 %1250, 1, !dbg !25858
  br i1 %1251, label %1252, label %1254, !dbg !25859

1252:                                             ; preds = %1249
  %1253 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25860
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1253, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1916, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.47.762, i64 0, i64 0)), !dbg !25860
  store i32 1, i32* %22, align 4, !dbg !25862
  br label %1254, !dbg !25863

1254:                                             ; preds = %1252, %1249, %1244, %1239
  br label %1255

1255:                                             ; preds = %1254, %1237
  br label %1256

1256:                                             ; preds = %1255, %1215
  br label %1257

1257:                                             ; preds = %1256, %1200
  %1258 = load i32, i32* %22, align 4, !dbg !25864
  %1259 = icmp eq i32 %1258, 1, !dbg !25866
  br i1 %1259, label %1260, label %1263, !dbg !25867

1260:                                             ; preds = %1257
  %1261 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25868
  %1262 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %1261, i8 zeroext 2, i8 zeroext 40), !dbg !25870
  store i32 -30976, i32* %2, align 4, !dbg !25871
  br label %1408, !dbg !25871

1263:                                             ; preds = %1257
  store i32 0, i32* %5, align 4, !dbg !25872
  %1264 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25873
  %1265 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1264, i32 0, i32 0, !dbg !25874
  %1266 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %1265, align 8, !dbg !25874
  %1267 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %1266, i32 0, i32 0, !dbg !25875
  %1268 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25876
  %1269 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1268, i32 0, i32 5, !dbg !25877
  %1270 = load i32, i32* %1269, align 8, !dbg !25877
  %1271 = sext i32 %1270 to i64, !dbg !25873
  %1272 = getelementptr inbounds [4 x i32*], [4 x i32*]* %1267, i64 0, i64 %1271, !dbg !25873
  %1273 = load i32*, i32** %1272, align 8, !dbg !25873
  store i32* %1273, i32** %23, align 8, !dbg !25878
  store %struct.mbedtls_ssl_ciphersuite_t* null, %struct.mbedtls_ssl_ciphersuite_t** %24, align 8, !dbg !25879
  store i64 0, i64* %6, align 8, !dbg !25880
  br label %1274, !dbg !25882

1274:                                             ; preds = %1334, %1263
  %1275 = load i32*, i32** %23, align 8, !dbg !25883
  %1276 = load i64, i64* %6, align 8, !dbg !25885
  %1277 = getelementptr inbounds i32, i32* %1275, i64 %1276, !dbg !25883
  %1278 = load i32, i32* %1277, align 4, !dbg !25883
  %1279 = icmp ne i32 %1278, 0, !dbg !25886
  br i1 %1279, label %1280, label %1337, !dbg !25887

1280:                                             ; preds = %1274
  store i64 0, i64* %7, align 8, !dbg !25888
  %1281 = load i8*, i8** %18, align 8, !dbg !25890
  %1282 = load i64, i64* %8, align 8, !dbg !25891
  %1283 = getelementptr inbounds i8, i8* %1281, i64 %1282, !dbg !25892
  %1284 = getelementptr inbounds i8, i8* %1283, i64 2, !dbg !25893
  store i8* %1284, i8** %19, align 8, !dbg !25894
  br label %1285, !dbg !25895

1285:                                             ; preds = %1328, %1280
  %1286 = load i64, i64* %7, align 8, !dbg !25896
  %1287 = load i64, i64* %12, align 8, !dbg !25898
  %1288 = icmp ult i64 %1286, %1287, !dbg !25899
  br i1 %1288, label %1289, label %1333, !dbg !25900

1289:                                             ; preds = %1285
  %1290 = load i8*, i8** %19, align 8, !dbg !25901
  %1291 = getelementptr inbounds i8, i8* %1290, i64 0, !dbg !25901
  %1292 = load i8, i8* %1291, align 1, !dbg !25901
  %1293 = zext i8 %1292 to i32, !dbg !25901
  %1294 = load i32*, i32** %23, align 8, !dbg !25904
  %1295 = load i64, i64* %6, align 8, !dbg !25905
  %1296 = getelementptr inbounds i32, i32* %1294, i64 %1295, !dbg !25904
  %1297 = load i32, i32* %1296, align 4, !dbg !25904
  %1298 = ashr i32 %1297, 8, !dbg !25906
  %1299 = and i32 %1298, 255, !dbg !25907
  %1300 = icmp ne i32 %1293, %1299, !dbg !25908
  br i1 %1300, label %1312, label %1301, !dbg !25909

1301:                                             ; preds = %1289
  %1302 = load i8*, i8** %19, align 8, !dbg !25910
  %1303 = getelementptr inbounds i8, i8* %1302, i64 1, !dbg !25910
  %1304 = load i8, i8* %1303, align 1, !dbg !25910
  %1305 = zext i8 %1304 to i32, !dbg !25910
  %1306 = load i32*, i32** %23, align 8, !dbg !25911
  %1307 = load i64, i64* %6, align 8, !dbg !25912
  %1308 = getelementptr inbounds i32, i32* %1306, i64 %1307, !dbg !25911
  %1309 = load i32, i32* %1308, align 4, !dbg !25911
  %1310 = and i32 %1309, 255, !dbg !25913
  %1311 = icmp ne i32 %1305, %1310, !dbg !25914
  br i1 %1311, label %1312, label %1313, !dbg !25915

1312:                                             ; preds = %1301, %1289
  br label %1328, !dbg !25916

1313:                                             ; preds = %1301
  store i32 1, i32* %5, align 4, !dbg !25917
  %1314 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25918
  %1315 = load i32*, i32** %23, align 8, !dbg !25920
  %1316 = load i64, i64* %6, align 8, !dbg !25921
  %1317 = getelementptr inbounds i32, i32* %1315, i64 %1316, !dbg !25920
  %1318 = load i32, i32* %1317, align 4, !dbg !25920
  %1319 = call i32 @ssl_ciphersuite_match(%struct.mbedtls_ssl_context* %1314, i32 %1318, %struct.mbedtls_ssl_ciphersuite_t** %24), !dbg !25922
  store i32 %1319, i32* %4, align 4, !dbg !25923
  %1320 = icmp ne i32 %1319, 0, !dbg !25924
  br i1 %1320, label %1321, label %1323, !dbg !25925

1321:                                             ; preds = %1313
  %1322 = load i32, i32* %4, align 4, !dbg !25926
  store i32 %1322, i32* %2, align 4, !dbg !25927
  br label %1408, !dbg !25927

1323:                                             ; preds = %1313
  %1324 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %24, align 8, !dbg !25928
  %1325 = icmp ne %struct.mbedtls_ssl_ciphersuite_t* %1324, null, !dbg !25930
  br i1 %1325, label %1326, label %1327, !dbg !25931

1326:                                             ; preds = %1323
  br label %1348, !dbg !25932

1327:                                             ; preds = %1323
  br label %1328, !dbg !25933

1328:                                             ; preds = %1327, %1312
  %1329 = load i64, i64* %7, align 8, !dbg !25934
  %1330 = add i64 %1329, 2, !dbg !25934
  store i64 %1330, i64* %7, align 8, !dbg !25934
  %1331 = load i8*, i8** %19, align 8, !dbg !25935
  %1332 = getelementptr inbounds i8, i8* %1331, i64 2, !dbg !25935
  store i8* %1332, i8** %19, align 8, !dbg !25935
  br label %1285, !dbg !25936, !llvm.loop !25937

1333:                                             ; preds = %1285
  br label %1334, !dbg !25938

1334:                                             ; preds = %1333
  %1335 = load i64, i64* %6, align 8, !dbg !25939
  %1336 = add i64 %1335, 1, !dbg !25939
  store i64 %1336, i64* %6, align 8, !dbg !25939
  br label %1274, !dbg !25940, !llvm.loop !25941

1337:                                             ; preds = %1274
  %1338 = load i32, i32* %5, align 4, !dbg !25943
  %1339 = icmp ne i32 %1338, 0, !dbg !25943
  br i1 %1339, label %1340, label %1344, !dbg !25945

1340:                                             ; preds = %1337
  %1341 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25946
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1341, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1961, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.48.763, i64 0, i64 0)), !dbg !25946
  %1342 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25948
  %1343 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %1342, i8 zeroext 2, i8 zeroext 40), !dbg !25949
  store i32 -27008, i32* %2, align 4, !dbg !25950
  br label %1408, !dbg !25950

1344:                                             ; preds = %1337
  %1345 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25951
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1345, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1968, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.764, i64 0, i64 0)), !dbg !25951
  %1346 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25953
  %1347 = call i32 @mbedtls_ssl_send_alert_message(%struct.mbedtls_ssl_context* %1346, i8 zeroext 2, i8 zeroext 40), !dbg !25954
  store i32 -29568, i32* %2, align 4, !dbg !25955
  br label %1408, !dbg !25955

1348:                                             ; preds = %1326
  call void @llvm.dbg.label(metadata !25956), !dbg !25957
  %1349 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25958
  %1350 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %24, align 8, !dbg !25958
  %1351 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %1350, i32 0, i32 1, !dbg !25958
  %1352 = load i8*, i8** %1351, align 8, !dbg !25958
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1349, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1975, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50.765, i64 0, i64 0), i8* %1352), !dbg !25958
  %1353 = load i32*, i32** %23, align 8, !dbg !25959
  %1354 = load i64, i64* %6, align 8, !dbg !25960
  %1355 = getelementptr inbounds i32, i32* %1353, i64 %1354, !dbg !25959
  %1356 = load i32, i32* %1355, align 4, !dbg !25959
  %1357 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25961
  %1358 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1357, i32 0, i32 14, !dbg !25962
  %1359 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %1358, align 8, !dbg !25962
  %1360 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %1359, i32 0, i32 0, !dbg !25963
  store i32 %1356, i32* %1360, align 8, !dbg !25964
  %1361 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %24, align 8, !dbg !25965
  %1362 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25966
  %1363 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1362, i32 0, i32 19, !dbg !25967
  %1364 = load %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform** %1363, align 8, !dbg !25967
  %1365 = getelementptr inbounds %struct.mbedtls_ssl_transform, %struct.mbedtls_ssl_transform* %1364, i32 0, i32 0, !dbg !25968
  store %struct.mbedtls_ssl_ciphersuite_t* %1361, %struct.mbedtls_ssl_ciphersuite_t** %1365, align 8, !dbg !25969
  %1366 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25970
  %1367 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1366, i32 0, i32 1, !dbg !25971
  %1368 = load i32, i32* %1367, align 8, !dbg !25972
  %1369 = add nsw i32 %1368, 1, !dbg !25972
  store i32 %1369, i32* %1367, align 8, !dbg !25972
  %1370 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25973
  %1371 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1370, i32 0, i32 0, !dbg !25975
  %1372 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %1371, align 8, !dbg !25975
  %1373 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %1372, i32 0, i32 46, !dbg !25976
  %1374 = bitcast i24* %1373 to i32*, !dbg !25976
  %1375 = load i32, i32* %1374, align 4, !dbg !25976
  %1376 = lshr i32 %1375, 1, !dbg !25976
  %1377 = and i32 %1376, 1, !dbg !25976
  %1378 = icmp eq i32 %1377, 1, !dbg !25977
  br i1 %1378, label %1379, label %1381, !dbg !25978

1379:                                             ; preds = %1348
  %1380 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25979
  call void @mbedtls_ssl_recv_flight_completed(%struct.mbedtls_ssl_context* %1380), !dbg !25980
  br label %1381, !dbg !25980

1381:                                             ; preds = %1379, %1348
  %1382 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25981
  %1383 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1382, i32 0, i32 5, !dbg !25983
  %1384 = load i32, i32* %1383, align 8, !dbg !25983
  %1385 = icmp eq i32 %1384, 3, !dbg !25984
  br i1 %1385, label %1386, label %1406, !dbg !25985

1386:                                             ; preds = %1381
  call void @llvm.dbg.declare(metadata i32* %33, metadata !25986, metadata !DIExpression()), !dbg !25988
  %1387 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %24, align 8, !dbg !25989
  %1388 = call i32 @mbedtls_ssl_get_ciphersuite_sig_alg(%struct.mbedtls_ssl_ciphersuite_t* %1387), !dbg !25990
  store i32 %1388, i32* %33, align 4, !dbg !25988
  %1389 = load i32, i32* %33, align 4, !dbg !25991
  %1390 = icmp ne i32 %1389, 0, !dbg !25993
  br i1 %1390, label %1391, label %1402, !dbg !25994

1391:                                             ; preds = %1386
  call void @llvm.dbg.declare(metadata i32* %34, metadata !25995, metadata !DIExpression()), !dbg !25997
  %1392 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !25998
  %1393 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %1392, i32 0, i32 15, !dbg !25999
  %1394 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %1393, align 8, !dbg !25999
  %1395 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %1394, i32 0, i32 0, !dbg !26000
  %1396 = load i32, i32* %33, align 4, !dbg !26001
  %1397 = call i32 @mbedtls_ssl_sig_hash_set_find(%struct.mbedtls_pk_rsassa_pss_options* %1395, i32 %1396), !dbg !26002
  store i32 %1397, i32* %34, align 4, !dbg !25997
  %1398 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26003
  %1399 = load i32, i32* %34, align 4, !dbg !26003
  %1400 = call zeroext i8 @mbedtls_ssl_hash_from_md_alg(i32 %1399), !dbg !26003
  %1401 = zext i8 %1400 to i32, !dbg !26003
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1398, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 1999, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.51.766, i64 0, i64 0), i32 %1401), !dbg !26003
  br label %1405, !dbg !26004

1402:                                             ; preds = %1386
  %1403 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26005
  %1404 = load i32, i32* %33, align 4, !dbg !26005
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1403, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2004, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.52.767, i64 0, i64 0), i32 %1404), !dbg !26005
  br label %1405

1405:                                             ; preds = %1402, %1391
  br label %1406, !dbg !26007

1406:                                             ; preds = %1405, %1381
  %1407 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26008
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %1407, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2009, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53.768, i64 0, i64 0)), !dbg !26008
  store i32 0, i32* %2, align 4, !dbg !26009
  br label %1408, !dbg !26009

1408:                                             ; preds = %1406, %1344, %1340, %1321, %1260, %1172, %1119, %1080, %1058, %1045, %1032, %1019, %1006, %993, %980, %961, %948, %929, %916, %892, %849, %817, %765, %733, %691, %629, %574, %480, %427, %413, %337, %298, %256, %243, %199, %189, %140, %107, %68, %45
  %1409 = load i32, i32* %2, align 4, !dbg !26010
  ret i32 %1409, !dbg !26010
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_write_server_hello(%struct.mbedtls_ssl_context* %0) #0 !dbg !26011 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %3, metadata !26012, metadata !DIExpression()), !dbg !26013
  call void @llvm.dbg.declare(metadata i32* %4, metadata !26014, metadata !DIExpression()), !dbg !26015
  call void @llvm.dbg.declare(metadata i64* %5, metadata !26016, metadata !DIExpression()), !dbg !26017
  call void @llvm.dbg.declare(metadata i64* %6, metadata !26018, metadata !DIExpression()), !dbg !26019
  store i64 0, i64* %6, align 8, !dbg !26019
  call void @llvm.dbg.declare(metadata i64* %7, metadata !26020, metadata !DIExpression()), !dbg !26021
  call void @llvm.dbg.declare(metadata i8** %8, metadata !26022, metadata !DIExpression()), !dbg !26023
  call void @llvm.dbg.declare(metadata i8** %9, metadata !26024, metadata !DIExpression()), !dbg !26025
  %10 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26026
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %10, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2384, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85.690, i64 0, i64 0)), !dbg !26026
  %11 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26027
  %12 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %11, i32 0, i32 0, !dbg !26029
  %13 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %12, align 8, !dbg !26029
  %14 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %13, i32 0, i32 46, !dbg !26030
  %15 = bitcast i24* %14 to i32*, !dbg !26030
  %16 = load i32, i32* %15, align 4, !dbg !26030
  %17 = lshr i32 %16, 1, !dbg !26030
  %18 = and i32 %17, 1, !dbg !26030
  %19 = icmp eq i32 %18, 1, !dbg !26031
  br i1 %19, label %20, label %33, !dbg !26032

20:                                               ; preds = %1
  %21 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26033
  %22 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %21, i32 0, i32 15, !dbg !26034
  %23 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %22, align 8, !dbg !26034
  %24 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %23, i32 0, i32 14, !dbg !26035
  %25 = load i8, i8* %24, align 8, !dbg !26035
  %26 = zext i8 %25 to i32, !dbg !26033
  %27 = icmp ne i32 %26, 0, !dbg !26036
  br i1 %27, label %28, label %33, !dbg !26037

28:                                               ; preds = %20
  %29 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26038
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %29, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2390, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86.691, i64 0, i64 0)), !dbg !26038
  %30 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26040
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %30, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2391, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.87.692, i64 0, i64 0)), !dbg !26040
  %31 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26041
  %32 = call i32 @ssl_write_hello_verify_request(%struct.mbedtls_ssl_context* %31), !dbg !26042
  store i32 %32, i32* %2, align 4, !dbg !26043
  br label %431, !dbg !26043

33:                                               ; preds = %20, %1
  %34 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26044
  %35 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %34, i32 0, i32 0, !dbg !26046
  %36 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %35, align 8, !dbg !26046
  %37 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %36, i32 0, i32 3, !dbg !26047
  %38 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %37, align 8, !dbg !26047
  %39 = icmp eq i32 (i8*, i8*, i64)* %38, null, !dbg !26048
  br i1 %39, label %40, label %42, !dbg !26049

40:                                               ; preds = %33
  %41 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26050
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %41, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2399, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88.693, i64 0, i64 0)), !dbg !26050
  store i32 -29696, i32* %2, align 4, !dbg !26052
  br label %431, !dbg !26052

42:                                               ; preds = %33
  %43 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26053
  %44 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %43, i32 0, i32 45, !dbg !26054
  %45 = load i8*, i8** %44, align 8, !dbg !26054
  store i8* %45, i8** %8, align 8, !dbg !26055
  %46 = load i8*, i8** %8, align 8, !dbg !26056
  %47 = getelementptr inbounds i8, i8* %46, i64 4, !dbg !26057
  store i8* %47, i8** %9, align 8, !dbg !26058
  %48 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26059
  %49 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %48, i32 0, i32 4, !dbg !26060
  %50 = load i32, i32* %49, align 4, !dbg !26060
  %51 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26061
  %52 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %51, i32 0, i32 5, !dbg !26062
  %53 = load i32, i32* %52, align 8, !dbg !26062
  %54 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26063
  %55 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %54, i32 0, i32 0, !dbg !26064
  %56 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %55, align 8, !dbg !26064
  %57 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %56, i32 0, i32 46, !dbg !26065
  %58 = bitcast i24* %57 to i32*, !dbg !26065
  %59 = load i32, i32* %58, align 4, !dbg !26065
  %60 = lshr i32 %59, 1, !dbg !26065
  %61 = and i32 %60, 1, !dbg !26065
  %62 = load i8*, i8** %9, align 8, !dbg !26066
  call void @mbedtls_ssl_write_version(i32 %50, i32 %53, i32 %61, i8* %62), !dbg !26067
  %63 = load i8*, i8** %9, align 8, !dbg !26068
  %64 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !26068
  store i8* %64, i8** %9, align 8, !dbg !26068
  %65 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26069
  %66 = load i8*, i8** %8, align 8, !dbg !26069
  %67 = getelementptr inbounds i8, i8* %66, i64 4, !dbg !26069
  %68 = load i8, i8* %67, align 1, !dbg !26069
  %69 = zext i8 %68 to i32, !dbg !26069
  %70 = load i8*, i8** %8, align 8, !dbg !26069
  %71 = getelementptr inbounds i8, i8* %70, i64 5, !dbg !26069
  %72 = load i8, i8* %71, align 1, !dbg !26069
  %73 = zext i8 %72 to i32, !dbg !26069
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %65, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2418, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89.694, i64 0, i64 0), i32 %69, i32 %73), !dbg !26069
  %74 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26070
  %75 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %74, i32 0, i32 0, !dbg !26072
  %76 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %75, align 8, !dbg !26072
  %77 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %76, i32 0, i32 3, !dbg !26073
  %78 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %77, align 8, !dbg !26073
  %79 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26074
  %80 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %79, i32 0, i32 0, !dbg !26075
  %81 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %80, align 8, !dbg !26075
  %82 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %81, i32 0, i32 4, !dbg !26076
  %83 = load i8*, i8** %82, align 8, !dbg !26076
  %84 = load i8*, i8** %9, align 8, !dbg !26077
  %85 = call i32 %78(i8* %83, i8* %84, i64 4), !dbg !26070
  store i32 %85, i32* %4, align 4, !dbg !26078
  %86 = icmp ne i32 %85, 0, !dbg !26079
  br i1 %86, label %87, label %89, !dbg !26080

87:                                               ; preds = %42
  %88 = load i32, i32* %4, align 4, !dbg !26081
  store i32 %88, i32* %2, align 4, !dbg !26082
  br label %431, !dbg !26082

89:                                               ; preds = %42
  %90 = load i8*, i8** %9, align 8, !dbg !26083
  %91 = getelementptr inbounds i8, i8* %90, i64 4, !dbg !26083
  store i8* %91, i8** %9, align 8, !dbg !26083
  %92 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26084
  %93 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %92, i32 0, i32 0, !dbg !26086
  %94 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %93, align 8, !dbg !26086
  %95 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %94, i32 0, i32 3, !dbg !26087
  %96 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %95, align 8, !dbg !26087
  %97 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26088
  %98 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %97, i32 0, i32 0, !dbg !26089
  %99 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %98, align 8, !dbg !26089
  %100 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %99, i32 0, i32 4, !dbg !26090
  %101 = load i8*, i8** %100, align 8, !dbg !26090
  %102 = load i8*, i8** %9, align 8, !dbg !26091
  %103 = call i32 %96(i8* %101, i8* %102, i64 28), !dbg !26084
  store i32 %103, i32* %4, align 4, !dbg !26092
  %104 = icmp ne i32 %103, 0, !dbg !26093
  br i1 %104, label %105, label %107, !dbg !26094

105:                                              ; preds = %89
  %106 = load i32, i32* %4, align 4, !dbg !26095
  store i32 %106, i32* %2, align 4, !dbg !26096
  br label %431, !dbg !26096

107:                                              ; preds = %89
  %108 = load i8*, i8** %9, align 8, !dbg !26097
  %109 = getelementptr inbounds i8, i8* %108, i64 28, !dbg !26097
  store i8* %109, i8** %9, align 8, !dbg !26097
  %110 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26098
  %111 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %110, i32 0, i32 15, !dbg !26099
  %112 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %111, align 8, !dbg !26099
  %113 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %112, i32 0, i32 32, !dbg !26100
  %114 = getelementptr inbounds [64 x i8], [64 x i8]* %113, i64 0, i64 0, !dbg !26098
  %115 = getelementptr inbounds i8, i8* %114, i64 32, !dbg !26101
  %116 = load i8*, i8** %8, align 8, !dbg !26102
  %117 = getelementptr inbounds i8, i8* %116, i64 6, !dbg !26103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* align 1 %117, i64 32, i1 false), !dbg !26104
  %118 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26105
  %119 = load i8*, i8** %8, align 8, !dbg !26105
  %120 = getelementptr inbounds i8, i8* %119, i64 6, !dbg !26105
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %118, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2442, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90.695, i64 0, i64 0), i8* %120, i64 32), !dbg !26105
  %121 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26106
  %122 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %121, i32 0, i32 15, !dbg !26108
  %123 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %122, align 8, !dbg !26108
  %124 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %123, i32 0, i32 34, !dbg !26109
  %125 = load i32, i32* %124, align 4, !dbg !26109
  %126 = icmp eq i32 %125, 0, !dbg !26110
  br i1 %126, label %127, label %168, !dbg !26111

127:                                              ; preds = %107
  %128 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26112
  %129 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %128, i32 0, i32 2, !dbg !26113
  %130 = load i32, i32* %129, align 4, !dbg !26113
  %131 = icmp eq i32 %130, 0, !dbg !26114
  br i1 %131, label %132, label %168, !dbg !26115

132:                                              ; preds = %127
  %133 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26116
  %134 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %133, i32 0, i32 14, !dbg !26117
  %135 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %134, align 8, !dbg !26117
  %136 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %135, i32 0, i32 2, !dbg !26118
  %137 = load i64, i64* %136, align 8, !dbg !26118
  %138 = icmp ne i64 %137, 0, !dbg !26119
  br i1 %138, label %139, label %168, !dbg !26120

139:                                              ; preds = %132
  %140 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26121
  %141 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %140, i32 0, i32 0, !dbg !26122
  %142 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %141, align 8, !dbg !26122
  %143 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %142, i32 0, i32 5, !dbg !26123
  %144 = load i32 (i8*, %struct.mbedtls_ssl_session*)*, i32 (i8*, %struct.mbedtls_ssl_session*)** %143, align 8, !dbg !26123
  %145 = icmp ne i32 (i8*, %struct.mbedtls_ssl_session*)* %144, null, !dbg !26124
  br i1 %145, label %146, label %168, !dbg !26125

146:                                              ; preds = %139
  %147 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26126
  %148 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %147, i32 0, i32 0, !dbg !26127
  %149 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %148, align 8, !dbg !26127
  %150 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %149, i32 0, i32 5, !dbg !26128
  %151 = load i32 (i8*, %struct.mbedtls_ssl_session*)*, i32 (i8*, %struct.mbedtls_ssl_session*)** %150, align 8, !dbg !26128
  %152 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26129
  %153 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %152, i32 0, i32 0, !dbg !26130
  %154 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %153, align 8, !dbg !26130
  %155 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %154, i32 0, i32 7, !dbg !26131
  %156 = load i8*, i8** %155, align 8, !dbg !26131
  %157 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26132
  %158 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %157, i32 0, i32 14, !dbg !26133
  %159 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %158, align 8, !dbg !26133
  %160 = call i32 %151(i8* %156, %struct.mbedtls_ssl_session* %159), !dbg !26126
  %161 = icmp eq i32 %160, 0, !dbg !26134
  br i1 %161, label %162, label %168, !dbg !26135

162:                                              ; preds = %146
  %163 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26136
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %163, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2457, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.91.696, i64 0, i64 0)), !dbg !26136
  %164 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26138
  %165 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %164, i32 0, i32 15, !dbg !26139
  %166 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %165, align 8, !dbg !26139
  %167 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %166, i32 0, i32 34, !dbg !26140
  store i32 1, i32* %167, align 4, !dbg !26141
  br label %168, !dbg !26142

168:                                              ; preds = %162, %146, %139, %132, %127, %107
  %169 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26143
  %170 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %169, i32 0, i32 15, !dbg !26145
  %171 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %170, align 8, !dbg !26145
  %172 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %171, i32 0, i32 34, !dbg !26146
  %173 = load i32, i32* %172, align 4, !dbg !26146
  %174 = icmp eq i32 %173, 0, !dbg !26147
  br i1 %174, label %175, label %223, !dbg !26148

175:                                              ; preds = %168
  %176 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26149
  %177 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %176, i32 0, i32 1, !dbg !26151
  %178 = load i32, i32* %177, align 8, !dbg !26152
  %179 = add nsw i32 %178, 1, !dbg !26152
  store i32 %179, i32* %177, align 8, !dbg !26152
  %180 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26153
  %181 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %180, i32 0, i32 15, !dbg !26155
  %182 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %181, align 8, !dbg !26155
  %183 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %182, i32 0, i32 38, !dbg !26156
  %184 = load i32, i32* %183, align 4, !dbg !26156
  %185 = icmp ne i32 %184, 0, !dbg !26157
  br i1 %185, label %186, label %196, !dbg !26158

186:                                              ; preds = %175
  store i64 0, i64* %7, align 8, !dbg !26159
  %187 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26161
  %188 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %187, i32 0, i32 14, !dbg !26162
  %189 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %188, align 8, !dbg !26162
  %190 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %189, i32 0, i32 2, !dbg !26163
  store i64 0, i64* %190, align 8, !dbg !26164
  %191 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26165
  %192 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %191, i32 0, i32 14, !dbg !26166
  %193 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %192, align 8, !dbg !26166
  %194 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %193, i32 0, i32 3, !dbg !26167
  %195 = getelementptr inbounds [32 x i8], [32 x i8]* %194, i64 0, i64 0, !dbg !26168
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 32, i1 false), !dbg !26168
  br label %222, !dbg !26169

196:                                              ; preds = %175
  store i64 32, i64* %7, align 8, !dbg !26170
  %197 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26172
  %198 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %197, i32 0, i32 14, !dbg !26173
  %199 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %198, align 8, !dbg !26173
  %200 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %199, i32 0, i32 2, !dbg !26174
  store i64 32, i64* %200, align 8, !dbg !26175
  %201 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26176
  %202 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %201, i32 0, i32 0, !dbg !26178
  %203 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %202, align 8, !dbg !26178
  %204 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %203, i32 0, i32 3, !dbg !26179
  %205 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %204, align 8, !dbg !26179
  %206 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26180
  %207 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %206, i32 0, i32 0, !dbg !26181
  %208 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %207, align 8, !dbg !26181
  %209 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %208, i32 0, i32 4, !dbg !26182
  %210 = load i8*, i8** %209, align 8, !dbg !26182
  %211 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26183
  %212 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %211, i32 0, i32 14, !dbg !26184
  %213 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %212, align 8, !dbg !26184
  %214 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %213, i32 0, i32 3, !dbg !26185
  %215 = getelementptr inbounds [32 x i8], [32 x i8]* %214, i64 0, i64 0, !dbg !26183
  %216 = load i64, i64* %7, align 8, !dbg !26186
  %217 = call i32 %205(i8* %210, i8* %215, i64 %216), !dbg !26176
  store i32 %217, i32* %4, align 4, !dbg !26187
  %218 = icmp ne i32 %217, 0, !dbg !26188
  br i1 %218, label %219, label %221, !dbg !26189

219:                                              ; preds = %196
  %220 = load i32, i32* %4, align 4, !dbg !26190
  store i32 %220, i32* %2, align 4, !dbg !26191
  br label %431, !dbg !26191

221:                                              ; preds = %196
  br label %222

222:                                              ; preds = %221, %186
  br label %239, !dbg !26192

223:                                              ; preds = %168
  %224 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26193
  %225 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %224, i32 0, i32 14, !dbg !26195
  %226 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %225, align 8, !dbg !26195
  %227 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %226, i32 0, i32 2, !dbg !26196
  %228 = load i64, i64* %227, align 8, !dbg !26196
  store i64 %228, i64* %7, align 8, !dbg !26197
  %229 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26198
  %230 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %229, i32 0, i32 1, !dbg !26199
  store i32 12, i32* %230, align 8, !dbg !26200
  %231 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26201
  %232 = call i32 @mbedtls_ssl_derive_keys(%struct.mbedtls_ssl_context* %231), !dbg !26203
  store i32 %232, i32* %4, align 4, !dbg !26204
  %233 = icmp ne i32 %232, 0, !dbg !26205
  br i1 %233, label %234, label %238, !dbg !26206

234:                                              ; preds = %223
  %235 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26207
  %236 = load i32, i32* %4, align 4, !dbg !26207
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %235, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2498, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.92.650, i64 0, i64 0), i32 %236), !dbg !26207
  %237 = load i32, i32* %4, align 4, !dbg !26209
  store i32 %237, i32* %2, align 4, !dbg !26210
  br label %431, !dbg !26210

238:                                              ; preds = %223
  br label %239

239:                                              ; preds = %238, %222
  %240 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26211
  %241 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %240, i32 0, i32 14, !dbg !26212
  %242 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %241, align 8, !dbg !26212
  %243 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %242, i32 0, i32 2, !dbg !26213
  %244 = load i64, i64* %243, align 8, !dbg !26213
  %245 = trunc i64 %244 to i8, !dbg !26214
  %246 = load i8*, i8** %9, align 8, !dbg !26215
  %247 = getelementptr inbounds i8, i8* %246, i32 1, !dbg !26215
  store i8* %247, i8** %9, align 8, !dbg !26215
  store i8 %245, i8* %246, align 1, !dbg !26216
  %248 = load i8*, i8** %9, align 8, !dbg !26217
  %249 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26218
  %250 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %249, i32 0, i32 14, !dbg !26219
  %251 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %250, align 8, !dbg !26219
  %252 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %251, i32 0, i32 3, !dbg !26220
  %253 = getelementptr inbounds [32 x i8], [32 x i8]* %252, i64 0, i64 0, !dbg !26221
  %254 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26222
  %255 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %254, i32 0, i32 14, !dbg !26223
  %256 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %255, align 8, !dbg !26223
  %257 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %256, i32 0, i32 2, !dbg !26224
  %258 = load i64, i64* %257, align 8, !dbg !26224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %248, i8* align 8 %253, i64 %258, i1 false), !dbg !26221
  %259 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26225
  %260 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %259, i32 0, i32 14, !dbg !26226
  %261 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %260, align 8, !dbg !26226
  %262 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %261, i32 0, i32 2, !dbg !26227
  %263 = load i64, i64* %262, align 8, !dbg !26227
  %264 = load i8*, i8** %9, align 8, !dbg !26228
  %265 = getelementptr inbounds i8, i8* %264, i64 %263, !dbg !26228
  store i8* %265, i8** %9, align 8, !dbg !26228
  %266 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26229
  %267 = load i64, i64* %7, align 8, !dbg !26229
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %266, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2515, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.93.697, i64 0, i64 0), i64 %267), !dbg !26229
  %268 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26230
  %269 = load i8*, i8** %8, align 8, !dbg !26230
  %270 = getelementptr inbounds i8, i8* %269, i64 39, !dbg !26230
  %271 = load i64, i64* %7, align 8, !dbg !26230
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %268, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2516, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.94.698, i64 0, i64 0), i8* %270, i64 %271), !dbg !26230
  %272 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26231
  %273 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26231
  %274 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %273, i32 0, i32 15, !dbg !26231
  %275 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %274, align 8, !dbg !26231
  %276 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %275, i32 0, i32 34, !dbg !26231
  %277 = load i32, i32* %276, align 4, !dbg !26231
  %278 = icmp ne i32 %277, 0, !dbg !26231
  %279 = zext i1 %278 to i64, !dbg !26231
  %280 = select i1 %278, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96.699, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97.700, i64 0, i64 0), !dbg !26231
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %272, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2518, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.95.701, i64 0, i64 0), i8* %280), !dbg !26231
  %281 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26232
  %282 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %281, i32 0, i32 14, !dbg !26233
  %283 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %282, align 8, !dbg !26233
  %284 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %283, i32 0, i32 0, !dbg !26234
  %285 = load i32, i32* %284, align 8, !dbg !26234
  %286 = ashr i32 %285, 8, !dbg !26235
  %287 = trunc i32 %286 to i8, !dbg !26236
  %288 = load i8*, i8** %9, align 8, !dbg !26237
  %289 = getelementptr inbounds i8, i8* %288, i32 1, !dbg !26237
  store i8* %289, i8** %9, align 8, !dbg !26237
  store i8 %287, i8* %288, align 1, !dbg !26238
  %290 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26239
  %291 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %290, i32 0, i32 14, !dbg !26240
  %292 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %291, align 8, !dbg !26240
  %293 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %292, i32 0, i32 0, !dbg !26241
  %294 = load i32, i32* %293, align 8, !dbg !26241
  %295 = trunc i32 %294 to i8, !dbg !26242
  %296 = load i8*, i8** %9, align 8, !dbg !26243
  %297 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !26243
  store i8* %297, i8** %9, align 8, !dbg !26243
  store i8 %295, i8* %296, align 1, !dbg !26244
  %298 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26245
  %299 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %298, i32 0, i32 14, !dbg !26246
  %300 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %299, align 8, !dbg !26246
  %301 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %300, i32 0, i32 1, !dbg !26247
  %302 = load i32, i32* %301, align 4, !dbg !26247
  %303 = trunc i32 %302 to i8, !dbg !26248
  %304 = load i8*, i8** %9, align 8, !dbg !26249
  %305 = getelementptr inbounds i8, i8* %304, i32 1, !dbg !26249
  store i8* %305, i8** %9, align 8, !dbg !26249
  store i8 %303, i8* %304, align 1, !dbg !26250
  %306 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26251
  %307 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26251
  %308 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %307, i32 0, i32 14, !dbg !26251
  %309 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %308, align 8, !dbg !26251
  %310 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %309, i32 0, i32 0, !dbg !26251
  %311 = load i32, i32* %310, align 8, !dbg !26251
  %312 = call i8* @mbedtls_ssl_get_ciphersuite_name(i32 %311), !dbg !26251
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %306, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2525, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.98.702, i64 0, i64 0), i8* %312), !dbg !26251
  %313 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26252
  %314 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26252
  %315 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %314, i32 0, i32 14, !dbg !26252
  %316 = load %struct.mbedtls_ssl_session*, %struct.mbedtls_ssl_session** %315, align 8, !dbg !26252
  %317 = getelementptr inbounds %struct.mbedtls_ssl_session, %struct.mbedtls_ssl_session* %316, i32 0, i32 1, !dbg !26252
  %318 = load i32, i32* %317, align 4, !dbg !26252
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %313, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2527, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.99.703, i64 0, i64 0), i32 %318), !dbg !26252
  %319 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26253
  %320 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %319, i32 0, i32 4, !dbg !26255
  %321 = load i32, i32* %320, align 4, !dbg !26255
  %322 = icmp ne i32 %321, 3, !dbg !26256
  br i1 %322, label %328, label %323, !dbg !26257

323:                                              ; preds = %239
  %324 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26258
  %325 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %324, i32 0, i32 5, !dbg !26259
  %326 = load i32, i32* %325, align 8, !dbg !26259
  %327 = icmp ne i32 %326, 0, !dbg !26260
  br i1 %327, label %328, label %413, !dbg !26261

328:                                              ; preds = %323, %239
  %329 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26262
  %330 = load i8*, i8** %9, align 8, !dbg !26264
  %331 = getelementptr inbounds i8, i8* %330, i64 2, !dbg !26265
  %332 = load i64, i64* %6, align 8, !dbg !26266
  %333 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !26267
  call void @ssl_write_renegotiation_ext(%struct.mbedtls_ssl_context* %329, i8* %333, i64* %5), !dbg !26268
  %334 = load i64, i64* %5, align 8, !dbg !26269
  %335 = load i64, i64* %6, align 8, !dbg !26270
  %336 = add i64 %335, %334, !dbg !26270
  store i64 %336, i64* %6, align 8, !dbg !26270
  %337 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26271
  %338 = load i8*, i8** %9, align 8, !dbg !26272
  %339 = getelementptr inbounds i8, i8* %338, i64 2, !dbg !26273
  %340 = load i64, i64* %6, align 8, !dbg !26274
  %341 = getelementptr inbounds i8, i8* %339, i64 %340, !dbg !26275
  call void @ssl_write_max_fragment_length_ext(%struct.mbedtls_ssl_context* %337, i8* %341, i64* %5), !dbg !26276
  %342 = load i64, i64* %5, align 8, !dbg !26277
  %343 = load i64, i64* %6, align 8, !dbg !26278
  %344 = add i64 %343, %342, !dbg !26278
  store i64 %344, i64* %6, align 8, !dbg !26278
  %345 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26279
  %346 = load i8*, i8** %9, align 8, !dbg !26280
  %347 = getelementptr inbounds i8, i8* %346, i64 2, !dbg !26281
  %348 = load i64, i64* %6, align 8, !dbg !26282
  %349 = getelementptr inbounds i8, i8* %347, i64 %348, !dbg !26283
  call void @ssl_write_truncated_hmac_ext(%struct.mbedtls_ssl_context* %345, i8* %349, i64* %5), !dbg !26284
  %350 = load i64, i64* %5, align 8, !dbg !26285
  %351 = load i64, i64* %6, align 8, !dbg !26286
  %352 = add i64 %351, %350, !dbg !26286
  store i64 %352, i64* %6, align 8, !dbg !26286
  %353 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26287
  %354 = load i8*, i8** %9, align 8, !dbg !26288
  %355 = getelementptr inbounds i8, i8* %354, i64 2, !dbg !26289
  %356 = load i64, i64* %6, align 8, !dbg !26290
  %357 = getelementptr inbounds i8, i8* %355, i64 %356, !dbg !26291
  call void @ssl_write_encrypt_then_mac_ext(%struct.mbedtls_ssl_context* %353, i8* %357, i64* %5), !dbg !26292
  %358 = load i64, i64* %5, align 8, !dbg !26293
  %359 = load i64, i64* %6, align 8, !dbg !26294
  %360 = add i64 %359, %358, !dbg !26294
  store i64 %360, i64* %6, align 8, !dbg !26294
  %361 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26295
  %362 = load i8*, i8** %9, align 8, !dbg !26296
  %363 = getelementptr inbounds i8, i8* %362, i64 2, !dbg !26297
  %364 = load i64, i64* %6, align 8, !dbg !26298
  %365 = getelementptr inbounds i8, i8* %363, i64 %364, !dbg !26299
  call void @ssl_write_extended_ms_ext(%struct.mbedtls_ssl_context* %361, i8* %365, i64* %5), !dbg !26300
  %366 = load i64, i64* %5, align 8, !dbg !26301
  %367 = load i64, i64* %6, align 8, !dbg !26302
  %368 = add i64 %367, %366, !dbg !26302
  store i64 %368, i64* %6, align 8, !dbg !26302
  %369 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26303
  %370 = load i8*, i8** %9, align 8, !dbg !26304
  %371 = getelementptr inbounds i8, i8* %370, i64 2, !dbg !26305
  %372 = load i64, i64* %6, align 8, !dbg !26306
  %373 = getelementptr inbounds i8, i8* %371, i64 %372, !dbg !26307
  call void @ssl_write_session_ticket_ext(%struct.mbedtls_ssl_context* %369, i8* %373, i64* %5), !dbg !26308
  %374 = load i64, i64* %5, align 8, !dbg !26309
  %375 = load i64, i64* %6, align 8, !dbg !26310
  %376 = add i64 %375, %374, !dbg !26310
  store i64 %376, i64* %6, align 8, !dbg !26310
  %377 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26311
  %378 = load i8*, i8** %9, align 8, !dbg !26312
  %379 = getelementptr inbounds i8, i8* %378, i64 2, !dbg !26313
  %380 = load i64, i64* %6, align 8, !dbg !26314
  %381 = getelementptr inbounds i8, i8* %379, i64 %380, !dbg !26315
  call void @ssl_write_supported_point_formats_ext(%struct.mbedtls_ssl_context* %377, i8* %381, i64* %5), !dbg !26316
  %382 = load i64, i64* %5, align 8, !dbg !26317
  %383 = load i64, i64* %6, align 8, !dbg !26318
  %384 = add i64 %383, %382, !dbg !26318
  store i64 %384, i64* %6, align 8, !dbg !26318
  %385 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26319
  %386 = load i8*, i8** %9, align 8, !dbg !26320
  %387 = getelementptr inbounds i8, i8* %386, i64 2, !dbg !26321
  %388 = load i64, i64* %6, align 8, !dbg !26322
  %389 = getelementptr inbounds i8, i8* %387, i64 %388, !dbg !26323
  call void @ssl_write_alpn_ext(%struct.mbedtls_ssl_context* %385, i8* %389, i64* %5), !dbg !26324
  %390 = load i64, i64* %5, align 8, !dbg !26325
  %391 = load i64, i64* %6, align 8, !dbg !26326
  %392 = add i64 %391, %390, !dbg !26326
  store i64 %392, i64* %6, align 8, !dbg !26326
  %393 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26327
  %394 = load i64, i64* %6, align 8, !dbg !26327
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %393, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2582, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.100.704, i64 0, i64 0), i64 %394), !dbg !26327
  %395 = load i64, i64* %6, align 8, !dbg !26328
  %396 = icmp ugt i64 %395, 0, !dbg !26330
  br i1 %396, label %397, label %412, !dbg !26331

397:                                              ; preds = %328
  %398 = load i64, i64* %6, align 8, !dbg !26332
  %399 = lshr i64 %398, 8, !dbg !26334
  %400 = and i64 %399, 255, !dbg !26335
  %401 = trunc i64 %400 to i8, !dbg !26336
  %402 = load i8*, i8** %9, align 8, !dbg !26337
  %403 = getelementptr inbounds i8, i8* %402, i32 1, !dbg !26337
  store i8* %403, i8** %9, align 8, !dbg !26337
  store i8 %401, i8* %402, align 1, !dbg !26338
  %404 = load i64, i64* %6, align 8, !dbg !26339
  %405 = and i64 %404, 255, !dbg !26340
  %406 = trunc i64 %405 to i8, !dbg !26341
  %407 = load i8*, i8** %9, align 8, !dbg !26342
  %408 = getelementptr inbounds i8, i8* %407, i32 1, !dbg !26342
  store i8* %408, i8** %9, align 8, !dbg !26342
  store i8 %406, i8* %407, align 1, !dbg !26343
  %409 = load i64, i64* %6, align 8, !dbg !26344
  %410 = load i8*, i8** %9, align 8, !dbg !26345
  %411 = getelementptr inbounds i8, i8* %410, i64 %409, !dbg !26345
  store i8* %411, i8** %9, align 8, !dbg !26345
  br label %412, !dbg !26346

412:                                              ; preds = %397, %328
  br label %413, !dbg !26347

413:                                              ; preds = %412, %323
  %414 = load i8*, i8** %9, align 8, !dbg !26348
  %415 = load i8*, i8** %8, align 8, !dbg !26349
  %416 = ptrtoint i8* %414 to i64, !dbg !26350
  %417 = ptrtoint i8* %415 to i64, !dbg !26350
  %418 = sub i64 %416, %417, !dbg !26350
  %419 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26351
  %420 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %419, i32 0, i32 47, !dbg !26352
  store i64 %418, i64* %420, align 8, !dbg !26353
  %421 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26354
  %422 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %421, i32 0, i32 46, !dbg !26355
  store i32 22, i32* %422, align 8, !dbg !26356
  %423 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26357
  %424 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %423, i32 0, i32 45, !dbg !26358
  %425 = load i8*, i8** %424, align 8, !dbg !26358
  %426 = getelementptr inbounds i8, i8* %425, i64 0, !dbg !26357
  store i8 2, i8* %426, align 1, !dbg !26359
  %427 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26360
  %428 = call i32 @mbedtls_ssl_write_record(%struct.mbedtls_ssl_context* %427), !dbg !26361
  store i32 %428, i32* %4, align 4, !dbg !26362
  %429 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26363
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %429, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2601, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.87.692, i64 0, i64 0)), !dbg !26363
  %430 = load i32, i32* %4, align 4, !dbg !26364
  store i32 %430, i32* %2, align 4, !dbg !26365
  br label %431, !dbg !26365

431:                                              ; preds = %413, %234, %219, %105, %87, %40, %28
  %432 = load i32, i32* %2, align 4, !dbg !26366
  ret i32 %432, !dbg !26366
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_write_server_key_exchange(%struct.mbedtls_ssl_context* %0) #0 !dbg !26367 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.mbedtls_ecp_curve_info**, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca [64 x i8], align 16
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.mbedtls_md5_context, align 4
  %19 = alloca %struct.mbedtls_sha1_context, align 4
  %20 = alloca %struct.mbedtls_md_context_t, align 8
  %21 = alloca %struct.mbedtls_md_info_t*, align 8
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %3, metadata !26368, metadata !DIExpression()), !dbg !26369
  call void @llvm.dbg.declare(metadata i32* %4, metadata !26370, metadata !DIExpression()), !dbg !26371
  call void @llvm.dbg.declare(metadata i64* %5, metadata !26372, metadata !DIExpression()), !dbg !26373
  store i64 0, i64* %5, align 8, !dbg !26373
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %6, metadata !26374, metadata !DIExpression()), !dbg !26375
  %22 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26376
  %23 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %22, i32 0, i32 19, !dbg !26377
  %24 = load %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform** %23, align 8, !dbg !26377
  %25 = getelementptr inbounds %struct.mbedtls_ssl_transform, %struct.mbedtls_ssl_transform* %24, i32 0, i32 0, !dbg !26378
  %26 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %25, align 8, !dbg !26378
  store %struct.mbedtls_ssl_ciphersuite_t* %26, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26375
  call void @llvm.dbg.declare(metadata i8** %7, metadata !26379, metadata !DIExpression()), !dbg !26380
  %27 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26381
  %28 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %27, i32 0, i32 45, !dbg !26382
  %29 = load i8*, i8** %28, align 8, !dbg !26382
  %30 = getelementptr inbounds i8, i8* %29, i64 4, !dbg !26383
  store i8* %30, i8** %7, align 8, !dbg !26380
  call void @llvm.dbg.declare(metadata i64* %8, metadata !26384, metadata !DIExpression()), !dbg !26385
  call void @llvm.dbg.declare(metadata i8** %9, metadata !26386, metadata !DIExpression()), !dbg !26387
  %31 = load i8*, i8** %7, align 8, !dbg !26388
  store i8* %31, i8** %9, align 8, !dbg !26387
  call void @llvm.dbg.declare(metadata i64* %10, metadata !26389, metadata !DIExpression()), !dbg !26390
  store i64 0, i64* %10, align 8, !dbg !26390
  %32 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26391
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %32, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2848, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116.666, i64 0, i64 0)), !dbg !26391
  %33 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26392
  %34 = call i32 @mbedtls_ssl_ciphersuite_uses_ecdh(%struct.mbedtls_ssl_ciphersuite_t* %33), !dbg !26394
  %35 = icmp ne i32 %34, 0, !dbg !26394
  br i1 %35, label %36, label %39, !dbg !26395

36:                                               ; preds = %1
  %37 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26396
  %38 = call i32 @ssl_get_ecdh_params_from_cert(%struct.mbedtls_ssl_context* %37), !dbg !26398
  br label %39, !dbg !26399

39:                                               ; preds = %36, %1
  %40 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26400
  %41 = call i32 @mbedtls_ssl_ciphersuite_no_pfs(%struct.mbedtls_ssl_ciphersuite_t* %40), !dbg !26402
  %42 = icmp ne i32 %41, 0, !dbg !26402
  br i1 %42, label %43, label %49, !dbg !26403

43:                                               ; preds = %39
  %44 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26404
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %44, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2871, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.117.667, i64 0, i64 0)), !dbg !26404
  %45 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26406
  %46 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %45, i32 0, i32 1, !dbg !26407
  %47 = load i32, i32* %46, align 8, !dbg !26408
  %48 = add nsw i32 %47, 1, !dbg !26408
  store i32 %48, i32* %46, align 8, !dbg !26408
  store i32 0, i32* %2, align 4, !dbg !26409
  br label %477, !dbg !26409

49:                                               ; preds = %39
  %50 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26410
  %51 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %50, i32 0, i32 4, !dbg !26412
  %52 = load i32, i32* %51, align 8, !dbg !26412
  %53 = icmp eq i32 %52, 6, !dbg !26413
  br i1 %53, label %59, label %54, !dbg !26414

54:                                               ; preds = %49
  %55 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26415
  %56 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %55, i32 0, i32 4, !dbg !26416
  %57 = load i32, i32* %56, align 8, !dbg !26416
  %58 = icmp eq i32 %57, 8, !dbg !26417
  br i1 %58, label %59, label %66, !dbg !26418

59:                                               ; preds = %54, %49
  %60 = load i8*, i8** %7, align 8, !dbg !26419
  %61 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !26419
  store i8* %61, i8** %7, align 8, !dbg !26419
  store i8 0, i8* %60, align 1, !dbg !26421
  %62 = load i8*, i8** %7, align 8, !dbg !26422
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !26422
  store i8* %63, i8** %7, align 8, !dbg !26422
  store i8 0, i8* %62, align 1, !dbg !26423
  %64 = load i64, i64* %5, align 8, !dbg !26424
  %65 = add i64 %64, 2, !dbg !26424
  store i64 %65, i64* %5, align 8, !dbg !26424
  br label %66, !dbg !26425

66:                                               ; preds = %59, %54
  %67 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26426
  %68 = call i32 @mbedtls_ssl_ciphersuite_uses_dhe(%struct.mbedtls_ssl_ciphersuite_t* %67), !dbg !26428
  %69 = icmp ne i32 %68, 0, !dbg !26428
  br i1 %69, label %70, label %178, !dbg !26429

70:                                               ; preds = %66
  %71 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26430
  %72 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %71, i32 0, i32 0, !dbg !26433
  %73 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %72, align 8, !dbg !26433
  %74 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %73, i32 0, i32 28, !dbg !26434
  %75 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %74, i32 0, i32 2, !dbg !26435
  %76 = load i64*, i64** %75, align 8, !dbg !26435
  %77 = icmp eq i64* %76, null, !dbg !26436
  br i1 %77, label %86, label %78, !dbg !26437

78:                                               ; preds = %70
  %79 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26438
  %80 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %79, i32 0, i32 0, !dbg !26439
  %81 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %80, align 8, !dbg !26439
  %82 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %81, i32 0, i32 29, !dbg !26440
  %83 = getelementptr inbounds %struct.mbedtls_mpi, %struct.mbedtls_mpi* %82, i32 0, i32 2, !dbg !26441
  %84 = load i64*, i64** %83, align 8, !dbg !26441
  %85 = icmp eq i64* %84, null, !dbg !26442
  br i1 %85, label %86, label %88, !dbg !26443

86:                                               ; preds = %78, %70
  %87 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26444
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %87, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2930, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.118.668, i64 0, i64 0)), !dbg !26444
  store i32 -28928, i32* %2, align 4, !dbg !26446
  br label %477, !dbg !26446

88:                                               ; preds = %78
  %89 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26447
  %90 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %89, i32 0, i32 15, !dbg !26449
  %91 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %90, align 8, !dbg !26449
  %92 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %91, i32 0, i32 1, !dbg !26450
  %93 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %92, i32 0, i32 1, !dbg !26451
  %94 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26452
  %95 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %94, i32 0, i32 0, !dbg !26453
  %96 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %95, align 8, !dbg !26453
  %97 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %96, i32 0, i32 28, !dbg !26454
  %98 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %93, %struct.mbedtls_mpi* %97), !dbg !26455
  store i32 %98, i32* %4, align 4, !dbg !26456
  %99 = icmp ne i32 %98, 0, !dbg !26457
  br i1 %99, label %112, label %100, !dbg !26458

100:                                              ; preds = %88
  %101 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26459
  %102 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %101, i32 0, i32 15, !dbg !26460
  %103 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %102, align 8, !dbg !26460
  %104 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %103, i32 0, i32 1, !dbg !26461
  %105 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %104, i32 0, i32 2, !dbg !26462
  %106 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26463
  %107 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %106, i32 0, i32 0, !dbg !26464
  %108 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %107, align 8, !dbg !26464
  %109 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %108, i32 0, i32 29, !dbg !26465
  %110 = call i32 @mbedtls_mpi_copy(%struct.mbedtls_mpi* %105, %struct.mbedtls_mpi* %109), !dbg !26466
  store i32 %110, i32* %4, align 4, !dbg !26467
  %111 = icmp ne i32 %110, 0, !dbg !26468
  br i1 %111, label %112, label %116, !dbg !26469

112:                                              ; preds = %100, %88
  %113 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26470
  %114 = load i32, i32* %4, align 4, !dbg !26470
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %113, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2946, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.119.669, i64 0, i64 0), i32 %114), !dbg !26470
  %115 = load i32, i32* %4, align 4, !dbg !26472
  store i32 %115, i32* %2, align 4, !dbg !26473
  br label %477, !dbg !26473

116:                                              ; preds = %100
  %117 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26474
  %118 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %117, i32 0, i32 15, !dbg !26476
  %119 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %118, align 8, !dbg !26476
  %120 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %119, i32 0, i32 1, !dbg !26477
  %121 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26478
  %122 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %121, i32 0, i32 15, !dbg !26479
  %123 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %122, align 8, !dbg !26479
  %124 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %123, i32 0, i32 1, !dbg !26480
  %125 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %124, i32 0, i32 1, !dbg !26481
  %126 = call i64 @mbedtls_mpi_size(%struct.mbedtls_mpi* %125), !dbg !26482
  %127 = trunc i64 %126 to i32, !dbg !26483
  %128 = load i8*, i8** %7, align 8, !dbg !26484
  %129 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26485
  %130 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %129, i32 0, i32 0, !dbg !26486
  %131 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %130, align 8, !dbg !26486
  %132 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %131, i32 0, i32 3, !dbg !26487
  %133 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %132, align 8, !dbg !26487
  %134 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26488
  %135 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %134, i32 0, i32 0, !dbg !26489
  %136 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %135, align 8, !dbg !26489
  %137 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %136, i32 0, i32 4, !dbg !26490
  %138 = load i8*, i8** %137, align 8, !dbg !26490
  %139 = call i32 @mbedtls_dhm_make_params(%struct.mbedtls_dhm_context* %120, i32 %127, i8* %128, i64* %8, i32 (i8*, i8*, i64)* %133, i8* %138), !dbg !26491
  store i32 %139, i32* %4, align 4, !dbg !26492
  %140 = icmp ne i32 %139, 0, !dbg !26493
  br i1 %140, label %141, label %145, !dbg !26494

141:                                              ; preds = %116
  %142 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26495
  %143 = load i32, i32* %4, align 4, !dbg !26495
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %142, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120.670, i64 0, i64 0), i32 %143), !dbg !26495
  %144 = load i32, i32* %4, align 4, !dbg !26497
  store i32 %144, i32* %2, align 4, !dbg !26498
  br label %477, !dbg !26498

145:                                              ; preds = %116
  %146 = load i8*, i8** %7, align 8, !dbg !26499
  store i8* %146, i8** %9, align 8, !dbg !26500
  %147 = load i64, i64* %8, align 8, !dbg !26501
  store i64 %147, i64* %10, align 8, !dbg !26502
  %148 = load i64, i64* %8, align 8, !dbg !26503
  %149 = load i8*, i8** %7, align 8, !dbg !26504
  %150 = getelementptr inbounds i8, i8* %149, i64 %148, !dbg !26504
  store i8* %150, i8** %7, align 8, !dbg !26504
  %151 = load i64, i64* %8, align 8, !dbg !26505
  %152 = load i64, i64* %5, align 8, !dbg !26506
  %153 = add i64 %152, %151, !dbg !26506
  store i64 %153, i64* %5, align 8, !dbg !26506
  %154 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26507
  %155 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26507
  %156 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %155, i32 0, i32 15, !dbg !26507
  %157 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %156, align 8, !dbg !26507
  %158 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %157, i32 0, i32 1, !dbg !26507
  %159 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %158, i32 0, i32 3, !dbg !26507
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %154, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2966, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.121.671, i64 0, i64 0), %struct.mbedtls_mpi* %159), !dbg !26507
  %160 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26508
  %161 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26508
  %162 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %161, i32 0, i32 15, !dbg !26508
  %163 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %162, align 8, !dbg !26508
  %164 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %163, i32 0, i32 1, !dbg !26508
  %165 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %164, i32 0, i32 1, !dbg !26508
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %160, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2967, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122.672, i64 0, i64 0), %struct.mbedtls_mpi* %165), !dbg !26508
  %166 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26509
  %167 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26509
  %168 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %167, i32 0, i32 15, !dbg !26509
  %169 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %168, align 8, !dbg !26509
  %170 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %169, i32 0, i32 1, !dbg !26509
  %171 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %170, i32 0, i32 2, !dbg !26509
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %166, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2968, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123.673, i64 0, i64 0), %struct.mbedtls_mpi* %171), !dbg !26509
  %172 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26510
  %173 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26510
  %174 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %173, i32 0, i32 15, !dbg !26510
  %175 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %174, align 8, !dbg !26510
  %176 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %175, i32 0, i32 1, !dbg !26510
  %177 = getelementptr inbounds %struct.mbedtls_dhm_context, %struct.mbedtls_dhm_context* %176, i32 0, i32 4, !dbg !26510
  call void @mbedtls_debug_print_mpi(%struct.mbedtls_ssl_context* %172, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2969, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124.674, i64 0, i64 0), %struct.mbedtls_mpi* %177), !dbg !26510
  br label %178, !dbg !26511

178:                                              ; preds = %145, %66
  %179 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26512
  %180 = call i32 @mbedtls_ssl_ciphersuite_uses_ecdhe(%struct.mbedtls_ssl_ciphersuite_t* %179), !dbg !26514
  %181 = icmp ne i32 %180, 0, !dbg !26514
  br i1 %181, label %182, label %289, !dbg !26515

182:                                              ; preds = %178
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ecp_curve_info*** %11, metadata !26516, metadata !DIExpression()), !dbg !26518
  store %struct.mbedtls_ecp_curve_info** null, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26518
  call void @llvm.dbg.declare(metadata i32** %12, metadata !26519, metadata !DIExpression()), !dbg !26520
  %183 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26521
  %184 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %183, i32 0, i32 0, !dbg !26523
  %185 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %184, align 8, !dbg !26523
  %186 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %185, i32 0, i32 27, !dbg !26524
  %187 = load i32*, i32** %186, align 8, !dbg !26524
  store i32* %187, i32** %12, align 8, !dbg !26525
  br label %188, !dbg !26526

188:                                              ; preds = %216, %182
  %189 = load i32*, i32** %12, align 8, !dbg !26527
  %190 = load i32, i32* %189, align 4, !dbg !26529
  %191 = icmp ne i32 %190, 0, !dbg !26530
  br i1 %191, label %192, label %219, !dbg !26531

192:                                              ; preds = %188
  %193 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26532
  %194 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %193, i32 0, i32 15, !dbg !26534
  %195 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %194, align 8, !dbg !26534
  %196 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %195, i32 0, i32 3, !dbg !26535
  %197 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %196, align 8, !dbg !26535
  store %struct.mbedtls_ecp_curve_info** %197, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26536
  br label %198, !dbg !26537

198:                                              ; preds = %212, %192
  %199 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26538
  %200 = load %struct.mbedtls_ecp_curve_info*, %struct.mbedtls_ecp_curve_info** %199, align 8, !dbg !26540
  %201 = icmp ne %struct.mbedtls_ecp_curve_info* %200, null, !dbg !26541
  br i1 %201, label %202, label %215, !dbg !26542

202:                                              ; preds = %198
  %203 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26543
  %204 = load %struct.mbedtls_ecp_curve_info*, %struct.mbedtls_ecp_curve_info** %203, align 8, !dbg !26545
  %205 = getelementptr inbounds %struct.mbedtls_ecp_curve_info, %struct.mbedtls_ecp_curve_info* %204, i32 0, i32 0, !dbg !26546
  %206 = load i32, i32* %205, align 8, !dbg !26546
  %207 = load i32*, i32** %12, align 8, !dbg !26547
  %208 = load i32, i32* %207, align 4, !dbg !26548
  %209 = icmp eq i32 %206, %208, !dbg !26549
  br i1 %209, label %210, label %211, !dbg !26550

210:                                              ; preds = %202
  br label %220, !dbg !26551

211:                                              ; preds = %202
  br label %212, !dbg !26547

212:                                              ; preds = %211
  %213 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26552
  %214 = getelementptr inbounds %struct.mbedtls_ecp_curve_info*, %struct.mbedtls_ecp_curve_info** %213, i32 1, !dbg !26552
  store %struct.mbedtls_ecp_curve_info** %214, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26552
  br label %198, !dbg !26553, !llvm.loop !26554

215:                                              ; preds = %198
  br label %216, !dbg !26555

216:                                              ; preds = %215
  %217 = load i32*, i32** %12, align 8, !dbg !26556
  %218 = getelementptr inbounds i32, i32* %217, i32 1, !dbg !26556
  store i32* %218, i32** %12, align 8, !dbg !26556
  br label %188, !dbg !26557, !llvm.loop !26558

219:                                              ; preds = %188
  br label %220, !dbg !26559

220:                                              ; preds = %219, %210
  call void @llvm.dbg.label(metadata !26560), !dbg !26561
  %221 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26562
  %222 = icmp eq %struct.mbedtls_ecp_curve_info** %221, null, !dbg !26564
  br i1 %222, label %227, label %223, !dbg !26565

223:                                              ; preds = %220
  %224 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26566
  %225 = load %struct.mbedtls_ecp_curve_info*, %struct.mbedtls_ecp_curve_info** %224, align 8, !dbg !26567
  %226 = icmp eq %struct.mbedtls_ecp_curve_info* %225, null, !dbg !26568
  br i1 %226, label %227, label %229, !dbg !26569

227:                                              ; preds = %223, %220
  %228 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26570
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %228, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2999, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.125.675, i64 0, i64 0)), !dbg !26570
  store i32 -29568, i32* %2, align 4, !dbg !26572
  br label %477, !dbg !26572

229:                                              ; preds = %223
  %230 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26573
  %231 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26573
  %232 = load %struct.mbedtls_ecp_curve_info*, %struct.mbedtls_ecp_curve_info** %231, align 8, !dbg !26573
  %233 = getelementptr inbounds %struct.mbedtls_ecp_curve_info, %struct.mbedtls_ecp_curve_info* %232, i32 0, i32 3, !dbg !26573
  %234 = load i8*, i8** %233, align 8, !dbg !26573
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %230, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3003, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.126.676, i64 0, i64 0), i8* %234), !dbg !26573
  %235 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26574
  %236 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %235, i32 0, i32 15, !dbg !26576
  %237 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %236, align 8, !dbg !26576
  %238 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %237, i32 0, i32 2, !dbg !26577
  %239 = getelementptr inbounds %struct.mbedtls_ecdh_context, %struct.mbedtls_ecdh_context* %238, i32 0, i32 0, !dbg !26578
  %240 = load %struct.mbedtls_ecp_curve_info**, %struct.mbedtls_ecp_curve_info*** %11, align 8, !dbg !26579
  %241 = load %struct.mbedtls_ecp_curve_info*, %struct.mbedtls_ecp_curve_info** %240, align 8, !dbg !26580
  %242 = getelementptr inbounds %struct.mbedtls_ecp_curve_info, %struct.mbedtls_ecp_curve_info* %241, i32 0, i32 0, !dbg !26581
  %243 = load i32, i32* %242, align 8, !dbg !26581
  %244 = call i32 @mbedtls_ecp_group_load(%struct.mbedtls_ecp_group* %239, i32 %243), !dbg !26582
  store i32 %244, i32* %4, align 4, !dbg !26583
  %245 = icmp ne i32 %244, 0, !dbg !26584
  br i1 %245, label %246, label %250, !dbg !26585

246:                                              ; preds = %229
  %247 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26586
  %248 = load i32, i32* %4, align 4, !dbg !26586
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %247, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3008, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.127.677, i64 0, i64 0), i32 %248), !dbg !26586
  %249 = load i32, i32* %4, align 4, !dbg !26588
  store i32 %249, i32* %2, align 4, !dbg !26589
  br label %477, !dbg !26589

250:                                              ; preds = %229
  %251 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26590
  %252 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %251, i32 0, i32 15, !dbg !26592
  %253 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %252, align 8, !dbg !26592
  %254 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %253, i32 0, i32 2, !dbg !26593
  %255 = load i8*, i8** %7, align 8, !dbg !26594
  %256 = load i64, i64* %5, align 8, !dbg !26595
  %257 = sub i64 16384, %256, !dbg !26596
  %258 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26597
  %259 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %258, i32 0, i32 0, !dbg !26598
  %260 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %259, align 8, !dbg !26598
  %261 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %260, i32 0, i32 3, !dbg !26599
  %262 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %261, align 8, !dbg !26599
  %263 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26600
  %264 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %263, i32 0, i32 0, !dbg !26601
  %265 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %264, align 8, !dbg !26601
  %266 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %265, i32 0, i32 4, !dbg !26602
  %267 = load i8*, i8** %266, align 8, !dbg !26602
  %268 = call i32 @mbedtls_ecdh_make_params(%struct.mbedtls_ecdh_context* %254, i64* %8, i8* %255, i64 %257, i32 (i8*, i8*, i64)* %262, i8* %267), !dbg !26603
  store i32 %268, i32* %4, align 4, !dbg !26604
  %269 = icmp ne i32 %268, 0, !dbg !26605
  br i1 %269, label %270, label %274, !dbg !26606

270:                                              ; preds = %250
  %271 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26607
  %272 = load i32, i32* %4, align 4, !dbg !26607
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %271, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3016, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.128.678, i64 0, i64 0), i32 %272), !dbg !26607
  %273 = load i32, i32* %4, align 4, !dbg !26609
  store i32 %273, i32* %2, align 4, !dbg !26610
  br label %477, !dbg !26610

274:                                              ; preds = %250
  %275 = load i8*, i8** %7, align 8, !dbg !26611
  store i8* %275, i8** %9, align 8, !dbg !26612
  %276 = load i64, i64* %8, align 8, !dbg !26613
  store i64 %276, i64* %10, align 8, !dbg !26614
  %277 = load i64, i64* %8, align 8, !dbg !26615
  %278 = load i8*, i8** %7, align 8, !dbg !26616
  %279 = getelementptr inbounds i8, i8* %278, i64 %277, !dbg !26616
  store i8* %279, i8** %7, align 8, !dbg !26616
  %280 = load i64, i64* %8, align 8, !dbg !26617
  %281 = load i64, i64* %5, align 8, !dbg !26618
  %282 = add i64 %281, %280, !dbg !26618
  store i64 %282, i64* %5, align 8, !dbg !26618
  %283 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26619
  %284 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26619
  %285 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %284, i32 0, i32 15, !dbg !26619
  %286 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %285, align 8, !dbg !26619
  %287 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %286, i32 0, i32 2, !dbg !26619
  %288 = getelementptr inbounds %struct.mbedtls_ecdh_context, %struct.mbedtls_ecdh_context* %287, i32 0, i32 2, !dbg !26619
  call void @mbedtls_debug_print_ecp(%struct.mbedtls_ssl_context* %283, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3028, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129.679, i64 0, i64 0), %struct.mbedtls_ecp_point* %288), !dbg !26619
  br label %289, !dbg !26620

289:                                              ; preds = %274, %178
  %290 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26621
  %291 = call i32 @mbedtls_ssl_ciphersuite_uses_server_signature(%struct.mbedtls_ssl_ciphersuite_t* %290), !dbg !26623
  %292 = icmp ne i32 %291, 0, !dbg !26623
  br i1 %292, label %293, label %453, !dbg !26624

293:                                              ; preds = %289
  call void @llvm.dbg.declare(metadata i64* %13, metadata !26625, metadata !DIExpression()), !dbg !26627
  store i64 0, i64* %13, align 8, !dbg !26627
  call void @llvm.dbg.declare(metadata i32* %14, metadata !26628, metadata !DIExpression()), !dbg !26629
  store i32 0, i32* %14, align 4, !dbg !26629
  call void @llvm.dbg.declare(metadata [64 x i8]* %15, metadata !26630, metadata !DIExpression()), !dbg !26631
  call void @llvm.dbg.declare(metadata i32* %16, metadata !26632, metadata !DIExpression()), !dbg !26633
  call void @llvm.dbg.declare(metadata i32* %17, metadata !26634, metadata !DIExpression()), !dbg !26635
  %294 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26636
  %295 = call i32 @mbedtls_ssl_get_ciphersuite_sig_pk_alg(%struct.mbedtls_ssl_ciphersuite_t* %294), !dbg !26637
  store i32 %295, i32* %17, align 4, !dbg !26635
  %296 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26638
  %297 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %296, i32 0, i32 5, !dbg !26640
  %298 = load i32, i32* %297, align 8, !dbg !26640
  %299 = icmp eq i32 %298, 3, !dbg !26641
  br i1 %299, label %300, label %314, !dbg !26642

300:                                              ; preds = %293
  %301 = load i32, i32* %17, align 4, !dbg !26643
  %302 = icmp eq i32 %301, 0, !dbg !26646
  br i1 %302, label %311, label %303, !dbg !26647

303:                                              ; preds = %300
  %304 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26648
  %305 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %304, i32 0, i32 15, !dbg !26649
  %306 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %305, align 8, !dbg !26649
  %307 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %306, i32 0, i32 0, !dbg !26650
  %308 = load i32, i32* %17, align 4, !dbg !26651
  %309 = call i32 @mbedtls_ssl_sig_hash_set_find(%struct.mbedtls_pk_rsassa_pss_options* %307, i32 %308), !dbg !26652
  store i32 %309, i32* %16, align 4, !dbg !26653
  %310 = icmp eq i32 %309, 0, !dbg !26654
  br i1 %310, label %311, label %313, !dbg !26655

311:                                              ; preds = %303, %300
  %312 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26656
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %312, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3067, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69.632, i64 0, i64 0)), !dbg !26656
  store i32 -27648, i32* %2, align 4, !dbg !26658
  br label %477, !dbg !26658

313:                                              ; preds = %303
  br label %322, !dbg !26659

314:                                              ; preds = %293
  %315 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %6, align 8, !dbg !26660
  %316 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %315, i32 0, i32 4, !dbg !26662
  %317 = load i32, i32* %316, align 8, !dbg !26662
  %318 = icmp eq i32 %317, 4, !dbg !26663
  br i1 %318, label %319, label %320, !dbg !26664

319:                                              ; preds = %314
  store i32 4, i32* %16, align 4, !dbg !26665
  br label %321, !dbg !26667

320:                                              ; preds = %314
  store i32 0, i32* %16, align 4, !dbg !26668
  br label %321

321:                                              ; preds = %320, %319
  br label %322

322:                                              ; preds = %321, %313
  %323 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26670
  %324 = load i32, i32* %16, align 4, !dbg !26670
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %323, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3090, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.130.680, i64 0, i64 0), i32 %324), !dbg !26670
  %325 = load i32, i32* %16, align 4, !dbg !26671
  %326 = icmp eq i32 %325, 0, !dbg !26673
  br i1 %326, label %327, label %345, !dbg !26674

327:                                              ; preds = %322
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md5_context* %18, metadata !26675, metadata !DIExpression()), !dbg !26677
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha1_context* %19, metadata !26678, metadata !DIExpression()), !dbg !26679
  call void @mbedtls_md5_init(%struct.mbedtls_md5_context* %18), !dbg !26680
  call void @mbedtls_sha1_init(%struct.mbedtls_sha1_context* %19), !dbg !26681
  call void @mbedtls_md5_starts(%struct.mbedtls_md5_context* %18), !dbg !26682
  %328 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26683
  %329 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %328, i32 0, i32 15, !dbg !26684
  %330 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %329, align 8, !dbg !26684
  %331 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %330, i32 0, i32 32, !dbg !26685
  %332 = getelementptr inbounds [64 x i8], [64 x i8]* %331, i64 0, i64 0, !dbg !26683
  call void @mbedtls_md5_update(%struct.mbedtls_md5_context* %18, i8* %332, i64 64), !dbg !26686
  %333 = load i8*, i8** %9, align 8, !dbg !26687
  %334 = load i64, i64* %10, align 8, !dbg !26688
  call void @mbedtls_md5_update(%struct.mbedtls_md5_context* %18, i8* %333, i64 %334), !dbg !26689
  %335 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 0, !dbg !26690
  call void @mbedtls_md5_finish(%struct.mbedtls_md5_context* %18, i8* %335), !dbg !26691
  call void @mbedtls_sha1_starts(%struct.mbedtls_sha1_context* %19), !dbg !26692
  %336 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26693
  %337 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %336, i32 0, i32 15, !dbg !26694
  %338 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %337, align 8, !dbg !26694
  %339 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %338, i32 0, i32 32, !dbg !26695
  %340 = getelementptr inbounds [64 x i8], [64 x i8]* %339, i64 0, i64 0, !dbg !26693
  call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* %19, i8* %340, i64 64), !dbg !26696
  %341 = load i8*, i8** %9, align 8, !dbg !26697
  %342 = load i64, i64* %10, align 8, !dbg !26698
  call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* %19, i8* %341, i64 %342), !dbg !26699
  %343 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 0, !dbg !26700
  %344 = getelementptr inbounds i8, i8* %343, i64 16, !dbg !26701
  call void @mbedtls_sha1_finish(%struct.mbedtls_sha1_context* %19, i8* %344), !dbg !26702
  store i32 36, i32* %14, align 4, !dbg !26703
  call void @mbedtls_md5_free(%struct.mbedtls_md5_context* %18), !dbg !26704
  call void @mbedtls_sha1_free(%struct.mbedtls_sha1_context* %19), !dbg !26705
  br label %374, !dbg !26706

345:                                              ; preds = %322
  %346 = load i32, i32* %16, align 4, !dbg !26707
  %347 = icmp ne i32 %346, 0, !dbg !26709
  br i1 %347, label %348, label %371, !dbg !26710

348:                                              ; preds = %345
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_context_t* %20, metadata !26711, metadata !DIExpression()), !dbg !26713
  call void @llvm.dbg.declare(metadata %struct.mbedtls_md_info_t** %21, metadata !26714, metadata !DIExpression()), !dbg !26715
  %349 = load i32, i32* %16, align 4, !dbg !26716
  %350 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %349), !dbg !26717
  store %struct.mbedtls_md_info_t* %350, %struct.mbedtls_md_info_t** %21, align 8, !dbg !26715
  call void @mbedtls_md_init(%struct.mbedtls_md_context_t* %20), !dbg !26718
  store i32 0, i32* %14, align 4, !dbg !26719
  %351 = load %struct.mbedtls_md_info_t*, %struct.mbedtls_md_info_t** %21, align 8, !dbg !26720
  %352 = call i32 @mbedtls_md_setup(%struct.mbedtls_md_context_t* %20, %struct.mbedtls_md_info_t* %351, i32 0), !dbg !26722
  store i32 %352, i32* %4, align 4, !dbg !26723
  %353 = icmp ne i32 %352, 0, !dbg !26724
  br i1 %353, label %354, label %358, !dbg !26725

354:                                              ; preds = %348
  %355 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26726
  %356 = load i32, i32* %4, align 4, !dbg !26726
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %355, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3158, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.131.681, i64 0, i64 0), i32 %356), !dbg !26726
  %357 = load i32, i32* %4, align 4, !dbg !26728
  store i32 %357, i32* %2, align 4, !dbg !26729
  br label %477, !dbg !26729

358:                                              ; preds = %348
  %359 = call i32 @mbedtls_md_starts(%struct.mbedtls_md_context_t* %20), !dbg !26730
  %360 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26731
  %361 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %360, i32 0, i32 15, !dbg !26732
  %362 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %361, align 8, !dbg !26732
  %363 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %362, i32 0, i32 32, !dbg !26733
  %364 = getelementptr inbounds [64 x i8], [64 x i8]* %363, i64 0, i64 0, !dbg !26731
  %365 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %20, i8* %364, i64 64), !dbg !26734
  %366 = load i8*, i8** %9, align 8, !dbg !26735
  %367 = load i64, i64* %10, align 8, !dbg !26736
  %368 = call i32 @mbedtls_md_update(%struct.mbedtls_md_context_t* %20, i8* %366, i64 %367), !dbg !26737
  %369 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 0, !dbg !26738
  %370 = call i32 @mbedtls_md_finish(%struct.mbedtls_md_context_t* %20, i8* %369), !dbg !26739
  call void @mbedtls_md_free(%struct.mbedtls_md_context_t* %20), !dbg !26740
  br label %373, !dbg !26741

371:                                              ; preds = %345
  %372 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26742
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %372, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3172, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69.632, i64 0, i64 0)), !dbg !26742
  store i32 -27648, i32* %2, align 4, !dbg !26744
  br label %477, !dbg !26744

373:                                              ; preds = %358
  br label %374

374:                                              ; preds = %373, %327
  %375 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26745
  %376 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 0, !dbg !26745
  %377 = load i32, i32* %14, align 4, !dbg !26745
  %378 = icmp ne i32 %377, 0, !dbg !26745
  br i1 %378, label %379, label %381, !dbg !26745

379:                                              ; preds = %374
  %380 = load i32, i32* %14, align 4, !dbg !26745
  br label %386, !dbg !26745

381:                                              ; preds = %374
  %382 = load i32, i32* %16, align 4, !dbg !26745
  %383 = call %struct.mbedtls_md_info_t* @mbedtls_md_info_from_type(i32 %382), !dbg !26745
  %384 = call zeroext i8 @mbedtls_md_get_size(%struct.mbedtls_md_info_t* %383), !dbg !26745
  %385 = zext i8 %384 to i32, !dbg !26745
  br label %386, !dbg !26745

386:                                              ; preds = %381, %379
  %387 = phi i32 [ %380, %379 ], [ %385, %381 ], !dbg !26745
  %388 = zext i32 %387 to i64, !dbg !26745
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %375, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3177, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132.682, i64 0, i64 0), i8* %376, i64 %388), !dbg !26745
  %389 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26746
  %390 = call %struct.mbedtls_pk_context* @mbedtls_ssl_own_key(%struct.mbedtls_ssl_context* %389), !dbg !26748
  %391 = icmp eq %struct.mbedtls_pk_context* %390, null, !dbg !26749
  br i1 %391, label %392, label %394, !dbg !26750

392:                                              ; preds = %386
  %393 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26751
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %393, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3184, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.133.683, i64 0, i64 0)), !dbg !26751
  store i32 -30208, i32* %2, align 4, !dbg !26753
  br label %477, !dbg !26753

394:                                              ; preds = %386
  %395 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26754
  %396 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %395, i32 0, i32 5, !dbg !26756
  %397 = load i32, i32* %396, align 8, !dbg !26756
  %398 = icmp eq i32 %397, 3, !dbg !26757
  br i1 %398, label %399, label %410, !dbg !26758

399:                                              ; preds = %394
  %400 = load i32, i32* %16, align 4, !dbg !26759
  %401 = call zeroext i8 @mbedtls_ssl_hash_from_md_alg(i32 %400), !dbg !26761
  %402 = load i8*, i8** %7, align 8, !dbg !26762
  %403 = getelementptr inbounds i8, i8* %402, i32 1, !dbg !26762
  store i8* %403, i8** %7, align 8, !dbg !26762
  store i8 %401, i8* %402, align 1, !dbg !26763
  %404 = load i32, i32* %17, align 4, !dbg !26764
  %405 = call zeroext i8 @mbedtls_ssl_sig_from_pk_alg(i32 %404), !dbg !26765
  %406 = load i8*, i8** %7, align 8, !dbg !26766
  %407 = getelementptr inbounds i8, i8* %406, i32 1, !dbg !26766
  store i8* %407, i8** %7, align 8, !dbg !26766
  store i8 %405, i8* %406, align 1, !dbg !26767
  %408 = load i64, i64* %5, align 8, !dbg !26768
  %409 = add i64 %408, 2, !dbg !26768
  store i64 %409, i64* %5, align 8, !dbg !26768
  br label %410, !dbg !26769

410:                                              ; preds = %399, %394
  %411 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26770
  %412 = call %struct.mbedtls_pk_context* @mbedtls_ssl_own_key(%struct.mbedtls_ssl_context* %411), !dbg !26772
  %413 = load i32, i32* %16, align 4, !dbg !26773
  %414 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 0, !dbg !26774
  %415 = load i32, i32* %14, align 4, !dbg !26775
  %416 = zext i32 %415 to i64, !dbg !26775
  %417 = load i8*, i8** %7, align 8, !dbg !26776
  %418 = getelementptr inbounds i8, i8* %417, i64 2, !dbg !26777
  %419 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26778
  %420 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %419, i32 0, i32 0, !dbg !26779
  %421 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %420, align 8, !dbg !26779
  %422 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %421, i32 0, i32 3, !dbg !26780
  %423 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %422, align 8, !dbg !26780
  %424 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26781
  %425 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %424, i32 0, i32 0, !dbg !26782
  %426 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %425, align 8, !dbg !26782
  %427 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %426, i32 0, i32 4, !dbg !26783
  %428 = load i8*, i8** %427, align 8, !dbg !26783
  %429 = call i32 @mbedtls_pk_sign(%struct.mbedtls_pk_context* %412, i32 %413, i8* %414, i64 %416, i8* %418, i64* %13, i32 (i8*, i8*, i64)* %423, i8* %428), !dbg !26784
  store i32 %429, i32* %4, align 4, !dbg !26785
  %430 = icmp ne i32 %429, 0, !dbg !26786
  br i1 %430, label %431, label %435, !dbg !26787

431:                                              ; preds = %410
  %432 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26788
  %433 = load i32, i32* %4, align 4, !dbg !26788
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %432, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3217, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134.684, i64 0, i64 0), i32 %433), !dbg !26788
  %434 = load i32, i32* %4, align 4, !dbg !26790
  store i32 %434, i32* %2, align 4, !dbg !26791
  br label %477, !dbg !26791

435:                                              ; preds = %410
  %436 = load i64, i64* %13, align 8, !dbg !26792
  %437 = lshr i64 %436, 8, !dbg !26793
  %438 = trunc i64 %437 to i8, !dbg !26794
  %439 = load i8*, i8** %7, align 8, !dbg !26795
  %440 = getelementptr inbounds i8, i8* %439, i32 1, !dbg !26795
  store i8* %440, i8** %7, align 8, !dbg !26795
  store i8 %438, i8* %439, align 1, !dbg !26796
  %441 = load i64, i64* %13, align 8, !dbg !26797
  %442 = trunc i64 %441 to i8, !dbg !26798
  %443 = load i8*, i8** %7, align 8, !dbg !26799
  %444 = getelementptr inbounds i8, i8* %443, i32 1, !dbg !26799
  store i8* %444, i8** %7, align 8, !dbg !26799
  store i8 %442, i8* %443, align 1, !dbg !26800
  %445 = load i64, i64* %5, align 8, !dbg !26801
  %446 = add i64 %445, 2, !dbg !26801
  store i64 %446, i64* %5, align 8, !dbg !26801
  %447 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26802
  %448 = load i8*, i8** %7, align 8, !dbg !26802
  %449 = load i64, i64* %13, align 8, !dbg !26802
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %447, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3225, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135.685, i64 0, i64 0), i8* %448, i64 %449), !dbg !26802
  %450 = load i64, i64* %13, align 8, !dbg !26803
  %451 = load i64, i64* %5, align 8, !dbg !26804
  %452 = add i64 %451, %450, !dbg !26804
  store i64 %452, i64* %5, align 8, !dbg !26804
  br label %453, !dbg !26805

453:                                              ; preds = %435, %289
  %454 = load i64, i64* %5, align 8, !dbg !26806
  %455 = add i64 4, %454, !dbg !26807
  %456 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26808
  %457 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %456, i32 0, i32 47, !dbg !26809
  store i64 %455, i64* %457, align 8, !dbg !26810
  %458 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26811
  %459 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %458, i32 0, i32 46, !dbg !26812
  store i32 22, i32* %459, align 8, !dbg !26813
  %460 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26814
  %461 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %460, i32 0, i32 45, !dbg !26815
  %462 = load i8*, i8** %461, align 8, !dbg !26815
  %463 = getelementptr inbounds i8, i8* %462, i64 0, !dbg !26814
  store i8 12, i8* %463, align 1, !dbg !26816
  %464 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26817
  %465 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %464, i32 0, i32 1, !dbg !26818
  %466 = load i32, i32* %465, align 8, !dbg !26819
  %467 = add nsw i32 %466, 1, !dbg !26819
  store i32 %467, i32* %465, align 8, !dbg !26819
  %468 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26820
  %469 = call i32 @mbedtls_ssl_write_record(%struct.mbedtls_ssl_context* %468), !dbg !26822
  store i32 %469, i32* %4, align 4, !dbg !26823
  %470 = icmp ne i32 %469, 0, !dbg !26824
  br i1 %470, label %471, label %475, !dbg !26825

471:                                              ; preds = %453
  %472 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26826
  %473 = load i32, i32* %4, align 4, !dbg !26826
  call void @mbedtls_debug_print_ret(%struct.mbedtls_ssl_context* %472, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3241, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106.623, i64 0, i64 0), i32 %473), !dbg !26826
  %474 = load i32, i32* %4, align 4, !dbg !26828
  store i32 %474, i32* %2, align 4, !dbg !26829
  br label %477, !dbg !26829

475:                                              ; preds = %453
  %476 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26830
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %476, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3245, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136.686, i64 0, i64 0)), !dbg !26830
  store i32 0, i32* %2, align 4, !dbg !26831
  br label %477, !dbg !26831

477:                                              ; preds = %475, %471, %431, %392, %371, %354, %311, %270, %246, %227, %141, %112, %86, %43
  %478 = load i32, i32* %2, align 4, !dbg !26832
  ret i32 %478, !dbg !26832
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_write_certificate_request(%struct.mbedtls_ssl_context* %0) #0 !dbg !26833 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mbedtls_ssl_ciphersuite_t*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.mbedtls_x509_crt*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca i8, align 1
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %3, metadata !26834, metadata !DIExpression()), !dbg !26835
  call void @llvm.dbg.declare(metadata i32* %4, metadata !26836, metadata !DIExpression()), !dbg !26837
  store i32 -28800, i32* %4, align 4, !dbg !26837
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_ciphersuite_t** %5, metadata !26838, metadata !DIExpression()), !dbg !26839
  %17 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26840
  %18 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %17, i32 0, i32 19, !dbg !26841
  %19 = load %struct.mbedtls_ssl_transform*, %struct.mbedtls_ssl_transform** %18, align 8, !dbg !26841
  %20 = getelementptr inbounds %struct.mbedtls_ssl_transform, %struct.mbedtls_ssl_transform* %19, i32 0, i32 0, !dbg !26842
  %21 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %20, align 8, !dbg !26842
  store %struct.mbedtls_ssl_ciphersuite_t* %21, %struct.mbedtls_ssl_ciphersuite_t** %5, align 8, !dbg !26839
  call void @llvm.dbg.declare(metadata i64* %6, metadata !26843, metadata !DIExpression()), !dbg !26844
  call void @llvm.dbg.declare(metadata i64* %7, metadata !26845, metadata !DIExpression()), !dbg !26846
  call void @llvm.dbg.declare(metadata i64* %8, metadata !26847, metadata !DIExpression()), !dbg !26848
  call void @llvm.dbg.declare(metadata i64* %9, metadata !26849, metadata !DIExpression()), !dbg !26850
  call void @llvm.dbg.declare(metadata i8** %10, metadata !26851, metadata !DIExpression()), !dbg !26852
  call void @llvm.dbg.declare(metadata i8** %11, metadata !26853, metadata !DIExpression()), !dbg !26854
  call void @llvm.dbg.declare(metadata i8** %12, metadata !26855, metadata !DIExpression()), !dbg !26856
  %22 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26857
  %23 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %22, i32 0, i32 45, !dbg !26858
  %24 = load i8*, i8** %23, align 8, !dbg !26858
  %25 = getelementptr inbounds i8, i8* %24, i64 16384, !dbg !26859
  store i8* %25, i8** %12, align 8, !dbg !26856
  call void @llvm.dbg.declare(metadata %struct.mbedtls_x509_crt** %13, metadata !26860, metadata !DIExpression()), !dbg !26863
  call void @llvm.dbg.declare(metadata i32* %14, metadata !26864, metadata !DIExpression()), !dbg !26865
  %26 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26866
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %26, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2646, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139.661, i64 0, i64 0)), !dbg !26866
  %27 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26867
  %28 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %27, i32 0, i32 1, !dbg !26868
  %29 = load i32, i32* %28, align 8, !dbg !26869
  %30 = add nsw i32 %29, 1, !dbg !26869
  store i32 %30, i32* %28, align 8, !dbg !26869
  %31 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26870
  %32 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %31, i32 0, i32 15, !dbg !26872
  %33 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %32, align 8, !dbg !26872
  %34 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %33, i32 0, i32 7, !dbg !26873
  %35 = load i32, i32* %34, align 8, !dbg !26873
  %36 = icmp ne i32 %35, 3, !dbg !26874
  br i1 %36, label %37, label %43, !dbg !26875

37:                                               ; preds = %1
  %38 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26876
  %39 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %38, i32 0, i32 15, !dbg !26877
  %40 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %39, align 8, !dbg !26877
  %41 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %40, i32 0, i32 7, !dbg !26878
  %42 = load i32, i32* %41, align 8, !dbg !26878
  store i32 %42, i32* %14, align 4, !dbg !26879
  br label %52, !dbg !26880

43:                                               ; preds = %1
  %44 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26881
  %45 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %44, i32 0, i32 0, !dbg !26882
  %46 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %45, align 8, !dbg !26882
  %47 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %46, i32 0, i32 46, !dbg !26883
  %48 = bitcast i24* %47 to i32*, !dbg !26883
  %49 = load i32, i32* %48, align 4, !dbg !26883
  %50 = lshr i32 %49, 2, !dbg !26883
  %51 = and i32 %50, 3, !dbg !26883
  store i32 %51, i32* %14, align 4, !dbg !26884
  br label %52

52:                                               ; preds = %43, %37
  %53 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %5, align 8, !dbg !26885
  %54 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %53, i32 0, i32 4, !dbg !26887
  %55 = load i32, i32* %54, align 8, !dbg !26887
  %56 = icmp eq i32 %55, 5, !dbg !26888
  br i1 %56, label %80, label %57, !dbg !26889

57:                                               ; preds = %52
  %58 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %5, align 8, !dbg !26890
  %59 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %58, i32 0, i32 4, !dbg !26891
  %60 = load i32, i32* %59, align 8, !dbg !26891
  %61 = icmp eq i32 %60, 7, !dbg !26892
  br i1 %61, label %80, label %62, !dbg !26893

62:                                               ; preds = %57
  %63 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %5, align 8, !dbg !26894
  %64 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %63, i32 0, i32 4, !dbg !26895
  %65 = load i32, i32* %64, align 8, !dbg !26895
  %66 = icmp eq i32 %65, 6, !dbg !26896
  br i1 %66, label %80, label %67, !dbg !26897

67:                                               ; preds = %62
  %68 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %5, align 8, !dbg !26898
  %69 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %68, i32 0, i32 4, !dbg !26899
  %70 = load i32, i32* %69, align 8, !dbg !26899
  %71 = icmp eq i32 %70, 8, !dbg !26900
  br i1 %71, label %80, label %72, !dbg !26901

72:                                               ; preds = %67
  %73 = load %struct.mbedtls_ssl_ciphersuite_t*, %struct.mbedtls_ssl_ciphersuite_t** %5, align 8, !dbg !26902
  %74 = getelementptr inbounds %struct.mbedtls_ssl_ciphersuite_t, %struct.mbedtls_ssl_ciphersuite_t* %73, i32 0, i32 4, !dbg !26903
  %75 = load i32, i32* %74, align 8, !dbg !26903
  %76 = icmp eq i32 %75, 11, !dbg !26904
  br i1 %76, label %80, label %77, !dbg !26905

77:                                               ; preds = %72
  %78 = load i32, i32* %14, align 4, !dbg !26906
  %79 = icmp eq i32 %78, 0, !dbg !26907
  br i1 %79, label %80, label %82, !dbg !26908

80:                                               ; preds = %77, %72, %67, %62, %57, %52
  %81 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26909
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %81, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2664, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.140.662, i64 0, i64 0)), !dbg !26909
  store i32 0, i32* %2, align 4, !dbg !26911
  br label %316, !dbg !26911

82:                                               ; preds = %77
  %83 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26912
  %84 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %83, i32 0, i32 45, !dbg !26913
  %85 = load i8*, i8** %84, align 8, !dbg !26913
  store i8* %85, i8** %10, align 8, !dbg !26914
  %86 = load i8*, i8** %10, align 8, !dbg !26915
  %87 = getelementptr inbounds i8, i8* %86, i64 4, !dbg !26916
  store i8* %87, i8** %11, align 8, !dbg !26917
  store i64 0, i64* %8, align 8, !dbg !26918
  %88 = load i8*, i8** %11, align 8, !dbg !26919
  %89 = load i64, i64* %8, align 8, !dbg !26920
  %90 = add i64 %89, 1, !dbg !26920
  store i64 %90, i64* %8, align 8, !dbg !26920
  %91 = add i64 1, %89, !dbg !26921
  %92 = getelementptr inbounds i8, i8* %88, i64 %91, !dbg !26919
  store i8 1, i8* %92, align 1, !dbg !26922
  %93 = load i8*, i8** %11, align 8, !dbg !26923
  %94 = load i64, i64* %8, align 8, !dbg !26924
  %95 = add i64 %94, 1, !dbg !26924
  store i64 %95, i64* %8, align 8, !dbg !26924
  %96 = add i64 1, %94, !dbg !26925
  %97 = getelementptr inbounds i8, i8* %93, i64 %96, !dbg !26923
  store i8 64, i8* %97, align 1, !dbg !26926
  %98 = load i64, i64* %8, align 8, !dbg !26927
  %99 = add i64 %98, 1, !dbg !26927
  store i64 %99, i64* %8, align 8, !dbg !26927
  %100 = trunc i64 %98 to i8, !dbg !26928
  %101 = load i8*, i8** %11, align 8, !dbg !26929
  %102 = getelementptr inbounds i8, i8* %101, i64 0, !dbg !26929
  store i8 %100, i8* %102, align 1, !dbg !26930
  %103 = load i64, i64* %8, align 8, !dbg !26931
  %104 = load i8*, i8** %11, align 8, !dbg !26932
  %105 = getelementptr inbounds i8, i8* %104, i64 %103, !dbg !26932
  store i8* %105, i8** %11, align 8, !dbg !26932
  store i64 0, i64* %9, align 8, !dbg !26933
  %106 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26934
  %107 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %106, i32 0, i32 5, !dbg !26936
  %108 = load i32, i32* %107, align 8, !dbg !26936
  %109 = icmp eq i32 %108, 3, !dbg !26937
  br i1 %109, label %110, label %175, !dbg !26938

110:                                              ; preds = %82
  call void @llvm.dbg.declare(metadata i32** %15, metadata !26939, metadata !DIExpression()), !dbg !26941
  %111 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26942
  %112 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %111, i32 0, i32 0, !dbg !26944
  %113 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %112, align 8, !dbg !26944
  %114 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %113, i32 0, i32 26, !dbg !26945
  %115 = load i32*, i32** %114, align 8, !dbg !26945
  store i32* %115, i32** %15, align 8, !dbg !26946
  br label %116, !dbg !26947

116:                                              ; preds = %157, %110
  %117 = load i32*, i32** %15, align 8, !dbg !26948
  %118 = load i32, i32* %117, align 4, !dbg !26950
  %119 = icmp ne i32 %118, 0, !dbg !26951
  br i1 %119, label %120, label %160, !dbg !26952

120:                                              ; preds = %116
  call void @llvm.dbg.declare(metadata i8* %16, metadata !26953, metadata !DIExpression()), !dbg !26955
  %121 = load i32*, i32** %15, align 8, !dbg !26956
  %122 = load i32, i32* %121, align 4, !dbg !26957
  %123 = call zeroext i8 @mbedtls_ssl_hash_from_md_alg(i32 %122), !dbg !26958
  store i8 %123, i8* %16, align 1, !dbg !26955
  %124 = load i8, i8* %16, align 1, !dbg !26959
  %125 = zext i8 %124 to i32, !dbg !26959
  %126 = icmp eq i32 0, %125, !dbg !26961
  br i1 %126, label %133, label %127, !dbg !26962

127:                                              ; preds = %120
  %128 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !26963
  %129 = load i8, i8* %16, align 1, !dbg !26964
  %130 = zext i8 %129 to i32, !dbg !26964
  %131 = call i32 @mbedtls_ssl_set_calc_verify_md(%struct.mbedtls_ssl_context* %128, i32 %130), !dbg !26965
  %132 = icmp ne i32 %131, 0, !dbg !26965
  br i1 %132, label %133, label %134, !dbg !26966

133:                                              ; preds = %127, %120
  br label %157, !dbg !26967

134:                                              ; preds = %127
  %135 = load i8, i8* %16, align 1, !dbg !26968
  %136 = load i8*, i8** %11, align 8, !dbg !26969
  %137 = load i64, i64* %9, align 8, !dbg !26970
  %138 = add i64 %137, 1, !dbg !26970
  store i64 %138, i64* %9, align 8, !dbg !26970
  %139 = add i64 2, %137, !dbg !26971
  %140 = getelementptr inbounds i8, i8* %136, i64 %139, !dbg !26969
  store i8 %135, i8* %140, align 1, !dbg !26972
  %141 = load i8*, i8** %11, align 8, !dbg !26973
  %142 = load i64, i64* %9, align 8, !dbg !26974
  %143 = add i64 %142, 1, !dbg !26974
  store i64 %143, i64* %9, align 8, !dbg !26974
  %144 = add i64 2, %142, !dbg !26975
  %145 = getelementptr inbounds i8, i8* %141, i64 %144, !dbg !26973
  store i8 1, i8* %145, align 1, !dbg !26976
  %146 = load i8, i8* %16, align 1, !dbg !26977
  %147 = load i8*, i8** %11, align 8, !dbg !26978
  %148 = load i64, i64* %9, align 8, !dbg !26979
  %149 = add i64 %148, 1, !dbg !26979
  store i64 %149, i64* %9, align 8, !dbg !26979
  %150 = add i64 2, %148, !dbg !26980
  %151 = getelementptr inbounds i8, i8* %147, i64 %150, !dbg !26978
  store i8 %146, i8* %151, align 1, !dbg !26981
  %152 = load i8*, i8** %11, align 8, !dbg !26982
  %153 = load i64, i64* %9, align 8, !dbg !26983
  %154 = add i64 %153, 1, !dbg !26983
  store i64 %154, i64* %9, align 8, !dbg !26983
  %155 = add i64 2, %153, !dbg !26984
  %156 = getelementptr inbounds i8, i8* %152, i64 %155, !dbg !26982
  store i8 3, i8* %156, align 1, !dbg !26985
  br label %157, !dbg !26986

157:                                              ; preds = %134, %133
  %158 = load i32*, i32** %15, align 8, !dbg !26987
  %159 = getelementptr inbounds i32, i32* %158, i32 1, !dbg !26987
  store i32* %159, i32** %15, align 8, !dbg !26987
  br label %116, !dbg !26988, !llvm.loop !26989

160:                                              ; preds = %116
  %161 = load i64, i64* %9, align 8, !dbg !26991
  %162 = lshr i64 %161, 8, !dbg !26992
  %163 = trunc i64 %162 to i8, !dbg !26993
  %164 = load i8*, i8** %11, align 8, !dbg !26994
  %165 = getelementptr inbounds i8, i8* %164, i64 0, !dbg !26994
  store i8 %163, i8* %165, align 1, !dbg !26995
  %166 = load i64, i64* %9, align 8, !dbg !26996
  %167 = trunc i64 %166 to i8, !dbg !26997
  %168 = load i8*, i8** %11, align 8, !dbg !26998
  %169 = getelementptr inbounds i8, i8* %168, i64 1, !dbg !26998
  store i8 %167, i8* %169, align 1, !dbg !26999
  %170 = load i64, i64* %9, align 8, !dbg !27000
  %171 = add i64 %170, 2, !dbg !27000
  store i64 %171, i64* %9, align 8, !dbg !27000
  %172 = load i64, i64* %9, align 8, !dbg !27001
  %173 = load i8*, i8** %11, align 8, !dbg !27002
  %174 = getelementptr inbounds i8, i8* %173, i64 %172, !dbg !27002
  store i8* %174, i8** %11, align 8, !dbg !27002
  br label %175, !dbg !27003

175:                                              ; preds = %160, %82
  %176 = load i8*, i8** %11, align 8, !dbg !27004
  %177 = getelementptr inbounds i8, i8* %176, i64 2, !dbg !27004
  store i8* %177, i8** %11, align 8, !dbg !27004
  store i64 0, i64* %7, align 8, !dbg !27005
  %178 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27006
  %179 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %178, i32 0, i32 0, !dbg !27008
  %180 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %179, align 8, !dbg !27008
  %181 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %180, i32 0, i32 46, !dbg !27009
  %182 = bitcast i24* %181 to i32*, !dbg !27009
  %183 = load i32, i32* %182, align 4, !dbg !27009
  %184 = lshr i32 %183, 18, !dbg !27009
  %185 = and i32 %184, 1, !dbg !27009
  %186 = icmp eq i32 %185, 1, !dbg !27010
  br i1 %186, label %187, label %277, !dbg !27011

187:                                              ; preds = %175
  %188 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27012
  %189 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %188, i32 0, i32 15, !dbg !27015
  %190 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %189, align 8, !dbg !27015
  %191 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %190, i32 0, i32 9, !dbg !27016
  %192 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %191, align 8, !dbg !27016
  %193 = icmp ne %struct.mbedtls_x509_crt* %192, null, !dbg !27017
  br i1 %193, label %194, label %200, !dbg !27018

194:                                              ; preds = %187
  %195 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27019
  %196 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %195, i32 0, i32 15, !dbg !27020
  %197 = load %struct.mbedtls_ssl_handshake_params*, %struct.mbedtls_ssl_handshake_params** %196, align 8, !dbg !27020
  %198 = getelementptr inbounds %struct.mbedtls_ssl_handshake_params, %struct.mbedtls_ssl_handshake_params* %197, i32 0, i32 9, !dbg !27021
  %199 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %198, align 8, !dbg !27021
  store %struct.mbedtls_x509_crt* %199, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27022
  br label %206, !dbg !27023

200:                                              ; preds = %187
  %201 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27024
  %202 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %201, i32 0, i32 0, !dbg !27025
  %203 = load %struct.mbedtls_ssl_config*, %struct.mbedtls_ssl_config** %202, align 8, !dbg !27025
  %204 = getelementptr inbounds %struct.mbedtls_ssl_config, %struct.mbedtls_ssl_config* %203, i32 0, i32 24, !dbg !27026
  %205 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %204, align 8, !dbg !27026
  store %struct.mbedtls_x509_crt* %205, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27027
  br label %206

206:                                              ; preds = %200, %194
  br label %207, !dbg !27028

207:                                              ; preds = %244, %206
  %208 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27029
  %209 = icmp ne %struct.mbedtls_x509_crt* %208, null, !dbg !27030
  br i1 %209, label %210, label %215, !dbg !27031

210:                                              ; preds = %207
  %211 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27032
  %212 = getelementptr inbounds %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt* %211, i32 0, i32 2, !dbg !27033
  %213 = load i32, i32* %212, align 8, !dbg !27033
  %214 = icmp ne i32 %213, 0, !dbg !27034
  br label %215

215:                                              ; preds = %210, %207
  %216 = phi i1 [ false, %207 ], [ %214, %210 ], !dbg !27035
  br i1 %216, label %217, label %276, !dbg !27028

217:                                              ; preds = %215
  %218 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27036
  %219 = getelementptr inbounds %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt* %218, i32 0, i32 6, !dbg !27038
  %220 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %219, i32 0, i32 1, !dbg !27039
  %221 = load i64, i64* %220, align 8, !dbg !27039
  store i64 %221, i64* %6, align 8, !dbg !27040
  %222 = load i8*, i8** %12, align 8, !dbg !27041
  %223 = load i8*, i8** %11, align 8, !dbg !27043
  %224 = icmp ult i8* %222, %223, !dbg !27044
  br i1 %224, label %242, label %225, !dbg !27045

225:                                              ; preds = %217
  %226 = load i8*, i8** %12, align 8, !dbg !27046
  %227 = load i8*, i8** %11, align 8, !dbg !27047
  %228 = ptrtoint i8* %226 to i64, !dbg !27048
  %229 = ptrtoint i8* %227 to i64, !dbg !27048
  %230 = sub i64 %228, %229, !dbg !27048
  %231 = load i64, i64* %6, align 8, !dbg !27049
  %232 = icmp ult i64 %230, %231, !dbg !27050
  br i1 %232, label %242, label %233, !dbg !27051

233:                                              ; preds = %225
  %234 = load i8*, i8** %12, align 8, !dbg !27052
  %235 = load i8*, i8** %11, align 8, !dbg !27053
  %236 = ptrtoint i8* %234 to i64, !dbg !27054
  %237 = ptrtoint i8* %235 to i64, !dbg !27054
  %238 = sub i64 %236, %237, !dbg !27054
  %239 = load i64, i64* %6, align 8, !dbg !27055
  %240 = add i64 2, %239, !dbg !27056
  %241 = icmp ult i64 %238, %240, !dbg !27057
  br i1 %241, label %242, label %244, !dbg !27058

242:                                              ; preds = %233, %225, %217
  %243 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27059
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %243, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2772, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141.663, i64 0, i64 0)), !dbg !27059
  br label %276, !dbg !27061

244:                                              ; preds = %233
  %245 = load i64, i64* %6, align 8, !dbg !27062
  %246 = lshr i64 %245, 8, !dbg !27063
  %247 = trunc i64 %246 to i8, !dbg !27064
  %248 = load i8*, i8** %11, align 8, !dbg !27065
  %249 = getelementptr inbounds i8, i8* %248, i32 1, !dbg !27065
  store i8* %249, i8** %11, align 8, !dbg !27065
  store i8 %247, i8* %248, align 1, !dbg !27066
  %250 = load i64, i64* %6, align 8, !dbg !27067
  %251 = trunc i64 %250 to i8, !dbg !27068
  %252 = load i8*, i8** %11, align 8, !dbg !27069
  %253 = getelementptr inbounds i8, i8* %252, i32 1, !dbg !27069
  store i8* %253, i8** %11, align 8, !dbg !27069
  store i8 %251, i8* %252, align 1, !dbg !27070
  %254 = load i8*, i8** %11, align 8, !dbg !27071
  %255 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27072
  %256 = getelementptr inbounds %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt* %255, i32 0, i32 6, !dbg !27073
  %257 = getelementptr inbounds %struct.mbedtls_asn1_buf, %struct.mbedtls_asn1_buf* %256, i32 0, i32 2, !dbg !27074
  %258 = load i8*, i8** %257, align 8, !dbg !27074
  %259 = load i64, i64* %6, align 8, !dbg !27075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %254, i8* align 1 %258, i64 %259, i1 false), !dbg !27076
  %260 = load i64, i64* %6, align 8, !dbg !27077
  %261 = load i8*, i8** %11, align 8, !dbg !27078
  %262 = getelementptr inbounds i8, i8* %261, i64 %260, !dbg !27078
  store i8* %262, i8** %11, align 8, !dbg !27078
  %263 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27079
  %264 = load i8*, i8** %11, align 8, !dbg !27079
  %265 = load i64, i64* %6, align 8, !dbg !27079
  %266 = sub i64 0, %265, !dbg !27079
  %267 = getelementptr inbounds i8, i8* %264, i64 %266, !dbg !27079
  %268 = load i64, i64* %6, align 8, !dbg !27079
  call void @mbedtls_debug_print_buf(%struct.mbedtls_ssl_context* %263, i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2781, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142.664, i64 0, i64 0), i8* %267, i64 %268), !dbg !27079
  %269 = load i64, i64* %6, align 8, !dbg !27080
  %270 = add i64 2, %269, !dbg !27081
  %271 = load i64, i64* %7, align 8, !dbg !27082
  %272 = add i64 %271, %270, !dbg !27082
  store i64 %272, i64* %7, align 8, !dbg !27082
  %273 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27083
  %274 = getelementptr inbounds %struct.mbedtls_x509_crt, %struct.mbedtls_x509_crt* %273, i32 0, i32 26, !dbg !27084
  %275 = load %struct.mbedtls_x509_crt*, %struct.mbedtls_x509_crt** %274, align 8, !dbg !27084
  store %struct.mbedtls_x509_crt* %275, %struct.mbedtls_x509_crt** %13, align 8, !dbg !27085
  br label %207, !dbg !27028, !llvm.loop !27086

276:                                              ; preds = %242, %215
  br label %277, !dbg !27088

277:                                              ; preds = %276, %175
  %278 = load i8*, i8** %11, align 8, !dbg !27089
  %279 = load i8*, i8** %10, align 8, !dbg !27090
  %280 = ptrtoint i8* %278 to i64, !dbg !27091
  %281 = ptrtoint i8* %279 to i64, !dbg !27091
  %282 = sub i64 %280, %281, !dbg !27091
  %283 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27092
  %284 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %283, i32 0, i32 47, !dbg !27093
  store i64 %282, i64* %284, align 8, !dbg !27094
  %285 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27095
  %286 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %285, i32 0, i32 46, !dbg !27096
  store i32 22, i32* %286, align 8, !dbg !27097
  %287 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27098
  %288 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %287, i32 0, i32 45, !dbg !27099
  %289 = load i8*, i8** %288, align 8, !dbg !27099
  %290 = getelementptr inbounds i8, i8* %289, i64 0, !dbg !27098
  store i8 13, i8* %290, align 1, !dbg !27100
  %291 = load i64, i64* %7, align 8, !dbg !27101
  %292 = lshr i64 %291, 8, !dbg !27102
  %293 = trunc i64 %292 to i8, !dbg !27103
  %294 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27104
  %295 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %294, i32 0, i32 45, !dbg !27105
  %296 = load i8*, i8** %295, align 8, !dbg !27105
  %297 = load i64, i64* %8, align 8, !dbg !27106
  %298 = add i64 4, %297, !dbg !27107
  %299 = load i64, i64* %9, align 8, !dbg !27108
  %300 = add i64 %298, %299, !dbg !27109
  %301 = getelementptr inbounds i8, i8* %296, i64 %300, !dbg !27104
  store i8 %293, i8* %301, align 1, !dbg !27110
  %302 = load i64, i64* %7, align 8, !dbg !27111
  %303 = trunc i64 %302 to i8, !dbg !27112
  %304 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27113
  %305 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %304, i32 0, i32 45, !dbg !27114
  %306 = load i8*, i8** %305, align 8, !dbg !27114
  %307 = load i64, i64* %8, align 8, !dbg !27115
  %308 = add i64 5, %307, !dbg !27116
  %309 = load i64, i64* %9, align 8, !dbg !27117
  %310 = add i64 %308, %309, !dbg !27118
  %311 = getelementptr inbounds i8, i8* %306, i64 %310, !dbg !27113
  store i8 %303, i8* %311, align 1, !dbg !27119
  %312 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27120
  %313 = call i32 @mbedtls_ssl_write_record(%struct.mbedtls_ssl_context* %312), !dbg !27121
  store i32 %313, i32* %4, align 4, !dbg !27122
  %314 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27123
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %314, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 2796, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143.665, i64 0, i64 0)), !dbg !27123
  %315 = load i32, i32* %4, align 4, !dbg !27124
  store i32 %315, i32* %2, align 4, !dbg !27125
  br label %316, !dbg !27125

316:                                              ; preds = %277, %80
  %317 = load i32, i32* %2, align 4, !dbg !27126
  ret i32 %317, !dbg !27126
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ssl_write_server_hello_done(%struct.mbedtls_ssl_context* %0) #0 !dbg !27127 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mbedtls_ssl_context*, align 8
  %4 = alloca i32, align 4
  store %struct.mbedtls_ssl_context* %0, %struct.mbedtls_ssl_context** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbedtls_ssl_context** %3, metadata !27128, metadata !DIExpression()), !dbg !27129
  call void @llvm.dbg.declare(metadata i32* %4, metadata !27130, metadata !DIExpression()), !dbg !27131
  %5 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27132
  call void (%struct.mbedtls_ssl_context*, i32, i8*, i32, i8*, ...) @mbedtls_debug_print_msg(%struct.mbedtls_ssl_context* %5, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.617, i64 0, i64 0), i32 3254, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.144.659, i64 0, i64 0)), !dbg !27132
  %6 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27133
  %7 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %6, i32 0, i32 47, !dbg !27134
  store i64 4, i64* %7, align 8, !dbg !27135
  %8 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27136
  %9 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %8, i32 0, i32 46, !dbg !27137
  store i32 22, i32* %9, align 8, !dbg !27138
  %10 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27139
  %11 = getelementptr inbounds %struct.mbedtls_ssl_context, %struct.mbedtls_ssl_context* %10, i32 0, i32 45, !dbg !27140
  %12 = load i8*, i8** %11, align 8, !dbg !27140
  %13 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !27139
  store i8 14, i8* %13, align 1, !dbg !27141
  %14 = load %struct.mbedtls_ssl_context*, %struct.mbedtls_ssl_context** %3, align 8, !dbg !27142
  %15 = getelementptr inbounds %struct.mb